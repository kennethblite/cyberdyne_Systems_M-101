// Warning: Some assembly references could not be resolved automatically. This might lead to incorrect decompilation of some parts,
// for ex. property getter/setter access. To get optimal decompilation results, please manually add the missing references to the list of loaded assemblies.

// /home/kensalt/practice/discord/terminator/Chatman/Rondyo.Chatman.Data.dll
// Rondyo.Chatman.Data, Version=1.1.0.0, Culture=neutral, PublicKeyToken=c5cbd59d58549e5d
// Global type: <Module>
// Architecture: x86
// Runtime: v2.0.50727
// This assembly is signed with a strong name key.
// Hash algorithm: SHA1
// Public key: 0024000004800000940000000602000000240000525341310004000001000100191d59fa159c23ec130eff416767aae23b0533b32ead9676e97436dde82b04dd0aae2f743f0b259ead5186c4f921b0230d12318b1fdb6feb32914e1e733a4a9d1693e0473756c24584e144719025749e0f1333e24fa4d6a34a8e3a811b2cb7ea0cb4698f36cfe0c396ed89b6870fa9c1dd357cf01295ab5914e28faf5c2936d8

using Rondyo.Chatman.Data;
using Rondyo.Chatman.Data.Events;
using Rondyo.Chatman.Framework;
using Rondyo.Chatman.Framework.ObservableCollections;
using Rondyo.Chatman.Framework.Utils;
using Rondyo.Chatman.Interfaces.Public;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Xml.Serialization;
using ႤႤႭ;
using ႥႠႭ;
using ႥႥႣ;
using ႥႥႥ;
using ႥႥႨ;
using ႥႥႨႠ;
using ႥႥႨႣ;
using ႥႥႨႷ;
using ႥႥႰ;
using ႥႥႳႰ;
using ႥႭႰ;
using ႭႥႨ;
using ႭႥႰ;
using ႭႭႰ;

[assembly: AssemblyCopyright("© 2008-2011 Rondyo Ltd. All Rights Reserved")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyProduct("Chatman")]
[assembly: ComVisible(false)]
[assembly: AssemblyDescription("")]
[assembly: AssemblyCompany("Rondyo")]
[assembly: AssemblyTrademark("")]
[assembly: Debuggable(DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints | DebuggableAttribute.DebuggingModes.EnableEditAndContinue | DebuggableAttribute.DebuggingModes.DisableOptimizations)]
[assembly: RuntimeCompatibility(WrapNonExceptionThrows = true)]
[assembly: CompilationRelaxations(8)]
[assembly: AssemblyTitle("Chatman")]
[assembly: Guid("da8d0416-ad2d-415e-ae16-7fcb97eb1ea0")]
[assembly: AssemblyFileVersion("1.1.0.0")]
[assembly: AssemblyVersion("1.1.0.0")]
internal sealed class <>f__AnonymousType0<<actionIDPair>j__TPar, <theAction>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <actionIDPair>j__TPar <actionIDPair>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <theAction>j__TPar <theAction>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType0(<actionIDPair>j__TPar actionIDPair, <theAction>j__TPar theAction)
	{
		<actionIDPair>i__Field = actionIDPair;
		<theAction>i__Field = theAction;
	}

	public <actionIDPair>j__TPar get_actionIDPair()
	{
		return <actionIDPair>i__Field;
	}

	public <theAction>j__TPar get_theAction()
	{
		return <theAction>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394821));
		stringBuilder.Append(<actionIDPair>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394822));
		stringBuilder.Append(<theAction>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_002a, IL_0046, IL_004b, IL_0068
		<>f__AnonymousType0<<actionIDPair>j__TPar, <theAction>j__TPar> <>f__AnonymousType = value as <>f__AnonymousType0<<actionIDPair>j__TPar, <theAction>j__TPar>;
		int result;
		if (<>f__AnonymousType != null)
		{
			if (729 >= 729 - 507)
			{
			}
			if (EqualityComparer<<actionIDPair>j__TPar>.Default.Equals(<actionIDPair>i__Field, <>f__AnonymousType.<actionIDPair>i__Field))
			{
				if (383 >= 383 - 344)
				{
					result = (EqualityComparer<<theAction>j__TPar>.Default.Equals(<theAction>i__Field, <>f__AnonymousType.<theAction>i__Field) ? 1 : 0);
					goto IL_004d;
				}
			}
		}
		result = 0;
		goto IL_004d;
		IL_004d:
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 277617945;
		num = -1521134295 * num + EqualityComparer<<actionIDPair>j__TPar>.Default.GetHashCode(<actionIDPair>i__Field);
		return -1521134295 * num + EqualityComparer<<theAction>j__TPar>.Default.GetHashCode(<theAction>i__Field);
	}
}
internal sealed class <>f__AnonymousType1<<personalityPartData>j__TPar, <action>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <personalityPartData>j__TPar <personalityPartData>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <action>j__TPar <action>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType1(<personalityPartData>j__TPar personalityPartData, <action>j__TPar action)
	{
		<personalityPartData>i__Field = personalityPartData;
		<action>i__Field = action;
	}

	public <action>j__TPar get_action()
	{
		return <action>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394816));
		stringBuilder.Append(<personalityPartData>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394817));
		stringBuilder.Append(<action>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0002, IL_0045, IL_0062
		<>f__AnonymousType1<<personalityPartData>j__TPar, <action>j__TPar> <>f__AnonymousType = value as <>f__AnonymousType1<<personalityPartData>j__TPar, <action>j__TPar>;
		int result2;
		if (<>f__AnonymousType != null)
		{
			if (732 < 732 - 72)
			{
				bool result = default(bool);
				return result;
			}
			if (EqualityComparer<<personalityPartData>j__TPar>.Default.Equals(<personalityPartData>i__Field, <>f__AnonymousType.<personalityPartData>i__Field))
			{
				if (false)
				{
				}
				result2 = (EqualityComparer<<action>j__TPar>.Default.Equals(<action>i__Field, <>f__AnonymousType.<action>i__Field) ? 1 : 0);
				goto IL_0047;
			}
		}
		result2 = 0;
		goto IL_0047;
		IL_0047:
		return (byte)result2 != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 163228606;
		num = -1521134295 * num + EqualityComparer<<personalityPartData>j__TPar>.Default.GetHashCode(<personalityPartData>i__Field);
		return -1521134295 * num + EqualityComparer<<action>j__TPar>.Default.GetHashCode(<action>i__Field);
	}
}
internal sealed class <>f__AnonymousType10<<<>h__TransparentIdentifier17d>j__TPar, <phrase>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <<>h__TransparentIdentifier17d>j__TPar <<>h__TransparentIdentifier17d>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <phrase>j__TPar <phrase>i__Field;

	public <<>h__TransparentIdentifier17d>j__TPar <>h__TransparentIdentifier17d => <<>h__TransparentIdentifier17d>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType10(<<>h__TransparentIdentifier17d>j__TPar <>h__TransparentIdentifier17d, <phrase>j__TPar phrase)
	{
		<<>h__TransparentIdentifier17d>i__Field = <>h__TransparentIdentifier17d;
		<phrase>i__Field = phrase;
	}

	public <phrase>j__TPar get_phrase()
	{
		return <phrase>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394840));
		stringBuilder.Append(<<>h__TransparentIdentifier17d>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394841));
		stringBuilder.Append(<phrase>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0002, IL_0029, IL_0044, IL_0049, IL_0066
		<>f__AnonymousType10<<<>h__TransparentIdentifier17d>j__TPar, <phrase>j__TPar> <>f__AnonymousType = value as <>f__AnonymousType10<<<>h__TransparentIdentifier17d>j__TPar, <phrase>j__TPar>;
		int result;
		if (<>f__AnonymousType != null)
		{
			if (false)
			{
			}
			if (EqualityComparer<<<>h__TransparentIdentifier17d>j__TPar>.Default.Equals(<<>h__TransparentIdentifier17d>i__Field, <>f__AnonymousType.<<>h__TransparentIdentifier17d>i__Field))
			{
				if (402 > 402 - 119)
				{
					result = (EqualityComparer<<phrase>j__TPar>.Default.Equals(<phrase>i__Field, <>f__AnonymousType.<phrase>i__Field) ? 1 : 0);
					goto IL_004b;
				}
			}
		}
		result = 0;
		goto IL_004b;
		IL_004b:
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 596042763;
		num = -1521134295 * num + EqualityComparer<<<>h__TransparentIdentifier17d>j__TPar>.Default.GetHashCode(<<>h__TransparentIdentifier17d>i__Field);
		return -1521134295 * num + EqualityComparer<<phrase>j__TPar>.Default.GetHashCode(<phrase>i__Field);
	}
}
internal sealed class <>f__AnonymousType11<<text>j__TPar, <q>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <text>j__TPar <text>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <q>j__TPar <q>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType11(<text>j__TPar text, <q>j__TPar q)
	{
		<text>i__Field = text;
		<q>i__Field = q;
	}

	public <text>j__TPar get_text()
	{
		return <text>i__Field;
	}

	public <q>j__TPar get_q()
	{
		return <q>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394846));
		stringBuilder.Append(<text>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394842));
		stringBuilder.Append(<q>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0002, IL_002b, IL_0047, IL_004c, IL_0069
		<>f__AnonymousType11<<text>j__TPar, <q>j__TPar> <>f__AnonymousType = value as <>f__AnonymousType11<<text>j__TPar, <q>j__TPar>;
		int result;
		while (true)
		{
			if (<>f__AnonymousType != null)
			{
				if (1014 >= 1014 - 379)
				{
					if (!EqualityComparer<<text>j__TPar>.Default.Equals(<text>i__Field, <>f__AnonymousType.<text>i__Field))
					{
						goto IL_0049;
					}
					if (false)
					{
						continue;
					}
				}
				result = (EqualityComparer<<q>j__TPar>.Default.Equals(<q>i__Field, <>f__AnonymousType.<q>i__Field) ? 1 : 0);
				break;
			}
			goto IL_0049;
			IL_0049:
			result = 0;
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 1566415633;
		num = -1521134295 * num + EqualityComparer<<text>j__TPar>.Default.GetHashCode(<text>i__Field);
		return -1521134295 * num + EqualityComparer<<q>j__TPar>.Default.GetHashCode(<q>i__Field);
	}
}
internal sealed class <>f__AnonymousType12<<<>h__TransparentIdentifier5>j__TPar, <phraseText>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <<>h__TransparentIdentifier5>j__TPar <<>h__TransparentIdentifier5>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <phraseText>j__TPar <phraseText>i__Field;

	public <<>h__TransparentIdentifier5>j__TPar <>h__TransparentIdentifier5 => <<>h__TransparentIdentifier5>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType12(<<>h__TransparentIdentifier5>j__TPar <>h__TransparentIdentifier5, <phraseText>j__TPar phraseText)
	{
		<<>h__TransparentIdentifier5>i__Field = <>h__TransparentIdentifier5;
		<phraseText>i__Field = phraseText;
	}

	public <phraseText>j__TPar get_phraseText()
	{
		return <phraseText>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394843));
		stringBuilder.Append(<<>h__TransparentIdentifier5>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394847));
		stringBuilder.Append(<phraseText>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		int num = 0;
		<>f__AnonymousType12<<<>h__TransparentIdentifier5>j__TPar, <phraseText>j__TPar> <>f__AnonymousType = default(<>f__AnonymousType12<<<>h__TransparentIdentifier5>j__TPar, <phraseText>j__TPar>);
		int result;
		while (true)
		{
			switch (num)
			{
			default:
				<>f__AnonymousType = (value as <>f__AnonymousType12<<<>h__TransparentIdentifier5>j__TPar, <phraseText>j__TPar>);
				num = ((<>f__AnonymousType == null) ? 2 : 3);
				continue;
			case 3:
				num = (EqualityComparer<<<>h__TransparentIdentifier5>j__TPar>.Default.Equals(<<>h__TransparentIdentifier5>i__Field, <>f__AnonymousType.<<>h__TransparentIdentifier5>i__Field) ? 1 : 2);
				continue;
			case 1:
				result = (EqualityComparer<<phraseText>j__TPar>.Default.Equals(<phraseText>i__Field, <>f__AnonymousType.<phraseText>i__Field) ? 1 : 0);
				break;
			case 2:
				result = 0;
				break;
			}
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = -1861395467;
		num = -1521134295 * num + EqualityComparer<<<>h__TransparentIdentifier5>j__TPar>.Default.GetHashCode(<<>h__TransparentIdentifier5>i__Field);
		return -1521134295 * num + EqualityComparer<<phraseText>j__TPar>.Default.GetHashCode(<phraseText>i__Field);
	}
}
internal sealed class <>f__AnonymousType13<<<>h__TransparentIdentifier6>j__TPar, <phrase>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <<>h__TransparentIdentifier6>j__TPar <<>h__TransparentIdentifier6>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <phrase>j__TPar <phrase>i__Field;

	public <<>h__TransparentIdentifier6>j__TPar <>h__TransparentIdentifier6 => <<>h__TransparentIdentifier6>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType13(<<>h__TransparentIdentifier6>j__TPar <>h__TransparentIdentifier6, <phrase>j__TPar phrase)
	{
		<<>h__TransparentIdentifier6>i__Field = <>h__TransparentIdentifier6;
		<phrase>i__Field = phrase;
	}

	public <phrase>j__TPar get_phrase()
	{
		return <phrase>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394916));
		stringBuilder.Append(<<>h__TransparentIdentifier6>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394841));
		stringBuilder.Append(<phrase>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0002, IL_002b, IL_0047, IL_004c, IL_0069
		<>f__AnonymousType13<<<>h__TransparentIdentifier6>j__TPar, <phrase>j__TPar> <>f__AnonymousType = value as <>f__AnonymousType13<<<>h__TransparentIdentifier6>j__TPar, <phrase>j__TPar>;
		int result;
		while (true)
		{
			if (<>f__AnonymousType != null)
			{
				if (319 <= 319 - 281)
				{
					continue;
				}
				while (EqualityComparer<<<>h__TransparentIdentifier6>j__TPar>.Default.Equals(<<>h__TransparentIdentifier6>i__Field, <>f__AnonymousType.<<>h__TransparentIdentifier6>i__Field))
				{
					if (false)
					{
						continue;
					}
					goto IL_0051;
				}
			}
			result = 0;
			break;
			IL_0051:
			result = (EqualityComparer<<phrase>j__TPar>.Default.Equals(<phrase>i__Field, <>f__AnonymousType.<phrase>i__Field) ? 1 : 0);
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 1488309485;
		num = -1521134295 * num + EqualityComparer<<<>h__TransparentIdentifier6>j__TPar>.Default.GetHashCode(<<>h__TransparentIdentifier6>i__Field);
		return -1521134295 * num + EqualityComparer<<phrase>j__TPar>.Default.GetHashCode(<phrase>i__Field);
	}
}
internal sealed class <>f__AnonymousType14<<<>h__TransparentIdentifier9>j__TPar, <phraseText>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <<>h__TransparentIdentifier9>j__TPar <<>h__TransparentIdentifier9>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <phraseText>j__TPar <phraseText>i__Field;

	public <<>h__TransparentIdentifier9>j__TPar <>h__TransparentIdentifier9 => <<>h__TransparentIdentifier9>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType14(<<>h__TransparentIdentifier9>j__TPar <>h__TransparentIdentifier9, <phraseText>j__TPar phraseText)
	{
		<<>h__TransparentIdentifier9>i__Field = <>h__TransparentIdentifier9;
		<phraseText>i__Field = phraseText;
	}

	public <phraseText>j__TPar get_phraseText()
	{
		return <phraseText>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394917));
		stringBuilder.Append(<<>h__TransparentIdentifier9>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394847));
		stringBuilder.Append(<phraseText>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0002, IL_002b, IL_0047, IL_004c, IL_0069
		<>f__AnonymousType14<<<>h__TransparentIdentifier9>j__TPar, <phraseText>j__TPar> <>f__AnonymousType = value as <>f__AnonymousType14<<<>h__TransparentIdentifier9>j__TPar, <phraseText>j__TPar>;
		int result2;
		if (<>f__AnonymousType != null)
		{
			if (606 > 606 - 580 && EqualityComparer<<<>h__TransparentIdentifier9>j__TPar>.Default.Equals(<<>h__TransparentIdentifier9>i__Field, <>f__AnonymousType.<<>h__TransparentIdentifier9>i__Field))
			{
				bool result = default(bool);
				if (false)
				{
					return result;
				}
				result2 = (EqualityComparer<<phraseText>j__TPar>.Default.Equals(<phraseText>i__Field, <>f__AnonymousType.<phraseText>i__Field) ? 1 : 0);
				goto IL_004e;
			}
		}
		result2 = 0;
		goto IL_004e;
		IL_004e:
		return (byte)result2 != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = -173241194;
		num = -1521134295 * num + EqualityComparer<<<>h__TransparentIdentifier9>j__TPar>.Default.GetHashCode(<<>h__TransparentIdentifier9>i__Field);
		return -1521134295 * num + EqualityComparer<<phraseText>j__TPar>.Default.GetHashCode(<phraseText>i__Field);
	}
}
internal sealed class <>f__AnonymousType15<<<>h__TransparentIdentifiera>j__TPar, <phrase>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <<>h__TransparentIdentifiera>j__TPar <<>h__TransparentIdentifiera>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <phrase>j__TPar <phrase>i__Field;

	public <<>h__TransparentIdentifiera>j__TPar <>h__TransparentIdentifiera => <<>h__TransparentIdentifiera>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType15(<<>h__TransparentIdentifiera>j__TPar <>h__TransparentIdentifiera, <phrase>j__TPar phrase)
	{
		<<>h__TransparentIdentifiera>i__Field = <>h__TransparentIdentifiera;
		<phrase>i__Field = phrase;
	}

	public <phrase>j__TPar get_phrase()
	{
		return <phrase>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394918));
		stringBuilder.Append(<<>h__TransparentIdentifiera>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394841));
		stringBuilder.Append(<phrase>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		int num = 2;
		<>f__AnonymousType15<<<>h__TransparentIdentifiera>j__TPar, <phrase>j__TPar> <>f__AnonymousType = default(<>f__AnonymousType15<<<>h__TransparentIdentifiera>j__TPar, <phrase>j__TPar>);
		int result;
		while (true)
		{
			switch (num)
			{
			default:
				<>f__AnonymousType = (value as <>f__AnonymousType15<<<>h__TransparentIdentifiera>j__TPar, <phrase>j__TPar>);
				num = ((<>f__AnonymousType != null) ? 1 : 3);
				continue;
			case 1:
				num = ((!EqualityComparer<<<>h__TransparentIdentifiera>j__TPar>.Default.Equals(<<>h__TransparentIdentifiera>i__Field, <>f__AnonymousType.<<>h__TransparentIdentifiera>i__Field)) ? 3 : 0);
				continue;
			case 0:
				result = (EqualityComparer<<phrase>j__TPar>.Default.Equals(<phrase>i__Field, <>f__AnonymousType.<phrase>i__Field) ? 1 : 0);
				break;
			case 3:
				result = 0;
				break;
			}
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = -932939128;
		num = -1521134295 * num + EqualityComparer<<<>h__TransparentIdentifiera>j__TPar>.Default.GetHashCode(<<>h__TransparentIdentifiera>i__Field);
		return -1521134295 * num + EqualityComparer<<phrase>j__TPar>.Default.GetHashCode(<phrase>i__Field);
	}
}
internal sealed class <>f__AnonymousType16<<<>h__TransparentIdentifierb>j__TPar, <word>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <<>h__TransparentIdentifierb>j__TPar <<>h__TransparentIdentifierb>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <word>j__TPar <word>i__Field;

	public <<>h__TransparentIdentifierb>j__TPar <>h__TransparentIdentifierb => <<>h__TransparentIdentifierb>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType16(<<>h__TransparentIdentifierb>j__TPar <>h__TransparentIdentifierb, <word>j__TPar word)
	{
		<<>h__TransparentIdentifierb>i__Field = <>h__TransparentIdentifierb;
		<word>i__Field = word;
	}

	public <word>j__TPar get_word()
	{
		return <word>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394919));
		stringBuilder.Append(<<>h__TransparentIdentifierb>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394837));
		stringBuilder.Append(<word>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		int num = 2;
		<>f__AnonymousType16<<<>h__TransparentIdentifierb>j__TPar, <word>j__TPar> <>f__AnonymousType = default(<>f__AnonymousType16<<<>h__TransparentIdentifierb>j__TPar, <word>j__TPar>);
		int result;
		while (true)
		{
			switch (num)
			{
			default:
				<>f__AnonymousType = (value as <>f__AnonymousType16<<<>h__TransparentIdentifierb>j__TPar, <word>j__TPar>);
				num = ((<>f__AnonymousType != null) ? 3 : 0);
				continue;
			case 3:
				num = (EqualityComparer<<<>h__TransparentIdentifierb>j__TPar>.Default.Equals(<<>h__TransparentIdentifierb>i__Field, <>f__AnonymousType.<<>h__TransparentIdentifierb>i__Field) ? 1 : 0);
				continue;
			case 1:
				result = (EqualityComparer<<word>j__TPar>.Default.Equals(<word>i__Field, <>f__AnonymousType.<word>i__Field) ? 1 : 0);
				break;
			case 0:
				result = 0;
				break;
			}
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 1138775210;
		num = -1521134295 * num + EqualityComparer<<<>h__TransparentIdentifierb>j__TPar>.Default.GetHashCode(<<>h__TransparentIdentifierb>i__Field);
		return -1521134295 * num + EqualityComparer<<word>j__TPar>.Default.GetHashCode(<word>i__Field);
	}
}
internal sealed class <>f__AnonymousType2<<personalityPartData>j__TPar, <foundAction>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <personalityPartData>j__TPar <personalityPartData>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <foundAction>j__TPar <foundAction>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType2(<personalityPartData>j__TPar personalityPartData, <foundAction>j__TPar foundAction)
	{
		<personalityPartData>i__Field = personalityPartData;
		<foundAction>i__Field = foundAction;
	}

	public <foundAction>j__TPar get_foundAction()
	{
		return <foundAction>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394816));
		stringBuilder.Append(<personalityPartData>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394818));
		stringBuilder.Append(<foundAction>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		int num = 1;
		<>f__AnonymousType2<<personalityPartData>j__TPar, <foundAction>j__TPar> <>f__AnonymousType = default(<>f__AnonymousType2<<personalityPartData>j__TPar, <foundAction>j__TPar>);
		int result;
		while (true)
		{
			switch (num)
			{
			default:
				<>f__AnonymousType = (value as <>f__AnonymousType2<<personalityPartData>j__TPar, <foundAction>j__TPar>);
				num = ((<>f__AnonymousType != null) ? 3 : 0);
				continue;
			case 3:
				num = (EqualityComparer<<personalityPartData>j__TPar>.Default.Equals(<personalityPartData>i__Field, <>f__AnonymousType.<personalityPartData>i__Field) ? 2 : 0);
				continue;
			case 2:
				result = (EqualityComparer<<foundAction>j__TPar>.Default.Equals(<foundAction>i__Field, <>f__AnonymousType.<foundAction>i__Field) ? 1 : 0);
				break;
			case 0:
				result = 0;
				break;
			}
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = -184978531;
		num = -1521134295 * num + EqualityComparer<<personalityPartData>j__TPar>.Default.GetHashCode(<personalityPartData>i__Field);
		return -1521134295 * num + EqualityComparer<<foundAction>j__TPar>.Default.GetHashCode(<foundAction>i__Field);
	}
}
internal sealed class <>f__AnonymousType3<<<>h__TransparentIdentifier5e>j__TPar, <mood>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <<>h__TransparentIdentifier5e>j__TPar <<>h__TransparentIdentifier5e>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <mood>j__TPar <mood>i__Field;

	public <<>h__TransparentIdentifier5e>j__TPar <>h__TransparentIdentifier5e => <<>h__TransparentIdentifier5e>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType3(<<>h__TransparentIdentifier5e>j__TPar <>h__TransparentIdentifier5e, <mood>j__TPar mood)
	{
		<<>h__TransparentIdentifier5e>i__Field = <>h__TransparentIdentifier5e;
		<mood>i__Field = mood;
	}

	public <mood>j__TPar get_mood()
	{
		return <mood>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394819));
		stringBuilder.Append(<<>h__TransparentIdentifier5e>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394828));
		stringBuilder.Append(<mood>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0002, IL_002b, IL_0047, IL_004c, IL_0069
		<>f__AnonymousType3<<<>h__TransparentIdentifier5e>j__TPar, <mood>j__TPar> <>f__AnonymousType = value as <>f__AnonymousType3<<<>h__TransparentIdentifier5e>j__TPar, <mood>j__TPar>;
		int result;
		if (<>f__AnonymousType != null)
		{
			if (959 > 959 - 804 && EqualityComparer<<<>h__TransparentIdentifier5e>j__TPar>.Default.Equals(<<>h__TransparentIdentifier5e>i__Field, <>f__AnonymousType.<<>h__TransparentIdentifier5e>i__Field))
			{
				if ((349 + 349 * 349) % 2 == 0)
				{
					result = (EqualityComparer<<mood>j__TPar>.Default.Equals(<mood>i__Field, <>f__AnonymousType.<mood>i__Field) ? 1 : 0);
					goto IL_004e;
				}
			}
		}
		result = 0;
		goto IL_004e;
		IL_004e:
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = -45041257;
		num = -1521134295 * num + EqualityComparer<<<>h__TransparentIdentifier5e>j__TPar>.Default.GetHashCode(<<>h__TransparentIdentifier5e>i__Field);
		return -1521134295 * num + EqualityComparer<<mood>j__TPar>.Default.GetHashCode(<mood>i__Field);
	}
}
internal sealed class <>f__AnonymousType4<<personalityPartDataFile>j__TPar, <scenario>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <personalityPartDataFile>j__TPar <personalityPartDataFile>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <scenario>j__TPar <scenario>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType4(<personalityPartDataFile>j__TPar personalityPartDataFile, <scenario>j__TPar scenario)
	{
		<personalityPartDataFile>i__Field = personalityPartDataFile;
		<scenario>i__Field = scenario;
	}

	public <personalityPartDataFile>j__TPar get_personalityPartDataFile()
	{
		return <personalityPartDataFile>i__Field;
	}

	public <scenario>j__TPar get_scenario()
	{
		return <scenario>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394829));
		stringBuilder.Append(<personalityPartDataFile>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394830));
		stringBuilder.Append(<scenario>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0024, IL_0040, IL_0045, IL_0062
		<>f__AnonymousType4<<personalityPartDataFile>j__TPar, <scenario>j__TPar> <>f__AnonymousType = value as <>f__AnonymousType4<<personalityPartDataFile>j__TPar, <scenario>j__TPar>;
		int result;
		while (true)
		{
			if (<>f__AnonymousType != null)
			{
				if (592 > 592 - 257)
				{
					if (!EqualityComparer<<personalityPartDataFile>j__TPar>.Default.Equals(<personalityPartDataFile>i__Field, <>f__AnonymousType.<personalityPartDataFile>i__Field))
					{
						goto IL_0042;
					}
					if (68 < 68 - 31)
					{
						continue;
					}
				}
				result = (EqualityComparer<<scenario>j__TPar>.Default.Equals(<scenario>i__Field, <>f__AnonymousType.<scenario>i__Field) ? 1 : 0);
				break;
			}
			goto IL_0042;
			IL_0042:
			result = 0;
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 335495490;
		num = -1521134295 * num + EqualityComparer<<personalityPartDataFile>j__TPar>.Default.GetHashCode(<personalityPartDataFile>i__Field);
		return -1521134295 * num + EqualityComparer<<scenario>j__TPar>.Default.GetHashCode(<scenario>i__Field);
	}
}
internal sealed class <>f__AnonymousType5<<file>j__TPar, <extension>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <file>j__TPar <file>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <extension>j__TPar <extension>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType5(<file>j__TPar file, <extension>j__TPar extension)
	{
		<file>i__Field = file;
		<extension>i__Field = extension;
	}

	public <file>j__TPar get_file()
	{
		return <file>i__Field;
	}

	public <extension>j__TPar get_extension()
	{
		return <extension>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394831));
		stringBuilder.Append(<file>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394824));
		stringBuilder.Append(<extension>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0002, IL_0029, IL_0042, IL_005f
		<>f__AnonymousType5<<file>j__TPar, <extension>j__TPar> <>f__AnonymousType = value as <>f__AnonymousType5<<file>j__TPar, <extension>j__TPar>;
		int result;
		while (true)
		{
			if (<>f__AnonymousType != null)
			{
				if (64 >= 64 - 48 && EqualityComparer<<file>j__TPar>.Default.Equals(<file>i__Field, <>f__AnonymousType.<file>i__Field))
				{
					if (334 <= 334 - 48)
					{
						continue;
					}
					result = (EqualityComparer<<extension>j__TPar>.Default.Equals(<extension>i__Field, <>f__AnonymousType.<extension>i__Field) ? 1 : 0);
					break;
				}
			}
			result = 0;
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 1915522837;
		num = -1521134295 * num + EqualityComparer<<file>j__TPar>.Default.GetHashCode(<file>i__Field);
		return -1521134295 * num + EqualityComparer<<extension>j__TPar>.Default.GetHashCode(<extension>i__Field);
	}
}
internal sealed class <>f__AnonymousType6<<personalityData>j__TPar, <action>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <personalityData>j__TPar <personalityData>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <action>j__TPar <action>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType6(<personalityData>j__TPar personalityData, <action>j__TPar action)
	{
		<personalityData>i__Field = personalityData;
		<action>i__Field = action;
	}

	public <action>j__TPar get_action()
	{
		return <action>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394825));
		stringBuilder.Append(<personalityData>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394817));
		stringBuilder.Append(<action>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		int num = 0;
		<>f__AnonymousType6<<personalityData>j__TPar, <action>j__TPar> <>f__AnonymousType = default(<>f__AnonymousType6<<personalityData>j__TPar, <action>j__TPar>);
		int result;
		while (true)
		{
			switch (num)
			{
			default:
				<>f__AnonymousType = (value as <>f__AnonymousType6<<personalityData>j__TPar, <action>j__TPar>);
				num = ((<>f__AnonymousType == null) ? 3 : 2);
				continue;
			case 2:
				num = (EqualityComparer<<personalityData>j__TPar>.Default.Equals(<personalityData>i__Field, <>f__AnonymousType.<personalityData>i__Field) ? 1 : 3);
				continue;
			case 1:
				result = (EqualityComparer<<action>j__TPar>.Default.Equals(<action>i__Field, <>f__AnonymousType.<action>i__Field) ? 1 : 0);
				break;
			case 3:
				result = 0;
				break;
			}
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = -1318875374;
		num = -1521134295 * num + EqualityComparer<<personalityData>j__TPar>.Default.GetHashCode(<personalityData>i__Field);
		return -1521134295 * num + EqualityComparer<<action>j__TPar>.Default.GetHashCode(<action>i__Field);
	}
}
internal sealed class <>f__AnonymousType7<<<>h__TransparentIdentifieraf>j__TPar, <hardwareAction>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <<>h__TransparentIdentifieraf>j__TPar <<>h__TransparentIdentifieraf>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <hardwareAction>j__TPar <hardwareAction>i__Field;

	public <<>h__TransparentIdentifieraf>j__TPar <>h__TransparentIdentifieraf => <<>h__TransparentIdentifieraf>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType7(<<>h__TransparentIdentifieraf>j__TPar <>h__TransparentIdentifieraf, <hardwareAction>j__TPar hardwareAction)
	{
		<<>h__TransparentIdentifieraf>i__Field = <>h__TransparentIdentifieraf;
		<hardwareAction>i__Field = hardwareAction;
	}

	public <hardwareAction>j__TPar get_hardwareAction()
	{
		return <hardwareAction>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394826));
		stringBuilder.Append(<<>h__TransparentIdentifieraf>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394827));
		stringBuilder.Append(<hardwareAction>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		int num = 3;
		<>f__AnonymousType7<<<>h__TransparentIdentifieraf>j__TPar, <hardwareAction>j__TPar> <>f__AnonymousType = default(<>f__AnonymousType7<<<>h__TransparentIdentifieraf>j__TPar, <hardwareAction>j__TPar>);
		int result;
		while (true)
		{
			switch (num)
			{
			default:
				<>f__AnonymousType = (value as <>f__AnonymousType7<<<>h__TransparentIdentifieraf>j__TPar, <hardwareAction>j__TPar>);
				num = ((<>f__AnonymousType != null) ? 1 : 0);
				continue;
			case 1:
				num = (EqualityComparer<<<>h__TransparentIdentifieraf>j__TPar>.Default.Equals(<<>h__TransparentIdentifieraf>i__Field, <>f__AnonymousType.<<>h__TransparentIdentifieraf>i__Field) ? 2 : 0);
				continue;
			case 2:
				result = (EqualityComparer<<hardwareAction>j__TPar>.Default.Equals(<hardwareAction>i__Field, <>f__AnonymousType.<hardwareAction>i__Field) ? 1 : 0);
				break;
			case 0:
				result = 0;
				break;
			}
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 360591111;
		num = -1521134295 * num + EqualityComparer<<<>h__TransparentIdentifieraf>j__TPar>.Default.GetHashCode(<<>h__TransparentIdentifieraf>i__Field);
		return -1521134295 * num + EqualityComparer<<hardwareAction>j__TPar>.Default.GetHashCode(<hardwareAction>i__Field);
	}
}
internal sealed class <>f__AnonymousType8<<personalityData>j__TPar, <scenario>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <personalityData>j__TPar <personalityData>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <scenario>j__TPar <scenario>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType8(<personalityData>j__TPar personalityData, <scenario>j__TPar scenario)
	{
		<personalityData>i__Field = personalityData;
		<scenario>i__Field = scenario;
	}

	public <scenario>j__TPar get_scenario()
	{
		return <scenario>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394825));
		stringBuilder.Append(<personalityData>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394830));
		stringBuilder.Append(<scenario>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		int num = 3;
		<>f__AnonymousType8<<personalityData>j__TPar, <scenario>j__TPar> <>f__AnonymousType = default(<>f__AnonymousType8<<personalityData>j__TPar, <scenario>j__TPar>);
		int result;
		while (true)
		{
			switch (num)
			{
			default:
				<>f__AnonymousType = (value as <>f__AnonymousType8<<personalityData>j__TPar, <scenario>j__TPar>);
				num = ((<>f__AnonymousType != null) ? 1 : 2);
				continue;
			case 1:
				num = ((!EqualityComparer<<personalityData>j__TPar>.Default.Equals(<personalityData>i__Field, <>f__AnonymousType.<personalityData>i__Field)) ? 2 : 0);
				continue;
			case 0:
				result = (EqualityComparer<<scenario>j__TPar>.Default.Equals(<scenario>i__Field, <>f__AnonymousType.<scenario>i__Field) ? 1 : 0);
				break;
			case 2:
				result = 0;
				break;
			}
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 1271899405;
		num = -1521134295 * num + EqualityComparer<<personalityData>j__TPar>.Default.GetHashCode(<personalityData>i__Field);
		return -1521134295 * num + EqualityComparer<<scenario>j__TPar>.Default.GetHashCode(<scenario>i__Field);
	}
}
internal sealed class <>f__AnonymousType9<<scenarioText>j__TPar, <word>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <scenarioText>j__TPar <scenarioText>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <word>j__TPar <word>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousType9(<scenarioText>j__TPar scenarioText, <word>j__TPar word)
	{
		<scenarioText>i__Field = scenarioText;
		<word>i__Field = word;
	}

	public <scenarioText>j__TPar get_scenarioText()
	{
		return <scenarioText>i__Field;
	}

	public <word>j__TPar get_word()
	{
		return <word>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394836));
		stringBuilder.Append(<scenarioText>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394837));
		stringBuilder.Append(<word>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0002, IL_002b, IL_0047, IL_004c, IL_0069
		while (true)
		{
			<>f__AnonymousType9<<scenarioText>j__TPar, <word>j__TPar> <>f__AnonymousType = value as <>f__AnonymousType9<<scenarioText>j__TPar, <word>j__TPar>;
			while (true)
			{
				int result;
				if (<>f__AnonymousType != null)
				{
					if (984 < 984 - 876)
					{
						continue;
					}
					if (EqualityComparer<<scenarioText>j__TPar>.Default.Equals(<scenarioText>i__Field, <>f__AnonymousType.<scenarioText>i__Field))
					{
						if (false)
						{
							break;
						}
						result = (EqualityComparer<<word>j__TPar>.Default.Equals(<word>i__Field, <>f__AnonymousType.<word>i__Field) ? 1 : 0);
						goto IL_004e;
					}
				}
				result = 0;
				goto IL_004e;
				IL_004e:
				return (byte)result != 0;
			}
		}
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 461392038;
		num = -1521134295 * num + EqualityComparer<<scenarioText>j__TPar>.Default.GetHashCode(<scenarioText>i__Field);
		return -1521134295 * num + EqualityComparer<<word>j__TPar>.Default.GetHashCode(<word>i__Field);
	}
}
internal sealed class <>f__AnonymousTypea<<scenario>j__TPar, <text>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <scenario>j__TPar <scenario>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <text>j__TPar <text>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousTypea(<scenario>j__TPar scenario, <text>j__TPar text)
	{
		<scenario>i__Field = scenario;
		<text>i__Field = text;
	}

	public <scenario>j__TPar get_scenario()
	{
		return <scenario>i__Field;
	}

	public <text>j__TPar get_text()
	{
		return <text>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394838));
		stringBuilder.Append(<scenario>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394839));
		stringBuilder.Append(<text>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		int num = 2;
		<>f__AnonymousTypea<<scenario>j__TPar, <text>j__TPar> <>f__AnonymousTypea = default(<>f__AnonymousTypea<<scenario>j__TPar, <text>j__TPar>);
		int result;
		while (true)
		{
			switch (num)
			{
			default:
				<>f__AnonymousTypea = (value as <>f__AnonymousTypea<<scenario>j__TPar, <text>j__TPar>);
				num = ((<>f__AnonymousTypea != null) ? 1 : 0);
				continue;
			case 1:
				num = (EqualityComparer<<scenario>j__TPar>.Default.Equals(<scenario>i__Field, <>f__AnonymousTypea.<scenario>i__Field) ? 3 : 0);
				continue;
			case 3:
				result = (EqualityComparer<<text>j__TPar>.Default.Equals(<text>i__Field, <>f__AnonymousTypea.<text>i__Field) ? 1 : 0);
				break;
			case 0:
				result = 0;
				break;
			}
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = -1145503400;
		num = -1521134295 * num + EqualityComparer<<scenario>j__TPar>.Default.GetHashCode(<scenario>i__Field);
		return -1521134295 * num + EqualityComparer<<text>j__TPar>.Default.GetHashCode(<text>i__Field);
	}
}
internal sealed class <>f__AnonymousTypeb<<<>h__TransparentIdentifier10f>j__TPar, <scenarioAction>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <<>h__TransparentIdentifier10f>j__TPar <<>h__TransparentIdentifier10f>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <scenarioAction>j__TPar <scenarioAction>i__Field;

	public <<>h__TransparentIdentifier10f>j__TPar <>h__TransparentIdentifier10f => <<>h__TransparentIdentifier10f>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousTypeb(<<>h__TransparentIdentifier10f>j__TPar <>h__TransparentIdentifier10f, <scenarioAction>j__TPar scenarioAction)
	{
		<<>h__TransparentIdentifier10f>i__Field = <>h__TransparentIdentifier10f;
		<scenarioAction>i__Field = scenarioAction;
	}

	public <scenarioAction>j__TPar get_scenarioAction()
	{
		return <scenarioAction>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394832));
		stringBuilder.Append(<<>h__TransparentIdentifier10f>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394833));
		stringBuilder.Append(<scenarioAction>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		int num = 0;
		<>f__AnonymousTypeb<<<>h__TransparentIdentifier10f>j__TPar, <scenarioAction>j__TPar> <>f__AnonymousTypeb = default(<>f__AnonymousTypeb<<<>h__TransparentIdentifier10f>j__TPar, <scenarioAction>j__TPar>);
		int result;
		while (true)
		{
			switch (num)
			{
			default:
				<>f__AnonymousTypeb = (value as <>f__AnonymousTypeb<<<>h__TransparentIdentifier10f>j__TPar, <scenarioAction>j__TPar>);
				num = ((<>f__AnonymousTypeb == null) ? 3 : 2);
				continue;
			case 2:
				num = (EqualityComparer<<<>h__TransparentIdentifier10f>j__TPar>.Default.Equals(<<>h__TransparentIdentifier10f>i__Field, <>f__AnonymousTypeb.<<>h__TransparentIdentifier10f>i__Field) ? 1 : 3);
				continue;
			case 1:
				result = (EqualityComparer<<scenarioAction>j__TPar>.Default.Equals(<scenarioAction>i__Field, <>f__AnonymousTypeb.<scenarioAction>i__Field) ? 1 : 0);
				break;
			case 3:
				result = 0;
				break;
			}
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = -1350826438;
		num = -1521134295 * num + EqualityComparer<<<>h__TransparentIdentifier10f>j__TPar>.Default.GetHashCode(<<>h__TransparentIdentifier10f>i__Field);
		return -1521134295 * num + EqualityComparer<<scenarioAction>j__TPar>.Default.GetHashCode(<scenarioAction>i__Field);
	}
}
internal sealed class <>f__AnonymousTypec<<word>j__TPar, <theWord>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <word>j__TPar <word>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <theWord>j__TPar <theWord>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousTypec(<word>j__TPar word, <theWord>j__TPar theWord)
	{
		<word>i__Field = word;
		<theWord>i__Field = theWord;
	}

	public <word>j__TPar get_word()
	{
		return <word>i__Field;
	}

	public <theWord>j__TPar get_theWord()
	{
		return <theWord>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394834));
		stringBuilder.Append(<word>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394835));
		stringBuilder.Append(<theWord>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		int num = 2;
		<>f__AnonymousTypec<<word>j__TPar, <theWord>j__TPar> <>f__AnonymousTypec = default(<>f__AnonymousTypec<<word>j__TPar, <theWord>j__TPar>);
		int result;
		while (true)
		{
			switch (num)
			{
			default:
				<>f__AnonymousTypec = (value as <>f__AnonymousTypec<<word>j__TPar, <theWord>j__TPar>);
				num = ((<>f__AnonymousTypec != null) ? 3 : 0);
				continue;
			case 3:
				num = (EqualityComparer<<word>j__TPar>.Default.Equals(<word>i__Field, <>f__AnonymousTypec.<word>i__Field) ? 1 : 0);
				continue;
			case 1:
				result = (EqualityComparer<<theWord>j__TPar>.Default.Equals(<theWord>i__Field, <>f__AnonymousTypec.<theWord>i__Field) ? 1 : 0);
				break;
			case 0:
				result = 0;
				break;
			}
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = -1971345288;
		num = -1521134295 * num + EqualityComparer<<word>j__TPar>.Default.GetHashCode(<word>i__Field);
		return -1521134295 * num + EqualityComparer<<theWord>j__TPar>.Default.GetHashCode(<theWord>i__Field);
	}
}
internal sealed class <>f__AnonymousTyped<<dataFile>j__TPar, <action>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <dataFile>j__TPar <dataFile>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <action>j__TPar <action>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousTyped(<dataFile>j__TPar dataFile, <action>j__TPar action)
	{
		<dataFile>i__Field = dataFile;
		<action>i__Field = action;
	}

	public <dataFile>j__TPar get_dataFile()
	{
		return <dataFile>i__Field;
	}

	public <action>j__TPar get_action()
	{
		return <action>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394844));
		stringBuilder.Append(<dataFile>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394817));
		stringBuilder.Append(<action>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0024, IL_0040, IL_0045, IL_0062
		<>f__AnonymousTyped<<dataFile>j__TPar, <action>j__TPar> <>f__AnonymousTyped = value as <>f__AnonymousTyped<<dataFile>j__TPar, <action>j__TPar>;
		int result;
		while (true)
		{
			if (<>f__AnonymousTyped != null)
			{
				if (264 < 264 - 141)
				{
					continue;
				}
				if (EqualityComparer<<dataFile>j__TPar>.Default.Equals(<dataFile>i__Field, <>f__AnonymousTyped.<dataFile>i__Field))
				{
					if (127 >= 127 - 47)
					{
						result = (EqualityComparer<<action>j__TPar>.Default.Equals(<action>i__Field, <>f__AnonymousTyped.<action>i__Field) ? 1 : 0);
						break;
					}
					continue;
				}
			}
			result = 0;
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = 679921573;
		num = -1521134295 * num + EqualityComparer<<dataFile>j__TPar>.Default.GetHashCode(<dataFile>i__Field);
		return -1521134295 * num + EqualityComparer<<action>j__TPar>.Default.GetHashCode(<action>i__Field);
	}
}
internal sealed class <>f__AnonymousTypee<<scenarioAction>j__TPar, <action>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <scenarioAction>j__TPar <scenarioAction>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <action>j__TPar <action>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousTypee(<scenarioAction>j__TPar scenarioAction, <action>j__TPar action)
	{
		<scenarioAction>i__Field = scenarioAction;
		<action>i__Field = action;
	}

	public <scenarioAction>j__TPar get_scenarioAction()
	{
		return <scenarioAction>i__Field;
	}

	public <action>j__TPar get_action()
	{
		return <action>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394845));
		stringBuilder.Append(<scenarioAction>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394817));
		stringBuilder.Append(<action>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0002, IL_0029, IL_0045, IL_004a, IL_0067
		<>f__AnonymousTypee<<scenarioAction>j__TPar, <action>j__TPar> <>f__AnonymousTypee = value as <>f__AnonymousTypee<<scenarioAction>j__TPar, <action>j__TPar>;
		if (<>f__AnonymousTypee == null)
		{
			goto IL_0047;
		}
		if (521 > 521 - 193)
		{
			if (!EqualityComparer<<scenarioAction>j__TPar>.Default.Equals(<scenarioAction>i__Field, <>f__AnonymousTypee.<scenarioAction>i__Field))
			{
				goto IL_0047;
			}
			if (130 < 130 - 127)
			{
			}
		}
		int result = EqualityComparer<<action>j__TPar>.Default.Equals(<action>i__Field, <>f__AnonymousTypee.<action>i__Field) ? 1 : 0;
		goto IL_004c;
		IL_004c:
		return (byte)result != 0;
		IL_0047:
		result = 0;
		goto IL_004c;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = -1672467544;
		num = -1521134295 * num + EqualityComparer<<scenarioAction>j__TPar>.Default.GetHashCode(<scenarioAction>i__Field);
		return -1521134295 * num + EqualityComparer<<action>j__TPar>.Default.GetHashCode(<action>i__Field);
	}
}
internal sealed class <>f__AnonymousTypef<<text>j__TPar, <phraseText>j__TPar>
{
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <text>j__TPar <text>i__Field;

	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private readonly <phraseText>j__TPar <phraseText>i__Field;

	[DebuggerHidden]
	public <>f__AnonymousTypef(<text>j__TPar text, <phraseText>j__TPar phraseText)
	{
		<text>i__Field = text;
		<phraseText>i__Field = phraseText;
	}

	public <text>j__TPar get_text()
	{
		return <text>i__Field;
	}

	public <phraseText>j__TPar get_phraseText()
	{
		return <phraseText>i__Field;
	}

	[DebuggerHidden]
	public override string ToString()
	{
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394846));
		stringBuilder.Append(<text>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394847));
		stringBuilder.Append(<phraseText>i__Field);
		stringBuilder.Append(ႥႠႭ.Ⴃ.ႰႣ(1821394823));
		return stringBuilder.ToString();
	}

	[DebuggerHidden]
	public override bool Equals(object value)
	{
		//Discarded unreachable code: IL_0002, IL_0029, IL_0045, IL_004a, IL_0067
		<>f__AnonymousTypef<<text>j__TPar, <phraseText>j__TPar> <>f__AnonymousTypef = value as <>f__AnonymousTypef<<text>j__TPar, <phraseText>j__TPar>;
		int result;
		while (true)
		{
			if (<>f__AnonymousTypef != null)
			{
				if (387 <= 387 - 334)
				{
					continue;
				}
				while (EqualityComparer<<text>j__TPar>.Default.Equals(<text>i__Field, <>f__AnonymousTypef.<text>i__Field))
				{
					if (285 < 285 - 11)
					{
						continue;
					}
					goto IL_004f;
				}
			}
			result = 0;
			break;
			IL_004f:
			result = (EqualityComparer<<phraseText>j__TPar>.Default.Equals(<phraseText>i__Field, <>f__AnonymousTypef.<phraseText>i__Field) ? 1 : 0);
			break;
		}
		return (byte)result != 0;
	}

	[DebuggerHidden]
	public override int GetHashCode()
	{
		int num = -1919701826;
		num = -1521134295 * num + EqualityComparer<<text>j__TPar>.Default.GetHashCode(<text>i__Field);
		return -1521134295 * num + EqualityComparer<<phraseText>j__TPar>.Default.GetHashCode(<phraseText>i__Field);
	}
}
namespace Rondyo.Chatman.Data
{
	[Serializable]
	[Flags]
	public enum ActionChangeLog
	{
		None = 0x0,
		Words = 0x1,
		Audio = 0x2,
		Name = 0x4,
		Description = 0x8,
		Mood = 0x10,
		Actions = 0x20
	}
	[Serializable]
	public class ActionProducerDefinition : IEqualityComparer<ActionProducerDefinition>
	{
		private int id;

		private string parameters;

		[XmlAttribute]
		public int ID
		{
			get
			{
				return id;
			}
			set
			{
				id = value;
			}
		}

		[XmlAttribute]
		public string Parameters
		{
			get
			{
				return parameters;
			}
			set
			{
				parameters = value;
			}
		}

		public bool Equals(ActionProducerDefinition Ⴍ, ActionProducerDefinition Ⴓ)
		{
			return Ⴍ.id == Ⴓ.id;
		}

		public int GetHashCode(ActionProducerDefinition Ⴍ)
		{
			return Ⴍ.id.GetHashCode();
		}
	}
	[Serializable]
	public enum ActionScope
	{
		Reactive,
		Proactive,
		Both
	}
	[Serializable]
	public class ActionUsage : Counter, IEqualityComparer<ActionUsage>, IEquatable<ActionUsage>, IComparer<ActionUsage>
	{
		protected Guid id;

		[XmlAttribute]
		public Guid ID
		{
			get
			{
				return id;
			}
			set
			{
				id = value;
				ႨႳႤ(ႤႤႭ.Ⴅ.ႰႣ(1821394874));
			}
		}

		public bool Equals(ActionUsage Ⴍ, ActionUsage Ⴓ)
		{
			return Ⴍ.id == Ⴓ.id;
		}

		public int GetHashCode(ActionUsage Ⴍ)
		{
			return Ⴍ.id.GetHashCode();
		}

		public int Compare(ActionUsage Ⴍ, ActionUsage Ⴓ)
		{
			return Ⴍ.ID.CompareTo(Ⴓ.ID);
		}

		public bool Equals(ActionUsage Ⴍ)
		{
			return ID == Ⴍ.ID;
		}
	}
	[Serializable]
	[XmlRoot("Chatman")]
	public class Chatman : INotifyPropertyChanged, INotifyPropertyChanging
	{
		private string userName = string.Empty;

		private DateTime? userBirthDate = null;

		private string profileImage;

		private string userCity;

		private string zipCode;

		private string userCountry;

		private Gender userGender;

		[NonSerialized]
		private float userAge;

		private int numberOfCredits = 100;

		[XmlElement(IsNullable = true)]
		public string[] PromotionalText;

		[XmlElement]
		public DateTime PromotionalTextLastUpdate;

		private string chatmanName = ႥႠႭ.Ⴍ.ႰႣ(1821394857);

		private DateTime chatmanBirthDate;

		private Guid activePersonalityId = Chatman.Ⴐ;

		private DateTime lastUseDate;

		private ChatmanBrainPower brainPower;

		private ChatmanFriendship friendship;

		private string engineVersion = ႥႠႭ.Ⴈ.ႰႥ(1821394857);

		private short lastVolume = 25;

		private bool mute = false;

		private bool isAutoMuted;

		private PushButtonAction pushButtonAction = PushButtonAction.Mute;

		private Guid pushButtonActionPersonalityID;

		private Guid pushButtonActionID;

		private bool dontProduceActions;

		private int dontProduceActionsStartHour = 22;

		private int dontProduceActionsStartMinute = 0;

		private int dontProduceActionsEndHour = 7;

		private int dontProduceActionsEndMinute = 0;

		private string webUserName = string.Empty;

		private string productNumber = string.Empty;

		private object sessionKeyLock = new object();

		private string sessionKey = string.Empty;

		private int subscriptionLevel = -1;

		[XmlElement]
		public int PassL;

		private string credentials = string.Empty;

		private string persistentCredentials = string.Empty;

		private DateTime lastCredentialUpdateTime = DateTime.MinValue;

		private Guid lastMoodUsedInNewAction;

		private Guid lastMoodUsedInNewWords;

		private WebConnectionResult lastWebConnectionResult = WebConnectionResult.Unknown;

		private DateTime lastContentUpdateDate;

		private List<ContentFileEntry> processedContentFiles = new List<ContentFileEntry>();

		private string userLanguage = ႥႠႭ.Ⴓ.ႰႤ(1821394857);

		[NonSerialized]
		private PropertyChangedEventHandler propertyChanged;

		private PropertyChangingEventHandler PropertyChanging;

		private DateTime <LastAutoMuteDate>k__BackingField;

		[XmlAttribute]
		public string UserName
		{
			get
			{
				return userName;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴈ.ႰႥ(1821394854));
				userName = value;
				ႨႳႠ(ႥႠႭ.Ⴓ.ႰႤ(1821394854));
			}
		}

		[XmlElement(IsNullable = true)]
		[DefaultValue(null)]
		public DateTime? UserBirthDate
		{
			get
			{
				return userBirthDate;
			}
			set
			{
				switch (0)
				{
				}
				ႨႳႣ(ႤႤႭ.Ⴅ.ႰႣ(1821394854));
				userBirthDate = value;
				userAge = (userBirthDate.HasValue ? ႥႥႨႣ.Ⴈ.ႨႷႭ(userBirthDate.Value) : 10f);
				ႨႳႠ(ႥႠႭ.Ⴍ.ႰႣ(1821394854));
			}
		}

		[XmlAttribute]
		public string ProfileImage
		{
			get
			{
				return profileImage;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴓ.ႰႤ(1821394855));
				profileImage = value;
				ႨႳႠ(ႥႠႭ.Ⴍ.ႰႣ(1821394855));
			}
		}

		[XmlAttribute]
		public string UserCity
		{
			get
			{
				return userCity;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴃ.ႰႣ(1821394855));
				userCity = value;
				ႨႳႠ(ႥႠႭ.Ⴈ.ႰႥ(1821394855));
			}
		}

		[XmlAttribute]
		public string ZipCode
		{
			get
			{
				return zipCode;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴍ.ႰႣ(1821394848));
				zipCode = value;
				ႨႳႠ(ႤႤႭ.Ⴅ.ႰႣ(1821394855));
			}
		}

		[XmlAttribute]
		public string UserCountry
		{
			get
			{
				return userCountry;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴈ.ႰႥ(1821394848));
				userCountry = value;
				ႨႳႠ(ႥႠႭ.Ⴓ.ႰႤ(1821394848));
			}
		}

		[XmlAttribute]
		public Gender UserGender
		{
			get
			{
				return userGender;
			}
			set
			{
				ႨႳႣ(ႤႤႭ.Ⴅ.ႰႣ(1821394848));
				userGender = value;
				ႨႳႠ(ႥႠႭ.Ⴃ.ႰႣ(1821394848));
			}
		}

		[XmlIgnore]
		public float UserAge => userAge;

		[DefaultValue(100)]
		[XmlAttribute]
		public int NumberOfCredits
		{
			get
			{
				return numberOfCredits;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴈ.ႰႥ(1821394849));
				numberOfCredits = value;
				ႨႳႠ(ႥႠႭ.Ⴓ.ႰႤ(1821394849));
			}
		}

		[XmlAttribute]
		public string ChatmanName
		{
			get
			{
				return chatmanName;
			}
			set
			{
				ႨႳႣ(ႤႤႭ.Ⴅ.ႰႣ(1821394849));
				chatmanName = value;
				ႨႳႠ(ႥႠႭ.Ⴃ.ႰႣ(1821394849));
			}
		}

		[XmlAttribute]
		public DateTime ChatmanBirthDate
		{
			get
			{
				return chatmanBirthDate;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴓ.ႰႤ(1821394850));
				chatmanBirthDate = value;
				ႨႳႠ(ႥႠႭ.Ⴍ.ႰႣ(1821394849));
			}
		}

		public static Guid Ⴐ => new Guid(ႭႥႰ.Ⴐ.ႼႣ());

		[XmlAttribute]
		public Guid ActivePersonalityId
		{
			get
			{
				return activePersonalityId;
			}
			set
			{
				int num = 0;
				while (true)
				{
					int num2;
					switch (num)
					{
					case 3:
						return;
					default:
						num = (activePersonalityId.Equals(value) ? 1 : 2);
						break;
					case 2:
						num2 = ((!Guid.Empty.Equals(value)) ? 1 : 0);
						goto IL_0049;
					case 1:
						num2 = 0;
						goto IL_0049;
					case 4:
						num = 3;
						break;
					case 5:
						{
							ႨႳႣ(ႤႤႭ.Ⴅ.ႰႣ(1821394850));
							activePersonalityId = value;
							ႨႳႠ(ႥႠႭ.Ⴃ.ႰႣ(1821394850));
							num = 3;
							break;
						}
						IL_0049:
						num = ((num2 != 0) ? 5 : 4);
						break;
					}
				}
			}
		}

		[XmlAttribute]
		public DateTime LastUseDate
		{
			get
			{
				return lastUseDate;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴓ.ႰႤ(1821394851));
				lastUseDate = value;
				ႨႳႠ(ႥႠႭ.Ⴍ.ႰႣ(1821394850));
			}
		}

		[XmlElement]
		public ChatmanBrainPower BrainPower
		{
			get
			{
				return brainPower;
			}
			set
			{
				brainPower = value;
			}
		}

		[XmlElement]
		public ChatmanFriendship Friendship
		{
			get
			{
				return friendship;
			}
			set
			{
				friendship = value;
			}
		}

		[XmlAttribute]
		public string EngineVersion
		{
			get
			{
				return engineVersion;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴃ.ႰႣ(1821394851));
				engineVersion = value;
				ႨႳႠ(ႥႠႭ.Ⴈ.ႰႥ(1821394850));
			}
		}

		[XmlAttribute]
		public short LastVolume
		{
			get
			{
				return lastVolume;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴍ.ႰႣ(1821394851));
				lastVolume = value;
				ႨႳႠ(ႤႤႭ.Ⴅ.ႰႣ(1821394851));
			}
		}

		[XmlAttribute]
		public bool Mute
		{
			get
			{
				return mute;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴈ.ႰႥ(1821394851));
				mute = value;
				ႨႳႠ(ႥႠႭ.Ⴓ.ႰႤ(1821394860));
			}
		}

		[XmlElement]
		[DefaultValue(false)]
		public bool IsAutoMuted
		{
			get
			{
				return isAutoMuted;
			}
			set
			{
				ႨႳႣ(ႤႤႭ.Ⴅ.ႰႣ(1821394860));
				isAutoMuted = value;
				ႨႳႠ(ႥႠႭ.Ⴃ.ႰႣ(1821394860));
			}
		}

		[XmlElement]
		public DateTime LastAutoMuteDate
		{
			get
			{
				return <LastAutoMuteDate>k__BackingField;
			}
			set
			{
				<LastAutoMuteDate>k__BackingField = value;
			}
		}

		[XmlAttribute]
		public PushButtonAction PushButtonAction
		{
			get
			{
				return pushButtonAction;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴃ.ႰႣ(1821394861));
				pushButtonAction = value;
				ႨႳႠ(ႥႠႭ.Ⴈ.ႰႥ(1821394860));
			}
		}

		[XmlAttribute]
		public Guid PushButtonActionPersonalityID
		{
			get
			{
				return pushButtonActionPersonalityID;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴍ.ႰႣ(1821394860));
				pushButtonActionPersonalityID = value;
				ႨႳႠ(ႤႤႭ.Ⴅ.ႰႣ(1821394861));
			}
		}

		[XmlAttribute]
		public Guid PushButtonActionID
		{
			get
			{
				return pushButtonActionID;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴈ.ႰႥ(1821394861));
				pushButtonActionID = value;
				ႨႳႠ(ႥႠႭ.Ⴓ.ႰႤ(1821394861));
			}
		}

		[XmlAttribute]
		public bool DontProduceActions
		{
			get
			{
				return dontProduceActions;
			}
			set
			{
				ႨႳႣ(ႤႤႭ.Ⴅ.ႰႣ(1821394862));
				dontProduceActions = value;
				ႨႳႠ(ႥႠႭ.Ⴃ.ႰႣ(1821394862));
			}
		}

		[XmlAttribute]
		public int DontProduceActionsStartHour
		{
			get
			{
				return dontProduceActionsStartHour;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴓ.ႰႤ(1821394862));
				dontProduceActionsStartHour = value;
				ႨႳႠ(ႥႠႭ.Ⴍ.ႰႣ(1821394861));
			}
		}

		[XmlAttribute]
		public int DontProduceActionsStartMinute
		{
			get
			{
				return dontProduceActionsStartMinute;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴃ.ႰႣ(1821394863));
				dontProduceActionsStartMinute = value;
				ႨႳႠ(ႥႠႭ.Ⴈ.ႰႥ(1821394862));
			}
		}

		[XmlAttribute]
		public int DontProduceActionsEndHour
		{
			get
			{
				return dontProduceActionsEndHour;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴍ.ႰႣ(1821394862));
				dontProduceActionsEndHour = value;
				ႨႳႠ(ႤႤႭ.Ⴅ.ႰႣ(1821394863));
			}
		}

		[XmlAttribute]
		public int DontProduceActionsEndMinute
		{
			get
			{
				return dontProduceActionsEndMinute;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴈ.ႰႥ(1821394863));
				dontProduceActionsEndMinute = value;
				ႨႳႠ(ႥႠႭ.Ⴓ.ႰႤ(1821394863));
			}
		}

		[XmlAttribute]
		public string WebUserName
		{
			get
			{
				return webUserName;
			}
			set
			{
				webUserName = value;
			}
		}

		[XmlAttribute]
		public string ProductNumber
		{
			get
			{
				return productNumber;
			}
			set
			{
				productNumber = value;
			}
		}

		[XmlAttribute]
		public int SubscriptionLevel
		{
			get
			{
				return subscriptionLevel;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴃ.ႰႣ(1821394856));
				subscriptionLevel = value;
				ႨႳႠ(ႥႠႭ.Ⴈ.ႰႥ(1821394856));
			}
		}

		[XmlIgnore]
		public string PassHash
		{
			get
			{
				int num = 2;
				string text = default(string);
				string result;
				while (true)
				{
					int num2;
					switch (num)
					{
					default:
						text = ႥႥႰ.Ⴓ.ႨႷႷ(webUserName + productNumber);
						num2 = ((Credentials.Length < text.Length) ? 1 : 0);
						goto IL_003f;
					case 0:
						result = Credentials.Remove(0, text.Length);
						break;
					case 1:
						result = string.Empty;
						break;
					}
					break;
					IL_003f:
					num = num2;
				}
				return result;
			}
		}

		[XmlIgnore]
		public bool SessionKeyIsReady => !string.IsNullOrEmpty(sessionKey);

		[XmlIgnore]
		public string SessionKeyData
		{
			get
			{
				if (!SessionKeyIsReady)
				{
					lock (sessionKeyLock)
					{
						if (!SessionKeyIsReady)
						{
							AuthorizeData authorizeData = new AuthorizeData();
							authorizeData.ChatmanSn = productNumber;
							authorizeData.UserName = webUserName;
							authorizeData.LocalKey = ႥႥႨႣ.Ⴗ.ႤႠႠ();
							authorizeData.PasswordHash = PassHash;
							string ⴍ = AuthorizeData.SaveObjectToData(authorizeData);
							AuthorizeData authorizeData2 = AuthorizeData.LoadObjectFromXml(new ႥႥႨႷ.Ⴀ(ⴍ).ႨႳႠ());
							if (authorizeData2 != null)
							{
								SubscriptionLevel = authorizeData2.SubscriptionLevel;
								sessionKey = authorizeData2.AuthKey;
							}
							else
							{
								SubscriptionLevel = -1;
							}
							ႨႳႥ(SubscriptionLevel);
						}
					}
				}
				AuthorizeData authorizeData3 = new AuthorizeData();
				authorizeData3.AuthKey = sessionKey;
				return AuthorizeData.SaveObjectToData(authorizeData3);
			}
		}

		[XmlAttribute]
		public string Credentials
		{
			get
			{
				return credentials;
			}
			set
			{
				ႨႳႣ(ႤႤႭ.Ⴅ.ႰႣ(1821394856));
				ႼႷ();
				credentials = value;
				ႨႳႠ(ႥႠႭ.Ⴍ.ႰႣ(1821394863));
			}
		}

		[XmlAttribute]
		public string PersistentCredentials => ႥႥႰ.Ⴓ.ႨႷႷ(webUserName + productNumber);

		public bool Ⴐ
		{
			get
			{
				int num = 3;
				int result;
				while (true)
				{
					switch (num)
					{
					default:
						num = ((webUserName != string.Empty) ? 1 : 0);
						continue;
					case 1:
						num = ((credentials != string.Empty) ? 2 : 0);
						continue;
					case 2:
						result = ((productNumber != string.Empty) ? 1 : 0);
						break;
					case 0:
						result = 0;
						break;
					}
					break;
				}
				return (byte)result != 0;
			}
		}

		public DateTime Ⴐ => lastCredentialUpdateTime;

		[XmlAttribute]
		public Guid LastMoodUsedInNewAction
		{
			get
			{
				return lastMoodUsedInNewAction;
			}
			set
			{
				lastMoodUsedInNewAction = value;
			}
		}

		[XmlAttribute]
		public Guid LastMoodUsedInNewWords
		{
			get
			{
				return lastMoodUsedInNewWords;
			}
			set
			{
				lastMoodUsedInNewWords = value;
			}
		}

		[XmlIgnore]
		public WebConnectionResult LastWebConnectionResult
		{
			get
			{
				return lastWebConnectionResult;
			}
			set
			{
				ႨႳႣ(ႥႠႭ.Ⴓ.ႰႤ(1821394856));
				lastWebConnectionResult = value;
				ႨႳႠ(ႥႠႭ.Ⴍ.ႰႣ(1821394856));
			}
		}

		[XmlAttribute]
		public DateTime LastContentUpdateDate
		{
			get
			{
				return lastContentUpdateDate;
			}
			set
			{
				lastContentUpdateDate = value;
			}
		}

		[XmlArrayItem("ContentFile", typeof(ContentFileEntry))]
		[XmlArray("ProcessedContentFiles")]
		public List<ContentFileEntry> ProcessedContentFiles
		{
			get
			{
				return processedContentFiles;
			}
			set
			{
				processedContentFiles = value;
			}
		}

		[XmlAttribute]
		[DefaultValue("en-US")]
		public string UserLanguage
		{
			get
			{
				return userLanguage;
			}
			set
			{
				//Discarded unreachable code: IL_0002, IL_001e, IL_0043, IL_0047
				while (!string.IsNullOrEmpty(value))
				{
					userLanguage = value;
					ႣႳ.ႨႠႠ(userLanguage);
					if (509 > 509 - 360)
					{
						return;
					}
				}
				if (768 < 768 - 99)
				{
				}
			}
		}

		public event PropertyChangedEventHandler Ⴈ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				propertyChanged = (PropertyChangedEventHandler)Delegate.Combine(propertyChanged, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				propertyChanged = (PropertyChangedEventHandler)Delegate.Remove(propertyChanged, value);
			}
		}

		public event PropertyChangingEventHandler Ⴐ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				PropertyChanging = (PropertyChangingEventHandler)Delegate.Combine(PropertyChanging, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				PropertyChanging = (PropertyChangingEventHandler)Delegate.Remove(PropertyChanging, value);
			}
		}

		public bool ႼႳ()
		{
			int num = 1;
			DateTime now = default(DateTime);
			int result;
			bool flag = default(bool);
			bool flag2 = default(bool);
			while (true)
			{
				int num3;
				int num2;
				switch (num)
				{
				default:
					now = DateTime.Now;
					num = ((now.Hour < DontProduceActionsStartHour) ? 10 : 0);
					continue;
				case 10:
					num = ((now.Hour != DontProduceActionsStartHour) ? 2 : 4);
					continue;
				case 4:
					num3 = ((now.Minute >= DontProduceActionsStartMinute) ? 1 : 0);
					goto IL_0083;
				case 2:
					num3 = 0;
					goto IL_0083;
				case 0:
					num3 = 1;
					goto IL_0083;
				case 3:
					num = ((now.Hour != DontProduceActionsEndHour) ? 6 : 5);
					continue;
				case 5:
					num2 = ((now.Minute < DontProduceActionsEndMinute) ? 1 : 0);
					goto IL_00cd;
				case 6:
					num2 = 0;
					goto IL_00cd;
				case 8:
					num2 = 1;
					goto IL_00cd;
				case 9:
					result = (flag ? 1 : 0);
					break;
				case 7:
					{
						result = 1;
						break;
					}
					IL_00cd:
					flag = ((byte)num2 != 0);
					num = (flag2 ? 7 : 9);
					continue;
					IL_0083:
					flag2 = ((byte)num3 != 0);
					num = ((now.Hour < DontProduceActionsEndHour) ? 8 : 3);
					continue;
				}
				break;
			}
			return (byte)result != 0;
		}

		public void ႼႷ()
		{
			lock (sessionKeyLock)
			{
				sessionKey = string.Empty;
			}
		}

		public void Ⴓ(string Ⴍ, string Ⴓ, string Ⴈ)
		{
			PassL = Ⴓ.Length;
			webUserName = Ⴍ.ToLower();
			productNumber = Ⴈ.ToLower().Trim().Replace(ႥႠႭ.Ⴃ.ႰႣ(1821394857), ႥႠႭ.Ⴃ.ႰႣ(1821394858));
			Credentials = ႥႥႰ.Ⴓ.ႨႷႷ(webUserName + productNumber) + ႥႥႰ.Ⴓ.ႨႷႷ(Ⴓ);
			lastCredentialUpdateTime = DateTime.Now;
		}

		public void ႳႰ(string Ⴍ, string Ⴓ)
		{
			string passHash = PassHash;
			webUserName = Ⴍ.ToLower();
			productNumber = Ⴓ.ToLower().Trim().Replace(ႤႤႭ.Ⴅ.ႰႣ(1821394857), ႤႤႭ.Ⴅ.ႰႣ(1821394858));
			Credentials = ႥႥႰ.Ⴓ.ႨႷႷ(webUserName + productNumber) + passHash;
			lastCredentialUpdateTime = DateTime.Now;
		}

		public bool ႼႣ()
		{
			//Discarded unreachable code: IL_0002, IL_0029, IL_0040
			int result;
			while (true)
			{
				if (UserName != string.Empty)
				{
					if (363 >= 363 - 275)
					{
						result = ((ChatmanName != string.Empty) ? 1 : 0);
						break;
					}
					continue;
				}
				result = 0;
				break;
			}
			return (byte)result != 0;
		}

		public void ႨႳႥ(int Ⴍ)
		{
			int num = 0;
			while (true)
			{
				switch (num)
				{
				case 4:
					return;
				default:
					num = ((Ⴍ >= 0) ? 5 : 3);
					break;
				case 3:
					LastWebConnectionResult = WebConnectionResult.Failed;
					num = 4;
					break;
				case 5:
					num = ((Ⴍ == 0) ? 1 : 2);
					break;
				case 1:
					LastWebConnectionResult = WebConnectionResult.AccessDenied;
					num = 4;
					break;
				case 2:
					LastWebConnectionResult = WebConnectionResult.Connected;
					num = 4;
					break;
				}
			}
		}

		private void ႨႳႠ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_001e, IL_0043
			do
			{
				bool flag = propertyChanged == null;
				do
				{
					if (flag)
					{
						return;
					}
				}
				while (207 < 207 - 80);
				propertyChanged(this, new PropertyChangedEventArgs(Ⴍ));
			}
			while (825 < 825 - 483);
		}

		private void ႨႳႣ(string Ⴍ)
		{
			int num = 2;
			while (true)
			{
				switch (num)
				{
				case 0:
					return;
				default:
					num = ((PropertyChanging != null) ? 1 : 0);
					break;
				case 1:
					PropertyChanging(this, new PropertyChangingEventArgs(Ⴍ));
					num = 0;
					break;
				}
			}
		}
	}
	[Serializable]
	public class ChatmanAction : ActionUsage, IChatmanAction, IChatmanAction2, IEqualityComparer<ChatmanAction>, IEquatable<ChatmanAction>, IComparer<ChatmanAction>, INotifyPropertyChanged
	{
		[NonSerialized]
		internal Personality personality;

		private string name = string.Empty;

		private string description = string.Empty;

		private string author = string.Empty;

		private string reference = string.Empty;

		private Guid moodID = Guid.Empty;

		[NonSerialized]
		internal Guid previousMoodID = Guid.Empty;

		private int intensity = 1;

		private DateTime creationDate = DateTime.Parse(ႥႠႭ.Ⴍ.ႰႣ(1821394872), new CultureInfo(ႥႠႭ.Ⴍ.ႰႣ(1821394873)));

		private bool isPrivate = false;

		[NonSerialized]
		private bool isExcluded = false;

		private ActionScope scope;

		private int specialActionCode;

		private string serialNumberUsedForDownload;

		[NonSerialized]
		private bool isMy;

		[NonSerialized]
		private string location = null;

		private int cl;

		private List<HardwareAction> actions = new List<HardwareAction>();

		[NonSerialized]
		private bool isDeleted = false;

		private static Func<HardwareAction, bool> CS$<>9__CachedAnonymousMethodDelegate3;

		private static Func<HardwareAction, ChatmanHardwareAction> CS$<>9__CachedAnonymousMethodDelegate4;

		private static Func<HardwareAction, bool> CS$<>9__CachedAnonymousMethodDelegate8;

		private static Func<HardwareAction, ChatmanHardwareAction> CS$<>9__CachedAnonymousMethodDelegate9;

		[XmlAttribute]
		public new Guid ID
		{
			get
			{
				return base.ID;
			}
			set
			{
				base.ID = value;
			}
		}

		[XmlIgnore]
		public Personality Personality => personality;

		public new IChatmanPersonality Ⴈ => personality;

		[XmlAttribute]
		public string Name
		{
			get
			{
				return name;
			}
			set
			{
				name = value;
				ႨႳႤ(ႥႠႭ.Ⴃ.ႰႣ(1821394878));
			}
		}

		[DefaultValue("")]
		[XmlAttribute]
		public string Description
		{
			get
			{
				return description;
			}
			set
			{
				description = value;
				ႨႳႤ(ႥႠႭ.Ⴍ.ႰႣ(1821394877));
			}
		}

		[XmlAttribute]
		[DefaultValue("")]
		public string Author
		{
			get
			{
				return author;
			}
			set
			{
				author = value;
				ႨႳႤ(ႥႠႭ.Ⴈ.ႰႥ(1821394873));
			}
		}

		[XmlAttribute]
		[DefaultValue("")]
		public string Reference
		{
			get
			{
				return reference;
			}
			set
			{
				reference = value;
				ႨႳႤ(ႤႤႭ.Ⴅ.ႰႣ(1821394875));
			}
		}

		[XmlAttribute]
		public Guid MoodID
		{
			get
			{
				return moodID;
			}
			set
			{
				//Discarded unreachable code: IL_0002, IL_0037, IL_005c
				if (moodID != value)
				{
					if (972 >= 972 - 596)
					{
						previousMoodID = moodID;
						goto IL_0010;
					}
					goto IL_0027;
				}
				return;
				IL_0027:
				if (582 <= 582 - 566)
				{
					goto IL_0010;
				}
				return;
				IL_0010:
				moodID = value;
				ႨႳႤ(ႥႠႭ.Ⴃ.ႰႣ(1821394879));
				goto IL_0027;
			}
		}

		[DefaultValue(1)]
		[XmlAttribute]
		public int Intensity
		{
			get
			{
				return intensity;
			}
			set
			{
				intensity = value;
				ႨႳႤ(ႥႠႭ.Ⴃ.ႰႣ(1821394872));
			}
		}

		[XmlAttribute]
		[DefaultValue(typeof(DateTime), "2008-06-01T00:00:00")]
		public DateTime CreationDate
		{
			get
			{
				return creationDate;
			}
			set
			{
				creationDate = value;
				ႨႳႤ(ႥႠႭ.Ⴍ.ႰႣ(1821394878));
			}
		}

		[DefaultValue(false)]
		[XmlAttribute]
		public bool IsPrivate
		{
			get
			{
				return isPrivate;
			}
			set
			{
				isPrivate = value;
				ႨႳႤ(ႥႠႭ.Ⴈ.ႰႥ(1821394868));
			}
		}

		[XmlAttribute]
		[DefaultValue(false)]
		public bool IsExcluded
		{
			get
			{
				return isExcluded;
			}
			set
			{
				isExcluded = value;
				ႨႳႤ(ႤႤႭ.Ⴅ.ႰႣ(1821394820));
			}
		}

		[XmlAttribute]
		[DefaultValue(0)]
		public ActionScope Scope
		{
			get
			{
				return scope;
			}
			set
			{
				scope = value;
				ႨႳႤ(ႥႠႭ.Ⴓ.ႰႤ(1821394877));
			}
		}

		[XmlAttribute]
		[DefaultValue(0)]
		public int SpecialActionCode
		{
			get
			{
				return specialActionCode;
			}
			set
			{
				specialActionCode = value;
			}
		}

		[DefaultValue("")]
		[XmlAttribute]
		public string SerialNumberUsedForDownload
		{
			get
			{
				return serialNumberUsedForDownload;
			}
			set
			{
				serialNumberUsedForDownload = value.ToLower();
			}
		}

		[XmlAttribute]
		[DefaultValue(false)]
		public bool IsMy
		{
			get
			{
				return isMy;
			}
			set
			{
				isMy = value;
			}
		}

		[XmlIgnore]
		public string Location
		{
			get
			{
				int num = 0;
				string result;
				while (true)
				{
					switch (num)
					{
					default:
						num = ((location == null) ? 1 : 3);
						continue;
					case 3:
						num = ((location == string.Empty) ? 1 : 2);
						continue;
					case 2:
						result = location;
						break;
					case 1:
						result = ႰႠ(personality);
						break;
					}
					break;
				}
				return result;
			}
			set
			{
				location = value;
			}
		}

		[DefaultValue(0)]
		[XmlAttribute("CL")]
		public int ChangeLog
		{
			get
			{
				return cl;
			}
			set
			{
				cl = value;
			}
		}

		[XmlArray("Actions")]
		[XmlArrayItem("Pause", typeof(PauseHardwareAction))]
		[XmlArrayItem("Code", typeof(CodeHardwareAction))]
		[XmlArrayItem("Sound", typeof(SoundHardwareAction))]
		public List<HardwareAction> Actions
		{
			get
			{
				return actions;
			}
			set
			{
				actions = value;
			}
		}

		[XmlIgnore]
		public bool IsDeleted => isDeleted;

		public ChatmanAction()
		{
			actions = new List<HardwareAction>();
		}

		public static ChatmanAction ႼႭ()
		{
			ChatmanAction chatmanAction = new ChatmanAction();
			chatmanAction.id = Guid.NewGuid();
			chatmanAction.author = ႥႠႭ.Ⴃ.ႰႣ(1821394877);
			chatmanAction.actions = new List<HardwareAction>();
			return chatmanAction;
		}

		public static ChatmanAction ႰႷ(ChatmanAction Ⴍ)
		{
			return Ⴓ(Ⴍ, Ⴓ: true, Ⴈ: false);
		}

		public static ChatmanAction ႣႳ(ChatmanAction Ⴍ, bool Ⴓ)
		{
			return ChatmanAction.Ⴓ(Ⴍ, Ⴓ, Ⴈ: false);
		}

		public static ChatmanAction Ⴓ(ChatmanAction Ⴍ, bool Ⴓ, bool Ⴈ)
		{
			int num = 2;
			ChatmanAction chatmanAction = default(ChatmanAction);
			while (true)
			{
				switch (num)
				{
				default:
					chatmanAction = (Ⴍ.MemberwiseClone() as ChatmanAction);
					num = (Ⴓ ? 1 : 0);
					break;
				case 1:
					chatmanAction.actions = ႰႭ(Ⴍ);
					num = 0;
					break;
				case 0:
					num = ((!Ⴈ) ? 4 : 3);
					break;
				case 3:
					chatmanAction.ID = Guid.NewGuid();
					num = 4;
					break;
				case 4:
					return chatmanAction;
				}
			}
		}

		public static List<HardwareAction> ႰႭ(ChatmanAction Ⴍ)
		{
			List<HardwareAction> list = new List<HardwareAction>();
			foreach (HardwareAction action in Ⴍ.Actions)
			{
				if (action is CodeHardwareAction)
				{
					list.Add((action as CodeHardwareAction).ႼႭ());
				}
				if (action is SoundHardwareAction)
				{
					list.Add((action as SoundHardwareAction).ႰႳ());
				}
			}
			return list;
		}

		private string ႰႠ(Personality Ⴍ)
		{
			return Ⴍ.DataFiles[0].Ⴐ;
		}

		public void ႼႤ()
		{
			int num = 0;
			double num2 = default(double);
			while (true)
			{
				switch (num)
				{
				default:
					num2 = (double)daysUsed * dailyAverage + 1.0;
					num = ((DateTime.Now.Ticks - lastUseDate.Ticks > 864000000000L) ? 1 : 2);
					break;
				case 1:
					daysUsed++;
					num = 2;
					break;
				case 2:
					dailyAverage = num2 / (double)daysUsed;
					lastUseDate = DateTime.Now;
					totalCounter++;
					return;
				}
			}
		}

		public string ႰႣ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0020, IL_0053, IL_005d
			if (actions == null)
			{
				if (570 >= 570 - 2)
				{
					goto IL_0055;
				}
			}
			Ⴍ = Ⴍ.Substring(1);
			string result = FileUtils.GetUniqueFileName(Location, ႥႠႭ.Ⴃ.ႰႣ(1821394873), Ⴍ);
			if (false)
			{
				goto IL_0055;
			}
			goto IL_005f;
			IL_005f:
			return result;
			IL_0055:
			result = string.Empty;
			goto IL_005f;
		}

		public void ႼႼ()
		{
			cl = 0;
		}

		public ChatmanHardwareAction[] GetLedActions()
		{
			switch (0)
			{
			default:
			{
				List<HardwareAction> source = actions;
				if (CS$<>9__CachedAnonymousMethodDelegate3 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate3 = delegate(HardwareAction action)
					{
						int num = 2;
						int result;
						while (true)
						{
							int num2;
							switch (num)
							{
							default:
								num2 = ((action is CodeHardwareAction) ? 1 : 0);
								goto IL_001d;
							case 1:
								result = (((action as CodeHardwareAction).Code == 14) ? 1 : 0);
								break;
							case 0:
								result = 0;
								break;
							}
							break;
							IL_001d:
							num = num2;
						}
						return (byte)result != 0;
					};
				}
				IEnumerable<HardwareAction> source2 = source.Where(CS$<>9__CachedAnonymousMethodDelegate3);
				if (CS$<>9__CachedAnonymousMethodDelegate4 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate4 = delegate(HardwareAction action)
					{
						ChatmanHardwareAction chatmanHardwareAction = new ChatmanHardwareAction();
						chatmanHardwareAction.Start = action.Start;
						chatmanHardwareAction.Parameter = (action as CodeHardwareAction).Parameter;
						chatmanHardwareAction.Code = 14;
						return chatmanHardwareAction;
					};
				}
				return source2.Select(CS$<>9__CachedAnonymousMethodDelegate4).ToArray();
			}
			}
		}

		public ChatmanHardwareAction[] GetAllActions()
		{
			switch (0)
			{
			default:
			{
				List<HardwareAction> source = actions;
				if (CS$<>9__CachedAnonymousMethodDelegate8 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate8 = ((HardwareAction action) => action is CodeHardwareAction);
				}
				IEnumerable<HardwareAction> source2 = source.Where(CS$<>9__CachedAnonymousMethodDelegate8);
				if (CS$<>9__CachedAnonymousMethodDelegate9 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate9 = delegate(HardwareAction action)
					{
						ChatmanHardwareAction chatmanHardwareAction = new ChatmanHardwareAction();
						chatmanHardwareAction.Start = action.Start;
						chatmanHardwareAction.Parameter = (action as CodeHardwareAction).Parameter;
						chatmanHardwareAction.Code = (action as CodeHardwareAction).Code;
						return chatmanHardwareAction;
					};
				}
				return source2.Select(CS$<>9__CachedAnonymousMethodDelegate9).ToArray();
			}
			}
		}

		internal void ႨႰႰ()
		{
			isDeleted = true;
			ႨႳႤ(ႥႠႭ.Ⴓ.ႰႤ(1821394878));
		}

		public bool Equals(ChatmanAction Ⴍ, ChatmanAction Ⴓ)
		{
			return Ⴍ.id == Ⴓ.id;
		}

		public int GetHashCode(ChatmanAction Ⴍ)
		{
			return Ⴍ.id.GetHashCode();
		}

		public bool Equals(ChatmanAction Ⴍ)
		{
			return Ⴍ.ID == ID;
		}

		public int Compare(ChatmanAction Ⴍ, ChatmanAction Ⴓ)
		{
			return Ⴍ.ID.CompareTo(Ⴓ.ID);
		}

		public void ClearActions()
		{
			actions.Clear();
		}

		public void AddSoundFile(string Ⴍ)
		{
			actions.Add(new SoundHardwareAction
			{
				FileName = Ⴍ,
				Start = 0
			});
		}

		public void AddCodeAction(int Ⴍ, int Ⴓ)
		{
			actions.Add(new CodeHardwareAction
			{
				Code = Ⴍ,
				Start = Ⴓ
			});
		}

		public void AddLEDAction(int Ⴍ, int Ⴓ)
		{
			actions.Add(new CodeHardwareAction
			{
				Code = 14,
				Start = Ⴓ,
				Parameter = Ⴍ
			});
		}

		public override string ToString()
		{
			switch (0)
			{
			default:
				return ႥႠႭ.Ⴓ.ႰႤ(1821394879) + ID + ႥႠႭ.Ⴃ.ႰႣ(1821394874) + (Name ?? ႥႠႭ.Ⴓ.ႰႤ(1821394872)) + ႤႤႭ.Ⴅ.ႰႣ(1821394821) + (Description ?? ႥႠႭ.Ⴈ.ႰႥ(1821394874)) + ႥႠႭ.Ⴍ.ႰႣ(1821394879);
			}
		}

		private static bool <GetLedActions>b__1(HardwareAction action)
		{
			int num = 2;
			int result;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					num2 = ((action is CodeHardwareAction) ? 1 : 0);
					goto IL_001d;
				case 1:
					result = (((action as CodeHardwareAction).Code == 14) ? 1 : 0);
					break;
				case 0:
					result = 0;
					break;
				}
				break;
				IL_001d:
				num = num2;
			}
			return (byte)result != 0;
		}

		private static ChatmanHardwareAction <GetLedActions>b__2(HardwareAction action)
		{
			ChatmanHardwareAction chatmanHardwareAction = new ChatmanHardwareAction();
			chatmanHardwareAction.Start = action.Start;
			chatmanHardwareAction.Parameter = (action as CodeHardwareAction).Parameter;
			chatmanHardwareAction.Code = 14;
			return chatmanHardwareAction;
		}

		private static bool <GetAllActions>b__6(HardwareAction action)
		{
			return action is CodeHardwareAction;
		}

		private static ChatmanHardwareAction <GetAllActions>b__7(HardwareAction action)
		{
			ChatmanHardwareAction chatmanHardwareAction = new ChatmanHardwareAction();
			chatmanHardwareAction.Start = action.Start;
			chatmanHardwareAction.Parameter = (action as CodeHardwareAction).Parameter;
			chatmanHardwareAction.Code = (action as CodeHardwareAction).Code;
			return chatmanHardwareAction;
		}
	}
	[Serializable]
	public class ChatmanBrainPower : INotifyPropertyChanged
	{
		private int chitChatCount;

		private int wordCount;

		[XmlIgnore]
		public LevelLastChangeDirection LevelChangeDirection;

		private DateTime dateChatmanWasLastTaught = DateTime.Now;

		[NonSerialized]
		private PropertyChangedEventHandler propertyChanged;

		private ႭႥႰ.Ⴓ Updated;

		[DefaultValue(0)]
		[XmlAttribute]
		public int ChitChatCount
		{
			get
			{
				return chitChatCount;
			}
			set
			{
				int num = 3;
				int level = default(int);
				while (true)
				{
					switch (num)
					{
					case 0:
						return;
					default:
						num = ((chitChatCount == value) ? 1 : 2);
						break;
					case 1:
						num = 0;
						break;
					case 2:
						level = Level;
						chitChatCount = value;
						num = ((chitChatCount >= 0) ? 4 : 5);
						break;
					case 5:
						chitChatCount = 0;
						num = 4;
						break;
					case 4:
						LevelChangeDirection = ((level >= Level) ? LevelLastChangeDirection.Decreasing : LevelLastChangeDirection.Increasing);
						ႳႰ(level, Level);
						num = 0;
						break;
					}
				}
			}
		}

		[XmlIgnore]
		public int ChitChatCountInCurrentLevel => chitChatCount % 10;

		[XmlAttribute]
		[DefaultValue(0)]
		public int WordCount
		{
			get
			{
				return wordCount;
			}
			set
			{
				int num = 4;
				int level = default(int);
				while (true)
				{
					switch (num)
					{
					case 0:
						return;
					default:
						num = ((wordCount != value) ? 5 : 2);
						break;
					case 2:
						num = 0;
						break;
					case 5:
						level = Level;
						wordCount = value;
						num = ((wordCount < 0) ? 1 : 3);
						break;
					case 1:
						wordCount = 0;
						num = 3;
						break;
					case 3:
						LevelChangeDirection = ((level >= Level) ? LevelLastChangeDirection.Decreasing : LevelLastChangeDirection.Increasing);
						ႳႰ(level, Level);
						num = 0;
						break;
					}
				}
			}
		}

		[XmlIgnore]
		public int WordCountInCurrentLevel => wordCount % 20;

		[XmlAttribute]
		[DefaultValue(0)]
		public int Score
		{
			get
			{
				TimeSpan timeSpan = new TimeSpan(DateTime.Now.Ticks - dateChatmanWasLastTaught.Ticks);
				return Math.Max(0, 1000 * Level + 100 * ChitChatCountInCurrentLevel + 10 * WordCountInCurrentLevel - 15 * timeSpan.Days);
			}
		}

		[XmlIgnore]
		public int Level => (int)Math.Max(Math.Floor((double)chitChatCount / 10.0), Math.Floor((double)wordCount / 20.0));

		[XmlAttribute]
		public DateTime DateChatmanWasLastTaught
		{
			get
			{
				return dateChatmanWasLastTaught;
			}
			set
			{
				dateChatmanWasLastTaught = value;
			}
		}

		public event PropertyChangedEventHandler Ⴈ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				propertyChanged = (PropertyChangedEventHandler)Delegate.Combine(propertyChanged, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				propertyChanged = (PropertyChangedEventHandler)Delegate.Remove(propertyChanged, value);
			}
		}

		public event ႭႥႰ.Ⴓ Ⴀ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				Updated = (ႭႥႰ.Ⴓ)Delegate.Combine(Updated, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				Updated = (ႭႥႰ.Ⴓ)Delegate.Remove(Updated, value);
			}
		}

		public void ႼႨ()
		{
			ႳႰ(Level, Level);
		}

		private void ႳႰ(int Ⴍ, int Ⴓ)
		{
			//Discarded unreachable code: IL_0019, IL_0035
			while (Updated != null)
			{
				if (758 <= 758 - 64)
				{
				}
				Updated(Ⴍ, Ⴓ);
				if (31 <= 31 - 12)
				{
					continue;
				}
				break;
			}
		}
	}
	[Serializable]
	public class ChatmanFriendship
	{
		private const int TOTAL_DAILY_SCORE = 130;

		private int lastLevel = 65;

		private LevelLastChangeDirection levelChangeDirection;

		private int score;

		private DateTime lastScoreDate = DateTime.Now;

		private bool refreshing = false;

		private ႭႥႰ.Ⴓ Updated;

		private bool <Counting>k__BackingField;

		[XmlIgnore]
		public bool Counting
		{
			get
			{
				return <Counting>k__BackingField;
			}
			set
			{
				<Counting>k__BackingField = value;
			}
		}

		[XmlIgnore]
		public int Level
		{
			get
			{
				int num = 9;
				int result = default(int);
				while (true)
				{
					switch (num)
					{
					default:
						num = ((lastLevel <= 10) ? 3 : 0);
						break;
					case 3:
						result = 0;
						num = 6;
						break;
					case 0:
						num = ((lastLevel > 20) ? 1 : 8);
						break;
					case 8:
						result = 1;
						num = 6;
						break;
					case 1:
						num = ((lastLevel > 30) ? 4 : 12);
						break;
					case 12:
						result = 2;
						num = 6;
						break;
					case 4:
						num = ((lastLevel > 40) ? 11 : 13);
						break;
					case 13:
						result = 3;
						num = 6;
						break;
					case 11:
						num = ((lastLevel > 50) ? 10 : 14);
						break;
					case 14:
						result = 4;
						num = 6;
						break;
					case 10:
						num = ((lastLevel > 60) ? 15 : 7);
						break;
					case 7:
						result = 5;
						num = 6;
						break;
					case 15:
						num = ((lastLevel > 70) ? 16 : 5);
						break;
					case 5:
						result = 6;
						num = 6;
						break;
					case 16:
						num = ((lastLevel > 90) ? 17 : 2);
						break;
					case 2:
						result = 7;
						num = 6;
						break;
					case 17:
						result = 8;
						num = 6;
						break;
					case 6:
						return result;
					}
				}
			}
		}

		[XmlIgnore]
		public int AdjustedLevel
		{
			get
			{
				int num = 29;
				int result = default(int);
				while (true)
				{
					switch (num)
					{
					default:
						num = ((levelChangeDirection != 0) ? 23 : 3);
						break;
					case 3:
						num = ((lastLevel > 10) ? 6 : 31);
						break;
					case 31:
						result = 9;
						num = 27;
						break;
					case 6:
						num = ((lastLevel > 20) ? 5 : 17);
						break;
					case 17:
						result = 9;
						num = 27;
						break;
					case 5:
						num = ((lastLevel > 30) ? 19 : 22);
						break;
					case 22:
						result = 6;
						num = 27;
						break;
					case 19:
						num = ((lastLevel > 40) ? 16 : 21);
						break;
					case 21:
						result = 6;
						num = 27;
						break;
					case 16:
						num = ((lastLevel > 70) ? 10 : 2);
						break;
					case 2:
						result = 6;
						num = 27;
						break;
					case 10:
						num = ((lastLevel > 90) ? 14 : 7);
						break;
					case 7:
						result = 7;
						num = 27;
						break;
					case 14:
						result = 8;
						num = 27;
						break;
					case 23:
						num = ((lastLevel > 10) ? 15 : 0);
						break;
					case 0:
						result = 0;
						num = 27;
						break;
					case 15:
						num = ((lastLevel > 20) ? 28 : 8);
						break;
					case 8:
						result = 1;
						num = 27;
						break;
					case 28:
						num = ((lastLevel > 30) ? 11 : 4);
						break;
					case 4:
						result = 2;
						num = 27;
						break;
					case 11:
						num = ((lastLevel > 40) ? 24 : 26);
						break;
					case 26:
						result = 3;
						num = 27;
						break;
					case 24:
						num = ((lastLevel > 50) ? 20 : 13);
						break;
					case 13:
						result = 4;
						num = 27;
						break;
					case 20:
						num = ((lastLevel <= 60) ? 1 : 9);
						break;
					case 1:
						result = 5;
						num = 27;
						break;
					case 9:
						num = ((lastLevel > 70) ? 30 : 18);
						break;
					case 18:
						result = 6;
						num = 27;
						break;
					case 30:
						num = ((lastLevel > 90) ? 12 : 25);
						break;
					case 25:
						result = 7;
						num = 27;
						break;
					case 12:
						result = 8;
						num = 27;
						break;
					case 27:
						return result;
					}
				}
			}
		}

		[XmlAttribute]
		[DefaultValue(65)]
		public int LastLevel
		{
			get
			{
				return lastLevel;
			}
			set
			{
				lastLevel = value;
				ႨႳႥ(lastLevel);
			}
		}

		[XmlAttribute]
		[DefaultValue(0)]
		public LevelLastChangeDirection LevelChangeDirection
		{
			get
			{
				return levelChangeDirection;
			}
			set
			{
				levelChangeDirection = value;
			}
		}

		[DefaultValue(0)]
		[XmlAttribute]
		public int Score
		{
			get
			{
				return score;
			}
			set
			{
				//Discarded unreachable code: IL_0002, IL_0017, IL_0036, IL_0052, IL_0077
				while (score != value)
				{
					if (493 <= 493 - 461)
					{
						break;
					}
					score = value;
					if (Counting)
					{
						if (false)
						{
							continue;
						}
						lastScoreDate = DateTime.Now;
						if (false)
						{
							goto IL_000a;
						}
					}
					ႼႨ();
					goto IL_000a;
					IL_000a:
					if (59 <= 59 - 49)
					{
						continue;
					}
					break;
				}
			}
		}

		[XmlAttribute]
		public DateTime LastScoreDate
		{
			get
			{
				return lastScoreDate;
			}
			set
			{
				lastScoreDate = value;
			}
		}

		public event ႭႥႰ.Ⴓ Ⴀ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				Updated = (ႭႥႰ.Ⴓ)Delegate.Combine(Updated, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				Updated = (ႭႥႰ.Ⴓ)Delegate.Remove(Updated, value);
			}
		}

		private void ႨႳႥ(int Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0010, IL_0015, IL_001a, IL_0030, IL_0052
			int level = Level;
			while (lastLevel != Ⴍ)
			{
				if ((32 + 32 * 32) % 2 == 0)
				{
					levelChangeDirection = ((lastLevel >= Ⴍ) ? LevelLastChangeDirection.Decreasing : LevelLastChangeDirection.Increasing);
					if ((1022 + 1022 * 1022) % 2 == 0)
					{
					}
					break;
				}
			}
			lastLevel = Math.Max(0, Ⴍ);
			ႳႰ(level, Level);
		}

		public void ႼႨ()
		{
			if (!refreshing)
			{
				refreshing = true;
				try
				{
					int num = (int)(0.1f * (float)lastLevel * (float)(DateTime.Now - LastScoreDate).Days);
					int num2 = score;
					int num3 = (int)(10f * (float)num2 / 130f) - num;
					if (num3 != 0)
					{
						ႨႳႥ(lastLevel + (int)Math.Min(100.0, num3));
						if (num > 0)
						{
							Score = 0;
							lastScoreDate = DateTime.Now;
						}
						else
						{
							score = 0;
						}
					}
				}
				finally
				{
					refreshing = false;
				}
			}
		}

		private void ႳႰ(int Ⴍ, int Ⴓ)
		{
			int num = 1;
			while (true)
			{
				switch (num)
				{
				case 0:
					return;
				default:
					num = ((Updated != null) ? 2 : 0);
					break;
				case 2:
					Updated(Ⴍ, Ⴓ);
					num = 0;
					break;
				}
			}
		}
	}
	[Serializable]
	public class CodeHardwareAction : HardwareAction
	{
		private int code;

		private int parameter;

		[XmlAttribute]
		public int Code
		{
			get
			{
				return code;
			}
			set
			{
				code = value;
			}
		}

		[DefaultValue(0)]
		[XmlAttribute]
		public int Parameter
		{
			get
			{
				return parameter;
			}
			set
			{
				parameter = value;
			}
		}

		public CodeHardwareAction ႼႭ()
		{
			return (CodeHardwareAction)MemberwiseClone();
		}
	}
	[Serializable]
	public class ConstraintFilterDefinition : IEqualityComparer<ConstraintFilterDefinition>
	{
		private int id;

		private string parameters;

		[XmlAttribute]
		public int ID
		{
			get
			{
				return id;
			}
			set
			{
				id = value;
			}
		}

		[XmlAttribute]
		public string Parameters
		{
			get
			{
				return parameters;
			}
			set
			{
				parameters = value;
			}
		}

		public bool Equals(ConstraintFilterDefinition Ⴍ, ConstraintFilterDefinition Ⴓ)
		{
			return Ⴍ.id == Ⴓ.id;
		}

		public int GetHashCode(ConstraintFilterDefinition Ⴍ)
		{
			return Ⴍ.id.GetHashCode();
		}
	}
	[Serializable]
	public class ContentFileEntry
	{
		private string fileName;

		private DateTime updateDate;

		[XmlAttribute]
		public string FileName
		{
			get
			{
				return fileName;
			}
			set
			{
				fileName = value;
			}
		}

		[XmlAttribute]
		public DateTime UpdateDate
		{
			get
			{
				return updateDate;
			}
			set
			{
				updateDate = value;
			}
		}
	}
	[Serializable]
	public class Counter : INotifyPropertyChanged
	{
		protected int totalCounter;

		protected double dailyAverage;

		protected int daysUsed;

		protected DateTime lastUseDate = DateTime.MinValue;

		[NonSerialized]
		private PropertyChangedEventHandler propertyChanged;

		[DefaultValue(0)]
		[XmlAttribute]
		public int TotalCounter
		{
			get
			{
				return totalCounter;
			}
			set
			{
				totalCounter = value;
				ႨႳႤ(ႤႤႭ.Ⴅ.ႰႣ(1821394873));
			}
		}

		[DefaultValue(0)]
		[XmlAttribute]
		public double DailyAverage
		{
			get
			{
				return dailyAverage;
			}
			set
			{
				dailyAverage = value;
				ႨႳႤ(ႥႠႭ.Ⴓ.ႰႤ(1821394876));
			}
		}

		[DefaultValue(0)]
		[XmlAttribute]
		public int DaysUsed
		{
			get
			{
				return daysUsed;
			}
			set
			{
				daysUsed = value;
				ႨႳႤ(ႥႠႭ.Ⴃ.ႰႣ(1821394876));
			}
		}

		[DefaultValue(typeof(DateTime), "0001-01-01T00:00:00")]
		[XmlAttribute]
		public DateTime LastUseDate
		{
			get
			{
				return lastUseDate;
			}
			set
			{
				lastUseDate = value;
				ႨႳႤ(ႥႠႭ.Ⴍ.ႰႣ(1821394850));
			}
		}

		public event PropertyChangedEventHandler Ⴈ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				propertyChanged = (PropertyChangedEventHandler)Delegate.Combine(propertyChanged, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				propertyChanged = (PropertyChangedEventHandler)Delegate.Remove(propertyChanged, value);
			}
		}

		public Counter()
		{
		}

		public Counter(Counter Ⴍ)
		{
			totalCounter = Ⴍ.totalCounter;
			dailyAverage = Ⴍ.dailyAverage;
			daysUsed = Ⴍ.daysUsed;
			lastUseDate = Ⴍ.lastUseDate;
		}

		public Counter(int Ⴍ, double Ⴓ, int Ⴈ, DateTime Ⴃ)
		{
			totalCounter = Ⴍ;
			dailyAverage = Ⴓ;
			daysUsed = Ⴈ;
			lastUseDate = Ⴃ;
		}

		protected void ႨႳႤ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0022, IL_0040
			bool flag = propertyChanged == null;
			while (!flag)
			{
				if ((564 + 564 * 564) % 2 == 0)
				{
					propertyChanged(this, new PropertyChangedEventArgs(Ⴍ));
					if ((81 + 81 * 81) % 2 == 0)
					{
						break;
					}
				}
			}
		}
	}
	public enum DataFileLocation
	{
		PersonalityDataFile,
		MasterDataFile,
		UserDataFile
	}
	[Serializable]
	public enum Gender
	{
		Male,
		Female
	}
	[Serializable]
	public class HardwareAction
	{
		private int start;

		[XmlAttribute]
		public int Start
		{
			get
			{
				return start;
			}
			set
			{
				start = value;
			}
		}

		public static HardwareAction ႨႳႤ(HardwareAction Ⴍ)
		{
			return (HardwareAction)Ⴍ.MemberwiseClone();
		}
	}
	[Serializable]
	public enum LevelLastChangeDirection
	{
		Increasing,
		Decreasing
	}
	[Serializable]
	public class Mood : IChatmanMood, IEqualityComparer<Mood>
	{
		private Guid id;

		private string name;

		private string description;

		private int webID;

		private int ordinal;

		private string author = ႤႤႭ.Ⴅ.ႰႣ(1821394822);

		private DateTime updateDate;

		private string engineVersion = ႥႠႭ.Ⴍ.ႰႣ(1821394874);

		private int priority;

		private string imageFileName;

		private bool isVisible = true;

		private bool noIntensity = false;

		private bool notSelectable = false;

		private bool isReadOnly = false;

		private int group;

		[XmlAttribute]
		public Guid ID
		{
			get
			{
				return id;
			}
			set
			{
				id = value;
			}
		}

		[XmlAttribute]
		[DefaultValue("")]
		public string Name
		{
			get
			{
				return name;
			}
			set
			{
				name = value;
			}
		}

		[DefaultValue("")]
		[XmlAttribute]
		public string Description
		{
			get
			{
				return description;
			}
			set
			{
				description = value;
			}
		}

		[DefaultValue(0)]
		[XmlAttribute]
		public int WebID
		{
			get
			{
				return webID;
			}
			set
			{
				webID = value;
			}
		}

		[DefaultValue(0)]
		[XmlAttribute]
		public int Ordinal
		{
			get
			{
				return ordinal;
			}
			set
			{
				ordinal = value;
			}
		}

		[DefaultValue("Rondyo")]
		[XmlAttribute]
		public string Author
		{
			get
			{
				return author;
			}
			set
			{
				author = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(typeof(DateTime), "0001-01-01T00:00:00")]
		public DateTime UpdateDate
		{
			get
			{
				return updateDate;
			}
			set
			{
				updateDate = value;
			}
		}

		[XmlAttribute]
		[DefaultValue("1.0")]
		public string EngineVersion
		{
			get
			{
				return engineVersion;
			}
			set
			{
				engineVersion = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(0)]
		public int Priority
		{
			get
			{
				return priority;
			}
			set
			{
				priority = value;
			}
		}

		[DefaultValue("")]
		[XmlAttribute]
		public string ImageFileName
		{
			get
			{
				return imageFileName;
			}
			set
			{
				imageFileName = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(true)]
		public bool IsVisible
		{
			get
			{
				return isVisible;
			}
			set
			{
				isVisible = value;
			}
		}

		[DefaultValue(false)]
		[XmlAttribute]
		public bool NoIntensity
		{
			get
			{
				return noIntensity;
			}
			set
			{
				noIntensity = value;
			}
		}

		[DefaultValue(false)]
		[XmlAttribute]
		public bool NotSelectable
		{
			get
			{
				return notSelectable;
			}
			set
			{
				notSelectable = value;
			}
		}

		[DefaultValue(false)]
		[XmlAttribute]
		public bool IsReadOnly
		{
			get
			{
				return isReadOnly;
			}
			set
			{
				isReadOnly = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(0)]
		public int Group
		{
			get
			{
				return group;
			}
			set
			{
				group = value;
			}
		}

		public static Mood ႼႭ()
		{
			Mood mood = new Mood();
			mood.ID = Guid.NewGuid();
			mood.updateDate = DateTime.Now;
			return mood;
		}

		public static Mood ႰႷ(Mood Ⴀ)
		{
			return (Mood)Ⴀ.MemberwiseClone();
		}

		public bool Equals(Mood Ⴍ, Mood Ⴓ)
		{
			return Ⴍ.id == Ⴓ.id;
		}

		public int GetHashCode(Mood Ⴍ)
		{
			return Ⴍ.id.GetHashCode();
		}
	}
	[Serializable]
	public class MoodCorrelationPair
	{
		private Guid mood;

		private double correlation;

		[XmlAttribute]
		public Guid Mood
		{
			get
			{
				return mood;
			}
			set
			{
				mood = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(0)]
		public double Correlation
		{
			get
			{
				return correlation;
			}
			set
			{
				correlation = value;
			}
		}

		public MoodCorrelationPair(Guid Ⴍ, double Ⴓ)
		{
			mood = Ⴍ;
			correlation = Ⴓ;
		}
	}
	[Serializable]
	public class MoodCounter : Counter, IEqualityComparer<MoodCounter>, IEquatable<MoodCounter>, INotifyPropertyChanged
	{
		private Guid id;

		private string name;

		private string description;

		private bool noIntensity;

		[XmlAttribute]
		public Guid ID
		{
			get
			{
				return id;
			}
			set
			{
				id = value;
				ႨႳႤ(ႤႤႭ.Ⴅ.ႰႣ(1821394874));
			}
		}

		[DefaultValue("")]
		[XmlAttribute]
		public string Name
		{
			get
			{
				return name;
			}
			set
			{
				name = value;
				ႨႳႤ(ႥႠႭ.Ⴓ.ႰႤ(1821394873));
			}
		}

		[DefaultValue("")]
		[XmlAttribute]
		public string Description
		{
			get
			{
				return description;
			}
			set
			{
				description = value;
				ႨႳႤ(ႥႠႭ.Ⴃ.ႰႣ(1821394820));
			}
		}

		[XmlAttribute]
		public bool NoIntensity
		{
			get
			{
				return noIntensity;
			}
			set
			{
				noIntensity = value;
				ႨႳႤ(ႥႠႭ.Ⴍ.ႰႣ(1821394875));
			}
		}

		public MoodCounter()
		{
		}

		public MoodCounter(MoodCounter Ⴍ)
			: base(Ⴍ)
		{
			id = Ⴍ.ID;
			name = Ⴍ.Name;
			description = Ⴍ.Description;
		}

		public MoodCounter(Guid Ⴍ, int Ⴓ)
		{
			id = Ⴍ;
			totalCounter = Ⴓ;
		}

		public MoodCounter(Mood Ⴍ)
		{
			id = Ⴍ.ID;
			name = Ⴍ.Name;
			description = Ⴍ.Description;
			noIntensity = Ⴍ.NoIntensity;
		}

		public MoodCounter(Guid Ⴍ, string Ⴓ, string Ⴈ, int Ⴃ, double Ⴗ, int Ⴅ, DateTime Ⴐ)
			: base(Ⴃ, Ⴗ, Ⴅ, Ⴐ)
		{
			id = Ⴍ;
			name = Ⴓ;
			description = Ⴈ;
		}

		public bool Equals(MoodCounter Ⴍ, MoodCounter Ⴓ)
		{
			return Ⴍ.id == Ⴓ.id;
		}

		public int GetHashCode(MoodCounter Ⴍ)
		{
			return Ⴍ.id.GetHashCode();
		}

		public bool Equals(MoodCounter Ⴍ)
		{
			return Ⴍ.ID == ID;
		}

		public static int ႰႥ(MoodLevel Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0008, IL_000f, IL_003d, IL_0041, IL_0048, IL_004e, IL_0062
			int result;
			switch (Ⴍ)
			{
			case MoodLevel.ABit:
				result = 1;
				break;
			case MoodLevel.Very:
				result = 40;
				break;
			default:
				if (885 <= 885 - 288)
				{
					goto case MoodLevel.Very;
				}
				result = 0;
				if (454 > 454 - 282)
				{
					break;
				}
				goto case MoodLevel.ABit;
			case MoodLevel.Pretty:
				result = 20;
				break;
			case MoodLevel.ALittle:
				result = 5;
				break;
			}
			return result;
		}

		public static MoodLevel ႰႨ(int Ⴍ)
		{
			int num = 7;
			MoodLevel result = default(MoodLevel);
			while (true)
			{
				switch (num)
				{
				default:
					num = ((Ⴍ != 0) ? 5 : 9);
					break;
				case 9:
					result = MoodLevel.Unset;
					num = 3;
					break;
				case 5:
					num = ((Ⴍ >= 5) ? 4 : 6);
					break;
				case 6:
					result = MoodLevel.ABit;
					num = 3;
					break;
				case 4:
					num = ((Ⴍ >= 20) ? 1 : 8);
					break;
				case 8:
					result = MoodLevel.ALittle;
					num = 3;
					break;
				case 1:
					num = ((Ⴍ >= 40) ? 2 : 0);
					break;
				case 0:
					result = MoodLevel.Pretty;
					num = 3;
					break;
				case 2:
					result = MoodLevel.Very;
					num = 3;
					break;
				case 3:
					return result;
				}
			}
		}

		public static string ႰႠ(MoodLevel Ⴍ)
		{
			int num = 5;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 3:
					num = 4;
					continue;
				case 0:
					result = ႭႥႰ.Ⴐ.ႼႷ();
					num = 1;
					continue;
				case 2:
					result = ႭႥႰ.Ⴐ.ႼႥ();
					num = 1;
					continue;
				case 7:
					result = ႭႥႰ.Ⴐ.ႼႤ();
					num = 1;
					continue;
				case 6:
					result = ႭႥႰ.Ⴐ.ႼႼ();
					num = 1;
					continue;
				case 4:
					result = string.Empty;
					num = 1;
					continue;
				case 1:
					return result;
				}
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 3;
					break;
				case MoodLevel.ABit:
					num2 = 0;
					break;
				case MoodLevel.ALittle:
					num2 = 2;
					break;
				case MoodLevel.Pretty:
					num2 = 7;
					break;
				case MoodLevel.Very:
					num2 = 6;
					break;
				}
				num = num2;
			}
		}

		public static int ႰႤ(int Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0027, IL_003c, IL_0055, IL_005b, IL_0061, IL_0067, IL_0081, IL_008b, IL_00a8
			bool flag = Ⴍ != 0;
			int result = default(int);
			while (true)
			{
				if (!flag)
				{
					if (237 >= 237 - 188)
					{
						result = 0;
					}
					break;
				}
				if (Ⴍ > 2)
				{
					flag = (Ⴍ > 5);
					if (!flag)
					{
						if (false)
						{
							continue;
						}
						result = 5;
						break;
					}
					flag = (Ⴍ > 8);
					while (true)
					{
						if (flag)
						{
							result = 40;
							if (944 >= 944 - 401)
							{
								break;
							}
						}
						else if (910 <= 910 - 472)
						{
							continue;
						}
						result = 20;
						break;
					}
					break;
				}
				if (704 >= 704 - 471)
				{
					result = 1;
				}
				break;
			}
			return result;
		}

		public static int ႰႰ(int Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_001d, IL_0032, IL_004e, IL_0054, IL_005a, IL_0077, IL_007d, IL_009b
			int result;
			if (Ⴍ == 0)
			{
				if ((22 + 22 * 22) % 2 == 0)
				{
					goto IL_004a;
				}
			}
			else if (Ⴍ == 1)
			{
				if (784 >= 784 - 206)
				{
					result = 1;
					goto IL_0004;
				}
				goto IL_0050;
			}
			if (Ⴍ == 10)
			{
				if (43 > 43 - 9)
				{
				}
				goto IL_0050;
			}
			if (Ⴍ != 20)
			{
				result = 10;
				if (295 > 295 - 164)
				{
					goto IL_0004;
				}
			}
			else if (602 > 602 - 225)
			{
				result = 8;
				goto IL_0004;
			}
			goto IL_004a;
			IL_0004:
			return result;
			IL_004a:
			result = 0;
			goto IL_0004;
			IL_0050:
			result = 5;
			goto IL_0004;
		}
	}
	[Serializable]
	public enum MoodLevel
	{
		Unset,
		ABit,
		ALittle,
		Pretty,
		Very
	}
	[Serializable]
	[XmlRoot("MoodList")]
	public class MoodListContainer
	{
		private List<Mood> moods = new List<Mood>();

		[NonSerialized]
		private bool moodsSet = false;

		[XmlArray("Moods")]
		[XmlArrayItem("Mood", typeof(Mood))]
		public List<Mood> Moods
		{
			get
			{
				return moods;
			}
			set
			{
				//Discarded unreachable code: IL_0002, IL_0024
				if (moodsSet)
				{
					if (786 <= 786 - 111)
					{
					}
					throw new InvalidOperationException();
				}
				moods = value;
				moodsSet = true;
			}
		}

		public MoodListContainer()
		{
		}

		public MoodListContainer(List<Mood> Ⴀ)
		{
			moods = Ⴀ;
		}
	}
	[Serializable]
	public class MoodMatrix
	{
		private Gender gender;

		private int minAge;

		private int maxAge = 120;

		private List<MoodMatrixEntry> moodMatrixEntries = new List<MoodMatrixEntry>();

		[NonSerialized]
		private bool moodMatrixEntriesSet;

		[XmlAttribute]
		public Gender Gender
		{
			get
			{
				return gender;
			}
			set
			{
				gender = value;
			}
		}

		[XmlAttribute]
		public int MinAge
		{
			get
			{
				return minAge;
			}
			set
			{
				minAge = value;
			}
		}

		[XmlAttribute]
		public int MaxAge
		{
			get
			{
				return maxAge;
			}
			set
			{
				maxAge = value;
			}
		}

		[XmlArrayItem("MoodMatrixEntry", typeof(MoodMatrixEntry))]
		[XmlArray("MoodMatrixEntries")]
		public List<MoodMatrixEntry> MoodMatrixEntries
		{
			get
			{
				return moodMatrixEntries;
			}
			set
			{
				int num = 2;
				while (true)
				{
					int num2;
					switch (num)
					{
					default:
						num2 = ((!moodMatrixEntriesSet) ? 1 : 0);
						break;
					case 0:
						throw new InvalidOperationException();
					case 1:
						moodMatrixEntries = value;
						moodMatrixEntriesSet = true;
						return;
					}
					num = num2;
				}
			}
		}

		public static MoodMatrix ႰႳ()
		{
			MoodMatrix moodMatrix = new MoodMatrix();
			moodMatrix.moodMatrixEntries = new List<MoodMatrixEntry>();
			return moodMatrix;
		}

		public static MoodMatrix ႰႳ(MoodMatrix Ⴍ)
		{
			MoodMatrix moodMatrix = Ⴍ.MemberwiseClone() as MoodMatrix;
			moodMatrix.moodMatrixEntriesSet = false;
			return moodMatrix;
		}
	}
	[Serializable]
	public class MoodMatrixEntry
	{
		private Guid fromMood;

		private Guid toMood;

		private double correlation;

		[XmlAttribute]
		public Guid FromMood
		{
			get
			{
				return fromMood;
			}
			set
			{
				fromMood = value;
			}
		}

		[XmlAttribute]
		public Guid ToMood
		{
			get
			{
				return toMood;
			}
			set
			{
				toMood = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(0)]
		public double Correlation
		{
			get
			{
				return correlation;
			}
			set
			{
				correlation = value;
			}
		}

		public MoodMatrixEntry()
		{
		}

		public MoodMatrixEntry(MoodMatrixEntry Ⴍ)
		{
			fromMood = Ⴍ.fromMood;
			toMood = Ⴍ.toMood;
			correlation = Ⴍ.correlation;
		}
	}
	[Serializable]
	public class MoodToMoodCorrelationPair
	{
		private Guid mood;

		private MoodCorrelationPair moodCorrelationPair;

		public Guid Ⴐ
		{
			get
			{
				return mood;
			}
			set
			{
				mood = value;
			}
		}

		public MoodCorrelationPair Ⴐ
		{
			get
			{
				return moodCorrelationPair;
			}
			set
			{
				moodCorrelationPair = value;
			}
		}

		public MoodToMoodCorrelationPair(Guid Ⴍ, MoodCorrelationPair Ⴓ)
		{
			mood = Ⴍ;
			moodCorrelationPair = Ⴓ;
		}
	}
	[Serializable]
	public class MoodToMoodCorrelationPairs
	{
		private Guid mood;

		private Dictionary<Guid, MoodCorrelationPair> moodCorrelationPairs;

		public Guid Ⴐ
		{
			get
			{
				return mood;
			}
			set
			{
				mood = value;
			}
		}

		public Dictionary<Guid, MoodCorrelationPair> Ⴐ
		{
			get
			{
				return moodCorrelationPairs;
			}
			set
			{
				moodCorrelationPairs = value;
			}
		}

		public MoodToMoodCorrelationPairs(Guid Ⴍ, Dictionary<Guid, MoodCorrelationPair> Ⴓ)
		{
			mood = Ⴍ;
			moodCorrelationPairs = Ⴓ;
		}
	}
	[Serializable]
	public class PauseHardwareAction : HardwareAction
	{
		private int duration;

		[XmlAttribute]
		public int Duration
		{
			get
			{
				return duration;
			}
			set
			{
				duration = value;
			}
		}

		public PauseHardwareAction ႰႣ()
		{
			return (PauseHardwareAction)MemberwiseClone();
		}
	}
	[Serializable]
	[XmlRoot("Personality")]
	public class Personality : IChatmanPersonality, IChatmanPersonality2, IEqualityComparer<Personality>, IEquatable<Personality>, IComparer<Personality>, INotifyPropertyChanged, IDisposable
	{
		private sealed class <>c__DisplayClass11e
		{
			public ChatmanAction action;

			public bool <GetWords>b__115(<>f__AnonymousTypeb<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, ScenarioAction> <>h__TransparentIdentifier110)
			{
				//Discarded unreachable code: IL_002e, IL_0033, IL_0055
				int result;
				if ((object)<>h__TransparentIdentifier110.<>h__TransparentIdentifier10f.get_text().GetType() == typeof(ScenarioText))
				{
					if (651 >= 651 - 348)
					{
					}
					result = ((<>h__TransparentIdentifier110.get_scenarioAction().ID == action.ID) ? 1 : 0);
				}
				else
				{
					result = 0;
				}
				return (byte)result != 0;
			}
		}

		private sealed class <>c__DisplayClass164
		{
			public string actionNameLower;

			public ChatmanAction actionToExclude;

			public bool <CheckIfActionNameAlreadyExists>b__15c(KeyValuePair<Guid, ChatmanAction> action)
			{
				int num = 0;
				int result;
				while (true)
				{
					int num2;
					switch (num)
					{
					default:
						num2 = ((!(action.Value.Name.ToLower() == actionNameLower)) ? 1 : 2);
						goto IL_0033;
					case 2:
						result = ((action.Value.ID != actionToExclude.ID) ? 1 : 0);
						break;
					case 1:
						result = 0;
						break;
					}
					break;
					IL_0033:
					num = num2;
				}
				return (byte)result != 0;
			}

			public bool <CheckIfActionNameAlreadyExists>b__15e(KeyValuePair<Guid, ChatmanAction> action)
			{
				return action.Value.Name.ToLower() == actionNameLower;
			}
		}

		private sealed class <>c__DisplayClass17b
		{
			public PersonalityData selectedPersonalityData;

			public IEnumerable<ChatmanAction> <AddScenario>b__16e(ScenarioAction scenarioAction)
			{
				return selectedPersonalityData.Actions;
			}
		}

		private sealed class <>c__DisplayClass188
		{
			public Scenario newScenario;

			public PersonalityData selectedPersonalityData;

			public <>f__AnonymousType10<<>f__AnonymousTypef<ScenarioTextBase, string>, PhraseWordContainer> <AddScenarioWordsAndIcons>b__182(<>f__AnonymousTypef<ScenarioTextBase, string> <>h__TransparentIdentifier17d)
			{
				return new <>f__AnonymousType10<<>f__AnonymousTypef<ScenarioTextBase, string>, PhraseWordContainer>(<>h__TransparentIdentifier17d, new PhraseWordContainer(<>h__TransparentIdentifier17d.get_phraseText().Split(' '), 0, selectedPersonalityData.phraseCounter++));
			}

			public WordScenario <AddScenarioWordsAndIcons>b__184(<>f__AnonymousType10<<>f__AnonymousTypef<ScenarioTextBase, string>, PhraseWordContainer> <>h__TransparentIdentifier17e, string word)
			{
				int iD = <>h__TransparentIdentifier17e.<>h__TransparentIdentifier17d.get_text().ID;
				Scenario ⴓ = newScenario;
				ScenarioTextBase text = <>h__TransparentIdentifier17e.<>h__TransparentIdentifier17d.get_text();
				int ⴃ = <>h__TransparentIdentifier17e.get_phrase().ႰႠ();
				PhraseWordContainer phrase = <>h__TransparentIdentifier17e.get_phrase();
				int ⴗ;
				phrase.ႰႥ((ⴗ = phrase.ႰႨ()) + 1);
				return new WordScenario(word, new ScenarioRelationPair(iD, ⴓ, text, ⴃ, ⴗ, <>h__TransparentIdentifier17e.get_phrase().ႰႥ().Length - 1));
			}
		}

		private sealed class <>c__DisplayClass19
		{
			public DataFileLocation dataFileLocation;

			public bool <AssureDataFile>b__18(PersonalityDataFile file)
			{
				return file.FileRelevance == dataFileLocation;
			}
		}

		private sealed class <>c__DisplayClass191
		{
			public Scenario scenarioToProcess;

			public bool <DeleteScenario>b__18f(PersonalityDataFile dataFile)
			{
				return dataFile.Data.Scenarios.Contains(scenarioToProcess);
			}

			public bool <DeleteScenario>b__190(WordScenario wordScenario)
			{
				return wordScenario.Ⴐ.Ⴐ == scenarioToProcess;
			}
		}

		private sealed class <>c__DisplayClass1a2
		{
			public string question;

			public string expression;

			public bool <AddQuestion>b__198(Scenario scenario)
			{
				return string.Compare(scenario.Texts[0].Data, question, StringComparison.InvariantCultureIgnoreCase) == 0;
			}

			public string <AddQuestion>b__19c(<>f__AnonymousType11<ScenarioTextBase, string> <>h__TransparentIdentifier193)
			{
				return <>h__TransparentIdentifier193.get_q().Substring(0, <>h__TransparentIdentifier193.get_q().Length - 1) + expression;
			}
		}

		private sealed class <>c__DisplayClass1ac
		{
			public Guid actionId;

			public bool <GetNotSpecialActionById>b__1a7(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier1a4)
			{
				//Discarded unreachable code: IL_0002, IL_001b, IL_0047, IL_004c, IL_0064
				Guid iD = <>h__TransparentIdentifier1a4.get_action().ID;
				int result;
				while (true)
				{
					if (iD.Equals(actionId))
					{
						if ((951 + 951 * 951) % 2 == 0 && <>h__TransparentIdentifier1a4.get_action().SpecialActionCode == 0)
						{
							if (59 >= 59 - 23)
							{
								result = ((<>h__TransparentIdentifier1a4.get_action().Scope != ActionScope.Proactive) ? 1 : 0);
								break;
							}
							continue;
						}
					}
					result = 0;
					break;
				}
				return (byte)result != 0;
			}
		}

		private sealed class <>c__DisplayClass50
		{
			public ActionScope scopeToExclude;

			public bool <BuildActionListByMood>b__49(<>f__AnonymousType2<PersonalityData, ChatmanAction> <>h__TransparentIdentifier46)
			{
				//Discarded unreachable code: IL_0002, IL_001b, IL_0020, IL_003d
				int result;
				while (true)
				{
					if (!<>h__TransparentIdentifier46.get_foundAction().IsExcluded)
					{
						if (60 <= 60 - 50)
						{
							continue;
						}
						result = ((<>h__TransparentIdentifier46.get_foundAction().Scope != scopeToExclude) ? 1 : 0);
						break;
					}
					result = 0;
					break;
				}
				return (byte)result != 0;
			}
		}

		private sealed class <>c__DisplayClassc2
		{
			public string personalityFolderName;

			public string <DeleteUnusedAudioFiles>b__b9(<>f__AnonymousType7<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, HardwareAction> <>h__TransparentIdentifierb0)
			{
				return Path.Combine(personalityFolderName, (<>h__TransparentIdentifierb0.get_hardwareAction() as SoundHardwareAction).FileName).ToLower();
			}
		}

		private sealed class <>c__DisplayClassc5
		{
			public List<string> possibleSNs;

			public bool <CheckIfAnotherSerialNumberWasUsed>b__c4(ChatmanAction action)
			{
				//Discarded unreachable code: IL_0002, IL_0035, IL_003a, IL_0055
				int result;
				while (true)
				{
					if (action.SerialNumberUsedForDownload != null)
					{
						if (188 >= 188 - 28)
						{
						}
						if (action.SerialNumberUsedForDownload != string.Empty)
						{
							if (107 <= 107 - 53)
							{
								continue;
							}
							result = ((!possibleSNs.Contains(action.SerialNumberUsedForDownload)) ? 1 : 0);
							break;
						}
					}
					result = 0;
					break;
				}
				return (byte)result != 0;
			}
		}

		private sealed class <>c__DisplayClasscb
		{
			public ChatmanAction newAction;

			public bool <AddActionToListsAndSave>b__c7(ChatmanAction action)
			{
				return action.Intensity >= newAction.Intensity;
			}
		}

		private sealed class <>c__DisplayClassd0
		{
			public ChatmanAction action;

			public bool <DeleteAction>b__ce(PersonalityDataFile dataFile)
			{
				return dataFile.Data.Actions.Contains(action);
			}
		}

		private sealed class <>c__DisplayClassd3
		{
			public <>c__DisplayClassd0 CS$<>8__localsd1;

			public ScenarioAction scenarioAction;

			public bool <DeleteAction>b__cf(Scenario scenario)
			{
				return scenario.Actions.Contains(scenarioAction);
			}
		}

		private sealed class <>c__DisplayClassf5
		{
			public ChatmanAction action;

			public bool <UpdateActionRelatedScenarios>b__e1(<>f__AnonymousType8<PersonalityDataFile, Scenario> <>h__TransparentIdentifierd5)
			{
				return <>h__TransparentIdentifierd5.get_scenario().Actions.Contains(new ScenarioAction
				{
					ID = action.ID
				});
			}
		}

		public class Ⴄ
		{
			private static readonly char[] Ⴐ = new char[6]
			{
				'o',
				'0',
				'i',
				'1',
				'g',
				'6'
			};

			public static List<string> ႰႥ(string Ⴍ)
			{
				Ⴍ = Ⴍ.ToLower();
				List<string> list = new List<string>();
				Ⴗ(list, Ⴍ, 0, Ⴍ.Length);
				return list;
			}

			private static void Ⴗ(List<string> Ⴍ, string Ⴓ, int Ⴈ, int Ⴃ)
			{
				int num = 6;
				int num2 = default(int);
				int num3 = default(int);
				while (true)
				{
					int num4;
					int num5;
					switch (num)
					{
					case 4:
						return;
					default:
						num2 = Ⴈ;
						num = 7;
						break;
					case 5:
						num = (((num3 = ႰႨ(Ⴓ[num2])) == -1) ? 3 : 8);
						break;
					case 8:
						Ⴗ(Ⴍ, Ⴓ, num2 + 1, Ⴃ);
						num = ((num3 % 2 == 0) ? 1 : 2);
						break;
					case 2:
						num4 = num3 - 1;
						goto IL_0072;
					case 1:
						num4 = num3 + 1;
						goto IL_0072;
					case 3:
						num2++;
						num = 7;
						break;
					case 7:
						num = ((num2 < Ⴃ) ? 5 : 0);
						break;
					case 0:
						{
							Ⴍ.Add(Ⴓ);
							num = 4;
							break;
						}
						IL_0072:
						num5 = num4;
						Ⴓ = Ⴓ.Substring(0, num2) + Ⴐ[num5] + Ⴓ.Substring(num2 + 1);
						Ⴗ(Ⴍ, Ⴓ, num2 + 1, Ⴃ);
						num = 4;
						break;
					}
				}
			}

			private static int ႰႨ(char Ⴍ)
			{
				int num = 5;
				int num3 = default(int);
				char[] ⴐ = default(char[]);
				int num2 = default(int);
				int result = default(int);
				while (true)
				{
					switch (num)
					{
					default:
						num3 = 0;
						ⴐ = Ⴐ;
						num2 = 0;
						num = 3;
						break;
					case 6:
					{
						char c = ⴐ[num2];
						num = ((c != Ⴍ) ? 1 : 4);
						break;
					}
					case 4:
						result = num3;
						num = 0;
						break;
					case 1:
						num3++;
						num2++;
						num = 3;
						break;
					case 3:
						num = ((num2 < ⴐ.Length) ? 6 : 2);
						break;
					case 2:
						result = -1;
						num = 0;
						break;
					case 0:
						return result;
					}
				}
			}
		}

		[NonSerialized]
		private string fileName = string.Empty;

		private Guid id;

		private string name = string.Empty;

		private string description = string.Empty;

		private string author = string.Empty;

		private string language = ႥႠႭ.Ⴍ.ႰႣ(1821394865);

		private int[] decorationImages = new int[0];

		private int iconColorSchemeIndex = 1;

		private DateTime creationDate;

		private DateTime updateDate;

		private bool isHidden = false;

		private bool isPrivate = false;

		private bool isReadOnly = false;

		[NonSerialized]
		private float targetUserAge;

		[NonSerialized]
		private Gender targetUserGender;

		[NonSerialized]
		private ႭႥႨ.Ⴀ moodList = null;

		private List<MoodCounter> stateMoodCounterList = new List<MoodCounter>();

		[NonSerialized]
		private Dictionary<Guid, MoodCounter> stateMoodCounters;

		[NonSerialized]
		private List<ActionUsage> actionUsages;

		[NonSerialized]
		private Guid lastActionMoodID = Guid.Empty;

		[NonSerialized]
		private int lastActionIntensity = 0;

		[NonSerialized]
		private ႭႥႰ.Ⴍ checkIsActive;

		private List<PersonalityDataFile> personalityDataFiles;

		[NonSerialized]
		private bool personalityDataFilesSet = false;

		private Personality masterPersonality;

		private Personality userDataPersonality;

		private bool ignoreInternalScenarios;

		[NonSerialized]
		private PersonalityStatus status = PersonalityStatus.Unloaded;

		[NonSerialized]
		private List<PersonalityData> personalityDataParts;

		private ႭႥႰ.Ⴜ ActionAdded;

		private ႭႥႨ.Ⴐ ActionUpdated;

		private ႭႥႨ.Ⴈ ActionDeleted;

		private ႭႥႨ.Ⴓ ScenariosUpdated;

		private ႭႥႨ.Ⴗ MoodWordsUpdated;

		private ႭႥႨ.Ⴅ QuestionsUpdated;

		[NonSerialized]
		private List<Scenario> scenarios;

		[NonSerialized]
		private Ⴅ<WordScenarios> wordList;

		[NonSerialized]
		private Dictionary<Guid, IEnumerable<Scenario>> scenariosByMood;

		[NonSerialized]
		private Dictionary<int, IEnumerable<Scenario>> scenariosByEventType;

		[NonSerialized]
		private Dictionary<Guid, List<ChatmanAction>> actionsByMood;

		[NonSerialized]
		private Dictionary<Guid, IEnumerable<ChatmanAction>> readOnlyActionsByMood;

		[NonSerialized]
		private Dictionary<Guid, List<ChatmanAction>> proactiveActionsByMood;

		[NonSerialized]
		private Dictionary<Guid, IEnumerable<ChatmanAction>> readOnlyProactiveActionsByMood;

		[NonSerialized]
		private ObservableDictionary<Guid, ChatmanAction> actionsByID;

		[NonSerialized]
		private Dictionary<int, ChatmanAction> specialActionsByCode;

		[NonSerialized]
		private List<MoodMatrix> moodMatrixes;

		[NonSerialized]
		private MoodMatrix activeMoodMatrix;

		[NonSerialized]
		private Dictionary<Guid, Dictionary<Guid, MoodCorrelationPair>> moodToMoodCorrelations;

		[NonSerialized]
		private List<ConstraintFilterDefinition> constraintFilters;

		[NonSerialized]
		private List<ActionProducerDefinition> actionProducers;

		private object fileAccessLock = new object();

		[NonSerialized]
		private bool disposed = false;

		[NonSerialized]
		private PropertyChangedEventHandler propertyChanged;

		private static Func<KeyValuePair<Guid, ChatmanAction>, <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate5;

		private static Func<<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>, KeyValuePair<Guid, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate6;

		private static Func<KeyValuePair<Guid, ChatmanAction>, <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegateb;

		private static Func<<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>, bool> CS$<>9__CachedAnonymousMethodDelegatec;

		private static Func<<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>, KeyValuePair<Guid, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegated;

		private static Func<KeyValuePair<Guid, ChatmanAction>, bool> CS$<>9__CachedAnonymousMethodDelegatef;

		private static Func<KeyValuePair<Guid, ChatmanAction>, <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate14;

		private static Func<<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>, bool> CS$<>9__CachedAnonymousMethodDelegate15;

		private static Func<<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>, KeyValuePair<Guid, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate16;

		private static Func<ChatmanAction, Guid> CS$<>9__CachedAnonymousMethodDelegate1f;

		private static Func<ActionUsage, Guid> CS$<>9__CachedAnonymousMethodDelegate20;

		private static Func<ChatmanAction, ActionUsage, ႭႥႰ.Ⴀ> CS$<>9__CachedAnonymousMethodDelegate21;

		private static Func<ChatmanAction, ActionUsage> CS$<>9__CachedAnonymousMethodDelegate24;

		private static Func<PersonalityData, IEnumerable<ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate38;

		private static Func<PersonalityData, ChatmanAction, <>f__AnonymousType1<PersonalityData, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate39;

		private static Func<<>f__AnonymousType1<PersonalityData, ChatmanAction>, bool> CS$<>9__CachedAnonymousMethodDelegate3a;

		private static Func<<>f__AnonymousType1<PersonalityData, ChatmanAction>, ChatmanAction> CS$<>9__CachedAnonymousMethodDelegate3b;

		private static Func<ChatmanAction, int> CS$<>9__CachedAnonymousMethodDelegate3c;

		private static Func<MoodCounter, Guid> CS$<>9__CachedAnonymousMethodDelegate3d;

		private static Func<Mood, MoodCounter> CS$<>9__CachedAnonymousMethodDelegate3e;

		private static Func<PersonalityData, IEnumerable<MoodMatrix>> CS$<>9__CachedAnonymousMethodDelegate3f;

		private static Func<PersonalityData, MoodMatrix, MoodMatrix> CS$<>9__CachedAnonymousMethodDelegate40;

		private static Func<PersonalityData, IEnumerable<ConstraintFilterDefinition>> CS$<>9__CachedAnonymousMethodDelegate41;

		private static Func<PersonalityData, ConstraintFilterDefinition, ConstraintFilterDefinition> CS$<>9__CachedAnonymousMethodDelegate42;

		private static Func<PersonalityData, IEnumerable<ActionProducerDefinition>> CS$<>9__CachedAnonymousMethodDelegate43;

		private static Func<PersonalityData, ActionProducerDefinition, ActionProducerDefinition> CS$<>9__CachedAnonymousMethodDelegate44;

		private static Func<KeyValuePair<Guid, MoodCounter>, Guid> CS$<>9__CachedAnonymousMethodDelegate45;

		private static Func<PersonalityData, IEnumerable<ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate4c;

		private static Func<PersonalityData, ChatmanAction, <>f__AnonymousType2<PersonalityData, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate4d;

		private static Func<<>f__AnonymousType2<PersonalityData, ChatmanAction>, ChatmanAction> CS$<>9__CachedAnonymousMethodDelegate4e;

		private static Func<ChatmanAction, string> CS$<>9__CachedAnonymousMethodDelegate4f;

		private static Func<KeyValuePair<Guid, List<ChatmanAction>>, KeyValuePair<Guid, List<ChatmanAction>>> CS$<>9__CachedAnonymousMethodDelegate55;

		private static Func<KeyValuePair<Guid, List<ChatmanAction>>, Guid> CS$<>9__CachedAnonymousMethodDelegate56;

		private static Func<KeyValuePair<Guid, List<ChatmanAction>>, IEnumerable<ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate57;

		private static Func<KeyValuePair<Guid, List<ChatmanAction>>, KeyValuePair<Guid, List<ChatmanAction>>> CS$<>9__CachedAnonymousMethodDelegate5b;

		private static Func<KeyValuePair<Guid, List<ChatmanAction>>, Guid> CS$<>9__CachedAnonymousMethodDelegate5c;

		private static Func<KeyValuePair<Guid, List<ChatmanAction>>, IEnumerable<ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate5d;

		private static Func<PersonalityData, IEnumerable<ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate70;

		private static Func<PersonalityData, ChatmanAction, <>f__AnonymousType1<PersonalityData, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate71;

		private static Func<<>f__AnonymousType1<PersonalityData, ChatmanAction>, bool> CS$<>9__CachedAnonymousMethodDelegate72;

		private static Func<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Guid> CS$<>9__CachedAnonymousMethodDelegate73;

		private static Func<Mood, Guid> CS$<>9__CachedAnonymousMethodDelegate74;

		private static Func<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood, <>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood>> CS$<>9__CachedAnonymousMethodDelegate75;

		private static Func<<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood>, int> CS$<>9__CachedAnonymousMethodDelegate76;

		private static Func<<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood>, string> CS$<>9__CachedAnonymousMethodDelegate77;

		private static Func<<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood>, ChatmanAction> CS$<>9__CachedAnonymousMethodDelegate78;

		private static Func<ChatmanAction, Guid> CS$<>9__CachedAnonymousMethodDelegate79;

		private static Func<PersonalityData, IEnumerable<ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate7a;

		private static Func<PersonalityData, ChatmanAction, <>f__AnonymousType1<PersonalityData, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate7b;

		private static Func<<>f__AnonymousType1<PersonalityData, ChatmanAction>, bool> CS$<>9__CachedAnonymousMethodDelegate7c;

		private static Func<<>f__AnonymousType1<PersonalityData, ChatmanAction>, ChatmanAction> CS$<>9__CachedAnonymousMethodDelegate7d;

		private static Func<ChatmanAction, Guid> CS$<>9__CachedAnonymousMethodDelegate7e;

		private static Func<PersonalityDataFile, IEnumerable<Scenario>> CS$<>9__CachedAnonymousMethodDelegate86;

		private static Func<PersonalityDataFile, Scenario, <>f__AnonymousType4<PersonalityDataFile, Scenario>> CS$<>9__CachedAnonymousMethodDelegate87;

		private static Func<<>f__AnonymousType4<PersonalityDataFile, Scenario>, bool> CS$<>9__CachedAnonymousMethodDelegate88;

		private static Func<<>f__AnonymousType4<PersonalityDataFile, Scenario>, Scenario> CS$<>9__CachedAnonymousMethodDelegate89;

		private static Func<MoodMatrixEntry, Guid> CS$<>9__CachedAnonymousMethodDelegate9d;

		private static Func<MoodMatrixEntry, Guid> CS$<>9__CachedAnonymousMethodDelegate9e;

		private static Func<Guid, Guid> CS$<>9__CachedAnonymousMethodDelegate9f;

		private static Func<MoodMatrixEntry, Guid> CS$<>9__CachedAnonymousMethodDelegatea0;

		private static Func<Guid, MoodMatrixEntry, MoodToMoodCorrelationPair> CS$<>9__CachedAnonymousMethodDelegatea1;

		private static Func<Guid, Guid> CS$<>9__CachedAnonymousMethodDelegatea2;

		private static Func<MoodMatrixEntry, Guid> CS$<>9__CachedAnonymousMethodDelegatea3;

		private static Func<Guid, MoodMatrixEntry, MoodToMoodCorrelationPair> CS$<>9__CachedAnonymousMethodDelegatea4;

		private static Func<MoodToMoodCorrelationPair, Guid> CS$<>9__CachedAnonymousMethodDelegatea5;

		private static Func<IGrouping<Guid, MoodToMoodCorrelationPair>, MoodToMoodCorrelationPairs> CS$<>9__CachedAnonymousMethodDelegatea6;

		private static Func<MoodToMoodCorrelationPairs, Guid> CS$<>9__CachedAnonymousMethodDelegatea7;

		private static Func<MoodToMoodCorrelationPairs, Dictionary<Guid, MoodCorrelationPair>> CS$<>9__CachedAnonymousMethodDelegatea8;

		private static Func<MoodToMoodCorrelationPair, IEnumerable<MoodCorrelationPair>> CS$<>9__CachedAnonymousMethodDelegatea9;

		private static Func<MoodCorrelationPair, Guid> CS$<>9__CachedAnonymousMethodDelegateaa;

		private static Func<MoodCorrelationPair, MoodCorrelationPair> CS$<>9__CachedAnonymousMethodDelegateab;

		private static Func<KeyValuePair<Guid, MoodCounter>, MoodCounter> CS$<>9__CachedAnonymousMethodDelegatead;

		private static Func<string, <>f__AnonymousType5<string, string>> CS$<>9__CachedAnonymousMethodDelegateba;

		private static Func<<>f__AnonymousType5<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegatebb;

		private static Func<<>f__AnonymousType5<string, string>, string> CS$<>9__CachedAnonymousMethodDelegatebc;

		private static Func<PersonalityDataFile, IEnumerable<ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegatebd;

		private static Func<PersonalityDataFile, ChatmanAction, <>f__AnonymousType6<PersonalityDataFile, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegatebe;

		private static Func<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, IEnumerable<HardwareAction>> CS$<>9__CachedAnonymousMethodDelegatebf;

		private static Func<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, HardwareAction, <>f__AnonymousType7<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, HardwareAction>> CS$<>9__CachedAnonymousMethodDelegatec0;

		private static Func<<>f__AnonymousType7<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, HardwareAction>, bool> CS$<>9__CachedAnonymousMethodDelegatec1;

		private static Func<ChatmanAction, int> CS$<>9__CachedAnonymousMethodDelegateca;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegatee8;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegatee9;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegateea;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegateeb;

		private static Func<PersonalityDataFile, IEnumerable<Scenario>> CS$<>9__CachedAnonymousMethodDelegateec;

		private static Func<PersonalityDataFile, Scenario, <>f__AnonymousType8<PersonalityDataFile, Scenario>> CS$<>9__CachedAnonymousMethodDelegateed;

		private static Func<<>f__AnonymousType8<PersonalityDataFile, Scenario>, Scenario> CS$<>9__CachedAnonymousMethodDelegateef;

		private static Func<ScenarioTextBase, IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegatef0;

		private static Func<ScenarioTextBase, string, <>f__AnonymousType9<ScenarioTextBase, string>> CS$<>9__CachedAnonymousMethodDelegatef1;

		private static Func<<>f__AnonymousType9<ScenarioTextBase, string>, bool> CS$<>9__CachedAnonymousMethodDelegatef2;

		private static Func<<>f__AnonymousType9<ScenarioTextBase, string>, string> CS$<>9__CachedAnonymousMethodDelegatef3;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegatef4;

		private static Func<Scenario, IEnumerable<ScenarioTextBase>> CS$<>9__CachedAnonymousMethodDelegatefe;

		private static Func<Scenario, ScenarioTextBase, <>f__AnonymousTypea<Scenario, ScenarioTextBase>> CS$<>9__CachedAnonymousMethodDelegateff;

		private static Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, bool> CS$<>9__CachedAnonymousMethodDelegate100;

		private static Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string[]> CS$<>9__CachedAnonymousMethodDelegate101;

		private static Func<string[], IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegate102;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegate103;

		private static Func<Scenario, IEnumerable<ScenarioTextBase>> CS$<>9__CachedAnonymousMethodDelegate10a;

		private static Func<Scenario, ScenarioTextBase, <>f__AnonymousTypea<Scenario, ScenarioTextBase>> CS$<>9__CachedAnonymousMethodDelegate10b;

		private static Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, bool> CS$<>9__CachedAnonymousMethodDelegate10c;

		private static Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string[]> CS$<>9__CachedAnonymousMethodDelegate10d;

		private static Func<string[], IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegate10e;

		private static Func<Scenario, IEnumerable<ScenarioTextBase>> CS$<>9__CachedAnonymousMethodDelegate118;

		private static Func<Scenario, ScenarioTextBase, <>f__AnonymousTypea<Scenario, ScenarioTextBase>> CS$<>9__CachedAnonymousMethodDelegate119;

		private static Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, IEnumerable<ScenarioAction>> CS$<>9__CachedAnonymousMethodDelegate11a;

		private static Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, ScenarioAction, <>f__AnonymousTypeb<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, ScenarioAction>> CS$<>9__CachedAnonymousMethodDelegate11b;

		private static Func<<>f__AnonymousTypeb<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, ScenarioAction>, string[]> CS$<>9__CachedAnonymousMethodDelegate11c;

		private static Func<string[], IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegate11d;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegate12a;

		private static Func<string, <>f__AnonymousTypec<string, string>> CS$<>9__CachedAnonymousMethodDelegate12b;

		private static Func<<>f__AnonymousTypec<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate12c;

		private static Func<<>f__AnonymousTypec<string, string>, string> CS$<>9__CachedAnonymousMethodDelegate12d;

		private static Func<string, <>f__AnonymousTypec<string, string>> CS$<>9__CachedAnonymousMethodDelegate12e;

		private static Func<<>f__AnonymousTypec<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate12f;

		private static Func<<>f__AnonymousTypec<string, string>, string> CS$<>9__CachedAnonymousMethodDelegate130;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegate131;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegate13c;

		private static Func<string, <>f__AnonymousTypec<string, string>> CS$<>9__CachedAnonymousMethodDelegate13d;

		private static Func<<>f__AnonymousTypec<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate13e;

		private static Func<<>f__AnonymousTypec<string, string>, string> CS$<>9__CachedAnonymousMethodDelegate13f;

		private static Func<string, <>f__AnonymousTypec<string, string>> CS$<>9__CachedAnonymousMethodDelegate140;

		private static Func<<>f__AnonymousTypec<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate141;

		private static Func<<>f__AnonymousTypec<string, string>, string> CS$<>9__CachedAnonymousMethodDelegate142;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegate143;

		private static Func<Scenario, bool> CS$<>9__CachedAnonymousMethodDelegate14c;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegate14d;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegate14e;

		private static Func<Scenario, bool> CS$<>9__CachedAnonymousMethodDelegate154;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegate155;

		private static Func<Scenario, bool> CS$<>9__CachedAnonymousMethodDelegate15a;

		private static Func<string, string> CS$<>9__CachedAnonymousMethodDelegate15b;

		private static Func<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> CS$<>9__CachedAnonymousMethodDelegate161;

		private static Func<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> CS$<>9__CachedAnonymousMethodDelegate163;

		private static Func<PersonalityDataFile, IEnumerable<ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate172;

		private static Func<PersonalityDataFile, ChatmanAction, <>f__AnonymousTyped<PersonalityDataFile, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate173;

		private static Func<<>f__AnonymousTyped<PersonalityDataFile, ChatmanAction>, Guid> CS$<>9__CachedAnonymousMethodDelegate174;

		private static Func<ScenarioAction, Guid> CS$<>9__CachedAnonymousMethodDelegate175;

		private static Func<<>f__AnonymousTyped<PersonalityDataFile, ChatmanAction>, ScenarioAction, PersonalityDataFile> CS$<>9__CachedAnonymousMethodDelegate176;

		private static Func<ScenarioAction, ChatmanAction, <>f__AnonymousTypee<ScenarioAction, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate178;

		private static Func<<>f__AnonymousTypee<ScenarioAction, ChatmanAction>, bool> CS$<>9__CachedAnonymousMethodDelegate179;

		private static Func<<>f__AnonymousTypee<ScenarioAction, ChatmanAction>, ႭႥႰ.Ⴗ> CS$<>9__CachedAnonymousMethodDelegate17a;

		private static Func<ScenarioTextBase, IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegate185;

		private static Func<ScenarioTextBase, string, <>f__AnonymousTypef<ScenarioTextBase, string>> CS$<>9__CachedAnonymousMethodDelegate186;

		private static Func<<>f__AnonymousType10<<>f__AnonymousTypef<ScenarioTextBase, string>, PhraseWordContainer>, IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegate187;

		private static Func<ScenarioTextBase, IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegate18d;

		private static Func<ScenarioTextBase, string, string> CS$<>9__CachedAnonymousMethodDelegate18e;

		private static Func<Scenario, bool> CS$<>9__CachedAnonymousMethodDelegate19d;

		private static Func<ScenarioTextBase, IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegate19e;

		private static Func<ScenarioTextBase, string, <>f__AnonymousType11<ScenarioTextBase, string>> CS$<>9__CachedAnonymousMethodDelegate19f;

		private static Func<<>f__AnonymousType11<ScenarioTextBase, string>, bool> CS$<>9__CachedAnonymousMethodDelegate1a0;

		private static Func<PersonalityData, IEnumerable<ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate1a9;

		private static Func<PersonalityData, ChatmanAction, <>f__AnonymousType1<PersonalityData, ChatmanAction>> CS$<>9__CachedAnonymousMethodDelegate1aa;

		private static Func<<>f__AnonymousType1<PersonalityData, ChatmanAction>, ChatmanAction> CS$<>9__CachedAnonymousMethodDelegate1ab;

		private static Func<ChatmanAction, IChatmanAction> CS$<>9__CachedAnonymousMethodDelegate1af;

		private static Func<ChatmanAction, IChatmanAction> CS$<>9__CachedAnonymousMethodDelegate1b1;

		private static Func<ChatmanAction, IChatmanAction> CS$<>9__CachedAnonymousMethodDelegate1b3;

		[XmlIgnore]
		public string FileName
		{
			get
			{
				return fileName;
			}
			set
			{
				fileName = value;
			}
		}

		[XmlAttribute]
		public Guid ID
		{
			get
			{
				return id;
			}
			set
			{
				id = value;
				ႨႭႨ(ႥႠႭ.Ⴈ.ႰႥ(1821394858));
			}
		}

		[XmlAttribute]
		[DefaultValue("")]
		public string Name
		{
			get
			{
				return name;
			}
			set
			{
				name = value;
				ႨႭႨ(ႤႤႭ.Ⴅ.ႰႣ(1821394859));
			}
		}

		[XmlAttribute]
		[DefaultValue("")]
		public string Description
		{
			get
			{
				return description;
			}
			set
			{
				description = value;
				ႨႭႨ(ႥႠႭ.Ⴓ.ႰႤ(1821394858));
			}
		}

		[DefaultValue("")]
		[XmlAttribute]
		public string Author
		{
			get
			{
				return author;
			}
			set
			{
				author = value;
				ႨႭႨ(ႥႠႭ.Ⴃ.ႰႣ(1821394859));
			}
		}

		[DefaultValue("en")]
		[XmlAttribute]
		public string Language
		{
			get
			{
				return language;
			}
			set
			{
				language = value;
			}
		}

		[XmlArray("DecorationImagesArray")]
		public int[] DecorationImages
		{
			get
			{
				return decorationImages;
			}
			set
			{
				decorationImages = value;
				ႨႭႨ(ႥႠႭ.Ⴈ.ႰႥ(1821394859));
			}
		}

		[XmlAttribute]
		[DefaultValue(1)]
		public int IconColorSchemeIndex
		{
			get
			{
				return iconColorSchemeIndex;
			}
			set
			{
				iconColorSchemeIndex = value;
				ႨႭႨ(ႤႤႭ.Ⴅ.ႰႣ(1821394868));
			}
		}

		[XmlAttribute]
		public DateTime CreationDate
		{
			get
			{
				return creationDate;
			}
			set
			{
				creationDate = value;
				ႨႭႨ(ႥႠႭ.Ⴓ.ႰႤ(1821394859));
			}
		}

		[XmlAttribute]
		public DateTime UpdateDate
		{
			get
			{
				return updateDate;
			}
			set
			{
				updateDate = value;
				ႨႭႨ(ႥႠႭ.Ⴃ.ႰႣ(1821394868));
			}
		}

		[XmlAttribute]
		[DefaultValue(false)]
		public bool IsHidden
		{
			get
			{
				return isHidden;
			}
			set
			{
				isHidden = value;
				ႨႭႨ(ႥႠႭ.Ⴍ.ႰႣ(1821394858));
			}
		}

		[DefaultValue(false)]
		[XmlAttribute]
		public bool IsPrivate
		{
			get
			{
				return isPrivate;
			}
			set
			{
				isPrivate = value;
				ႨႭႨ(ႥႠႭ.Ⴈ.ႰႥ(1821394868));
			}
		}

		[XmlAttribute]
		[DefaultValue(false)]
		public bool IsReadOnly
		{
			get
			{
				return isReadOnly;
			}
			set
			{
				isReadOnly = value;
				ႨႭႨ(ႤႤႭ.Ⴅ.ႰႣ(1821394869));
			}
		}

		[XmlIgnore]
		public float TargetUserAge
		{
			get
			{
				return targetUserAge;
			}
			set
			{
				int num = 0;
				while (true)
				{
					switch (num)
					{
					default:
						targetUserAge = value;
						num = ((status != PersonalityStatus.Loaded) ? 1 : 2);
						break;
					case 2:
						ႨႰႤ();
						num = 1;
						break;
					case 1:
						ႨႭႨ(ႤႤႭ.Ⴅ.ႰႣ(1821394870));
						return;
					}
				}
			}
		}

		[XmlIgnore]
		public Gender TargetUserGender
		{
			get
			{
				return targetUserGender;
			}
			set
			{
				int num = 2;
				while (true)
				{
					switch (num)
					{
					default:
						targetUserGender = value;
						num = ((status != PersonalityStatus.Loaded) ? 1 : 0);
						break;
					case 0:
						ႨႰႤ();
						num = 1;
						break;
					case 1:
						ႨႭႨ(ႥႠႭ.Ⴓ.ႰႤ(1821394868));
						return;
					}
				}
			}
		}

		[XmlIgnore]
		public ႭႥႨ.Ⴀ MoodList
		{
			get
			{
				return moodList;
			}
			set
			{
				moodList = value;
			}
		}

		[XmlArray("State")]
		[XmlArrayItem("MoodCounter", typeof(MoodCounter))]
		public List<MoodCounter> StateMoodCounterList
		{
			get
			{
				return stateMoodCounterList;
			}
			set
			{
				stateMoodCounterList = value;
			}
		}

		[XmlIgnore]
		public Dictionary<Guid, MoodCounter> StateMoodCounters => stateMoodCounters;

		[XmlArrayItem("ActionUsage", typeof(ActionUsage))]
		[XmlArray("ActionUsages")]
		public List<ActionUsage> ActionUsages
		{
			get
			{
				return actionUsages;
			}
			set
			{
				actionUsages = value;
			}
		}

		[XmlIgnore]
		public Guid LastActionMoodID => lastActionMoodID;

		[XmlIgnore]
		public int LastActionIntensity => lastActionIntensity;

		[XmlIgnore]
		public bool IsActive
		{
			get
			{
				//Discarded unreachable code: IL_0030, IL_0041
				bool result = default(bool);
				do
				{
					if (checkIsActive != null)
					{
						if (641 > 641 - 441)
						{
							result = checkIsActive(this);
						}
						break;
					}
					result = false;
				}
				while (false);
				return result;
			}
		}

		[XmlArrayItem("DataFile", typeof(PersonalityDataFile))]
		[XmlArray("DataFiles")]
		public List<PersonalityDataFile> DataFiles
		{
			get
			{
				return personalityDataFiles;
			}
			set
			{
				//Discarded unreachable code: IL_0002
				if (personalityDataFilesSet)
				{
					if ((391 + 391 * 391) % 2 == 0)
					{
						throw new InvalidOperationException();
					}
				}
				personalityDataFiles = value;
				personalityDataFilesSet = true;
			}
		}

		[XmlIgnore]
		public Personality MasterPersonality
		{
			get
			{
				return masterPersonality;
			}
			set
			{
				masterPersonality = value;
			}
		}

		[XmlIgnore]
		public Personality UserDataPersonality
		{
			get
			{
				return userDataPersonality;
			}
			set
			{
				int num = 6;
				while (true)
				{
					int num2;
					switch (num)
					{
					case 2:
						return;
					default:
						num = ((userDataPersonality == null) ? 3 : 0);
						break;
					case 0:
						num2 = ((userDataPersonality == value) ? 1 : 0);
						goto IL_003f;
					case 3:
						num2 = 1;
						goto IL_003f;
					case 4:
					{
						Personality personality4 = userDataPersonality;
						personality4.ActionAdded = (ႭႥႰ.Ⴜ)Delegate.Remove(personality4.ActionAdded, new ႭႥႰ.Ⴜ(ႥႤ));
						Personality personality5 = userDataPersonality;
						personality5.ActionUpdated = (ႭႥႨ.Ⴐ)Delegate.Remove(personality5.ActionUpdated, new ႭႥႨ.Ⴐ(ႨႳႼ));
						Personality personality6 = userDataPersonality;
						personality6.ActionDeleted = (ႭႥႨ.Ⴈ)Delegate.Remove(personality6.ActionDeleted, new ႭႥႨ.Ⴈ(ႨႷႰ));
						num = 1;
						break;
					}
					case 1:
						userDataPersonality = value;
						num = ((userDataPersonality == null) ? 2 : 5);
						break;
					case 5:
						{
							Personality personality = userDataPersonality;
							personality.ActionAdded = (ႭႥႰ.Ⴜ)Delegate.Combine(personality.ActionAdded, new ႭႥႰ.Ⴜ(ႥႤ));
							Personality personality2 = userDataPersonality;
							personality2.ActionUpdated = (ႭႥႨ.Ⴐ)Delegate.Combine(personality2.ActionUpdated, new ႭႥႨ.Ⴐ(ႨႳႼ));
							Personality personality3 = userDataPersonality;
							personality3.ActionDeleted = (ႭႥႨ.Ⴈ)Delegate.Combine(personality3.ActionDeleted, new ႭႥႨ.Ⴈ(ႨႷႰ));
							num = 2;
							break;
						}
						IL_003f:
						num = ((num2 != 0) ? 1 : 4);
						break;
					}
				}
			}
		}

		[DefaultValue(false)]
		[XmlAttribute]
		public bool IgnoreInternalScenarios
		{
			get
			{
				return ignoreInternalScenarios;
			}
			set
			{
				ignoreInternalScenarios = value;
			}
		}

		[XmlIgnore]
		public PersonalityStatus Status => status;

		[XmlIgnore]
		public List<Scenario> Scenarios => scenarios;

		[XmlIgnore]
		public Ⴅ<WordScenarios> WordList => wordList;

		[XmlIgnore]
		public Dictionary<Guid, IEnumerable<Scenario>> ScenariosByMood => scenariosByMood;

		[XmlIgnore]
		public Dictionary<int, IEnumerable<Scenario>> ScenariosByEventType => scenariosByEventType;

		[XmlIgnore]
		public Dictionary<Guid, IEnumerable<ChatmanAction>> ActionsByMood => readOnlyActionsByMood;

		[XmlIgnore]
		public Dictionary<Guid, IEnumerable<ChatmanAction>> ProactiveActionsByMood => readOnlyProactiveActionsByMood;

		[XmlIgnore]
		public ObservableDictionary<Guid, ChatmanAction> ActionsByID => actionsByID;

		[XmlIgnore]
		public IEnumerable<KeyValuePair<Guid, ChatmanAction>> VisibleActionsByID
		{
			get
			{
				switch (0)
				{
				default:
				{
					ObservableDictionary<Guid, ChatmanAction> source = actionsByID;
					if (CS$<>9__CachedAnonymousMethodDelegate5 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate5 = ((KeyValuePair<Guid, ChatmanAction> actionIDPair) => new <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>(actionIDPair, actionIDPair.Value));
					}
					IEnumerable<<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>> source2 = from <>h__TransparentIdentifier1 in source.Select(CS$<>9__CachedAnonymousMethodDelegate5)
						where MoodList.ႨႷႰ(<>h__TransparentIdentifier1.get_theAction().MoodID).IsVisible
						select <>h__TransparentIdentifier1;
					if (CS$<>9__CachedAnonymousMethodDelegate6 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate6 = ((<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <>h__TransparentIdentifier1) => <>h__TransparentIdentifier1.get_actionIDPair());
					}
					return source2.Select(CS$<>9__CachedAnonymousMethodDelegate6);
				}
				}
			}
		}

		[XmlIgnore]
		public IEnumerable<KeyValuePair<Guid, ChatmanAction>> MyActions
		{
			get
			{
				//Discarded unreachable code: IL_0002, IL_0013, IL_0028, IL_003d, IL_0052, IL_0067, IL_007c
				ObservableDictionary<Guid, ChatmanAction> source = actionsByID;
				if (CS$<>9__CachedAnonymousMethodDelegateb == null)
				{
					CS$<>9__CachedAnonymousMethodDelegateb = ((KeyValuePair<Guid, ChatmanAction> actionIDPair) => new <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>(actionIDPair, actionIDPair.Value));
				}
				IEnumerable<<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>> source2 = source.Select(CS$<>9__CachedAnonymousMethodDelegateb);
				if (CS$<>9__CachedAnonymousMethodDelegatec == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatec = delegate(<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <>h__TransparentIdentifier7)
					{
						int num = 3;
						int result;
						while (true)
						{
							switch (num)
							{
							default:
								num = (<>h__TransparentIdentifier7.get_theAction().IsMy ? 1 : 0);
								continue;
							case 1:
								num = ((!<>h__TransparentIdentifier7.get_theAction().IsDeleted) ? 2 : 0);
								continue;
							case 2:
								result = ((!<>h__TransparentIdentifier7.get_theAction().IsExcluded) ? 1 : 0);
								break;
							case 0:
								result = 0;
								break;
							}
							break;
						}
						return (byte)result != 0;
					};
				}
				IEnumerable<<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>> source3 = source2.Where(CS$<>9__CachedAnonymousMethodDelegatec);
				if (CS$<>9__CachedAnonymousMethodDelegated == null)
				{
					CS$<>9__CachedAnonymousMethodDelegated = ((<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <>h__TransparentIdentifier7) => <>h__TransparentIdentifier7.get_actionIDPair());
				}
				return source3.Select(CS$<>9__CachedAnonymousMethodDelegated);
			}
		}

		[XmlIgnore]
		public IEnumerable<KeyValuePair<Guid, ChatmanAction>> SharedActions
		{
			get
			{
				switch (0)
				{
				default:
				{
					IEnumerable<KeyValuePair<Guid, ChatmanAction>> myActions = MyActions;
					if (CS$<>9__CachedAnonymousMethodDelegatef == null)
					{
						CS$<>9__CachedAnonymousMethodDelegatef = ((KeyValuePair<Guid, ChatmanAction> actionIDPair) => !string.IsNullOrEmpty(actionIDPair.Value.SerialNumberUsedForDownload));
					}
					return myActions.Where(CS$<>9__CachedAnonymousMethodDelegatef);
				}
				}
			}
		}

		[XmlIgnore]
		public IEnumerable<KeyValuePair<Guid, ChatmanAction>> DownloadedActions
		{
			get
			{
				switch (0)
				{
				default:
				{
					ObservableDictionary<Guid, ChatmanAction> source = actionsByID;
					if (CS$<>9__CachedAnonymousMethodDelegate14 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate14 = ((KeyValuePair<Guid, ChatmanAction> actionIDPair) => new <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>(actionIDPair, actionIDPair.Value));
					}
					IEnumerable<<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>> source2 = source.Select(CS$<>9__CachedAnonymousMethodDelegate14);
					if (CS$<>9__CachedAnonymousMethodDelegate15 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate15 = delegate(<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <>h__TransparentIdentifier10)
						{
							//Discarded unreachable code: IL_0002, IL_0014, IL_0035, IL_003a
							int result;
							if (!string.IsNullOrEmpty(<>h__TransparentIdentifier10.get_theAction().SerialNumberUsedForDownload))
							{
								if (686 > 686 - 112)
								{
									result = ((!<>h__TransparentIdentifier10.get_theAction().IsMy) ? 1 : 0);
									goto IL_003c;
								}
							}
							result = 0;
							goto IL_003c;
							IL_003c:
							return (byte)result != 0;
						};
					}
					IEnumerable<<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>> source3 = source2.Where(CS$<>9__CachedAnonymousMethodDelegate15);
					if (CS$<>9__CachedAnonymousMethodDelegate16 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate16 = ((<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <>h__TransparentIdentifier10) => <>h__TransparentIdentifier10.get_actionIDPair());
					}
					return source3.Select(CS$<>9__CachedAnonymousMethodDelegate16);
				}
				}
			}
		}

		[XmlIgnore]
		public Dictionary<int, ChatmanAction> SpecialActionsByCode => specialActionsByCode;

		[XmlIgnore]
		public MoodMatrix MoodMatrix => activeMoodMatrix;

		[XmlIgnore]
		public Dictionary<Guid, Dictionary<Guid, MoodCorrelationPair>> MoodToMoodCorrelations => moodToMoodCorrelations;

		[XmlIgnore]
		public List<ConstraintFilterDefinition> ConstraintFilters => constraintFilters;

		[XmlIgnore]
		public List<ActionProducerDefinition> ActionProducers => actionProducers;

		public static string Ⴐ => ႭႥႰ.Ⴐ.ႼႭ();

		public static string Ⴈ => ႭႥႰ.Ⴐ.ႼႠ();

		public event ႭႥႰ.Ⴍ Ⴀ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				checkIsActive = (ႭႥႰ.Ⴍ)Delegate.Combine(checkIsActive, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				checkIsActive = (ႭႥႰ.Ⴍ)Delegate.Remove(checkIsActive, value);
			}
		}

		public event ႭႥႰ.Ⴜ Ⴄ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				ActionAdded = (ႭႥႰ.Ⴜ)Delegate.Combine(ActionAdded, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				ActionAdded = (ႭႥႰ.Ⴜ)Delegate.Remove(ActionAdded, value);
			}
		}

		public event ႭႥႨ.Ⴐ Ⴐ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				ActionUpdated = (ႭႥႨ.Ⴐ)Delegate.Combine(ActionUpdated, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				ActionUpdated = (ႭႥႨ.Ⴐ)Delegate.Remove(ActionUpdated, value);
			}
		}

		public event ႭႥႨ.Ⴈ Ⴓ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				ActionDeleted = (ႭႥႨ.Ⴈ)Delegate.Combine(ActionDeleted, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				ActionDeleted = (ႭႥႨ.Ⴈ)Delegate.Remove(ActionDeleted, value);
			}
		}

		public event ႭႥႨ.Ⴓ Ⴅ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				ScenariosUpdated = (ႭႥႨ.Ⴓ)Delegate.Combine(ScenariosUpdated, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				ScenariosUpdated = (ႭႥႨ.Ⴓ)Delegate.Remove(ScenariosUpdated, value);
			}
		}

		public event ႭႥႨ.Ⴗ Ⴍ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				MoodWordsUpdated = (ႭႥႨ.Ⴗ)Delegate.Combine(MoodWordsUpdated, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				MoodWordsUpdated = (ႭႥႨ.Ⴗ)Delegate.Remove(MoodWordsUpdated, value);
			}
		}

		public event ႭႥႨ.Ⴅ Ⴃ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				QuestionsUpdated = (ႭႥႨ.Ⴅ)Delegate.Combine(QuestionsUpdated, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				QuestionsUpdated = (ႭႥႨ.Ⴅ)Delegate.Remove(QuestionsUpdated, value);
			}
		}

		public event PropertyChangedEventHandler Ⴈ
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				propertyChanged = (PropertyChangedEventHandler)Delegate.Combine(propertyChanged, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				propertyChanged = (PropertyChangedEventHandler)Delegate.Remove(propertyChanged, value);
			}
		}

		public static Personality ႼႷ()
		{
			Personality personality = new Personality();
			personality.id = Guid.NewGuid();
			personality.name = string.Empty;
			personality.fileName = string.Empty;
			personality.creationDate = DateTime.Now;
			personality.personalityDataFiles = new List<PersonalityDataFile>();
			personality.stateMoodCounters = new Dictionary<Guid, MoodCounter>();
			personality.actionUsages = new List<ActionUsage>();
			personality.decorationImages = new int[0];
			personality.iconColorSchemeIndex = 2;
			return personality;
		}

		public void ႼႥ()
		{
			ႨႭႨ(ႤႤႭ.Ⴅ.ႰႣ(1821394871));
		}

		private void ႥႤ(ChatmanAction Ⴃ, bool Ⴀ)
		{
			//Discarded unreachable code: IL_0002, IL_0024, IL_003f
			if (status != PersonalityStatus.Loaded)
			{
				return;
			}
			if (41 >= 41 - 1)
			{
				Ⴅ(Ⴃ, null, Ⴀ, Ⴃ: true, IsActive);
				while (772 <= 772 - 364)
				{
				}
			}
		}

		private void ႨႳႼ(ChatmanAction Ⴃ)
		{
			int num = 1;
			while (true)
			{
				switch (num)
				{
				case 0:
					return;
				default:
					num = ((status == PersonalityStatus.Loaded) ? 2 : 0);
					break;
				case 2:
					ႤႨ(Ⴃ, Ⴓ: true);
					num = 0;
					break;
				}
			}
		}

		private void ႨႷႰ(ChatmanAction Ⴃ)
		{
			//Discarded unreachable code: IL_0002, IL_001c, IL_003b
			if (status != PersonalityStatus.Loaded)
			{
				return;
			}
			if (226 > 226 - 20)
			{
				do
				{
					ႤႥ(Ⴃ, Ⴓ: true);
				}
				while (333 < 333 - 145);
			}
		}

		public void ႼႠ()
		{
			if (status != PersonalityStatus.Loaded)
			{
				try
				{
					ႼႭ();
				}
				catch (Exception ⴓ)
				{
					ႥႥႨ.Ⴗ.ႳႤ(ႤႤႭ.Ⴅ.ႰႣ(1821394864) + ((personalityDataFiles != null && personalityDataFiles.Count() > 0) ? Path.GetFileName(personalityDataFiles[0].FileName) : Name), ⴓ);
				}
			}
		}

		~Personality()
		{
			ႨႭႰ(Ⴍ: false);
		}

		public void ႨႠႷ(bool Ⴀ)
		{
			ႥႠ(Ⴀ, Ⴍ: false);
		}

		public void ႥႠ(bool Ⴀ, bool Ⴍ)
		{
			Ⴗ(Ⴀ, Ⴍ, Ⴄ: false);
		}

		public void Ⴗ(bool Ⴀ, bool Ⴍ, bool Ⴄ)
		{
			if (!isReadOnly)
			{
				lock (fileAccessLock)
				{
					if (stateMoodCounters != null)
					{
						stateMoodCounterList = stateMoodCounters.Values.ToList();
					}
					ႨႰႨ();
					Ⴈ<Personality>.Ⴗ(fileName, this, Ⴈ: true);
					if (!Ⴄ)
					{
						Ⴈ<Personality>.ႨႷႤ(fileName);
					}
					if (status == PersonalityStatus.Loaded && !Ⴀ)
					{
						foreach (PersonalityDataFile personalityDataFile in personalityDataFiles)
						{
							if (personalityDataFile.FileRelevance == DataFileLocation.PersonalityDataFile)
							{
								personalityDataFile.ႰႰ(Ⴄ);
							}
						}
					}
					if (!Ⴍ && userDataPersonality != null)
					{
						userDataPersonality.ႨႠႷ(Ⴀ: false);
					}
				}
			}
		}

		public void ႼႣ()
		{
			ႥႠ(Ⴀ: true, Ⴍ: true);
		}

		public void ႼႭ()
		{
			Ⴓ(Ⴀ: false, Ⴍ: false, Ⴄ: false);
		}

		public void ႨႠႥ(bool Ⴀ)
		{
			Ⴓ(Ⴀ, Ⴍ: false, Ⴄ: false);
		}

		public void ႨႠႠ(bool Ⴀ)
		{
			Ⴓ(Ⴀ, Ⴍ: false, Ⴄ: true);
		}

		public void Ⴓ(bool Ⴀ, bool Ⴍ, bool Ⴄ)
		{
			string text = null;
			PersonalityData personalityData = null;
			PersonalityDataFile personalityDataFile = null;
			int i = 0;
			if (personalityDataFiles != null)
			{
				personalityDataParts = new List<PersonalityData>(personalityDataFiles.Count);
				text = Path.GetDirectoryName(fileName) + Path.DirectorySeparatorChar;
				if (masterPersonality != null)
				{
					ႥႳ(DataFileLocation.MasterDataFile, masterPersonality.personalityDataFiles[0]);
				}
				if (userDataPersonality != null)
				{
					ႥႳ(DataFileLocation.UserDataFile, userDataPersonality.personalityDataFiles[0]);
				}
				for (; i < personalityDataFiles.Count; i++)
				{
					personalityDataFile = personalityDataFiles[i];
					if (Ⴄ && (!Ⴄ || personalityDataFile.FileRelevance != 0))
					{
						continue;
					}
					if (personalityDataFile.Data == null)
					{
						personalityData = personalityDataFile.ႰႠ(text);
						if (ႨႭႳ(this) && personalityData.Actions.Count == 0)
						{
							try
							{
								File.Delete(Path.Combine(text, personalityDataFile.FileName));
							}
							catch
							{
							}
							personalityData = personalityDataFile.ႰႠ(text);
						}
						if (!Ⴍ)
						{
							personalityData.ႨႳႤ(this);
						}
					}
					else
					{
						personalityData = personalityDataFile.Data;
					}
					personalityDataParts.Add(personalityData);
				}
				if (!Ⴀ)
				{
					ႼႼ();
				}
			}
			status = PersonalityStatus.Loaded;
		}

		private void ႥႳ(DataFileLocation Ⴀ, PersonalityDataFile Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0046, IL_0064, IL_00a0
			<>c__DisplayClass19 CS$<>8__locals0 = new <>c__DisplayClass19();
			CS$<>8__locals0.dataFileLocation = Ⴀ;
			PersonalityDataFile personalityDataFile = personalityDataFiles.Where((PersonalityDataFile file) => file.FileRelevance == CS$<>8__locals0.dataFileLocation).FirstOrDefault();
			PersonalityDataFile personalityDataFile2 = default(PersonalityDataFile);
			if (personalityDataFile == null)
			{
				if (244 >= 244 - 74)
				{
					personalityDataFile2 = new PersonalityDataFile();
					personalityDataFile2.FileName = Ⴍ.FileName;
					goto IL_0078;
				}
			}
			else
			{
				personalityDataFile.Data = Ⴍ.Data;
			}
			if (361 >= 361 - 283)
			{
				return;
			}
			goto IL_0078;
			IL_0078:
			personalityDataFile2.FileRelevance = CS$<>8__locals0.dataFileLocation;
			personalityDataFile2.Data = Ⴍ.Data;
			personalityDataFile = personalityDataFile2;
			personalityDataFiles.Add(personalityDataFile);
		}

		public void ႼႤ()
		{
			if (personalityDataParts != null)
			{
				foreach (PersonalityData personalityDataPart in personalityDataParts)
				{
					personalityDataPart.ႨႳႤ(this);
				}
			}
		}

		public void ႼႼ()
		{
			//Discarded unreachable code: IL_0002, IL_0017, IL_003d
			do
			{
				ႨႰႳ();
				ႨႰႰ();
				if (!ႥႥႳႰ.Ⴍ.Ⴄ)
				{
					if (false)
					{
					}
					ႨႨႳ();
					continue;
				}
				break;
			}
			while (222 <= 222 - 24);
		}

		private void ႨႰႰ()
		{
			int num = 3;
			while (true)
			{
				switch (num)
				{
				case 2:
					return;
				default:
					num = ((actionUsages == null) ? 1 : 0);
					break;
				case 1:
					num = 2;
					break;
				case 0:
				{
					List<ChatmanAction> actions = personalityDataParts[0].Actions;
					List<ActionUsage> inner = actionUsages;
					if (CS$<>9__CachedAnonymousMethodDelegate1f == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate1f = ((ChatmanAction action) => action.ID);
					}
					Func<ChatmanAction, Guid> cS$<>9__CachedAnonymousMethodDelegate1f = CS$<>9__CachedAnonymousMethodDelegate1f;
					if (CS$<>9__CachedAnonymousMethodDelegate20 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate20 = ((ActionUsage actionUsage) => actionUsage.ID);
					}
					Func<ActionUsage, Guid> cS$<>9__CachedAnonymousMethodDelegate = CS$<>9__CachedAnonymousMethodDelegate20;
					if (CS$<>9__CachedAnonymousMethodDelegate21 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate21 = ((ChatmanAction action, ActionUsage actionUsage) => new ႭႥႰ.Ⴀ(actionUsage, action));
					}
					IEnumerable<ႭႥႰ.Ⴀ> source = actions.Join(inner, cS$<>9__CachedAnonymousMethodDelegate1f, cS$<>9__CachedAnonymousMethodDelegate, CS$<>9__CachedAnonymousMethodDelegate21);
					int num2 = source.Count();
					num = 2;
					break;
				}
				}
			}
		}

		private void ႨႰႨ()
		{
			int num = 1;
			while (true)
			{
				switch (num)
				{
				case 7:
					return;
				default:
					num = ((actionUsages != null) ? 4 : 3);
					break;
				case 3:
					actionUsages = new List<ActionUsage>();
					num = 4;
					break;
				case 4:
					num = ((status == PersonalityStatus.Loaded) ? 6 : 0);
					break;
				case 0:
					num = 7;
					break;
				case 6:
					num = ((personalityDataFiles.Count() != 0) ? 2 : 5);
					break;
				case 5:
					num = 7;
					break;
				case 2:
				{
					actionUsages.Clear();
					List<ActionUsage> list = actionUsages;
					List<ChatmanAction> actions = personalityDataParts[0].Actions;
					if (CS$<>9__CachedAnonymousMethodDelegate24 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate24 = delegate(ChatmanAction action)
						{
							ActionUsage actionUsage = new ActionUsage();
							actionUsage.ID = action.ID;
							actionUsage.DailyAverage = action.DailyAverage;
							actionUsage.DaysUsed = action.DaysUsed;
							actionUsage.LastUseDate = action.LastUseDate;
							actionUsage.TotalCounter = action.TotalCounter;
							return actionUsage;
						};
					}
					list.AddRange(actions.Select(CS$<>9__CachedAnonymousMethodDelegate24));
					num = 7;
					break;
				}
				}
			}
		}

		private void ႨႰႳ()
		{
			ႨႰႣ();
			ႨႰႭ();
			ႥႷ(ref actionsByMood, ActionScope.Proactive);
			ႨႰႥ();
			ႥႷ(ref proactiveActionsByMood, ActionScope.Reactive);
			ႨႰႷ();
			actionsByID = ႨႰႠ();
			List<PersonalityData> source = personalityDataParts;
			if (CS$<>9__CachedAnonymousMethodDelegate38 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate38 = ((PersonalityData personalityPartData) => personalityPartData.Actions);
			}
			Func<PersonalityData, IEnumerable<ChatmanAction>> cS$<>9__CachedAnonymousMethodDelegate = CS$<>9__CachedAnonymousMethodDelegate38;
			if (CS$<>9__CachedAnonymousMethodDelegate39 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate39 = ((PersonalityData personalityPartData, ChatmanAction action) => new <>f__AnonymousType1<PersonalityData, ChatmanAction>(personalityPartData, action));
			}
			IEnumerable<<>f__AnonymousType1<PersonalityData, ChatmanAction>> source2 = source.SelectMany(cS$<>9__CachedAnonymousMethodDelegate, CS$<>9__CachedAnonymousMethodDelegate39);
			if (CS$<>9__CachedAnonymousMethodDelegate3a == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate3a = delegate(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier25)
				{
					//Discarded unreachable code: IL_0002, IL_0017, IL_0038
					int result;
					if (!<>h__TransparentIdentifier25.get_action().IsExcluded)
					{
						if ((936 + 936 * 936) % 2 == 0)
						{
							result = ((<>h__TransparentIdentifier25.get_action().SpecialActionCode != 0) ? 1 : 0);
							goto IL_003a;
						}
					}
					result = 0;
					goto IL_003a;
					IL_003a:
					return (byte)result != 0;
				};
			}
			IEnumerable<<>f__AnonymousType1<PersonalityData, ChatmanAction>> source3 = source2.Where(CS$<>9__CachedAnonymousMethodDelegate3a);
			if (CS$<>9__CachedAnonymousMethodDelegate3b == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate3b = ((<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier25) => <>h__TransparentIdentifier25.get_action());
			}
			IEnumerable<ChatmanAction> source4 = source3.Select(CS$<>9__CachedAnonymousMethodDelegate3b);
			if (CS$<>9__CachedAnonymousMethodDelegate3c == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate3c = ((ChatmanAction Action) => Action.SpecialActionCode);
			}
			specialActionsByCode = source4.ToDictionary(CS$<>9__CachedAnonymousMethodDelegate3c);
			if (stateMoodCounterList != null)
			{
				IEnumerable<MoodCounter> source5 = Enumerable.Reverse(stateMoodCounterList);
				if (CS$<>9__CachedAnonymousMethodDelegate3d == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate3d = ((MoodCounter item) => item.ID);
				}
				stateMoodCounters = source5.ToDictionary(CS$<>9__CachedAnonymousMethodDelegate3d);
			}
			else
			{
				stateMoodCounters = new Dictionary<Guid, MoodCounter>();
			}
			IEnumerable<Mood> source6 = moodList.Where(delegate(Mood mood)
			{
				switch (0)
				{
				default:
				{
					Dictionary<Guid, MoodCounter> source10 = stateMoodCounters;
					if (CS$<>9__CachedAnonymousMethodDelegate45 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate45 = ((KeyValuePair<Guid, MoodCounter> moodDefaultState) => moodDefaultState.Value.ID);
					}
					return !source10.Select(CS$<>9__CachedAnonymousMethodDelegate45).Contains(mood.ID);
				}
				}
			});
			if (CS$<>9__CachedAnonymousMethodDelegate3e == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate3e = ((Mood mood) => new MoodCounter(mood));
			}
			IEnumerable<MoodCounter> enumerable = source6.Select(CS$<>9__CachedAnonymousMethodDelegate3e);
			foreach (MoodCounter item in enumerable)
			{
				stateMoodCounters.Add(item.ID, item);
			}
			List<MoodMatrix> list;
			if (masterPersonality == null)
			{
				List<PersonalityData> source7 = personalityDataParts;
				if (CS$<>9__CachedAnonymousMethodDelegate3f == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate3f = ((PersonalityData personalityPartData) => personalityPartData.MoodMatrixes);
				}
				Func<PersonalityData, IEnumerable<MoodMatrix>> cS$<>9__CachedAnonymousMethodDelegate3f = CS$<>9__CachedAnonymousMethodDelegate3f;
				if (CS$<>9__CachedAnonymousMethodDelegate40 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate40 = ((PersonalityData personalityPartData, MoodMatrix moodMatrix) => moodMatrix);
				}
				list = new List<MoodMatrix>(source7.SelectMany(cS$<>9__CachedAnonymousMethodDelegate3f, CS$<>9__CachedAnonymousMethodDelegate40).Reverse());
			}
			else
			{
				list = masterPersonality.moodMatrixes;
			}
			moodMatrixes = list;
			ႨႰႤ();
			ConstraintFilterDefinition comparer = new ConstraintFilterDefinition();
			List<PersonalityData> source8 = personalityDataParts;
			if (CS$<>9__CachedAnonymousMethodDelegate41 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate41 = ((PersonalityData personalityPartData) => personalityPartData.ConstraintFilters);
			}
			Func<PersonalityData, IEnumerable<ConstraintFilterDefinition>> cS$<>9__CachedAnonymousMethodDelegate2 = CS$<>9__CachedAnonymousMethodDelegate41;
			if (CS$<>9__CachedAnonymousMethodDelegate42 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate42 = ((PersonalityData personalityPartData, ConstraintFilterDefinition filter) => filter);
			}
			constraintFilters = source8.SelectMany(cS$<>9__CachedAnonymousMethodDelegate2, CS$<>9__CachedAnonymousMethodDelegate42).Distinct(comparer).ToList();
			ActionProducerDefinition comparer2 = new ActionProducerDefinition();
			List<PersonalityData> source9 = personalityDataParts;
			if (CS$<>9__CachedAnonymousMethodDelegate43 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate43 = ((PersonalityData personalityPartData) => personalityPartData.ActionProducers);
			}
			Func<PersonalityData, IEnumerable<ActionProducerDefinition>> cS$<>9__CachedAnonymousMethodDelegate3 = CS$<>9__CachedAnonymousMethodDelegate43;
			if (CS$<>9__CachedAnonymousMethodDelegate44 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate44 = ((PersonalityData personalityPartData, ActionProducerDefinition producer) => producer);
			}
			actionProducers = source9.SelectMany(cS$<>9__CachedAnonymousMethodDelegate3, CS$<>9__CachedAnonymousMethodDelegate44).Distinct(comparer2).ToList();
		}

		private void ႥႷ(ref Dictionary<Guid, List<ChatmanAction>> Ⴀ, ActionScope Ⴍ)
		{
			<>c__DisplayClass50 CS$<>8__locals0 = new <>c__DisplayClass50();
			CS$<>8__locals0.scopeToExclude = Ⴍ;
			Ⴀ = new Dictionary<Guid, List<ChatmanAction>>();
			List<PersonalityData> source = personalityDataParts;
			if (CS$<>9__CachedAnonymousMethodDelegate4c == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate4c = ((PersonalityData personalityPartData) => personalityPartData.Actions);
			}
			Func<PersonalityData, IEnumerable<ChatmanAction>> cS$<>9__CachedAnonymousMethodDelegate4c = CS$<>9__CachedAnonymousMethodDelegate4c;
			if (CS$<>9__CachedAnonymousMethodDelegate4d == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate4d = ((PersonalityData personalityPartData, ChatmanAction foundAction) => new <>f__AnonymousType2<PersonalityData, ChatmanAction>(personalityPartData, foundAction));
			}
			IEnumerable<<>f__AnonymousType2<PersonalityData, ChatmanAction>> source2 = source.SelectMany(cS$<>9__CachedAnonymousMethodDelegate4c, CS$<>9__CachedAnonymousMethodDelegate4d).Where(delegate(<>f__AnonymousType2<PersonalityData, ChatmanAction> <>h__TransparentIdentifier46)
			{
				//Discarded unreachable code: IL_0002, IL_001b, IL_0020, IL_003d
				int result;
				while (true)
				{
					if (<>h__TransparentIdentifier46.get_foundAction().IsExcluded)
					{
						result = 0;
						break;
					}
					if (60 > 60 - 50)
					{
						result = ((<>h__TransparentIdentifier46.get_foundAction().Scope != CS$<>8__locals0.scopeToExclude) ? 1 : 0);
						break;
					}
				}
				return (byte)result != 0;
			});
			if (CS$<>9__CachedAnonymousMethodDelegate4e == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate4e = ((<>f__AnonymousType2<PersonalityData, ChatmanAction> <>h__TransparentIdentifier46) => <>h__TransparentIdentifier46.get_foundAction());
			}
			IEnumerable<ChatmanAction> source3 = source2.Select(CS$<>9__CachedAnonymousMethodDelegate4e);
			if (CS$<>9__CachedAnonymousMethodDelegate4f == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate4f = ((ChatmanAction theAction) => theAction.Name);
			}
			foreach (ChatmanAction item in source3.OrderBy(CS$<>9__CachedAnonymousMethodDelegate4f))
			{
				if (Ⴀ.TryGetValue(item.MoodID, out List<ChatmanAction> value))
				{
					value.Add(item);
				}
				else
				{
					value = new List<ChatmanAction>();
					value.Add(item);
					Ⴀ.Add(item.MoodID, value);
				}
			}
		}

		private void ႨႰႷ()
		{
			//Discarded unreachable code: IL_0012, IL_002a, IL_003f, IL_0054, IL_0064, IL_0079
			Dictionary<Guid, List<ChatmanAction>> source = proactiveActionsByMood;
			if (CS$<>9__CachedAnonymousMethodDelegate55 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate55 = ((KeyValuePair<Guid, List<ChatmanAction>> proactiveActionByMood) => proactiveActionByMood);
			}
			IEnumerable<KeyValuePair<Guid, List<ChatmanAction>>> source2 = source.Select(CS$<>9__CachedAnonymousMethodDelegate55);
			if (CS$<>9__CachedAnonymousMethodDelegate56 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate56 = ((KeyValuePair<Guid, List<ChatmanAction>> item) => item.Key);
			}
			Func<KeyValuePair<Guid, List<ChatmanAction>>, Guid> cS$<>9__CachedAnonymousMethodDelegate = CS$<>9__CachedAnonymousMethodDelegate56;
			if (CS$<>9__CachedAnonymousMethodDelegate57 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate57 = ((KeyValuePair<Guid, List<ChatmanAction>> item) => item.Value);
			}
			readOnlyProactiveActionsByMood = source2.ToDictionary(cS$<>9__CachedAnonymousMethodDelegate, CS$<>9__CachedAnonymousMethodDelegate57);
		}

		private void ႨႰႥ()
		{
			switch (0)
			{
			}
			Dictionary<Guid, List<ChatmanAction>> source = actionsByMood;
			if (CS$<>9__CachedAnonymousMethodDelegate5b == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate5b = ((KeyValuePair<Guid, List<ChatmanAction>> actionByMood) => actionByMood);
			}
			IEnumerable<KeyValuePair<Guid, List<ChatmanAction>>> source2 = source.Select(CS$<>9__CachedAnonymousMethodDelegate5b);
			if (CS$<>9__CachedAnonymousMethodDelegate5c == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate5c = ((KeyValuePair<Guid, List<ChatmanAction>> item) => item.Key);
			}
			Func<KeyValuePair<Guid, List<ChatmanAction>>, Guid> cS$<>9__CachedAnonymousMethodDelegate5c = CS$<>9__CachedAnonymousMethodDelegate5c;
			if (CS$<>9__CachedAnonymousMethodDelegate5d == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate5d = ((KeyValuePair<Guid, List<ChatmanAction>> item) => item.Value);
			}
			readOnlyActionsByMood = source2.ToDictionary(cS$<>9__CachedAnonymousMethodDelegate5c, CS$<>9__CachedAnonymousMethodDelegate5d);
		}

		private ObservableDictionary<Guid, ChatmanAction> ႨႰႠ()
		{
			int num = 1;
			ObservableDictionary<Guid, ChatmanAction> result = default(ObservableDictionary<Guid, ChatmanAction>);
			while (true)
			{
				switch (num)
				{
				default:
					num = ((moodList != null) ? 3 : 0);
					break;
				case 3:
				{
					List<PersonalityData> source4 = personalityDataParts;
					if (CS$<>9__CachedAnonymousMethodDelegate70 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate70 = ((PersonalityData personalityPartData) => personalityPartData.Actions);
					}
					Func<PersonalityData, IEnumerable<ChatmanAction>> cS$<>9__CachedAnonymousMethodDelegate = CS$<>9__CachedAnonymousMethodDelegate70;
					if (CS$<>9__CachedAnonymousMethodDelegate71 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate71 = ((PersonalityData personalityPartData, ChatmanAction action) => new <>f__AnonymousType1<PersonalityData, ChatmanAction>(personalityPartData, action));
					}
					IEnumerable<<>f__AnonymousType1<PersonalityData, ChatmanAction>> source5 = source4.SelectMany(cS$<>9__CachedAnonymousMethodDelegate, CS$<>9__CachedAnonymousMethodDelegate71);
					if (CS$<>9__CachedAnonymousMethodDelegate72 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate72 = delegate(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier5e)
						{
							//Discarded unreachable code: IL_001e, IL_0033, IL_0051, IL_0056
							while (true)
							{
								int result2;
								if (!<>h__TransparentIdentifier5e.get_action().IsExcluded)
								{
									if (false)
									{
										continue;
									}
									if (<>h__TransparentIdentifier5e.get_action().SpecialActionCode == 0)
									{
										if (false)
										{
											break;
										}
										result2 = ((<>h__TransparentIdentifier5e.get_action().Scope != ActionScope.Proactive) ? 1 : 0);
										goto IL_0058;
									}
								}
								result2 = 0;
								goto IL_0058;
								IL_0058:
								return (byte)result2 != 0;
							}
							bool result3 = default(bool);
							return result3;
						};
					}
					IEnumerable<<>f__AnonymousType1<PersonalityData, ChatmanAction>> outer = source5.Where(CS$<>9__CachedAnonymousMethodDelegate72);
					ႭႥႨ.Ⴀ inner = moodList;
					if (CS$<>9__CachedAnonymousMethodDelegate73 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate73 = ((<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier5e) => <>h__TransparentIdentifier5e.get_action().MoodID);
					}
					Func<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Guid> cS$<>9__CachedAnonymousMethodDelegate2 = CS$<>9__CachedAnonymousMethodDelegate73;
					if (CS$<>9__CachedAnonymousMethodDelegate74 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate74 = ((Mood mood) => mood.ID);
					}
					Func<Mood, Guid> cS$<>9__CachedAnonymousMethodDelegate3 = CS$<>9__CachedAnonymousMethodDelegate74;
					if (CS$<>9__CachedAnonymousMethodDelegate75 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate75 = ((<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier5e, Mood mood) => new <>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood>(<>h__TransparentIdentifier5e, mood));
					}
					IEnumerable<<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood>> source6 = outer.Join(inner, cS$<>9__CachedAnonymousMethodDelegate2, cS$<>9__CachedAnonymousMethodDelegate3, CS$<>9__CachedAnonymousMethodDelegate75);
					if (CS$<>9__CachedAnonymousMethodDelegate76 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate76 = ((<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood> <>h__TransparentIdentifier5f) => <>h__TransparentIdentifier5f.get_mood().Ordinal);
					}
					IOrderedEnumerable<<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood>> source7 = source6.OrderBy(CS$<>9__CachedAnonymousMethodDelegate76);
					if (CS$<>9__CachedAnonymousMethodDelegate77 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate77 = ((<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood> <>h__TransparentIdentifier5f) => <>h__TransparentIdentifier5f.<>h__TransparentIdentifier5e.get_action().Name);
					}
					IOrderedEnumerable<<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood>> source8 = source7.ThenBy(CS$<>9__CachedAnonymousMethodDelegate77);
					if (CS$<>9__CachedAnonymousMethodDelegate78 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate78 = ((<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood> <>h__TransparentIdentifier5f) => <>h__TransparentIdentifier5f.<>h__TransparentIdentifier5e.get_action());
					}
					IEnumerable<ChatmanAction> ⴍ2 = source8.Select(CS$<>9__CachedAnonymousMethodDelegate78);
					if (CS$<>9__CachedAnonymousMethodDelegate79 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate79 = ((ChatmanAction Action) => Action.ID);
					}
					result = ⴍ2.ႣႳ(CS$<>9__CachedAnonymousMethodDelegate79);
					num = 2;
					break;
				}
				case 0:
				{
					List<PersonalityData> source = personalityDataParts;
					if (CS$<>9__CachedAnonymousMethodDelegate7a == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate7a = ((PersonalityData personalityPartData) => personalityPartData.Actions);
					}
					Func<PersonalityData, IEnumerable<ChatmanAction>> cS$<>9__CachedAnonymousMethodDelegate7a = CS$<>9__CachedAnonymousMethodDelegate7a;
					if (CS$<>9__CachedAnonymousMethodDelegate7b == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate7b = ((PersonalityData personalityPartData, ChatmanAction action) => new <>f__AnonymousType1<PersonalityData, ChatmanAction>(personalityPartData, action));
					}
					IEnumerable<<>f__AnonymousType1<PersonalityData, ChatmanAction>> source2 = source.SelectMany(cS$<>9__CachedAnonymousMethodDelegate7a, CS$<>9__CachedAnonymousMethodDelegate7b);
					if (CS$<>9__CachedAnonymousMethodDelegate7c == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate7c = delegate(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier60)
						{
							//Discarded unreachable code: IL_0002, IL_0021, IL_0036, IL_0055
							while (true)
							{
								int result4;
								if (!<>h__TransparentIdentifier60.get_action().IsExcluded)
								{
									if (705 < 705 - 322)
									{
										break;
									}
									if (<>h__TransparentIdentifier60.get_action().SpecialActionCode == 0)
									{
										if (312 <= 312 - 57)
										{
											continue;
										}
										result4 = ((<>h__TransparentIdentifier60.get_action().Scope != ActionScope.Proactive) ? 1 : 0);
										goto IL_0057;
									}
								}
								result4 = 0;
								goto IL_0057;
								IL_0057:
								return (byte)result4 != 0;
							}
							bool result5 = default(bool);
							return result5;
						};
					}
					IEnumerable<<>f__AnonymousType1<PersonalityData, ChatmanAction>> source3 = source2.Where(CS$<>9__CachedAnonymousMethodDelegate7c);
					if (CS$<>9__CachedAnonymousMethodDelegate7d == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate7d = ((<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier60) => <>h__TransparentIdentifier60.get_action());
					}
					IEnumerable<ChatmanAction> ⴍ = source3.Select(CS$<>9__CachedAnonymousMethodDelegate7d);
					if (CS$<>9__CachedAnonymousMethodDelegate7e == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate7e = ((ChatmanAction Action) => Action.ID);
					}
					result = ⴍ.ႣႳ(CS$<>9__CachedAnonymousMethodDelegate7e);
					num = 2;
					break;
				}
				case 2:
					return result;
				}
			}
		}

		private void ႨႰႣ()
		{
			List<PersonalityDataFile> source = personalityDataFiles;
			if (CS$<>9__CachedAnonymousMethodDelegate86 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate86 = ((PersonalityDataFile personalityPartDataFile) => personalityPartDataFile.Data.Scenarios);
			}
			Func<PersonalityDataFile, IEnumerable<Scenario>> cS$<>9__CachedAnonymousMethodDelegate = CS$<>9__CachedAnonymousMethodDelegate86;
			if (CS$<>9__CachedAnonymousMethodDelegate87 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate87 = ((PersonalityDataFile personalityPartDataFile, Scenario scenario) => new <>f__AnonymousType4<PersonalityDataFile, Scenario>(personalityPartDataFile, scenario));
			}
			IEnumerable<<>f__AnonymousType4<PersonalityDataFile, Scenario>> source2 = source.SelectMany(cS$<>9__CachedAnonymousMethodDelegate, CS$<>9__CachedAnonymousMethodDelegate87);
			if (CS$<>9__CachedAnonymousMethodDelegate88 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate88 = ((<>f__AnonymousType4<PersonalityDataFile, Scenario> <>h__TransparentIdentifier7f) => <>h__TransparentIdentifier7f.get_personalityPartDataFile().FileRelevance == DataFileLocation.PersonalityDataFile);
			}
			IEnumerable<<>f__AnonymousType4<PersonalityDataFile, Scenario>> source3 = source2.Where(CS$<>9__CachedAnonymousMethodDelegate88);
			if (CS$<>9__CachedAnonymousMethodDelegate89 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate89 = ((<>f__AnonymousType4<PersonalityDataFile, Scenario> <>h__TransparentIdentifier7f) => <>h__TransparentIdentifier7f.get_scenario());
			}
			scenarios = source3.Select(CS$<>9__CachedAnonymousMethodDelegate89).ToList();
			try
			{
				string text = string.Empty;
				string text2 = ႥႥႳႰ.Ⴍ.Ⴗ;
				if (!string.IsNullOrEmpty(text2))
				{
					byte[] array = new byte[16];
					Encoding.ASCII.GetBytes(ႥႥႳႰ.Ⴍ.Ⴈ, 0, 16, array, 0);
					text = Encoding.Unicode.GetString(ႥႥႨႣ.Ⴗ.Ⴗ(Convert.FromBase64String(text2), Encoding.ASCII.GetBytes(ႥႥႳႰ.Ⴍ.Ⴈ), array)).Replace(ႥႠႭ.Ⴈ.ႰႥ(1821394869), ႥႠႭ.Ⴈ.ႰႥ(1821394870)).Replace(ႥႠႭ.Ⴈ.ႰႥ(1821394871), ႥႠႭ.Ⴈ.ႰႥ(1821394870));
					text = string.Join(ႥႠႭ.Ⴃ.ႰႣ(1821394869), text.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries));
				}
				if (text != string.Empty)
				{
					Scenario scenario2 = Scenario.ႼႷ();
					scenario2.ID = new Guid(ႥႠႭ.Ⴃ.ႰႣ(1821394870));
					scenario2.Moods.Add(new ScenarioMood
					{
						ID = new Guid(ႤႤႭ.Ⴅ.ႰႣ(1821394865))
					});
					scenario2.Texts.Add(new ScenarioText
					{
						ID = 1,
						Data = text,
						Relation = ScenarioTextRelation.Include
					});
					scenario2.DynamicTexts = Scenario.ႰႤ(scenario2);
					scenario2.EventType = EventType.IMTextIn;
					scenarios.Add(scenario2);
					Ⴃ(scenario2, personalityDataFiles[0].Data, Ⴈ: true);
				}
			}
			catch (Exception ⴍ)
			{
				ႥႥႨ.Ⴗ.ႨႷႭ(ⴍ);
			}
			scenariosByMood = new Dictionary<Guid, IEnumerable<Scenario>>();
			IEnumerable<Scenario> value = null;
			foreach (Scenario scenario3 in scenarios)
			{
				foreach (ScenarioMood mood in scenario3.Moods)
				{
					if (scenariosByMood.TryGetValue(mood.ID, out value))
					{
						(value as List<Scenario>).Add(scenario3);
					}
					else
					{
						value = new List<Scenario>();
						(value as List<Scenario>).Add(scenario3);
						scenariosByMood.Add(mood.ID, value);
					}
				}
			}
			scenariosByEventType = new Dictionary<int, IEnumerable<Scenario>>();
			value = null;
			foreach (Scenario scenario4 in scenarios)
			{
				if (scenariosByEventType.TryGetValue((int)scenario4.EventType, out value))
				{
					(value as List<Scenario>).Add(scenario4);
				}
				else
				{
					value = new List<Scenario>();
					(value as List<Scenario>).Add(scenario4);
					scenariosByEventType.Add((int)scenario4.EventType, value);
				}
			}
		}

		private void ႨႰႭ()
		{
			Dictionary<string, WordScenarios> dictionary = new Dictionary<string, WordScenarios>();
			foreach (PersonalityDataFile personalityDataFile in personalityDataFiles)
			{
				if (personalityDataFile.FileRelevance == DataFileLocation.PersonalityDataFile)
				{
					foreach (WordScenario word in personalityDataFile.Data.WordList)
					{
						if (dictionary.TryGetValue(word.Ⴐ, out WordScenarios value))
						{
							value.Ⴐ.Add(word.Ⴐ);
						}
						else
						{
							dictionary.Add(word.Ⴐ, new WordScenarios(word.Ⴐ, new List<ScenarioRelationPair>(new ScenarioRelationPair[1]
							{
								word.Ⴐ
							})));
						}
					}
				}
			}
			Dictionary<string, WordScenarios>.ValueCollection values = dictionary.Values;
			wordList = new Ⴅ<WordScenarios>();
			foreach (WordScenarios item in values)
			{
				wordList.ႭႰႭ(item);
			}
		}

		private void ႨႰႤ()
		{
			try
			{
				IEnumerable<MoodMatrix> source = moodMatrixes.Where(delegate(MoodMatrix moodMatrix)
				{
					int num = 0;
					int result;
					while (true)
					{
						switch (num)
						{
						default:
							num = ((moodMatrix.Gender != targetUserGender) ? 3 : 2);
							continue;
						case 2:
							num = (((float)moodMatrix.MinAge <= targetUserAge) ? 1 : 3);
							continue;
						case 1:
							result = (((float)moodMatrix.MaxAge >= targetUserAge) ? 1 : 0);
							break;
						case 3:
							result = 0;
							break;
						}
						break;
					}
					return (byte)result != 0;
				});
				if (source.Count() > 0)
				{
					activeMoodMatrix = source.First();
				}
			}
			catch
			{
				activeMoodMatrix = null;
			}
			if (activeMoodMatrix == null && moodMatrixes != null && moodMatrixes.Count() > 0)
			{
				activeMoodMatrix = moodMatrixes[0];
			}
			if (activeMoodMatrix != null)
			{
				List<MoodMatrixEntry> moodMatrixEntries = activeMoodMatrix.MoodMatrixEntries;
				if (CS$<>9__CachedAnonymousMethodDelegate9d == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate9d = ((MoodMatrixEntry moodMatrixEntry) => moodMatrixEntry.FromMood);
				}
				IEnumerable<Guid> first = moodMatrixEntries.Select(CS$<>9__CachedAnonymousMethodDelegate9d);
				List<MoodMatrixEntry> moodMatrixEntries2 = activeMoodMatrix.MoodMatrixEntries;
				if (CS$<>9__CachedAnonymousMethodDelegate9e == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate9e = ((MoodMatrixEntry moodMatrixEntry) => moodMatrixEntry.ToMood);
				}
				IEnumerable<Guid> outer = first.Union(moodMatrixEntries2.Select(CS$<>9__CachedAnonymousMethodDelegate9e)).Distinct();
				List<MoodMatrixEntry> moodMatrixEntries3 = activeMoodMatrix.MoodMatrixEntries;
				if (CS$<>9__CachedAnonymousMethodDelegate9f == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate9f = ((Guid mood) => mood);
				}
				Func<Guid, Guid> cS$<>9__CachedAnonymousMethodDelegate9f = CS$<>9__CachedAnonymousMethodDelegate9f;
				if (CS$<>9__CachedAnonymousMethodDelegatea0 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatea0 = ((MoodMatrixEntry moodMatrixEntry) => moodMatrixEntry.FromMood);
				}
				Func<MoodMatrixEntry, Guid> cS$<>9__CachedAnonymousMethodDelegatea = CS$<>9__CachedAnonymousMethodDelegatea0;
				if (CS$<>9__CachedAnonymousMethodDelegatea1 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatea1 = ((Guid mood, MoodMatrixEntry moodMatrixEntry) => new MoodToMoodCorrelationPair(mood, new MoodCorrelationPair(moodMatrixEntry.ToMood, moodMatrixEntry.Correlation)));
				}
				IEnumerable<MoodToMoodCorrelationPair> first2 = outer.Join(moodMatrixEntries3, cS$<>9__CachedAnonymousMethodDelegate9f, cS$<>9__CachedAnonymousMethodDelegatea, CS$<>9__CachedAnonymousMethodDelegatea1);
				List<MoodMatrixEntry> moodMatrixEntries4 = activeMoodMatrix.MoodMatrixEntries;
				if (CS$<>9__CachedAnonymousMethodDelegatea2 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatea2 = ((Guid mood) => mood);
				}
				Func<Guid, Guid> cS$<>9__CachedAnonymousMethodDelegatea2 = CS$<>9__CachedAnonymousMethodDelegatea2;
				if (CS$<>9__CachedAnonymousMethodDelegatea3 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatea3 = ((MoodMatrixEntry moodMatrixEntry) => moodMatrixEntry.ToMood);
				}
				Func<MoodMatrixEntry, Guid> cS$<>9__CachedAnonymousMethodDelegatea3 = CS$<>9__CachedAnonymousMethodDelegatea3;
				if (CS$<>9__CachedAnonymousMethodDelegatea4 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatea4 = ((Guid mood, MoodMatrixEntry moodMatrixEntry) => new MoodToMoodCorrelationPair(mood, new MoodCorrelationPair(moodMatrixEntry.FromMood, moodMatrixEntry.Correlation)));
				}
				IEnumerable<MoodToMoodCorrelationPair> source2 = first2.Union(outer.Join(moodMatrixEntries4, cS$<>9__CachedAnonymousMethodDelegatea2, cS$<>9__CachedAnonymousMethodDelegatea3, CS$<>9__CachedAnonymousMethodDelegatea4)).Distinct();
				if (CS$<>9__CachedAnonymousMethodDelegatea5 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatea5 = ((MoodToMoodCorrelationPair item) => item.Ⴐ);
				}
				IEnumerable<IGrouping<Guid, MoodToMoodCorrelationPair>> source3 = source2.GroupBy(CS$<>9__CachedAnonymousMethodDelegatea5);
				if (CS$<>9__CachedAnonymousMethodDelegatea6 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatea6 = delegate(IGrouping<Guid, MoodToMoodCorrelationPair> items)
					{
						//Discarded unreachable code: IL_0002, IL_0017, IL_002f, IL_0044, IL_0059, IL_0069, IL_007e
						Guid key = items.Key;
						if (CS$<>9__CachedAnonymousMethodDelegatea9 == null)
						{
							CS$<>9__CachedAnonymousMethodDelegatea9 = ((MoodToMoodCorrelationPair i) => new MoodCorrelationPair[1]
							{
								i.Ⴐ
							});
						}
						IEnumerable<MoodCorrelationPair> source5 = items.SelectMany(CS$<>9__CachedAnonymousMethodDelegatea9);
						if (CS$<>9__CachedAnonymousMethodDelegateaa == null)
						{
							CS$<>9__CachedAnonymousMethodDelegateaa = ((MoodCorrelationPair item) => item.Mood);
						}
						Func<MoodCorrelationPair, Guid> cS$<>9__CachedAnonymousMethodDelegateaa = CS$<>9__CachedAnonymousMethodDelegateaa;
						if (CS$<>9__CachedAnonymousMethodDelegateab == null)
						{
							CS$<>9__CachedAnonymousMethodDelegateab = ((MoodCorrelationPair item) => item);
						}
						return new MoodToMoodCorrelationPairs(key, source5.ToDictionary(cS$<>9__CachedAnonymousMethodDelegateaa, CS$<>9__CachedAnonymousMethodDelegateab));
					};
				}
				IEnumerable<MoodToMoodCorrelationPairs> source4 = source3.Select(CS$<>9__CachedAnonymousMethodDelegatea6);
				if (CS$<>9__CachedAnonymousMethodDelegatea7 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatea7 = ((MoodToMoodCorrelationPairs item) => item.Ⴐ);
				}
				Func<MoodToMoodCorrelationPairs, Guid> cS$<>9__CachedAnonymousMethodDelegatea4 = CS$<>9__CachedAnonymousMethodDelegatea7;
				if (CS$<>9__CachedAnonymousMethodDelegatea8 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatea8 = ((MoodToMoodCorrelationPairs item) => item.Ⴐ);
				}
				moodToMoodCorrelations = source4.ToDictionary(cS$<>9__CachedAnonymousMethodDelegatea4, CS$<>9__CachedAnonymousMethodDelegatea8);
			}
		}

		public void ႨႰႼ()
		{
			if (personalityDataFiles.Count > 0)
			{
				foreach (PersonalityDataFile personalityDataFile in personalityDataFiles)
				{
					personalityDataFile.Data.ႼႥ();
				}
			}
			ႥႥႨ.Ⴗ.ႨႷႣ(ႥႠႭ.Ⴈ.ႰႥ(1821394864));
			ႨႰႣ();
			ႨႰႭ();
			ႥႥႨ.Ⴗ.ႨႷႣ(ႥႠႭ.Ⴈ.ႰႥ(1821394865));
		}

		public void ႥႭ(Guid Ⴀ, int Ⴍ)
		{
			lastActionMoodID = Ⴀ;
			lastActionIntensity = Ⴍ;
		}

		public void ႨႨႰ()
		{
			ႥႭ(Guid.Empty, 0);
		}

		public void ႨႠႣ(bool Ⴀ)
		{
			//Discarded unreachable code: IL_0002, IL_0015, IL_0031, IL_0048, IL_0065
			if (stateMoodCounters == null)
			{
				goto IL_0033;
			}
			if (531 >= 531 - 78)
			{
				goto IL_004a;
			}
			return;
			IL_004a:
			stateMoodCounters.Clear();
			while (695 < 695 - 457)
			{
			}
			goto IL_0033;
			IL_0033:
			while (true)
			{
				if (!Ⴀ)
				{
					if (312 > 312 - 131)
					{
						ႨႠႷ(Ⴀ: true);
						if (37 <= 37 - 14)
						{
							continue;
						}
						return;
					}
					break;
				}
				return;
			}
			goto IL_004a;
		}

		public List<MoodCounter> ႨႨႨ()
		{
			//Discarded unreachable code: IL_0011, IL_0026
			Dictionary<Guid, MoodCounter> source = stateMoodCounters;
			if (CS$<>9__CachedAnonymousMethodDelegatead == null)
			{
				CS$<>9__CachedAnonymousMethodDelegatead = ((KeyValuePair<Guid, MoodCounter> stateMoodCounter) => new MoodCounter(stateMoodCounter.Value));
			}
			return source.Select(CS$<>9__CachedAnonymousMethodDelegatead).ToList();
		}

		public void ႥႣ(Guid Ⴗ, ChatmanAction Ⴓ)
		{
			int num = 1;
			MoodCounter moodCounter = default(MoodCounter);
			double num2 = default(double);
			while (true)
			{
				switch (num)
				{
				default:
					num = ((!stateMoodCounters.Keys.Contains(Ⴗ)) ? 4 : 0);
					break;
				case 0:
					moodCounter = stateMoodCounters[Ⴗ];
					num = 3;
					break;
				case 4:
					moodCounter = new MoodCounter(Ⴗ, string.Empty, string.Empty, 0, 0.0, 0, DateTime.MinValue);
					num = 3;
					break;
				case 3:
					num2 = (double)moodCounter.DaysUsed * moodCounter.DailyAverage + 1.0;
					num = ((DateTime.Now.Ticks - moodCounter.LastUseDate.Ticks <= 864000000000L) ? 5 : 2);
					break;
				case 2:
					moodCounter.DaysUsed++;
					num = 5;
					break;
				case 5:
					moodCounter.DailyAverage = num2 / (double)moodCounter.DaysUsed;
					moodCounter.LastUseDate = DateTime.Now;
					moodCounter.TotalCounter += ((Ⴓ.Intensity == 0) ? 1 : Ⴓ.Intensity);
					return;
				}
			}
		}

		public void ႨႨႳ()
		{
			<>c__DisplayClassc2 CS$<>8__locals0 = new <>c__DisplayClassc2();
			CS$<>8__locals0.personalityFolderName = Path.GetDirectoryName(fileName);
			string[] files = Directory.GetFiles(CS$<>8__locals0.personalityFolderName);
			if (CS$<>9__CachedAnonymousMethodDelegateba == null)
			{
				CS$<>9__CachedAnonymousMethodDelegateba = ((string file) => new <>f__AnonymousType5<string, string>(file, Path.GetExtension(file)));
			}
			IEnumerable<<>f__AnonymousType5<string, string>> source = files.Select(CS$<>9__CachedAnonymousMethodDelegateba);
			if (CS$<>9__CachedAnonymousMethodDelegatebb == null)
			{
				CS$<>9__CachedAnonymousMethodDelegatebb = delegate(<>f__AnonymousType5<string, string> <>h__TransparentIdentifierae)
				{
					int num = 2;
					int result;
					while (true)
					{
						switch (num)
						{
						default:
							num = ((string.Compare(<>h__TransparentIdentifierae.get_extension(), ႥႠႭ.Ⴓ.ႰႤ(1821394866), ignoreCase: true) == 0) ? 3 : 0);
							continue;
						case 0:
							num = ((string.Compare(<>h__TransparentIdentifierae.get_extension(), ႥႠႭ.Ⴍ.ႰႣ(1821394864), ignoreCase: true) != 0) ? 1 : 3);
							continue;
						case 1:
							result = ((string.Compare(<>h__TransparentIdentifierae.get_extension(), ႤႤႭ.Ⴅ.ႰႣ(1821394879), ignoreCase: true) == 0) ? 1 : 0);
							break;
						case 3:
							result = 1;
							break;
						}
						break;
					}
					return (byte)result != 0;
				};
			}
			IEnumerable<<>f__AnonymousType5<string, string>> source2 = source.Where(CS$<>9__CachedAnonymousMethodDelegatebb);
			if (CS$<>9__CachedAnonymousMethodDelegatebc == null)
			{
				CS$<>9__CachedAnonymousMethodDelegatebc = ((<>f__AnonymousType5<string, string> <>h__TransparentIdentifierae) => <>h__TransparentIdentifierae.get_file().ToLower());
			}
			IEnumerable<string> first = source2.Select(CS$<>9__CachedAnonymousMethodDelegatebc);
			List<PersonalityDataFile> source3 = personalityDataFiles;
			if (CS$<>9__CachedAnonymousMethodDelegatebd == null)
			{
				CS$<>9__CachedAnonymousMethodDelegatebd = ((PersonalityDataFile personalityData) => personalityData.Data.Actions);
			}
			Func<PersonalityDataFile, IEnumerable<ChatmanAction>> cS$<>9__CachedAnonymousMethodDelegatebd = CS$<>9__CachedAnonymousMethodDelegatebd;
			if (CS$<>9__CachedAnonymousMethodDelegatebe == null)
			{
				CS$<>9__CachedAnonymousMethodDelegatebe = ((PersonalityDataFile personalityData, ChatmanAction action) => new <>f__AnonymousType6<PersonalityDataFile, ChatmanAction>(personalityData, action));
			}
			IEnumerable<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>> source4 = source3.SelectMany(cS$<>9__CachedAnonymousMethodDelegatebd, CS$<>9__CachedAnonymousMethodDelegatebe);
			if (CS$<>9__CachedAnonymousMethodDelegatebf == null)
			{
				CS$<>9__CachedAnonymousMethodDelegatebf = ((<>f__AnonymousType6<PersonalityDataFile, ChatmanAction> <>h__TransparentIdentifieraf) => <>h__TransparentIdentifieraf.get_action().Actions);
			}
			Func<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, IEnumerable<HardwareAction>> cS$<>9__CachedAnonymousMethodDelegatebf = CS$<>9__CachedAnonymousMethodDelegatebf;
			if (CS$<>9__CachedAnonymousMethodDelegatec0 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegatec0 = ((<>f__AnonymousType6<PersonalityDataFile, ChatmanAction> <>h__TransparentIdentifieraf, HardwareAction hardwareAction) => new <>f__AnonymousType7<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, HardwareAction>(<>h__TransparentIdentifieraf, hardwareAction));
			}
			IEnumerable<<>f__AnonymousType7<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, HardwareAction>> source5 = source4.SelectMany(cS$<>9__CachedAnonymousMethodDelegatebf, CS$<>9__CachedAnonymousMethodDelegatec0);
			if (CS$<>9__CachedAnonymousMethodDelegatec1 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegatec1 = ((<>f__AnonymousType7<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, HardwareAction> <>h__TransparentIdentifierb0) => <>h__TransparentIdentifierb0.get_hardwareAction() is SoundHardwareAction);
			}
			IEnumerable<string> enumerable = first.Except(from <>h__TransparentIdentifierb0 in source5.Where(CS$<>9__CachedAnonymousMethodDelegatec1)
				select Path.Combine(CS$<>8__locals0.personalityFolderName, (<>h__TransparentIdentifierb0.get_hardwareAction() as SoundHardwareAction).FileName).ToLower());
			try
			{
				if (enumerable.Count() > 0)
				{
					foreach (string item in enumerable)
					{
						try
						{
							File.Delete(item);
						}
						catch
						{
						}
					}
				}
			}
			catch
			{
			}
		}

		public bool ႨႠႭ(string Ⴓ)
		{
			//Discarded unreachable code: IL_0002, IL_0052, IL_0066, IL_006c
			bool result = default(bool);
			do
			{
				<>c__DisplayClassc5 CS$<>8__locals0 = new <>c__DisplayClassc5();
				CS$<>8__locals0.possibleSNs = Personality.Ⴄ.ႰႥ(Ⴓ);
				IEnumerable<ChatmanAction> source = ActionsByID.Ⴐ.Where(delegate(ChatmanAction action)
				{
					//Discarded unreachable code: IL_0002, IL_0035, IL_003a, IL_0055
					int result2;
					while (true)
					{
						if (action.SerialNumberUsedForDownload != null)
						{
							if (188 >= 188 - 28)
							{
							}
							if (action.SerialNumberUsedForDownload != string.Empty)
							{
								if (107 > 107 - 53)
								{
									result2 = ((!CS$<>8__locals0.possibleSNs.Contains(action.SerialNumberUsedForDownload)) ? 1 : 0);
									break;
								}
								continue;
							}
						}
						result2 = 0;
						break;
					}
					return (byte)result2 != 0;
				});
				if (source.Count() > 0)
				{
					if ((156 + 156 * 156) % 2 == 0)
					{
						result = true;
					}
					break;
				}
				result = false;
			}
			while (197 <= 197 - 175);
			return result;
		}

		public void ႨႠႤ(ChatmanAction Ⴍ)
		{
			Ⴗ(Ⴍ, Ⴓ: false, Ⴈ: false, null);
		}

		public void ႥႼ(ChatmanAction Ⴍ, bool Ⴓ)
		{
			Ⴗ(Ⴍ, Ⴓ, Ⴈ: false, null);
		}

		public void ႤႰ(ChatmanAction Ⴍ, ChatmanAction Ⴓ)
		{
			Ⴗ(Ⴍ, Ⴓ: false, Ⴈ: false, Ⴓ);
		}

		public void Ⴗ(ChatmanAction Ⴍ, bool Ⴓ, bool Ⴈ, ChatmanAction Ⴃ)
		{
			try
			{
				PersonalityData personalityData = null;
				personalityData = personalityDataFiles[0].Data;
				if (personalityData != null)
				{
					personalityData.Actions.Insert(0, Ⴍ);
					Ⴍ.personality = this;
					Ⴅ(Ⴍ, Ⴃ, Ⴓ, Ⴈ, Ⴗ: true);
				}
			}
			catch (Exception ⴍ)
			{
				ႥႥႨ.Ⴗ.ႨႷႭ(ⴍ);
			}
		}

		private void Ⴅ(ChatmanAction Ⴍ, ChatmanAction Ⴓ, bool Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 10;
			Func<ChatmanAction, bool> func = default(Func<ChatmanAction, bool>);
			<>c__DisplayClasscb CS$<>8__locals0 = default(<>c__DisplayClasscb);
			ChatmanAction chatmanAction = default(ChatmanAction);
			IEnumerable<int> source = default(IEnumerable<int>);
			while (true)
			{
				int num2;
				switch (num)
				{
				case 18:
					return;
				default:
					func = null;
					CS$<>8__locals0 = new <>c__DisplayClasscb();
					CS$<>8__locals0.newAction = Ⴍ;
					num = ((CS$<>8__locals0.newAction.SpecialActionCode != 0) ? 30 : 25);
					break;
				case 25:
					num = ((Ⴓ != null) ? 27 : 6);
					break;
				case 6:
				{
					ObservableDictionary<Guid, ChatmanAction> observableDictionary = ႨႰႠ();
					int ⴍ = observableDictionary.ႨႠႰ(CS$<>8__locals0.newAction.ID);
					chatmanAction = observableDictionary.ႨႠႳ(ⴍ);
					num = ((chatmanAction == null) ? 22 : 11);
					break;
				}
				case 11:
					actionsByID.Ⴍ(CS$<>8__locals0.newAction.ID, CS$<>8__locals0.newAction, chatmanAction.ID);
					num = 20;
					break;
				case 22:
					actionsByID.ႣႣ(CS$<>8__locals0.newAction.ID, CS$<>8__locals0.newAction);
					num = 20;
					break;
				case 20:
					num = 2;
					break;
				case 27:
					actionsByID.Ⴍ(CS$<>8__locals0.newAction.ID, CS$<>8__locals0.newAction, Ⴓ.ID);
					num = 2;
					break;
				case 2:
					num = 3;
					break;
				case 30:
					specialActionsByCode.Add(CS$<>8__locals0.newAction.SpecialActionCode, CS$<>8__locals0.newAction);
					num = 3;
					break;
				case 3:
					num = ((CS$<>8__locals0.newAction.Scope == ActionScope.Proactive) ? 14 : 21);
					break;
				case 21:
					num = (actionsByMood.Keys.Contains(CS$<>8__locals0.newAction.MoodID) ? 5 : 26);
					break;
				case 26:
					actionsByMood.Add(CS$<>8__locals0.newAction.MoodID, new List<ChatmanAction>());
					ႨႰႥ();
					num = 5;
					break;
				case 5:
					num = ((!Ⴗ) ? 8 : 13);
					break;
				case 13:
					CS$<>8__locals0.newAction.TotalCounter = 0;
					num = ((!actionsByMood.ContainsKey(CS$<>8__locals0.newAction.MoodID)) ? 12 : 24);
					break;
				case 24:
					num = ((!actionsByMood.ContainsKey(CS$<>8__locals0.newAction.MoodID)) ? 16 : 4);
					break;
				case 4:
					num2 = ((actionsByMood[CS$<>8__locals0.newAction.MoodID].Count <= 0) ? 1 : 0);
					goto IL_02dd;
				case 16:
					num2 = 1;
					goto IL_02dd;
				case 19:
				{
					List<ChatmanAction> source2 = actionsByMood[CS$<>8__locals0.newAction.MoodID];
					if (func == null)
					{
						func = ((ChatmanAction action) => action.Intensity >= CS$<>8__locals0.newAction.Intensity);
					}
					IEnumerable<ChatmanAction> source3 = source2.Where(func);
					if (CS$<>9__CachedAnonymousMethodDelegateca == null)
					{
						CS$<>9__CachedAnonymousMethodDelegateca = ((ChatmanAction action) => action.TotalCounter);
					}
					source = source3.Select(CS$<>9__CachedAnonymousMethodDelegateca);
					num = ((source.Count() > 0) ? 1 : 15);
					break;
				}
				case 1:
					CS$<>8__locals0.newAction.TotalCounter = source.Min();
					num = 15;
					break;
				case 15:
					num = 12;
					break;
				case 12:
					num = 8;
					break;
				case 8:
					actionsByMood[CS$<>8__locals0.newAction.MoodID].Add(CS$<>8__locals0.newAction);
					num = 14;
					break;
				case 14:
					num = ((CS$<>8__locals0.newAction.Scope == ActionScope.Reactive) ? 17 : 7);
					break;
				case 7:
					num = (proactiveActionsByMood.Keys.Contains(CS$<>8__locals0.newAction.MoodID) ? 29 : 28);
					break;
				case 28:
					proactiveActionsByMood.Add(CS$<>8__locals0.newAction.MoodID, new List<ChatmanAction>());
					ႨႰႷ();
					num = 29;
					break;
				case 29:
					proactiveActionsByMood[CS$<>8__locals0.newAction.MoodID].Add(CS$<>8__locals0.newAction);
					num = 17;
					break;
				case 17:
					UpdateDate = DateTime.Now;
					num = ((!Ⴃ) ? 23 : 0);
					break;
				case 23:
					ႨႠႷ(Ⴀ: false);
					num = 0;
					break;
				case 0:
					num = ((ActionAdded == null) ? 18 : 9);
					break;
				case 9:
					{
						ActionAdded(CS$<>8__locals0.newAction, Ⴈ);
						num = 18;
						break;
					}
					IL_02dd:
					num = ((num2 != 0) ? 12 : 19);
					break;
				}
			}
		}

		public void ႨႠႼ(ChatmanAction Ⴍ)
		{
			ႤႨ(Ⴍ, Ⴓ: false);
		}

		public void ႤႨ(ChatmanAction Ⴍ, bool Ⴓ)
		{
			int num = 23;
			bool flag = default(bool);
			Guid previousMoodID = default(Guid);
			Guid moodID = default(Guid);
			ChatmanAction chatmanAction = default(ChatmanAction);
			while (true)
			{
				int num2;
				switch (num)
				{
				case 17:
					return;
				default:
					num = (actionsByMood.Keys.Contains(Ⴍ.MoodID) ? 15 : 31);
					break;
				case 31:
					actionsByMood.Add(Ⴍ.MoodID, new List<ChatmanAction>());
					ႨႰႥ();
					num = 15;
					break;
				case 15:
					flag = false;
					num = (actionsByMood[Ⴍ.MoodID].Contains(Ⴍ) ? 30 : 2);
					break;
				case 2:
					previousMoodID = Ⴍ.previousMoodID;
					moodID = Ⴍ.MoodID;
					num = ((!actionsByMood.ContainsKey(previousMoodID)) ? 4 : 26);
					break;
				case 26:
					num2 = ((!actionsByMood.ContainsKey(moodID)) ? 1 : 0);
					goto IL_0142;
				case 4:
					num2 = 1;
					goto IL_0142;
				case 27:
				{
					actionsByMood[previousMoodID].Remove(Ⴍ);
					actionsByMood[moodID].Add(Ⴍ);
					ObservableDictionary<Guid, ChatmanAction> observableDictionary = ႨႰႠ();
					int ⴍ = observableDictionary.ႨႠႰ(Ⴍ.ID);
					chatmanAction = observableDictionary.ႨႠႳ(ⴍ);
					actionsByID.ႨႷႼ(Ⴍ.ID);
					num = ((chatmanAction == null) ? 7 : 10);
					break;
				}
				case 10:
					actionsByID.Ⴍ(Ⴍ.ID, Ⴍ, chatmanAction.ID);
					num = 20;
					break;
				case 7:
					actionsByID.ႣႣ(Ⴍ.ID, Ⴍ);
					num = 20;
					break;
				case 20:
					num = ((Ⴍ.Scope == ActionScope.Reactive) ? 24 : 6);
					break;
				case 6:
					num = (proactiveActionsByMood.Keys.Contains(Ⴍ.MoodID) ? 19 : 22);
					break;
				case 22:
					proactiveActionsByMood.Add(Ⴍ.MoodID, new List<ChatmanAction>());
					ႨႰႷ();
					num = 19;
					break;
				case 19:
					num = (proactiveActionsByMood[Ⴍ.MoodID].Contains(Ⴍ) ? 1 : 0);
					break;
				case 0:
					proactiveActionsByMood[previousMoodID].Remove(Ⴍ);
					proactiveActionsByMood[moodID].Add(Ⴍ);
					num = 1;
					break;
				case 1:
					num = 24;
					break;
				case 24:
					num = 32;
					break;
				case 25:
					flag = true;
					num = 32;
					break;
				case 32:
					num = 3;
					break;
				case 30:
					flag = true;
					num = 3;
					break;
				case 3:
					num = ((!flag) ? 9 : 28);
					break;
				case 28:
					actionsByID.ႣႷ(Ⴍ.ID, Ⴍ);
					num = 9;
					break;
				case 9:
					num = ((!Ⴍ.IsExcluded) ? 21 : 12);
					break;
				case 12:
					num = ((!actionsByID.Ⴐ.Contains(Ⴍ)) ? 29 : 13);
					break;
				case 13:
					actionsByID.ႨႷႼ(Ⴍ.ID);
					actionsByMood[Ⴍ.MoodID].Remove(Ⴍ);
					num = 11;
					break;
				case 29:
					num = ((!specialActionsByCode.Values.Contains(Ⴍ)) ? 5 : 14);
					break;
				case 14:
					specialActionsByCode.Remove(Ⴍ.SpecialActionCode);
					actionsByMood[Ⴍ.MoodID].Remove(Ⴍ);
					num = 5;
					break;
				case 5:
					num = 11;
					break;
				case 11:
					num = 21;
					break;
				case 21:
					UpdateDate = DateTime.Now;
					num = (Ⴓ ? 18 : 8);
					break;
				case 8:
					ႨႠႷ(Ⴀ: false);
					num = 18;
					break;
				case 18:
				{
					PersonalityDataFile personalityDataFile = personalityDataFiles[0];
					num = ((ActionUpdated == null) ? 17 : 16);
					break;
				}
				case 16:
					{
						ActionUpdated(Ⴍ);
						num = 17;
						break;
					}
					IL_0142:
					num = ((num2 != 0) ? 25 : 27);
					break;
				}
			}
		}

		public void ႨႣႰ(ChatmanAction Ⴍ)
		{
			ႤႥ(Ⴍ, Ⴓ: false);
		}

		public void ႤႥ(ChatmanAction Ⴍ, bool Ⴓ)
		{
			<>c__DisplayClassd0 CS$<>8__locals1 = new <>c__DisplayClassd0();
			CS$<>8__locals1.action = Ⴍ;
			PersonalityDataFile personalityDataFile = null;
			PersonalityData personalityData = null;
			personalityDataFile = personalityDataFiles.Where((PersonalityDataFile dataFile) => dataFile.Data.Actions.Contains(CS$<>8__locals1.action)).FirstOrDefault();
			if (personalityDataFile != null)
			{
				personalityData = personalityDataFile.Data;
				personalityData.Actions.Remove(CS$<>8__locals1.action);
			}
			actionsByID.ႨႷႼ(CS$<>8__locals1.action.ID);
			if (CS$<>8__locals1.action.SpecialActionCode != 0)
			{
				specialActionsByCode.Remove(CS$<>8__locals1.action.SpecialActionCode);
			}
			if (CS$<>8__locals1.action.Scope != ActionScope.Proactive && actionsByMood.ContainsKey(CS$<>8__locals1.action.MoodID))
			{
				actionsByMood[CS$<>8__locals1.action.MoodID].Remove(CS$<>8__locals1.action);
			}
			if (CS$<>8__locals1.action.Scope != 0 && proactiveActionsByMood.ContainsKey(CS$<>8__locals1.action.MoodID))
			{
				proactiveActionsByMood[CS$<>8__locals1.action.MoodID].Remove(CS$<>8__locals1.action);
			}
			CS$<>8__locals1.action.ႨႰႰ();
			if (personalityDataFile != null)
			{
				<>c__DisplayClassd3 CS$<>8__locals0 = new <>c__DisplayClassd3();
				CS$<>8__locals0.CS$<>8__localsd1 = CS$<>8__locals1;
				CS$<>8__locals0.scenarioAction = new ScenarioAction(CS$<>8__locals1.action.ID);
				try
				{
					List<Scenario> list = personalityDataFile.Data.Scenarios.Where((Scenario scenario) => scenario.Actions.Contains(CS$<>8__locals0.scenarioAction)).ToList();
					int num = 0;
					while (num < list.Count)
					{
						list[num].Actions.Remove(CS$<>8__locals0.scenarioAction);
						if (list[num].Actions.Count == 0 && list[num].Moods.Count == 0)
						{
							ႠႰ(list[num], Ⴓ: true);
							list.RemoveAt(num);
						}
						else
						{
							num++;
						}
					}
				}
				catch (Exception ⴍ)
				{
					ႥႥႨ.Ⴗ.ႨႷႭ(ⴍ);
				}
			}
			if (actionUsages != null)
			{
				actionUsages.Remove(new ActionUsage
				{
					ID = CS$<>8__locals1.action.ID
				});
			}
			UpdateDate = DateTime.Now;
			if (!Ⴓ)
			{
				ႨႠႷ(Ⴀ: false);
			}
			PersonalityDataFile personalityDataFile2 = personalityDataFiles[0];
			if (ActionDeleted != null)
			{
				ActionDeleted(CS$<>8__locals1.action);
			}
		}

		public ႭႥႰ.Ⴄ ႨႣႨ(ChatmanAction Ⴍ)
		{
			int num = 15;
			ႭႥႰ.Ⴄ ⴄ = default(ႭႥႰ.Ⴄ);
			ႭႥႰ.Ⴄ result = default(ႭႥႰ.Ⴄ);
			while (true)
			{
				int num4;
				int num3;
				int num2;
				switch (num)
				{
				default:
					ⴄ = ႭႥႰ.Ⴄ.Ⴐ;
					num = ((Ⴍ == null) ? 8 : 14);
					break;
				case 14:
					num4 = ((!Ⴍ.IsExcluded) ? 1 : 0);
					goto IL_006a;
				case 8:
					num4 = 0;
					goto IL_006a;
				case 16:
					result = ⴄ;
					num = 10;
					break;
				case 3:
					num = ((!Ⴍ.IsMy) ? 12 : 4);
					break;
				case 4:
					num3 = (Ⴍ.IsDeleted ? 1 : 0);
					goto IL_0099;
				case 12:
					num3 = 1;
					goto IL_0099;
				case 17:
					ⴄ |= ႭႥႰ.Ⴄ.Ⴅ;
					num = 5;
					break;
				case 5:
					num = (string.IsNullOrEmpty(Ⴍ.SerialNumberUsedForDownload) ? 2 : 7);
					break;
				case 7:
					ⴄ |= ႭႥႰ.Ⴄ.Ⴗ;
					num = 2;
					break;
				case 2:
					num = (string.IsNullOrEmpty(Ⴍ.SerialNumberUsedForDownload) ? 13 : 11);
					break;
				case 11:
					num2 = (Ⴍ.IsMy ? 1 : 0);
					goto IL_00f9;
				case 13:
					num2 = 1;
					goto IL_00f9;
				case 0:
					ⴄ |= ႭႥႰ.Ⴄ.Ⴓ;
					num = 1;
					break;
				case 1:
					num = ((!actionsByID.ႨႷႭ(Ⴍ.ID)) ? 6 : 9);
					break;
				case 9:
					ⴄ |= ႭႥႰ.Ⴄ.Ⴈ;
					num = 6;
					break;
				case 6:
					result = ⴄ;
					num = 10;
					break;
				case 10:
					{
						return result;
					}
					IL_00f9:
					num = ((num2 != 0) ? 1 : 0);
					break;
					IL_0099:
					num = ((num3 != 0) ? 5 : 17);
					break;
					IL_006a:
					num = ((num4 != 0) ? 3 : 16);
					break;
				}
			}
		}

		public void Ⴍ(ChatmanAction Ⴍ, string[] Ⴓ, out string[] Ⴈ, out string[] Ⴃ)
		{
			<>c__DisplayClassf5 CS$<>8__locals0 = new <>c__DisplayClassf5();
			CS$<>8__locals0.action = Ⴍ;
			bool flag = false;
			bool flag2 = false;
			Ⴃ = (Ⴈ = null);
			try
			{
				string[] source = ႨႣႥ(CS$<>8__locals0.action);
				string[] array = ႨႣႳ(CS$<>8__locals0.action.MoodID);
				if (CS$<>9__CachedAnonymousMethodDelegatee8 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatee8 = ((string word) => word);
				}
				IEnumerable<string> first = source.Select(CS$<>9__CachedAnonymousMethodDelegatee8);
				if (CS$<>9__CachedAnonymousMethodDelegatee9 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegatee9 = ((string word) => word.Trim());
				}
				Ⴃ = first.Except(Ⴓ.Select(CS$<>9__CachedAnonymousMethodDelegatee9)).ToArray();
				if (CS$<>9__CachedAnonymousMethodDelegateea == null)
				{
					CS$<>9__CachedAnonymousMethodDelegateea = ((string word) => word.Trim());
				}
				IEnumerable<string> first2 = Ⴓ.Select(CS$<>9__CachedAnonymousMethodDelegateea);
				if (CS$<>9__CachedAnonymousMethodDelegateeb == null)
				{
					CS$<>9__CachedAnonymousMethodDelegateeb = ((string word) => word);
				}
				Ⴈ = first2.Except(source.Select(CS$<>9__CachedAnonymousMethodDelegateeb)).ToArray();
				List<PersonalityDataFile> source2 = personalityDataFiles;
				if (CS$<>9__CachedAnonymousMethodDelegateec == null)
				{
					CS$<>9__CachedAnonymousMethodDelegateec = ((PersonalityDataFile personalityData) => personalityData.Data.Scenarios);
				}
				Func<PersonalityDataFile, IEnumerable<Scenario>> cS$<>9__CachedAnonymousMethodDelegateec = CS$<>9__CachedAnonymousMethodDelegateec;
				if (CS$<>9__CachedAnonymousMethodDelegateed == null)
				{
					CS$<>9__CachedAnonymousMethodDelegateed = ((PersonalityDataFile personalityData, Scenario scenario) => new <>f__AnonymousType8<PersonalityDataFile, Scenario>(personalityData, scenario));
				}
				IEnumerable<<>f__AnonymousType8<PersonalityDataFile, Scenario>> source3 = from <>h__TransparentIdentifierd5 in source2.SelectMany(cS$<>9__CachedAnonymousMethodDelegateec, CS$<>9__CachedAnonymousMethodDelegateed)
					where <>h__TransparentIdentifierd5.get_scenario().Actions.Contains(new ScenarioAction
					{
						ID = CS$<>8__locals0.action.ID
					})
					select <>h__TransparentIdentifierd5;
				if (CS$<>9__CachedAnonymousMethodDelegateef == null)
				{
					CS$<>9__CachedAnonymousMethodDelegateef = ((<>f__AnonymousType8<PersonalityDataFile, Scenario> <>h__TransparentIdentifierd5) => <>h__TransparentIdentifierd5.get_scenario());
				}
				Scenario[] array2 = source3.Select(CS$<>9__CachedAnonymousMethodDelegateef).ToArray();
				bool flag3 = Enumerable.Count(Ⴈ) > 0;
				if (Enumerable.Count(array2) == 0)
				{
					if (flag3)
					{
						Scenario scenario2 = Scenario.ႼႷ();
						scenario2.Description = ႥႠႭ.Ⴃ.ႰႣ(1821394871) + CS$<>8__locals0.action.Name;
						scenario2.Actions.Add(new ScenarioAction
						{
							ID = CS$<>8__locals0.action.ID,
							Action = CS$<>8__locals0.action
						});
						scenario2.EventType = EventType.IMTextIn;
						scenario2.HighPriority = true;
						if (Enumerable.Count(Ⴈ) > 0)
						{
							scenario2.Texts.Add(new ScenarioText
							{
								ID = 1,
								Data = string.Join(ႥႠႭ.Ⴓ.ႰႤ(1821394869), Ⴈ),
								Relation = ScenarioTextRelation.Include
							});
						}
						scenario2.DynamicTexts = Scenario.ႰႤ(scenario2);
						Ⴀ(scenario2, Ⴓ: false, Ⴈ: true, Ⴃ: true, Ⴗ: true);
						flag2 = true;
					}
				}
				else
				{
					Scenario[] array3 = array2;
					foreach (Scenario scenario3 in array3)
					{
						Scenario scenario4 = scenario3;
						List<ScenarioTextBase> texts = scenario3.Texts;
						if (CS$<>9__CachedAnonymousMethodDelegatef0 == null)
						{
							CS$<>9__CachedAnonymousMethodDelegatef0 = ((ScenarioTextBase scenarioText) => scenarioText.Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries));
						}
						Func<ScenarioTextBase, IEnumerable<string>> cS$<>9__CachedAnonymousMethodDelegatef = CS$<>9__CachedAnonymousMethodDelegatef0;
						if (CS$<>9__CachedAnonymousMethodDelegatef1 == null)
						{
							CS$<>9__CachedAnonymousMethodDelegatef1 = ((ScenarioTextBase scenarioText, string word) => new <>f__AnonymousType9<ScenarioTextBase, string>(scenarioText, word));
						}
						IEnumerable<<>f__AnonymousType9<ScenarioTextBase, string>> source4 = texts.SelectMany(cS$<>9__CachedAnonymousMethodDelegatef, CS$<>9__CachedAnonymousMethodDelegatef1);
						if (CS$<>9__CachedAnonymousMethodDelegatef2 == null)
						{
							CS$<>9__CachedAnonymousMethodDelegatef2 = ((<>f__AnonymousType9<ScenarioTextBase, string> <>h__TransparentIdentifierd6) => (object)<>h__TransparentIdentifierd6.get_scenarioText().GetType() == typeof(ScenarioText));
						}
						IEnumerable<<>f__AnonymousType9<ScenarioTextBase, string>> source5 = source4.Where(CS$<>9__CachedAnonymousMethodDelegatef2);
						if (CS$<>9__CachedAnonymousMethodDelegatef3 == null)
						{
							CS$<>9__CachedAnonymousMethodDelegatef3 = ((<>f__AnonymousType9<ScenarioTextBase, string> <>h__TransparentIdentifierd6) => <>h__TransparentIdentifierd6.get_word());
						}
						List<string> first3 = source5.Select(CS$<>9__CachedAnonymousMethodDelegatef3).ToList();
						bool flag4 = first3.Intersect(Ⴃ).Count() > 0;
						if (flag3 || flag4)
						{
							if (scenario3.Actions.Count > 1)
							{
								Scenario scenario2 = Scenario.ႤႠ(scenario3, Ⴃ: true);
								scenario2.Actions.Clear();
								scenario2.Actions.Add(new ScenarioAction
								{
									ID = CS$<>8__locals0.action.ID,
									Action = CS$<>8__locals0.action
								});
								scenario4 = scenario2;
								Ⴀ(scenario2, Ⴓ: false, Ⴈ: true, Ⴃ: true, Ⴗ: true);
								flag2 = true;
							}
							bool flag5 = false;
							int num = 0;
							while (num < scenario4.Texts.Count())
							{
								ScenarioTextBase scenarioTextBase = scenario4.Texts[num];
								string[] source6 = scenarioTextBase.Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries);
								if (CS$<>9__CachedAnonymousMethodDelegatef4 == null)
								{
									CS$<>9__CachedAnonymousMethodDelegatef4 = ((string word) => word);
								}
								List<string> list = source6.Select(CS$<>9__CachedAnonymousMethodDelegatef4).ToList();
								if (scenarioTextBase is ScenarioText)
								{
									if (scenarioTextBase.Relation == ScenarioTextRelation.Include)
									{
										string[] array4 = Ⴃ;
										foreach (string item in array4)
										{
											list.Remove(item);
										}
										if (!flag5)
										{
											array4 = Ⴈ;
											foreach (string item2 in array4)
											{
												if (!list.Contains(item2))
												{
													list.Add(item2);
												}
											}
											flag5 = true;
										}
									}
									else
									{
										string[] array4 = Ⴈ;
										foreach (string item2 in array4)
										{
											list.Remove(item2);
										}
									}
								}
								if (list.Count() > 0)
								{
									scenarioTextBase.Data = string.Join(ႤႤႭ.Ⴅ.ႰႣ(1821394866), list.ToArray());
									num++;
								}
								else
								{
									scenario4.Texts.Remove(scenarioTextBase);
								}
							}
							Ⴜ(scenario4, Ⴓ: true, Ⴈ: true, Ⴃ: true);
							flag2 = true;
						}
					}
				}
			}
			catch
			{
				flag = true;
			}
			if (flag2)
			{
				ႨႰႣ();
				ႨႰႭ();
				if (ScenariosUpdated != null)
				{
					ScenariosUpdated(Ⴃ: false);
				}
			}
			UpdateDate = DateTime.Now;
			if (!flag)
			{
				ႨႠႷ(Ⴀ: false);
			}
		}

		public string[] ႤႤ(Personality Ⴍ, Guid Ⴓ)
		{
			int num = 1;
			string[] result = default(string[]);
			while (true)
			{
				switch (num)
				{
				default:
					num = (Ⴍ.scenariosByMood.ContainsKey(Ⴓ) ? 3 : 0);
					break;
				case 3:
				{
					IEnumerable<Scenario> source = Ⴍ.scenariosByMood[Ⴓ];
					if (CS$<>9__CachedAnonymousMethodDelegatefe == null)
					{
						CS$<>9__CachedAnonymousMethodDelegatefe = ((Scenario scenario) => scenario.Texts);
					}
					Func<Scenario, IEnumerable<ScenarioTextBase>> cS$<>9__CachedAnonymousMethodDelegatefe = CS$<>9__CachedAnonymousMethodDelegatefe;
					if (CS$<>9__CachedAnonymousMethodDelegateff == null)
					{
						CS$<>9__CachedAnonymousMethodDelegateff = ((Scenario scenario, ScenarioTextBase text) => new <>f__AnonymousTypea<Scenario, ScenarioTextBase>(scenario, text));
					}
					IEnumerable<<>f__AnonymousTypea<Scenario, ScenarioTextBase>> source2 = source.SelectMany(cS$<>9__CachedAnonymousMethodDelegatefe, CS$<>9__CachedAnonymousMethodDelegateff);
					if (CS$<>9__CachedAnonymousMethodDelegate100 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate100 = delegate(<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifierf7)
						{
							//Discarded unreachable code: IL_0002, IL_001d, IL_003b, IL_0040
							int result3;
							if (!<>h__TransparentIdentifierf7.get_scenario().IsInternal)
							{
								bool result2 = default(bool);
								if (false)
								{
									return result2;
								}
								result3 = (((object)<>h__TransparentIdentifierf7.get_text().GetType() == typeof(ScenarioText)) ? 1 : 0);
							}
							else
							{
								result3 = 0;
							}
							return (byte)result3 != 0;
						};
					}
					IEnumerable<<>f__AnonymousTypea<Scenario, ScenarioTextBase>> source3 = source2.Where(CS$<>9__CachedAnonymousMethodDelegate100);
					if (CS$<>9__CachedAnonymousMethodDelegate101 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate101 = ((<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifierf7) => <>h__TransparentIdentifierf7.get_text().Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries));
					}
					IEnumerable<string[]> source4 = source3.Select(CS$<>9__CachedAnonymousMethodDelegate101);
					if (CS$<>9__CachedAnonymousMethodDelegate102 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate102 = ((string[] i) => i);
					}
					IEnumerable<string> source5 = source4.SelectMany(CS$<>9__CachedAnonymousMethodDelegate102);
					if (CS$<>9__CachedAnonymousMethodDelegate103 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate103 = ((string i) => i);
					}
					string[] array = source5.OrderBy(CS$<>9__CachedAnonymousMethodDelegate103).Distinct().ToArray();
					result = array;
					num = 2;
					break;
				}
				case 0:
					result = new string[0];
					num = 2;
					break;
				case 2:
					return result;
				}
			}
		}

		public string[] ႨႣႳ(Guid Ⴍ)
		{
			int num = 1;
			string[] result = default(string[]);
			while (true)
			{
				switch (num)
				{
				default:
					num = ((masterPersonality == null) ? 3 : 2);
					break;
				case 2:
					result = ႤႤ(masterPersonality, Ⴍ);
					num = 0;
					break;
				case 3:
					result = ႤႤ(this, Ⴍ);
					num = 0;
					break;
				case 0:
					return result;
				}
			}
		}

		public string[] ႤႠ(Personality Ⴍ, Guid Ⴓ)
		{
			//Discarded unreachable code: IL_0002, IL_002a, IL_0048, IL_0062, IL_0077, IL_0087, IL_009f, IL_00b4, IL_00cc, IL_00e4, IL_00fc, IL_0114, IL_012c, IL_014a
			string[] result;
			if (Ⴍ.ScenariosByMood.ContainsKey(Ⴓ))
			{
				if (775 > 775 - 460)
				{
					IEnumerable<Scenario> source = Ⴍ.ScenariosByMood[Ⴓ];
					if (CS$<>9__CachedAnonymousMethodDelegate10a == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate10a = ((Scenario scenario) => scenario.Texts);
					}
					Func<Scenario, IEnumerable<ScenarioTextBase>> cS$<>9__CachedAnonymousMethodDelegate10a = CS$<>9__CachedAnonymousMethodDelegate10a;
					if (CS$<>9__CachedAnonymousMethodDelegate10b == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate10b = ((Scenario scenario, ScenarioTextBase text) => new <>f__AnonymousTypea<Scenario, ScenarioTextBase>(scenario, text));
					}
					IEnumerable<<>f__AnonymousTypea<Scenario, ScenarioTextBase>> source2 = source.SelectMany(cS$<>9__CachedAnonymousMethodDelegate10a, CS$<>9__CachedAnonymousMethodDelegate10b);
					if (CS$<>9__CachedAnonymousMethodDelegate10c == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate10c = ((<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier104) => (object)<>h__TransparentIdentifier104.get_text().GetType() == typeof(ScenarioText));
					}
					IEnumerable<<>f__AnonymousTypea<Scenario, ScenarioTextBase>> source3 = source2.Where(CS$<>9__CachedAnonymousMethodDelegate10c);
					if (CS$<>9__CachedAnonymousMethodDelegate10d == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate10d = ((<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier104) => <>h__TransparentIdentifier104.get_text().Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries));
					}
					IEnumerable<string[]> source4 = source3.Select(CS$<>9__CachedAnonymousMethodDelegate10d);
					if (CS$<>9__CachedAnonymousMethodDelegate10e == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate10e = ((string[] i) => i);
					}
					string[] array = source4.SelectMany(CS$<>9__CachedAnonymousMethodDelegate10e).Distinct().ToArray();
					result = array;
					goto IL_014f;
				}
			}
			do
			{
				result = new string[0];
			}
			while (false);
			goto IL_014f;
			IL_014f:
			return result;
		}

		public string[] ႨႣႷ(Guid Ⴍ)
		{
			return ႤႠ(this, Ⴍ);
		}

		public string[] ႤႳ(ChatmanAction Ⴍ, Personality Ⴓ)
		{
			//Discarded unreachable code: IL_0002, IL_0020, IL_0035, IL_0045, IL_005a, IL_0072, IL_0087, IL_009a, IL_00b2, IL_00db, IL_00f3, IL_0108, IL_011d
			<>c__DisplayClass11e CS$<>8__locals0 = new <>c__DisplayClass11e();
			CS$<>8__locals0.action = Ⴍ;
			List<Scenario> source = Ⴓ.Scenarios;
			if (CS$<>9__CachedAnonymousMethodDelegate118 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate118 = ((Scenario scenario) => scenario.Texts);
			}
			Func<Scenario, IEnumerable<ScenarioTextBase>> cS$<>9__CachedAnonymousMethodDelegate = CS$<>9__CachedAnonymousMethodDelegate118;
			if (CS$<>9__CachedAnonymousMethodDelegate119 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate119 = ((Scenario scenario, ScenarioTextBase text) => new <>f__AnonymousTypea<Scenario, ScenarioTextBase>(scenario, text));
			}
			IEnumerable<<>f__AnonymousTypea<Scenario, ScenarioTextBase>> source2 = source.SelectMany(cS$<>9__CachedAnonymousMethodDelegate, CS$<>9__CachedAnonymousMethodDelegate119);
			if (CS$<>9__CachedAnonymousMethodDelegate11a == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate11a = ((<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier10f) => <>h__TransparentIdentifier10f.get_scenario().Actions);
			}
			Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, IEnumerable<ScenarioAction>> cS$<>9__CachedAnonymousMethodDelegate11a = CS$<>9__CachedAnonymousMethodDelegate11a;
			if (CS$<>9__CachedAnonymousMethodDelegate11b == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate11b = ((<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier10f, ScenarioAction scenarioAction) => new <>f__AnonymousTypeb<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, ScenarioAction>(<>h__TransparentIdentifier10f, scenarioAction));
			}
			IEnumerable<<>f__AnonymousTypeb<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, ScenarioAction>> source3 = source2.SelectMany(cS$<>9__CachedAnonymousMethodDelegate11a, CS$<>9__CachedAnonymousMethodDelegate11b).Where(delegate(<>f__AnonymousTypeb<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, ScenarioAction> <>h__TransparentIdentifier110)
			{
				//Discarded unreachable code: IL_002e, IL_0033, IL_0055
				int result;
				if ((object)<>h__TransparentIdentifier110.<>h__TransparentIdentifier10f.get_text().GetType() == typeof(ScenarioText))
				{
					if (651 >= 651 - 348)
					{
					}
					result = ((<>h__TransparentIdentifier110.get_scenarioAction().ID == CS$<>8__locals0.action.ID) ? 1 : 0);
				}
				else
				{
					result = 0;
				}
				return (byte)result != 0;
			});
			if (CS$<>9__CachedAnonymousMethodDelegate11c == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate11c = ((<>f__AnonymousTypeb<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, ScenarioAction> <>h__TransparentIdentifier110) => <>h__TransparentIdentifier110.<>h__TransparentIdentifier10f.get_text().Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries));
			}
			IEnumerable<string[]> source4 = source3.Select(CS$<>9__CachedAnonymousMethodDelegate11c);
			if (CS$<>9__CachedAnonymousMethodDelegate11d == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate11d = ((string[] i) => i);
			}
			return source4.SelectMany(CS$<>9__CachedAnonymousMethodDelegate11d).Distinct().ToArray();
		}

		public string[] ႨႣႥ(ChatmanAction Ⴍ)
		{
			return ႤႳ(Ⴍ, this);
		}

		public void ႤႷ(Guid Ⴍ, string[] Ⴓ)
		{
			Ⴀ(Ⴍ, Ⴓ, new string[0], Ⴃ: false, Ⴗ: false, Ⴅ: false);
		}

		public void Ⴅ(Guid Ⴍ, string[] Ⴓ, Personality Ⴈ, out string[] Ⴃ, out string[] Ⴗ, bool Ⴅ, bool Ⴐ)
		{
			Ⴗ = (Ⴃ = null);
			try
			{
				string[] source = Ⴈ.ႨႣႳ(Ⴍ);
				if (CS$<>9__CachedAnonymousMethodDelegate12a == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate12a = ((string word) => word);
				}
				IEnumerable<string> first = source.Select(CS$<>9__CachedAnonymousMethodDelegate12a);
				if (CS$<>9__CachedAnonymousMethodDelegate12b == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate12b = ((string word) => new <>f__AnonymousTypec<string, string>(word, word.Trim()));
				}
				IEnumerable<<>f__AnonymousTypec<string, string>> source2 = Ⴓ.Select(CS$<>9__CachedAnonymousMethodDelegate12b);
				if (CS$<>9__CachedAnonymousMethodDelegate12c == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate12c = ((<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier120) => <>h__TransparentIdentifier120.get_theWord() != string.Empty);
				}
				IEnumerable<<>f__AnonymousTypec<string, string>> source3 = source2.Where(CS$<>9__CachedAnonymousMethodDelegate12c);
				if (CS$<>9__CachedAnonymousMethodDelegate12d == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate12d = ((<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier120) => <>h__TransparentIdentifier120.get_theWord());
				}
				Ⴗ = first.Except(source3.Select(CS$<>9__CachedAnonymousMethodDelegate12d)).ToArray();
				if (CS$<>9__CachedAnonymousMethodDelegate12e == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate12e = ((string word) => new <>f__AnonymousTypec<string, string>(word, word.Trim()));
				}
				IEnumerable<<>f__AnonymousTypec<string, string>> source4 = Ⴓ.Select(CS$<>9__CachedAnonymousMethodDelegate12e);
				if (CS$<>9__CachedAnonymousMethodDelegate12f == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate12f = ((<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier121) => <>h__TransparentIdentifier121.get_theWord() != string.Empty);
				}
				IEnumerable<<>f__AnonymousTypec<string, string>> source5 = source4.Where(CS$<>9__CachedAnonymousMethodDelegate12f);
				if (CS$<>9__CachedAnonymousMethodDelegate130 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate130 = ((<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier121) => <>h__TransparentIdentifier121.get_word().Trim());
				}
				IEnumerable<string> first2 = source5.Select(CS$<>9__CachedAnonymousMethodDelegate130);
				if (CS$<>9__CachedAnonymousMethodDelegate131 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate131 = ((string word) => word);
				}
				Ⴃ = first2.Except(source.Select(CS$<>9__CachedAnonymousMethodDelegate131)).ToArray();
				if (Ⴗ.Length != 0 || Ⴃ.Length != 0)
				{
					Ⴀ(Ⴍ, Ⴃ, Ⴗ, Ⴅ, Ⴐ, Ⴅ: false);
				}
			}
			catch
			{
			}
		}

		public void Ⴅ(Guid Ⴍ, Guid Ⴓ, string[] Ⴈ, Personality Ⴃ, out string[] Ⴗ, out string[] Ⴅ)
		{
			Ⴅ = (Ⴗ = null);
			try
			{
				string[] source = Ⴃ.ႨႣႳ(Ⴍ);
				if (CS$<>9__CachedAnonymousMethodDelegate13c == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate13c = ((string word) => word);
				}
				IEnumerable<string> first = source.Select(CS$<>9__CachedAnonymousMethodDelegate13c);
				if (CS$<>9__CachedAnonymousMethodDelegate13d == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate13d = ((string word) => new <>f__AnonymousTypec<string, string>(word, word.Trim()));
				}
				IEnumerable<<>f__AnonymousTypec<string, string>> source2 = Ⴈ.Select(CS$<>9__CachedAnonymousMethodDelegate13d);
				if (CS$<>9__CachedAnonymousMethodDelegate13e == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate13e = ((<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier132) => <>h__TransparentIdentifier132.get_theWord() != string.Empty);
				}
				IEnumerable<<>f__AnonymousTypec<string, string>> source3 = source2.Where(CS$<>9__CachedAnonymousMethodDelegate13e);
				if (CS$<>9__CachedAnonymousMethodDelegate13f == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate13f = ((<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier132) => <>h__TransparentIdentifier132.get_theWord());
				}
				Ⴅ = first.Except(source3.Select(CS$<>9__CachedAnonymousMethodDelegate13f)).ToArray();
				if (CS$<>9__CachedAnonymousMethodDelegate140 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate140 = ((string word) => new <>f__AnonymousTypec<string, string>(word, word.Trim()));
				}
				IEnumerable<<>f__AnonymousTypec<string, string>> source4 = Ⴈ.Select(CS$<>9__CachedAnonymousMethodDelegate140);
				if (CS$<>9__CachedAnonymousMethodDelegate141 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate141 = ((<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier133) => <>h__TransparentIdentifier133.get_theWord() != string.Empty);
				}
				IEnumerable<<>f__AnonymousTypec<string, string>> source5 = source4.Where(CS$<>9__CachedAnonymousMethodDelegate141);
				if (CS$<>9__CachedAnonymousMethodDelegate142 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate142 = ((<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier133) => <>h__TransparentIdentifier133.get_word().Trim());
				}
				IEnumerable<string> first2 = source5.Select(CS$<>9__CachedAnonymousMethodDelegate142);
				if (CS$<>9__CachedAnonymousMethodDelegate143 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate143 = ((string word) => word);
				}
				Ⴗ = first2.Except(source.Select(CS$<>9__CachedAnonymousMethodDelegate143)).ToArray();
				if (Ⴅ.Length != 0 || Ⴗ.Length != 0)
				{
					this.Ⴍ(Ⴓ, Ⴗ, Ⴅ);
					Ⴀ(Ⴍ, Ⴗ, Ⴅ, Ⴃ: true, Ⴗ: true, Ⴅ: true);
				}
			}
			catch
			{
			}
		}

		public void Ⴃ(List<string> Ⴍ, List<string> Ⴓ, bool Ⴈ, bool Ⴃ)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				case 3:
					return;
				default:
					ႨႰႼ();
					num = ((ScenariosUpdated == null) ? 5 : 4);
					break;
				case 4:
					ScenariosUpdated(Ⴃ);
					num = 5;
					break;
				case 5:
					num = ((MoodWordsUpdated == null) ? 6 : 2);
					break;
				case 2:
					num2 = (Ⴈ ? 1 : 0);
					goto IL_0062;
				case 6:
					num2 = 1;
					goto IL_0062;
				case 1:
					{
						MoodWordsUpdated(Ⴍ.ToArray(), Ⴓ.ToArray());
						num = 3;
						break;
					}
					IL_0062:
					num = ((num2 == 0) ? 1 : 3);
					break;
				}
			}
		}

		private void Ⴀ(Guid Ⴍ, string[] Ⴓ, string[] Ⴈ, bool Ⴃ, bool Ⴗ, bool Ⴅ)
		{
			bool flag = false;
			bool flag2 = false;
			List<string> list = new List<string>();
			List<string> list2 = new List<string>();
			try
			{
				Scenario[] array = null;
				bool flag3 = true;
				if (scenariosByMood.ContainsKey(Ⴍ))
				{
					IEnumerable<Scenario> source = scenariosByMood[Ⴍ];
					if (CS$<>9__CachedAnonymousMethodDelegate14c == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate14c = ((Scenario scenario) => scenario.IsInternal);
					}
					array = source.Where(CS$<>9__CachedAnonymousMethodDelegate14c).ToArray();
					flag3 = (Enumerable.Count(array) == 0);
				}
				if (flag3)
				{
					Scenario scenario2 = Scenario.ႼႷ();
					scenario2.Description = moodList.ႨႷႰ(Ⴍ).Name;
					scenario2.Moods.Add(new ScenarioMood
					{
						ID = Ⴍ
					});
					scenario2.IsInternal = true;
					scenario2.EventType = EventType.IMTextIn;
					scenario2.Texts.Add(new ScenarioText
					{
						ID = 1,
						Data = ႥႠႭ.Ⴓ.ႰႤ(1821394870),
						Relation = ScenarioTextRelation.Include
					});
					scenario2.Texts.Add(new ScenarioText
					{
						ID = 2,
						Data = ႤႤႭ.Ⴅ.ႰႣ(1821394858),
						Relation = ScenarioTextRelation.Include,
						Deleted = true
					});
					Ⴀ(scenario2, Ⴓ: false, Ⴈ: true, Ⴃ: true, Ⴗ: true);
					flag2 = true;
					array = new Scenario[1]
					{
						scenario2
					};
				}
				for (int i = 0; i < Enumerable.Count(array); i++)
				{
					bool flag4 = false;
					Scenario scenario3 = array[i];
					ScenarioText scenarioText = new ScenarioText();
					scenarioText.ID = 1;
					scenarioText.Data = ႥႠႭ.Ⴈ.ႰႥ(1821394866);
					scenarioText.Relation = ScenarioTextRelation.Include;
					ScenarioText scenarioText2 = scenarioText;
					int num = scenario3.Texts.IndexOf(scenarioText2);
					if (num == -1)
					{
						scenario3.Texts.Add(scenarioText2);
					}
					else
					{
						scenarioText2 = (scenario3.Texts[num] as ScenarioText);
					}
					ScenarioText scenarioText3 = new ScenarioText();
					scenarioText3.ID = 2;
					scenarioText3.Data = ႥႠႭ.Ⴈ.ႰႥ(1821394866);
					scenarioText3.Relation = ScenarioTextRelation.Include;
					scenarioText3.Deleted = true;
					ScenarioText scenarioText4 = scenarioText3;
					num = scenario3.Texts.IndexOf(scenarioText4);
					if (num == -1)
					{
						scenario3.Texts.Add(scenarioText4);
					}
					else
					{
						scenarioText4 = (scenario3.Texts[num] as ScenarioText);
					}
					string[] source2 = scenarioText2.Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries);
					if (CS$<>9__CachedAnonymousMethodDelegate14d == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate14d = ((string word) => word);
					}
					List<string> list3 = source2.Select(CS$<>9__CachedAnonymousMethodDelegate14d).ToList();
					string[] array2 = Ⴈ;
					foreach (string item in array2)
					{
						if (list3.Remove(item))
						{
							flag4 = true;
						}
					}
					array2 = Ⴓ;
					foreach (string item2 in array2)
					{
						if (!list3.Contains(item2))
						{
							list3.Add(item2);
							flag4 = true;
							list.Add(item2);
						}
					}
					if (list3.Count() > 0)
					{
						scenarioText2.Data = string.Join(ႥႠႭ.Ⴓ.ႰႤ(1821394869), list3.ToArray());
					}
					else
					{
						scenario3.Texts.Remove(scenarioText2);
					}
					string[] source3 = scenarioText4.Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries);
					if (CS$<>9__CachedAnonymousMethodDelegate14e == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate14e = ((string word) => word);
					}
					list3 = source3.Select(CS$<>9__CachedAnonymousMethodDelegate14e).ToList();
					array2 = Ⴓ;
					foreach (string item2 in array2)
					{
						if (list3.Remove(item2))
						{
							flag4 = true;
						}
					}
					if (!Ⴅ)
					{
						array2 = Ⴈ;
						foreach (string item in array2)
						{
							if (!list3.Contains(item))
							{
								list3.Add(item);
								list2.Add(item);
								flag4 = true;
							}
						}
					}
					if (list3.Count() > 0)
					{
						scenarioText4.Data = string.Join(ႤႤႭ.Ⴅ.ႰႣ(1821394866), list3.ToArray());
					}
					else
					{
						scenario3.Texts.Remove(scenarioText4);
					}
					flag2 = (flag4 || flag2);
					if (flag4)
					{
						Ⴜ(scenario3, Ⴓ: true, Ⴈ: false, Ⴃ: true);
					}
				}
			}
			catch
			{
				flag = true;
			}
			if (flag2)
			{
				UpdateDate = DateTime.Now;
				if (!flag)
				{
					ႨႠႷ(Ⴀ: false);
				}
				if (!Ⴃ && ScenariosUpdated != null)
				{
					ScenariosUpdated(Ⴃ: false);
				}
			}
			if (!Ⴗ && MoodWordsUpdated != null)
			{
				MoodWordsUpdated(list.ToArray(), list2.ToArray());
			}
		}

		private void Ⴍ(Guid Ⴍ, string[] Ⴓ, string[] Ⴈ)
		{
			bool flag = false;
			bool flag2 = false;
			List<string> list = new List<string>();
			List<string> list2 = new List<string>();
			try
			{
				Scenario[] array = null;
				bool flag3 = true;
				if (scenariosByMood.ContainsKey(Ⴍ))
				{
					IEnumerable<Scenario> source = scenariosByMood[Ⴍ];
					if (CS$<>9__CachedAnonymousMethodDelegate154 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate154 = ((Scenario scenario) => scenario.IsInternal);
					}
					array = source.Where(CS$<>9__CachedAnonymousMethodDelegate154).ToArray();
					flag3 = (Enumerable.Count(array) == 0);
				}
				if (flag3)
				{
					Scenario scenario2 = Scenario.ႼႷ();
					scenario2.Description = moodList.ႨႷႰ(Ⴍ).Name;
					scenario2.Moods.Add(new ScenarioMood
					{
						ID = Ⴍ
					});
					scenario2.IsInternal = true;
					scenario2.EventType = EventType.IMTextIn;
					scenario2.Texts.Add(new ScenarioText
					{
						ID = 2,
						Data = ႥႠႭ.Ⴈ.ႰႥ(1821394866),
						Relation = ScenarioTextRelation.Include,
						Deleted = true
					});
					Ⴀ(scenario2, Ⴓ: false, Ⴈ: true, Ⴃ: true, Ⴗ: true);
					flag2 = true;
					array = new Scenario[1]
					{
						scenario2
					};
				}
				for (int i = 0; i < Enumerable.Count(array); i++)
				{
					bool flag4 = false;
					Scenario scenario3 = array[i];
					ScenarioText scenarioText = new ScenarioText();
					scenarioText.ID = 2;
					scenarioText.Data = ႥႠႭ.Ⴍ.ႰႣ(1821394859);
					scenarioText.Relation = ScenarioTextRelation.Include;
					scenarioText.Deleted = true;
					ScenarioText scenarioText2 = scenarioText;
					int num = scenario3.Texts.IndexOf(scenarioText2);
					if (num == -1)
					{
						scenario3.Texts.Add(scenarioText2);
					}
					else
					{
						scenarioText2 = (scenario3.Texts[num] as ScenarioText);
					}
					string[] source2 = scenarioText2.Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries);
					if (CS$<>9__CachedAnonymousMethodDelegate155 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate155 = ((string word) => word);
					}
					List<string> list3 = source2.Select(CS$<>9__CachedAnonymousMethodDelegate155).ToList();
					string[] array2 = Ⴈ;
					foreach (string item in array2)
					{
						if (list3.Remove(item))
						{
							flag4 = true;
						}
					}
					array2 = Ⴓ;
					foreach (string item2 in array2)
					{
						if (!list3.Contains(item2))
						{
							list3.Add(item2);
							list2.Add(item2);
							flag4 = true;
						}
					}
					if (list3.Count() > 0)
					{
						scenarioText2.Data = string.Join(ႤႤႭ.Ⴅ.ႰႣ(1821394866), list3.ToArray());
					}
					else
					{
						scenario3.Texts.Remove(scenarioText2);
					}
					flag2 = (flag4 || flag2);
					if (flag4)
					{
						Ⴜ(scenario3, Ⴓ: true, Ⴈ: true, Ⴃ: true);
					}
				}
			}
			catch (Exception ⴍ)
			{
				ႥႥႨ.Ⴗ.ႨႷႭ(ⴍ);
			}
		}

		public bool ႤႭ(string Ⴍ, ChatmanAction Ⴓ)
		{
			int num = 1;
			Func<KeyValuePair<Guid, ChatmanAction>, bool> func2 = default(Func<KeyValuePair<Guid, ChatmanAction>, bool>);
			Func<KeyValuePair<Guid, ChatmanAction>, bool> func = default(Func<KeyValuePair<Guid, ChatmanAction>, bool>);
			<>c__DisplayClass164 CS$<>8__locals0 = default(<>c__DisplayClass164);
			bool result = default(bool);
			while (true)
			{
				switch (num)
				{
				default:
					func2 = null;
					func = null;
					CS$<>8__locals0 = new <>c__DisplayClass164();
					CS$<>8__locals0.actionToExclude = Ⴓ;
					CS$<>8__locals0.actionNameLower = Ⴍ.ToLower();
					num = ((CS$<>8__locals0.actionToExclude != null) ? 3 : 0);
					break;
				case 3:
				{
					ObservableDictionary<Guid, ChatmanAction> source3 = actionsByID;
					if (func2 == null)
					{
						func2 = delegate(KeyValuePair<Guid, ChatmanAction> action)
						{
							int num2 = 0;
							int result2;
							while (true)
							{
								int num3;
								switch (num2)
								{
								default:
									num3 = ((!(action.Value.Name.ToLower() == CS$<>8__locals0.actionNameLower)) ? 1 : 2);
									goto IL_0033;
								case 2:
									result2 = ((action.Value.ID != CS$<>8__locals0.actionToExclude.ID) ? 1 : 0);
									break;
								case 1:
									result2 = 0;
									break;
								}
								break;
								IL_0033:
								num2 = num3;
							}
							return (byte)result2 != 0;
						};
					}
					IEnumerable<KeyValuePair<Guid, ChatmanAction>> source4 = source3.Where(func2);
					if (CS$<>9__CachedAnonymousMethodDelegate161 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate161 = ((KeyValuePair<Guid, ChatmanAction> action) => action.Value);
					}
					result = (source4.Select(CS$<>9__CachedAnonymousMethodDelegate161).Count() > 0);
					num = 2;
					break;
				}
				case 0:
				{
					ObservableDictionary<Guid, ChatmanAction> source = actionsByID;
					if (func == null)
					{
						func = ((KeyValuePair<Guid, ChatmanAction> action) => action.Value.Name.ToLower() == CS$<>8__locals0.actionNameLower);
					}
					IEnumerable<KeyValuePair<Guid, ChatmanAction>> source2 = source.Where(func);
					if (CS$<>9__CachedAnonymousMethodDelegate163 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate163 = ((KeyValuePair<Guid, ChatmanAction> action) => action.Value);
					}
					result = (source2.Select(CS$<>9__CachedAnonymousMethodDelegate163).Count() > 0);
					num = 2;
					break;
				}
				case 2:
					return result;
				}
			}
		}

		public void ႨႣႠ(Scenario Ⴍ)
		{
			Ⴀ(Ⴍ, Ⴓ: false, Ⴈ: false, Ⴃ: false, Ⴗ: false);
		}

		public void ႤႣ(Scenario Ⴍ, bool Ⴓ)
		{
			Ⴀ(Ⴍ, Ⴓ, Ⴈ: false, Ⴃ: false, Ⴗ: false);
		}

		public void Ⴀ(Scenario Ⴍ, bool Ⴓ, bool Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0039, IL_006a, IL_0082, IL_0097, IL_00a3, IL_00bb, IL_00d3, IL_00eb, IL_0103, IL_011b, IL_013e, IL_014e, IL_0195, IL_01b8, IL_01cc, IL_01e4, IL_01f7, IL_020f, IL_022d, IL_0245, IL_0258, IL_026d, IL_027d, IL_0295, IL_02b7, IL_02fe, IL_0363, IL_037d, IL_0382, IL_03a6
			<>c__DisplayClass17b CS$<>8__locals0 = new <>c__DisplayClass17b();
			while (true)
			{
				IL_02c5:
				PersonalityDataFile personalityDataFile = null;
				while (true)
				{
					CS$<>8__locals0.selectedPersonalityData = null;
					if (Ⴍ.Actions.Count <= 0)
					{
						goto IL_0172;
					}
					if (false)
					{
						break;
					}
					goto IL_01bd;
					IL_01bd:
					List<PersonalityDataFile> source = personalityDataFiles;
					if (CS$<>9__CachedAnonymousMethodDelegate172 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate172 = ((PersonalityDataFile dataFile) => dataFile.Data.Actions);
					}
					Func<PersonalityDataFile, IEnumerable<ChatmanAction>> cS$<>9__CachedAnonymousMethodDelegate = CS$<>9__CachedAnonymousMethodDelegate172;
					if (CS$<>9__CachedAnonymousMethodDelegate173 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate173 = ((PersonalityDataFile dataFile, ChatmanAction action) => new <>f__AnonymousTyped<PersonalityDataFile, ChatmanAction>(dataFile, action));
					}
					IEnumerable<<>f__AnonymousTyped<PersonalityDataFile, ChatmanAction>> outer = source.SelectMany(cS$<>9__CachedAnonymousMethodDelegate, CS$<>9__CachedAnonymousMethodDelegate173);
					List<ScenarioAction> actions = Ⴍ.Actions;
					if (CS$<>9__CachedAnonymousMethodDelegate174 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate174 = ((<>f__AnonymousTyped<PersonalityDataFile, ChatmanAction> <>h__TransparentIdentifier166) => <>h__TransparentIdentifier166.get_action().ID);
					}
					Func<<>f__AnonymousTyped<PersonalityDataFile, ChatmanAction>, Guid> cS$<>9__CachedAnonymousMethodDelegate2 = CS$<>9__CachedAnonymousMethodDelegate174;
					if (CS$<>9__CachedAnonymousMethodDelegate175 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate175 = ((ScenarioAction theAction) => theAction.ID);
					}
					Func<ScenarioAction, Guid> cS$<>9__CachedAnonymousMethodDelegate3 = CS$<>9__CachedAnonymousMethodDelegate175;
					if (CS$<>9__CachedAnonymousMethodDelegate176 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate176 = ((<>f__AnonymousTyped<PersonalityDataFile, ChatmanAction> <>h__TransparentIdentifier166, ScenarioAction theAction) => <>h__TransparentIdentifier166.get_dataFile());
					}
					personalityDataFile = outer.Join(actions, cS$<>9__CachedAnonymousMethodDelegate2, cS$<>9__CachedAnonymousMethodDelegate3, CS$<>9__CachedAnonymousMethodDelegate176).FirstOrDefault();
					if (103 <= 103 - 18)
					{
						continue;
					}
					goto IL_0172;
					IL_0172:
					bool flag = personalityDataFile != null;
					while (!flag)
					{
						if (606 >= 606 - 48)
						{
							personalityDataFile = personalityDataFiles[0];
							if ((827 + 827 * 827) % 2 == 0)
							{
								break;
							}
							continue;
						}
						goto IL_02c5;
					}
					while (true)
					{
						CS$<>8__locals0.selectedPersonalityData = personalityDataFile.Data;
						if (Ⴓ)
						{
							if (false)
							{
								break;
							}
							CS$<>8__locals0.selectedPersonalityData.Scenarios.Insert(0, Ⴍ);
						}
						else
						{
							CS$<>8__locals0.selectedPersonalityData.Scenarios.Add(Ⴍ);
							if (782 < 782 - 124)
							{
								goto IL_01a6;
							}
						}
						if (Ⴍ.Actions.Count <= 0)
						{
							goto IL_0325;
						}
						if ((430 + 430 * 430) % 2 == 0)
						{
							goto IL_0070;
						}
						goto IL_0332;
						IL_0325:
						CS$<>8__locals0.selectedPersonalityData.ႨႳႼ(Ⴍ);
						goto IL_0332;
						IL_0070:
						string text = personalityDataFile.Ⴐ;
						List<ScenarioAction> actions2 = Ⴍ.Actions;
						Func<ScenarioAction, IEnumerable<ChatmanAction>> collectionSelector = (ScenarioAction scenarioAction) => CS$<>8__locals0.selectedPersonalityData.Actions;
						if (CS$<>9__CachedAnonymousMethodDelegate178 == null)
						{
							CS$<>9__CachedAnonymousMethodDelegate178 = ((ScenarioAction scenarioAction, ChatmanAction action) => new <>f__AnonymousTypee<ScenarioAction, ChatmanAction>(scenarioAction, action));
						}
						IEnumerable<<>f__AnonymousTypee<ScenarioAction, ChatmanAction>> source2 = actions2.SelectMany(collectionSelector, CS$<>9__CachedAnonymousMethodDelegate178);
						if (CS$<>9__CachedAnonymousMethodDelegate179 == null)
						{
							CS$<>9__CachedAnonymousMethodDelegate179 = ((<>f__AnonymousTypee<ScenarioAction, ChatmanAction> <>h__TransparentIdentifier168) => <>h__TransparentIdentifier168.get_action().ID == <>h__TransparentIdentifier168.get_scenarioAction().ID);
						}
						IEnumerable<<>f__AnonymousTypee<ScenarioAction, ChatmanAction>> source3 = source2.Where(CS$<>9__CachedAnonymousMethodDelegate179);
						if (CS$<>9__CachedAnonymousMethodDelegate17a == null)
						{
							CS$<>9__CachedAnonymousMethodDelegate17a = ((<>f__AnonymousTypee<ScenarioAction, ChatmanAction> <>h__TransparentIdentifier168) => new ႭႥႰ.Ⴗ(<>h__TransparentIdentifier168.get_scenarioAction(), <>h__TransparentIdentifier168.get_action()));
						}
						IEnumerable<ႭႥႰ.Ⴗ> enumerable = source3.Select(CS$<>9__CachedAnonymousMethodDelegate17a);
						if (665 <= 665 - 48)
						{
							goto IL_02c5;
						}
						goto IL_0325;
						IL_0332:
						this.Ⴃ(Ⴍ, CS$<>8__locals0.selectedPersonalityData, Ⴈ: false);
						ႤႼ(Ⴈ, Ⴃ);
						int num;
						if (!Ⴗ)
						{
							if (false)
							{
								goto IL_0070;
							}
							num = ((ScenariosUpdated == null) ? 1 : 0);
						}
						else
						{
							num = 1;
						}
						if (num != 0)
						{
							return;
						}
						if (342 < 342 - 302)
						{
							goto IL_0070;
						}
						ScenariosUpdated(Ⴃ: false);
						goto IL_01a6;
						IL_01a6:
						if ((38 + 38 * 38) % 2 == 0)
						{
							return;
						}
					}
					goto IL_01bd;
				}
				break;
			}
		}

		private void ႤႼ(bool Ⴍ, bool Ⴓ)
		{
			int num = 2;
			while (true)
			{
				switch (num)
				{
				case 4:
					return;
				default:
					num = (Ⴍ ? 1 : 0);
					break;
				case 0:
					ႨႰႣ();
					ႨႰႭ();
					num = 1;
					break;
				case 1:
					UpdateDate = DateTime.Now;
					num = (Ⴓ ? 4 : 3);
					break;
				case 3:
					ႨႠႷ(Ⴀ: false);
					num = 4;
					break;
				}
			}
		}

		private void Ⴃ(Scenario Ⴍ, PersonalityData Ⴓ, bool Ⴈ)
		{
			switch (0)
			{
			}
			<>c__DisplayClass188 CS$<>8__locals0 = new <>c__DisplayClass188();
			CS$<>8__locals0.newScenario = Ⴍ;
			CS$<>8__locals0.selectedPersonalityData = Ⴓ;
			List<WordScenario> list = CS$<>8__locals0.selectedPersonalityData.wordList;
			List<ScenarioTextBase> dynamicTexts = CS$<>8__locals0.newScenario.DynamicTexts;
			if (CS$<>9__CachedAnonymousMethodDelegate185 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate185 = ((ScenarioTextBase text) => text.Data.Split(','));
			}
			Func<ScenarioTextBase, IEnumerable<string>> cS$<>9__CachedAnonymousMethodDelegate = CS$<>9__CachedAnonymousMethodDelegate185;
			if (CS$<>9__CachedAnonymousMethodDelegate186 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate186 = ((ScenarioTextBase text, string phraseText) => new <>f__AnonymousTypef<ScenarioTextBase, string>(text, phraseText));
			}
			IEnumerable<<>f__AnonymousType10<<>f__AnonymousTypef<ScenarioTextBase, string>, PhraseWordContainer>> source = from <>h__TransparentIdentifier17d in dynamicTexts.SelectMany(cS$<>9__CachedAnonymousMethodDelegate, CS$<>9__CachedAnonymousMethodDelegate186)
				select new <>f__AnonymousType10<<>f__AnonymousTypef<ScenarioTextBase, string>, PhraseWordContainer>(<>h__TransparentIdentifier17d, new PhraseWordContainer(<>h__TransparentIdentifier17d.get_phraseText().Split(' '), 0, CS$<>8__locals0.selectedPersonalityData.phraseCounter++));
			if (CS$<>9__CachedAnonymousMethodDelegate187 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate187 = ((<>f__AnonymousType10<<>f__AnonymousTypef<ScenarioTextBase, string>, PhraseWordContainer> <>h__TransparentIdentifier17e) => <>h__TransparentIdentifier17e.get_phrase().ႰႥ());
			}
			list.AddRange(source.SelectMany(CS$<>9__CachedAnonymousMethodDelegate187, delegate(<>f__AnonymousType10<<>f__AnonymousTypef<ScenarioTextBase, string>, PhraseWordContainer> <>h__TransparentIdentifier17e, string word)
			{
				int iD = <>h__TransparentIdentifier17e.<>h__TransparentIdentifier17d.get_text().ID;
				Scenario newScenario = CS$<>8__locals0.newScenario;
				ScenarioTextBase text2 = <>h__TransparentIdentifier17e.<>h__TransparentIdentifier17d.get_text();
				int ⴃ = <>h__TransparentIdentifier17e.get_phrase().ႰႠ();
				PhraseWordContainer phrase = <>h__TransparentIdentifier17e.get_phrase();
				int ⴗ;
				phrase.ႰႥ((ⴗ = phrase.ႰႨ()) + 1);
				return new WordScenario(word, new ScenarioRelationPair(iD, newScenario, text2, ⴃ, ⴗ, <>h__TransparentIdentifier17e.get_phrase().ႰႥ().Length - 1));
			}));
		}

		public void ႨႣႣ(Scenario Ⴍ)
		{
			Ⴜ(Ⴍ, Ⴓ: false, Ⴈ: false, Ⴃ: false);
		}

		public void Ⴜ(Scenario Ⴍ, bool Ⴓ, bool Ⴈ, bool Ⴃ)
		{
			//Discarded unreachable code: IL_0005, IL_0023, IL_0036, IL_003b, IL_0054, IL_006a, IL_0090, IL_00b4, IL_00c7, IL_00dc, IL_0102
			do
			{
				ႨႥ(Ⴍ, Ⴓ, Ⴈ: true, Ⴃ: true);
				bool flag;
				while (true)
				{
					flag = ႨႣႭ(Ⴍ);
					while (true)
					{
						if (!flag)
						{
							if ((322 + 322 * 322) % 2 == 0)
							{
								Ⴀ(Ⴍ, Ⴓ: false, Ⴓ, Ⴈ, Ⴗ: true);
								goto IL_0056;
							}
						}
						else
						{
							UpdateDate = DateTime.Now;
						}
						goto IL_009d;
						IL_0056:
						int num;
						if (Ⴃ)
						{
							num = 1;
						}
						else
						{
							if (771 < 771 - 716)
							{
								goto IL_000e;
							}
							num = ((ScenariosUpdated == null) ? 1 : 0);
						}
						flag = ((byte)num != 0);
						goto end_IL_0076;
						IL_00c9:
						if (893 < 893 - 275)
						{
							break;
						}
						goto IL_0056;
						IL_000e:
						if (false)
						{
							goto IL_009d;
						}
						goto IL_00c9;
						IL_009d:
						flag = Ⴈ;
						if (!flag)
						{
							if ((622 + 622 * 622) % 2 == 0)
							{
								ႨႠႷ(Ⴀ: false);
								goto IL_000e;
							}
							continue;
						}
						goto IL_00c9;
					}
					continue;
					end_IL_0076:
					break;
				}
				do
				{
					if (flag)
					{
						return;
					}
				}
				while (285 < 285 - 60);
				ScenariosUpdated(Ⴃ: false);
			}
			while (false);
		}

		private bool ႨႣႭ(Scenario Ⴍ)
		{
			int num = 2;
			string[] array = default(string[]);
			int result;
			while (true)
			{
				switch (num)
				{
				default:
				{
					List<ScenarioTextBase> texts = Ⴍ.Texts;
					if (CS$<>9__CachedAnonymousMethodDelegate18d == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate18d = ((ScenarioTextBase text) => text.Data.Split(','));
					}
					Func<ScenarioTextBase, IEnumerable<string>> cS$<>9__CachedAnonymousMethodDelegate18d = CS$<>9__CachedAnonymousMethodDelegate18d;
					if (CS$<>9__CachedAnonymousMethodDelegate18e == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate18e = ((ScenarioTextBase text, string phraseText) => phraseText);
					}
					array = texts.SelectMany(cS$<>9__CachedAnonymousMethodDelegate18d, CS$<>9__CachedAnonymousMethodDelegate18e).ToArray();
					num = ((array.Length == 0) ? 4 : 3);
					continue;
				}
				case 3:
					num = ((array.Length != 1) ? 1 : 0);
					continue;
				case 0:
					result = ((array[0] == string.Empty) ? 1 : 0);
					break;
				case 1:
					result = 0;
					break;
				case 4:
					result = 1;
					break;
				}
				break;
			}
			return (byte)result != 0;
		}

		public void ႨႣႤ(Scenario Ⴍ)
		{
			ႨႥ(Ⴍ, Ⴓ: false, Ⴈ: false, Ⴃ: false);
		}

		public void ႠႰ(Scenario Ⴍ, bool Ⴓ)
		{
			ႨႥ(Ⴍ, Ⴓ: false, Ⴓ, Ⴃ: false);
		}

		public void ႨႥ(Scenario Ⴍ, bool Ⴓ, bool Ⴈ, bool Ⴃ)
		{
			//Discarded unreachable code: IL_0005, IL_0026, IL_0052, IL_005a, IL_0078, IL_009b, IL_010a, IL_0136, IL_0149, IL_016f, IL_0196
			<>c__DisplayClass191 CS$<>8__locals0 = new <>c__DisplayClass191();
			CS$<>8__locals0.scenarioToProcess = Ⴍ;
			while (true)
			{
				IL_00ac:
				PersonalityDataFile personalityDataFile = null;
				PersonalityData personalityData = null;
				while (true)
				{
					personalityDataFile = personalityDataFiles.Where((PersonalityDataFile dataFile) => dataFile.Data.Scenarios.Contains(CS$<>8__locals0.scenarioToProcess)).First();
					while (true)
					{
						IL_00ce:
						personalityData = personalityDataFile.Data;
						personalityData.Scenarios.Remove(CS$<>8__locals0.scenarioToProcess);
						while (true)
						{
							IL_00e8:
							WordScenario[] array = personalityData.wordList.Where((WordScenario wordScenario) => wordScenario.Ⴐ.Ⴐ == CS$<>8__locals0.scenarioToProcess).ToArray();
							int num = 0;
							while (true)
							{
								if (num >= Enumerable.Count(array))
								{
									if (false)
									{
										break;
									}
									if (!Ⴓ)
									{
										if (false)
										{
											goto IL_00ac;
										}
										ႨႰႣ();
										ႨႰႭ();
										if (false)
										{
											goto IL_00ce;
										}
									}
									UpdateDate = DateTime.Now;
									int num2;
									if (Ⴃ)
									{
										num2 = 1;
									}
									else
									{
										if (false)
										{
											goto IL_00e8;
										}
										num2 = ((ScenariosUpdated == null) ? 1 : 0);
									}
									if (num2 != 0)
									{
										return;
									}
									if (130 >= 130 - 119)
									{
										ScenariosUpdated(Ⴃ: false);
										if (830 > 830 - 301)
										{
											return;
										}
										goto IL_00ce;
									}
								}
								else
								{
									personalityData.wordList.Remove(array[num]);
									num++;
									if (871 < 871 - 779)
									{
									}
								}
							}
							break;
						}
						break;
					}
				}
			}
		}

		public void ႨႨ(string Ⴍ, string Ⴓ, Scenario Ⴈ, string Ⴃ)
		{
			int num = 2;
			Func<<>f__AnonymousType11<ScenarioTextBase, string>, string> func = default(Func<<>f__AnonymousType11<ScenarioTextBase, string>, string>);
			<>c__DisplayClass1a2 CS$<>8__locals0 = default(<>c__DisplayClass1a2);
			Scenario scenario2 = default(Scenario);
			while (true)
			{
				switch (num)
				{
				case 4:
					return;
				default:
				{
					func = null;
					CS$<>8__locals0 = new <>c__DisplayClass1a2();
					CS$<>8__locals0.question = Ⴍ;
					CS$<>8__locals0.expression = Ⴃ;
					List<Scenario> source = scenarios;
					if (CS$<>9__CachedAnonymousMethodDelegate19d == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate19d = ((Scenario scenario) => scenario.IsUserQnA);
					}
					scenario2 = (from scenario in source.Where(CS$<>9__CachedAnonymousMethodDelegate19d)
						where string.Compare(scenario.Texts[0].Data, CS$<>8__locals0.question, StringComparison.InvariantCultureIgnoreCase) == 0
						select scenario).FirstOrDefault();
					num = ((scenario2 == null) ? 3 : 5);
					break;
				}
				case 5:
					Ⴜ(scenario2, CS$<>8__locals0.question, Ⴓ);
					num = 4;
					break;
				case 3:
					scenario2 = Scenario.ႼႷ();
					scenario2.HighPriority = true;
					scenario2.IsUserQnA = true;
					scenario2.IsInternal = true;
					scenario2.EventType = EventType.IMTextIn;
					num = ((Ⴈ != null) ? 7 : 6);
					break;
				case 6:
					scenario2.Texts.Add(new ScenarioText
					{
						ID = 1,
						Data = CS$<>8__locals0.question,
						Relation = ScenarioTextRelation.Include
					});
					num = 8;
					break;
				case 7:
				{
					List<ScenarioTextBase> texts = Ⴈ.Texts;
					if (CS$<>9__CachedAnonymousMethodDelegate19e == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate19e = ((ScenarioTextBase text) => text.Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries));
					}
					Func<ScenarioTextBase, IEnumerable<string>> cS$<>9__CachedAnonymousMethodDelegate19e = CS$<>9__CachedAnonymousMethodDelegate19e;
					if (CS$<>9__CachedAnonymousMethodDelegate19f == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate19f = ((ScenarioTextBase text, string q) => new <>f__AnonymousType11<ScenarioTextBase, string>(text, q));
					}
					IEnumerable<<>f__AnonymousType11<ScenarioTextBase, string>> source2 = texts.SelectMany(cS$<>9__CachedAnonymousMethodDelegate19e, CS$<>9__CachedAnonymousMethodDelegate19f);
					if (CS$<>9__CachedAnonymousMethodDelegate1a0 == null)
					{
						CS$<>9__CachedAnonymousMethodDelegate1a0 = delegate(<>f__AnonymousType11<ScenarioTextBase, string> <>h__TransparentIdentifier193)
						{
							int num2 = 1;
							int result;
							while (true)
							{
								int num3;
								switch (num2)
								{
								default:
									num3 = (<>h__TransparentIdentifier193.get_q().EndsWith(ႤႤႭ.Ⴅ.ႰႣ(1821394872)) ? 2 : 0);
									goto IL_002c;
								case 2:
									result = ((<>h__TransparentIdentifier193.get_text().Relation == ScenarioTextRelation.Include) ? 1 : 0);
									break;
								case 0:
									result = 0;
									break;
								}
								break;
								IL_002c:
								num2 = num3;
							}
							return (byte)result != 0;
						};
					}
					IEnumerable<<>f__AnonymousType11<ScenarioTextBase, string>> source3 = source2.Where(CS$<>9__CachedAnonymousMethodDelegate1a0);
					if (func == null)
					{
						func = ((<>f__AnonymousType11<ScenarioTextBase, string> <>h__TransparentIdentifier193) => <>h__TransparentIdentifier193.get_q().Substring(0, <>h__TransparentIdentifier193.get_q().Length - 1) + CS$<>8__locals0.expression);
					}
					List<string> list = source3.Select(func).ToList();
					list.Remove(CS$<>8__locals0.question);
					scenario2.Texts.Add(new ScenarioText
					{
						ID = 1,
						Data = CS$<>8__locals0.question + ႥႠႭ.Ⴃ.ႰႣ(1821394869) + string.Join(ႥႠႭ.Ⴃ.ႰႣ(1821394869), list.ToArray()),
						Relation = ScenarioTextRelation.Include
					});
					num = 8;
					break;
				}
				case 8:
					scenario2.Actions.Add(new ScenarioUserAction
					{
						AnswerText = Ⴓ,
						RequestedActivity = QnAScenarioMatchActivity.AnswerQuestion
					});
					ႨႣႠ(scenario2);
					num = ((QuestionsUpdated != null) ? 1 : 0);
					break;
				case 1:
					QuestionsUpdated(1, 0);
					num = 0;
					break;
				case 0:
					num = 4;
					break;
				}
			}
		}

		public void Ⴜ(Scenario Ⴍ, string Ⴓ, string Ⴈ)
		{
			//Discarded unreachable code: IL_0002, IL_0021, IL_003b, IL_0089, IL_008d
			do
			{
				bool flag = Ⴍ != null;
				while (!flag)
				{
					if (416 <= 416 - 59)
					{
						continue;
					}
					return;
				}
				Ⴍ.Texts[0].Data = Ⴓ;
				(Ⴍ.Actions[0] as ScenarioUserAction).AnswerText = Ⴈ;
				ႨႣႣ(Ⴍ);
				if (QuestionsUpdated != null)
				{
					if ((39 + 39 * 39) % 2 == 0)
					{
						QuestionsUpdated(0, 0);
					}
					continue;
				}
				break;
			}
			while (424 < 424 - 112);
		}

		public void ႨႣႼ(Scenario Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0020, IL_0042, IL_0065, IL_0069
			bool flag = Scenarios.Contains(Ⴍ);
			if (flag)
			{
				goto IL_0044;
			}
			if (820 <= 820 - 134)
			{
				goto IL_0055;
			}
			return;
			IL_0055:
			if (flag)
			{
				return;
			}
			if (885 > 885 - 110)
			{
				QuestionsUpdated(0, 1);
				if ((881 + 881 * 881) % 2 == 0)
				{
				}
				return;
			}
			goto IL_0044;
			IL_0044:
			ႨႣႤ(Ⴍ);
			flag = (QuestionsUpdated == null);
			goto IL_0055;
		}

		public bool ႥႨ(Scenario Ⴍ, out string Ⴓ, out string Ⴈ)
		{
			if (!Ⴍ.IsUserQnA)
			{
				Ⴓ = (Ⴈ = string.Empty);
				return false;
			}
			try
			{
				Ⴓ = Ⴍ.Texts[0].Data;
				Ⴈ = (Ⴍ.Actions[0] as ScenarioUserAction).AnswerText;
			}
			catch
			{
				Ⴓ = (Ⴈ = string.Empty);
			}
			return true;
		}

		public void Dispose()
		{
			ႨႭႰ(Ⴍ: true);
			GC.SuppressFinalize(this);
		}

		protected void ႨႭႰ(bool Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0011, IL_003d, IL_0057
			bool flag = disposed;
			while (!flag)
			{
				if (351 > 351 - 193)
				{
					flag = !Ⴍ;
				}
				if (!flag)
				{
					if (409 > 409 - 133)
					{
						while (884 < 884 - 727)
						{
						}
					}
				}
				if (430 >= 430 - 29)
				{
					break;
				}
			}
			disposed = true;
		}

		private void ႨႭႨ(string Ⴍ)
		{
			int num = 1;
			while (true)
			{
				switch (num)
				{
				case 2:
					return;
				default:
					num = ((propertyChanged == null) ? 2 : 0);
					break;
				case 0:
					propertyChanged(this, new PropertyChangedEventArgs(Ⴍ));
					num = 2;
					break;
				}
			}
		}

		public bool Equals(Personality Ⴍ)
		{
			return Ⴍ.Name == Name;
		}

		public bool Equals(Personality Ⴍ, Personality Ⴓ)
		{
			return Ⴍ.name == Ⴓ.name;
		}

		public int GetHashCode(Personality Ⴍ)
		{
			return Ⴍ.name.GetHashCode();
		}

		public int Compare(Personality Ⴍ, Personality Ⴓ)
		{
			return Ⴍ.Name.CompareTo(Ⴓ.Name);
		}

		public void ႠႨ(string Ⴍ, bool Ⴓ)
		{
			FileUtils.AssureFolder(Ⴍ);
			File.Copy(FileName, Path.Combine(Ⴍ, ႥႠႭ.Ⴃ.ႰႣ(1821394864)), overwrite: true);
			foreach (PersonalityDataFile dataFile in DataFiles)
			{
				if (dataFile.FileRelevance == DataFileLocation.PersonalityDataFile)
				{
					File.Copy(Path.Combine(Path.GetDirectoryName(FileName), dataFile.FileName), Path.Combine(Ⴍ, dataFile.FileName), overwrite: true);
				}
			}
			if (!Ⴓ)
			{
				string[] files = Directory.GetFiles(Path.GetDirectoryName(FileName), ႥႠႭ.Ⴓ.ႰႤ(1821394871));
				foreach (string text in files)
				{
					File.Copy(text, Path.Combine(Ⴍ, Path.GetFileName(text)), overwrite: true);
				}
				files = Directory.GetFiles(Path.GetDirectoryName(FileName), ႤႤႭ.Ⴅ.ႰႣ(1821394867));
				foreach (string text in files)
				{
					File.Copy(text, Path.Combine(Ⴍ, Path.GetFileName(text)), overwrite: true);
				}
				files = Directory.GetFiles(Path.GetDirectoryName(FileName), ႥႠႭ.Ⴈ.ႰႥ(1821394867));
				foreach (string text in files)
				{
					File.Copy(text, Path.Combine(Ⴍ, Path.GetFileName(text)), overwrite: true);
				}
			}
		}

		public void ႠႥ(string Ⴍ, bool Ⴓ)
		{
			File.Copy(Path.Combine(Ⴍ, ႥႠႭ.Ⴓ.ႰႤ(1821394864)), FileName, overwrite: true);
			foreach (PersonalityDataFile dataFile in DataFiles)
			{
				File.Copy(Path.Combine(Ⴍ, dataFile.FileName), Path.Combine(Path.GetDirectoryName(FileName), dataFile.FileName), overwrite: true);
			}
			if (!Ⴓ)
			{
				string[] files = Directory.GetFiles(Ⴍ, ႤႤႭ.Ⴅ.ႰႣ(1821394876));
				foreach (string text in files)
				{
					File.Copy(text, Path.Combine(Path.GetDirectoryName(FileName), Path.GetFileName(text)), overwrite: true);
				}
				files = Directory.GetFiles(Ⴍ, ႥႠႭ.Ⴈ.ႰႥ(1821394876));
				foreach (string text in files)
				{
					File.Copy(text, Path.Combine(Path.GetDirectoryName(FileName), Path.GetFileName(text)), overwrite: true);
				}
				files = Directory.GetFiles(Ⴍ, ႥႠႭ.Ⴍ.ႰႣ(1821394869));
				foreach (string text in files)
				{
					File.Copy(text, Path.Combine(Path.GetDirectoryName(FileName), Path.GetFileName(text)), overwrite: true);
				}
			}
		}

		public static bool ႨႭႳ(Personality Ⴍ)
		{
			int num = 2;
			string a = default(string);
			int result;
			while (true)
			{
				switch (num)
				{
				default:
					a = Ⴍ.ID.ToString(ႥႠႭ.Ⴈ.ႰႥ(1821394877)).ToLower();
					num = ((a == ႤႤႭ.Ⴅ.ႰႣ(1821394877)) ? 9 : 0);
					continue;
				case 0:
					num = ((a == ႥႠႭ.Ⴈ.ႰႥ(1821394878)) ? 9 : 5);
					continue;
				case 5:
					num = ((a == ႥႠႭ.Ⴍ.ႰႣ(1821394870)) ? 9 : 6);
					continue;
				case 6:
					num = ((a == ႥႠႭ.Ⴃ.ႰႣ(1821394865)) ? 9 : 8);
					continue;
				case 8:
					num = ((a == ႥႠႭ.Ⴓ.ႰႤ(1821394865)) ? 9 : 4);
					continue;
				case 4:
					num = ((a == ႤႤႭ.Ⴅ.ႰႣ(1821394878)) ? 9 : 7);
					continue;
				case 7:
					num = ((!(a == ႥႠႭ.Ⴈ.ႰႥ(1821394879))) ? 1 : 9);
					continue;
				case 1:
					num = ((a == ႥႠႭ.Ⴍ.ႰႣ(1821394871)) ? 9 : 3);
					continue;
				case 3:
					result = ((a == ႥႠႭ.Ⴃ.ႰႣ(1821394866)) ? 1 : 0);
					break;
				case 9:
					result = 1;
					break;
				}
				break;
			}
			return (byte)result != 0;
		}

		public ChatmanAction ႨႭႷ(Guid Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0020, IL_0035, IL_0045, IL_005a, IL_0080, IL_0095
			<>c__DisplayClass1ac CS$<>8__locals0 = new <>c__DisplayClass1ac();
			CS$<>8__locals0.actionId = Ⴍ;
			List<PersonalityData> source = personalityDataParts;
			if (CS$<>9__CachedAnonymousMethodDelegate1a9 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate1a9 = ((PersonalityData personalityPartData) => personalityPartData.Actions);
			}
			Func<PersonalityData, IEnumerable<ChatmanAction>> cS$<>9__CachedAnonymousMethodDelegate1a = CS$<>9__CachedAnonymousMethodDelegate1a9;
			if (CS$<>9__CachedAnonymousMethodDelegate1aa == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate1aa = ((PersonalityData personalityPartData, ChatmanAction action) => new <>f__AnonymousType1<PersonalityData, ChatmanAction>(personalityPartData, action));
			}
			IEnumerable<<>f__AnonymousType1<PersonalityData, ChatmanAction>> source2 = source.SelectMany(cS$<>9__CachedAnonymousMethodDelegate1a, CS$<>9__CachedAnonymousMethodDelegate1aa).Where(delegate(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier1a4)
			{
				//Discarded unreachable code: IL_0002, IL_001b, IL_0047, IL_004c, IL_0064
				Guid iD = <>h__TransparentIdentifier1a4.get_action().ID;
				int result;
				while (true)
				{
					if (iD.Equals(CS$<>8__locals0.actionId))
					{
						if ((951 + 951 * 951) % 2 == 0 && <>h__TransparentIdentifier1a4.get_action().SpecialActionCode == 0)
						{
							if (59 >= 59 - 23)
							{
								result = ((<>h__TransparentIdentifier1a4.get_action().Scope != ActionScope.Proactive) ? 1 : 0);
								break;
							}
							continue;
						}
					}
					result = 0;
					break;
				}
				return (byte)result != 0;
			});
			if (CS$<>9__CachedAnonymousMethodDelegate1ab == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate1ab = ((<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier1a4) => <>h__TransparentIdentifier1a4.get_action());
			}
			return source2.Select(CS$<>9__CachedAnonymousMethodDelegate1ab).FirstOrDefault();
		}

		public IChatmanAction GetAction(Guid Ⴍ)
		{
			return actionsByID.ႨႷႣ(Ⴍ);
		}

		public IChatmanAction GetSpecialAction(int Ⴍ)
		{
			return specialActionsByCode[Ⴍ];
		}

		public IEnumerable<IChatmanAction> GetAllActions()
		{
			//Discarded unreachable code: IL_0002, IL_0018, IL_002d
			Dictionary<Guid, ChatmanAction>.ValueCollection source = actionsByID.Ⴐ;
			if (CS$<>9__CachedAnonymousMethodDelegate1af == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate1af = ((ChatmanAction action) => action);
			}
			return source.Select(CS$<>9__CachedAnonymousMethodDelegate1af);
		}

		public IEnumerable<IChatmanAction> GetAllSpecialActions()
		{
			switch (0)
			{
			default:
			{
				Dictionary<int, ChatmanAction>.ValueCollection values = specialActionsByCode.Values;
				if (CS$<>9__CachedAnonymousMethodDelegate1b1 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate1b1 = ((ChatmanAction action) => action);
				}
				return values.Select(CS$<>9__CachedAnonymousMethodDelegate1b1);
			}
			}
		}

		public IEnumerable<IChatmanAction> GetActionsByMood(Guid Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0019, IL_002e
			List<ChatmanAction> source = actionsByMood[Ⴍ];
			if (CS$<>9__CachedAnonymousMethodDelegate1b3 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate1b3 = ((ChatmanAction action) => action);
			}
			return source.Select(CS$<>9__CachedAnonymousMethodDelegate1b3);
		}

		private static <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <get_VisibleActionsByID>b__2(KeyValuePair<Guid, ChatmanAction> actionIDPair)
		{
			return new <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>(actionIDPair, actionIDPair.Value);
		}

		private bool <get_VisibleActionsByID>b__3(<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <>h__TransparentIdentifier1)
		{
			return MoodList.ႨႷႰ(<>h__TransparentIdentifier1.get_theAction().MoodID).IsVisible;
		}

		private static KeyValuePair<Guid, ChatmanAction> <get_VisibleActionsByID>b__4(<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <>h__TransparentIdentifier1)
		{
			return <>h__TransparentIdentifier1.get_actionIDPair();
		}

		private static <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <get_MyActions>b__8(KeyValuePair<Guid, ChatmanAction> actionIDPair)
		{
			return new <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>(actionIDPair, actionIDPair.Value);
		}

		private static bool <get_MyActions>b__9(<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <>h__TransparentIdentifier7)
		{
			int num = 3;
			int result;
			while (true)
			{
				switch (num)
				{
				default:
					num = (<>h__TransparentIdentifier7.get_theAction().IsMy ? 1 : 0);
					continue;
				case 1:
					num = ((!<>h__TransparentIdentifier7.get_theAction().IsDeleted) ? 2 : 0);
					continue;
				case 2:
					result = ((!<>h__TransparentIdentifier7.get_theAction().IsExcluded) ? 1 : 0);
					break;
				case 0:
					result = 0;
					break;
				}
				break;
			}
			return (byte)result != 0;
		}

		private static KeyValuePair<Guid, ChatmanAction> <get_MyActions>b__a(<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <>h__TransparentIdentifier7)
		{
			return <>h__TransparentIdentifier7.get_actionIDPair();
		}

		private static bool <get_SharedActions>b__e(KeyValuePair<Guid, ChatmanAction> actionIDPair)
		{
			return !string.IsNullOrEmpty(actionIDPair.Value.SerialNumberUsedForDownload);
		}

		private static <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <get_DownloadedActions>b__11(KeyValuePair<Guid, ChatmanAction> actionIDPair)
		{
			return new <>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction>(actionIDPair, actionIDPair.Value);
		}

		private static bool <get_DownloadedActions>b__12(<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <>h__TransparentIdentifier10)
		{
			//Discarded unreachable code: IL_0002, IL_0014, IL_0035, IL_003a
			int result;
			if (!string.IsNullOrEmpty(<>h__TransparentIdentifier10.get_theAction().SerialNumberUsedForDownload))
			{
				if (686 > 686 - 112)
				{
					result = ((!<>h__TransparentIdentifier10.get_theAction().IsMy) ? 1 : 0);
					goto IL_003c;
				}
			}
			result = 0;
			goto IL_003c;
			IL_003c:
			return (byte)result != 0;
		}

		private static KeyValuePair<Guid, ChatmanAction> <get_DownloadedActions>b__13(<>f__AnonymousType0<KeyValuePair<Guid, ChatmanAction>, ChatmanAction> <>h__TransparentIdentifier10)
		{
			return <>h__TransparentIdentifier10.get_actionIDPair();
		}

		private static Guid <SyncActionUsageToData>b__1c(ChatmanAction action)
		{
			return action.ID;
		}

		private static Guid <SyncActionUsageToData>b__1d(ActionUsage actionUsage)
		{
			return actionUsage.ID;
		}

		private static ႭႥႰ.Ⴀ <SyncActionUsageToData>b__1e(ChatmanAction action, ActionUsage actionUsage)
		{
			return new ႭႥႰ.Ⴀ(actionUsage, action);
		}

		private static ActionUsage <SyncActionUsageFromData>b__23(ChatmanAction action)
		{
			ActionUsage actionUsage = new ActionUsage();
			actionUsage.ID = action.ID;
			actionUsage.DailyAverage = action.DailyAverage;
			actionUsage.DaysUsed = action.DaysUsed;
			actionUsage.LastUseDate = action.LastUseDate;
			actionUsage.TotalCounter = action.TotalCounter;
			return actionUsage;
		}

		private static IEnumerable<ChatmanAction> <MergeDataFiles>b__29(PersonalityData personalityPartData)
		{
			return personalityPartData.Actions;
		}

		private static <>f__AnonymousType1<PersonalityData, ChatmanAction> <MergeDataFiles>b__2a(PersonalityData personalityPartData, ChatmanAction action)
		{
			return new <>f__AnonymousType1<PersonalityData, ChatmanAction>(personalityPartData, action);
		}

		private static bool <MergeDataFiles>b__2b(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier25)
		{
			//Discarded unreachable code: IL_0002, IL_0017, IL_0038
			int result;
			if (!<>h__TransparentIdentifier25.get_action().IsExcluded)
			{
				if ((936 + 936 * 936) % 2 == 0)
				{
					result = ((<>h__TransparentIdentifier25.get_action().SpecialActionCode != 0) ? 1 : 0);
					goto IL_003a;
				}
			}
			result = 0;
			goto IL_003a;
			IL_003a:
			return (byte)result != 0;
		}

		private static ChatmanAction <MergeDataFiles>b__2c(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier25)
		{
			return <>h__TransparentIdentifier25.get_action();
		}

		private static int <MergeDataFiles>b__2d(ChatmanAction Action)
		{
			return Action.SpecialActionCode;
		}

		private static Guid <MergeDataFiles>b__2e(MoodCounter item)
		{
			return item.ID;
		}

		private bool <MergeDataFiles>b__2f(Mood mood)
		{
			switch (0)
			{
			default:
			{
				Dictionary<Guid, MoodCounter> source = stateMoodCounters;
				if (CS$<>9__CachedAnonymousMethodDelegate45 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate45 = ((KeyValuePair<Guid, MoodCounter> moodDefaultState) => moodDefaultState.Value.ID);
				}
				return !source.Select(CS$<>9__CachedAnonymousMethodDelegate45).Contains(mood.ID);
			}
			}
		}

		private static MoodCounter <MergeDataFiles>b__31(Mood mood)
		{
			return new MoodCounter(mood);
		}

		private static IEnumerable<MoodMatrix> <MergeDataFiles>b__32(PersonalityData personalityPartData)
		{
			return personalityPartData.MoodMatrixes;
		}

		private static MoodMatrix <MergeDataFiles>b__33(PersonalityData personalityPartData, MoodMatrix moodMatrix)
		{
			return moodMatrix;
		}

		private static IEnumerable<ConstraintFilterDefinition> <MergeDataFiles>b__34(PersonalityData personalityPartData)
		{
			return personalityPartData.ConstraintFilters;
		}

		private static ConstraintFilterDefinition <MergeDataFiles>b__35(PersonalityData personalityPartData, ConstraintFilterDefinition filter)
		{
			return filter;
		}

		private static IEnumerable<ActionProducerDefinition> <MergeDataFiles>b__36(PersonalityData personalityPartData)
		{
			return personalityPartData.ActionProducers;
		}

		private static ActionProducerDefinition <MergeDataFiles>b__37(PersonalityData personalityPartData, ActionProducerDefinition producer)
		{
			return producer;
		}

		private static Guid <MergeDataFiles>b__30(KeyValuePair<Guid, MoodCounter> moodDefaultState)
		{
			return moodDefaultState.Value.ID;
		}

		private static IEnumerable<ChatmanAction> <BuildActionListByMood>b__47(PersonalityData personalityPartData)
		{
			return personalityPartData.Actions;
		}

		private static <>f__AnonymousType2<PersonalityData, ChatmanAction> <BuildActionListByMood>b__48(PersonalityData personalityPartData, ChatmanAction foundAction)
		{
			return new <>f__AnonymousType2<PersonalityData, ChatmanAction>(personalityPartData, foundAction);
		}

		private static ChatmanAction <BuildActionListByMood>b__4a(<>f__AnonymousType2<PersonalityData, ChatmanAction> <>h__TransparentIdentifier46)
		{
			return <>h__TransparentIdentifier46.get_foundAction();
		}

		private static string <BuildActionListByMood>b__4b(ChatmanAction theAction)
		{
			return theAction.Name;
		}

		private static KeyValuePair<Guid, List<ChatmanAction>> <RefreshReadOnlyProactiveActionsByMood>b__52(KeyValuePair<Guid, List<ChatmanAction>> proactiveActionByMood)
		{
			return proactiveActionByMood;
		}

		private static Guid <RefreshReadOnlyProactiveActionsByMood>b__53(KeyValuePair<Guid, List<ChatmanAction>> item)
		{
			return item.Key;
		}

		private static IEnumerable<ChatmanAction> <RefreshReadOnlyProactiveActionsByMood>b__54(KeyValuePair<Guid, List<ChatmanAction>> item)
		{
			return item.Value;
		}

		private static KeyValuePair<Guid, List<ChatmanAction>> <RefreshReadOnlyActionsByMood>b__58(KeyValuePair<Guid, List<ChatmanAction>> actionByMood)
		{
			return actionByMood;
		}

		private static Guid <RefreshReadOnlyActionsByMood>b__59(KeyValuePair<Guid, List<ChatmanAction>> item)
		{
			return item.Key;
		}

		private static IEnumerable<ChatmanAction> <RefreshReadOnlyActionsByMood>b__5a(KeyValuePair<Guid, List<ChatmanAction>> item)
		{
			return item.Value;
		}

		private static IEnumerable<ChatmanAction> <GetActionsByID>b__61(PersonalityData personalityPartData)
		{
			return personalityPartData.Actions;
		}

		private static <>f__AnonymousType1<PersonalityData, ChatmanAction> <GetActionsByID>b__62(PersonalityData personalityPartData, ChatmanAction action)
		{
			return new <>f__AnonymousType1<PersonalityData, ChatmanAction>(personalityPartData, action);
		}

		private static bool <GetActionsByID>b__63(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier5e)
		{
			//Discarded unreachable code: IL_001e, IL_0033, IL_0051, IL_0056
			while (true)
			{
				int result;
				if (!<>h__TransparentIdentifier5e.get_action().IsExcluded)
				{
					if (false)
					{
						continue;
					}
					if (<>h__TransparentIdentifier5e.get_action().SpecialActionCode == 0)
					{
						if ((654 + 654 * 654) % 2 == 0)
						{
							result = ((<>h__TransparentIdentifier5e.get_action().Scope != ActionScope.Proactive) ? 1 : 0);
							goto IL_0058;
						}
						break;
					}
				}
				result = 0;
				goto IL_0058;
				IL_0058:
				return (byte)result != 0;
			}
			bool result2 = default(bool);
			return result2;
		}

		private static Guid <GetActionsByID>b__64(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier5e)
		{
			return <>h__TransparentIdentifier5e.get_action().MoodID;
		}

		private static Guid <GetActionsByID>b__65(Mood mood)
		{
			return mood.ID;
		}

		private static <>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood> <GetActionsByID>b__66(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier5e, Mood mood)
		{
			return new <>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood>(<>h__TransparentIdentifier5e, mood);
		}

		private static int <GetActionsByID>b__67(<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood> <>h__TransparentIdentifier5f)
		{
			return <>h__TransparentIdentifier5f.get_mood().Ordinal;
		}

		private static string <GetActionsByID>b__68(<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood> <>h__TransparentIdentifier5f)
		{
			return <>h__TransparentIdentifier5f.<>h__TransparentIdentifier5e.get_action().Name;
		}

		private static ChatmanAction <GetActionsByID>b__69(<>f__AnonymousType3<<>f__AnonymousType1<PersonalityData, ChatmanAction>, Mood> <>h__TransparentIdentifier5f)
		{
			return <>h__TransparentIdentifier5f.<>h__TransparentIdentifier5e.get_action();
		}

		private static Guid <GetActionsByID>b__6a(ChatmanAction Action)
		{
			return Action.ID;
		}

		private static IEnumerable<ChatmanAction> <GetActionsByID>b__6b(PersonalityData personalityPartData)
		{
			return personalityPartData.Actions;
		}

		private static <>f__AnonymousType1<PersonalityData, ChatmanAction> <GetActionsByID>b__6c(PersonalityData personalityPartData, ChatmanAction action)
		{
			return new <>f__AnonymousType1<PersonalityData, ChatmanAction>(personalityPartData, action);
		}

		private static bool <GetActionsByID>b__6d(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier60)
		{
			//Discarded unreachable code: IL_0002, IL_0021, IL_0036, IL_0055
			while (true)
			{
				int result;
				if (!<>h__TransparentIdentifier60.get_action().IsExcluded)
				{
					if (705 < 705 - 322)
					{
						break;
					}
					if (<>h__TransparentIdentifier60.get_action().SpecialActionCode == 0)
					{
						if (312 > 312 - 57)
						{
							result = ((<>h__TransparentIdentifier60.get_action().Scope != ActionScope.Proactive) ? 1 : 0);
							goto IL_0057;
						}
						continue;
					}
				}
				result = 0;
				goto IL_0057;
				IL_0057:
				return (byte)result != 0;
			}
			bool result2 = default(bool);
			return result2;
		}

		private static ChatmanAction <GetActionsByID>b__6e(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier60)
		{
			return <>h__TransparentIdentifier60.get_action();
		}

		private static Guid <GetActionsByID>b__6f(ChatmanAction Action)
		{
			return Action.ID;
		}

		private static IEnumerable<Scenario> <LoadScenarioLists>b__82(PersonalityDataFile personalityPartDataFile)
		{
			return personalityPartDataFile.Data.Scenarios;
		}

		private static <>f__AnonymousType4<PersonalityDataFile, Scenario> <LoadScenarioLists>b__83(PersonalityDataFile personalityPartDataFile, Scenario scenario)
		{
			return new <>f__AnonymousType4<PersonalityDataFile, Scenario>(personalityPartDataFile, scenario);
		}

		private static bool <LoadScenarioLists>b__84(<>f__AnonymousType4<PersonalityDataFile, Scenario> <>h__TransparentIdentifier7f)
		{
			return <>h__TransparentIdentifier7f.get_personalityPartDataFile().FileRelevance == DataFileLocation.PersonalityDataFile;
		}

		private static Scenario <LoadScenarioLists>b__85(<>f__AnonymousType4<PersonalityDataFile, Scenario> <>h__TransparentIdentifier7f)
		{
			return <>h__TransparentIdentifier7f.get_scenario();
		}

		private bool <SelectActiveMoodMatrix>b__8c(MoodMatrix moodMatrix)
		{
			int num = 0;
			int result;
			while (true)
			{
				switch (num)
				{
				default:
					num = ((moodMatrix.Gender != targetUserGender) ? 3 : 2);
					continue;
				case 2:
					num = (((float)moodMatrix.MinAge <= targetUserAge) ? 1 : 3);
					continue;
				case 1:
					result = (((float)moodMatrix.MaxAge >= targetUserAge) ? 1 : 0);
					break;
				case 3:
					result = 0;
					break;
				}
				break;
			}
			return (byte)result != 0;
		}

		private static Guid <SelectActiveMoodMatrix>b__8d(MoodMatrixEntry moodMatrixEntry)
		{
			return moodMatrixEntry.FromMood;
		}

		private static Guid <SelectActiveMoodMatrix>b__8e(MoodMatrixEntry moodMatrixEntry)
		{
			return moodMatrixEntry.ToMood;
		}

		private static Guid <SelectActiveMoodMatrix>b__8f(Guid mood)
		{
			return mood;
		}

		private static Guid <SelectActiveMoodMatrix>b__90(MoodMatrixEntry moodMatrixEntry)
		{
			return moodMatrixEntry.FromMood;
		}

		private static MoodToMoodCorrelationPair <SelectActiveMoodMatrix>b__91(Guid mood, MoodMatrixEntry moodMatrixEntry)
		{
			return new MoodToMoodCorrelationPair(mood, new MoodCorrelationPair(moodMatrixEntry.ToMood, moodMatrixEntry.Correlation));
		}

		private static Guid <SelectActiveMoodMatrix>b__92(Guid mood)
		{
			return mood;
		}

		private static Guid <SelectActiveMoodMatrix>b__93(MoodMatrixEntry moodMatrixEntry)
		{
			return moodMatrixEntry.ToMood;
		}

		private static MoodToMoodCorrelationPair <SelectActiveMoodMatrix>b__94(Guid mood, MoodMatrixEntry moodMatrixEntry)
		{
			return new MoodToMoodCorrelationPair(mood, new MoodCorrelationPair(moodMatrixEntry.FromMood, moodMatrixEntry.Correlation));
		}

		private static Guid <SelectActiveMoodMatrix>b__95(MoodToMoodCorrelationPair item)
		{
			return item.Ⴐ;
		}

		private static MoodToMoodCorrelationPairs <SelectActiveMoodMatrix>b__96(IGrouping<Guid, MoodToMoodCorrelationPair> items)
		{
			//Discarded unreachable code: IL_0002, IL_0017, IL_002f, IL_0044, IL_0059, IL_0069, IL_007e
			Guid key = items.Key;
			if (CS$<>9__CachedAnonymousMethodDelegatea9 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegatea9 = ((MoodToMoodCorrelationPair i) => new MoodCorrelationPair[1]
				{
					i.Ⴐ
				});
			}
			IEnumerable<MoodCorrelationPair> source = items.SelectMany(CS$<>9__CachedAnonymousMethodDelegatea9);
			if (CS$<>9__CachedAnonymousMethodDelegateaa == null)
			{
				CS$<>9__CachedAnonymousMethodDelegateaa = ((MoodCorrelationPair item) => item.Mood);
			}
			Func<MoodCorrelationPair, Guid> cS$<>9__CachedAnonymousMethodDelegateaa = CS$<>9__CachedAnonymousMethodDelegateaa;
			if (CS$<>9__CachedAnonymousMethodDelegateab == null)
			{
				CS$<>9__CachedAnonymousMethodDelegateab = ((MoodCorrelationPair item) => item);
			}
			return new MoodToMoodCorrelationPairs(key, source.ToDictionary(cS$<>9__CachedAnonymousMethodDelegateaa, CS$<>9__CachedAnonymousMethodDelegateab));
		}

		private static Guid <SelectActiveMoodMatrix>b__9a(MoodToMoodCorrelationPairs item)
		{
			return item.Ⴐ;
		}

		private static Dictionary<Guid, MoodCorrelationPair> <SelectActiveMoodMatrix>b__9b(MoodToMoodCorrelationPairs item)
		{
			return item.Ⴐ;
		}

		private static IEnumerable<MoodCorrelationPair> <SelectActiveMoodMatrix>b__97(MoodToMoodCorrelationPair i)
		{
			return new MoodCorrelationPair[1]
			{
				i.Ⴐ
			};
		}

		private static Guid <SelectActiveMoodMatrix>b__98(MoodCorrelationPair item)
		{
			return item.Mood;
		}

		private static MoodCorrelationPair <SelectActiveMoodMatrix>b__99(MoodCorrelationPair item)
		{
			return item;
		}

		private static MoodCounter <GetStateMoodCounterListCopy>b__ac(KeyValuePair<Guid, MoodCounter> stateMoodCounter)
		{
			return new MoodCounter(stateMoodCounter.Value);
		}

		private static <>f__AnonymousType5<string, string> <DeleteUnusedAudioFiles>b__b1(string file)
		{
			return new <>f__AnonymousType5<string, string>(file, Path.GetExtension(file));
		}

		private static bool <DeleteUnusedAudioFiles>b__b2(<>f__AnonymousType5<string, string> <>h__TransparentIdentifierae)
		{
			int num = 2;
			int result;
			while (true)
			{
				switch (num)
				{
				default:
					num = ((string.Compare(<>h__TransparentIdentifierae.get_extension(), ႥႠႭ.Ⴓ.ႰႤ(1821394866), ignoreCase: true) == 0) ? 3 : 0);
					continue;
				case 0:
					num = ((string.Compare(<>h__TransparentIdentifierae.get_extension(), ႥႠႭ.Ⴍ.ႰႣ(1821394864), ignoreCase: true) != 0) ? 1 : 3);
					continue;
				case 1:
					result = ((string.Compare(<>h__TransparentIdentifierae.get_extension(), ႤႤႭ.Ⴅ.ႰႣ(1821394879), ignoreCase: true) == 0) ? 1 : 0);
					break;
				case 3:
					result = 1;
					break;
				}
				break;
			}
			return (byte)result != 0;
		}

		private static string <DeleteUnusedAudioFiles>b__b3(<>f__AnonymousType5<string, string> <>h__TransparentIdentifierae)
		{
			return <>h__TransparentIdentifierae.get_file().ToLower();
		}

		private static IEnumerable<ChatmanAction> <DeleteUnusedAudioFiles>b__b4(PersonalityDataFile personalityData)
		{
			return personalityData.Data.Actions;
		}

		private static <>f__AnonymousType6<PersonalityDataFile, ChatmanAction> <DeleteUnusedAudioFiles>b__b5(PersonalityDataFile personalityData, ChatmanAction action)
		{
			return new <>f__AnonymousType6<PersonalityDataFile, ChatmanAction>(personalityData, action);
		}

		private static IEnumerable<HardwareAction> <DeleteUnusedAudioFiles>b__b6(<>f__AnonymousType6<PersonalityDataFile, ChatmanAction> <>h__TransparentIdentifieraf)
		{
			return <>h__TransparentIdentifieraf.get_action().Actions;
		}

		private static <>f__AnonymousType7<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, HardwareAction> <DeleteUnusedAudioFiles>b__b7(<>f__AnonymousType6<PersonalityDataFile, ChatmanAction> <>h__TransparentIdentifieraf, HardwareAction hardwareAction)
		{
			return new <>f__AnonymousType7<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, HardwareAction>(<>h__TransparentIdentifieraf, hardwareAction);
		}

		private static bool <DeleteUnusedAudioFiles>b__b8(<>f__AnonymousType7<<>f__AnonymousType6<PersonalityDataFile, ChatmanAction>, HardwareAction> <>h__TransparentIdentifierb0)
		{
			return <>h__TransparentIdentifierb0.get_hardwareAction() is SoundHardwareAction;
		}

		private static int <AddActionToListsAndSave>b__c8(ChatmanAction action)
		{
			return action.TotalCounter;
		}

		private static string <UpdateActionRelatedScenarios>b__db(string word)
		{
			return word;
		}

		private static string <UpdateActionRelatedScenarios>b__dc(string word)
		{
			return word.Trim();
		}

		private static string <UpdateActionRelatedScenarios>b__dd(string word)
		{
			return word.Trim();
		}

		private static string <UpdateActionRelatedScenarios>b__de(string word)
		{
			return word;
		}

		private static IEnumerable<Scenario> <UpdateActionRelatedScenarios>b__df(PersonalityDataFile personalityData)
		{
			return personalityData.Data.Scenarios;
		}

		private static <>f__AnonymousType8<PersonalityDataFile, Scenario> <UpdateActionRelatedScenarios>b__e0(PersonalityDataFile personalityData, Scenario scenario)
		{
			return new <>f__AnonymousType8<PersonalityDataFile, Scenario>(personalityData, scenario);
		}

		private static Scenario <UpdateActionRelatedScenarios>b__e2(<>f__AnonymousType8<PersonalityDataFile, Scenario> <>h__TransparentIdentifierd5)
		{
			return <>h__TransparentIdentifierd5.get_scenario();
		}

		private static IEnumerable<string> <UpdateActionRelatedScenarios>b__e3(ScenarioTextBase scenarioText)
		{
			return scenarioText.Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries);
		}

		private static <>f__AnonymousType9<ScenarioTextBase, string> <UpdateActionRelatedScenarios>b__e4(ScenarioTextBase scenarioText, string word)
		{
			return new <>f__AnonymousType9<ScenarioTextBase, string>(scenarioText, word);
		}

		private static bool <UpdateActionRelatedScenarios>b__e5(<>f__AnonymousType9<ScenarioTextBase, string> <>h__TransparentIdentifierd6)
		{
			return (object)<>h__TransparentIdentifierd6.get_scenarioText().GetType() == typeof(ScenarioText);
		}

		private static string <UpdateActionRelatedScenarios>b__e6(<>f__AnonymousType9<ScenarioTextBase, string> <>h__TransparentIdentifierd6)
		{
			return <>h__TransparentIdentifierd6.get_word();
		}

		private static string <UpdateActionRelatedScenarios>b__e7(string word)
		{
			return word;
		}

		private static IEnumerable<ScenarioTextBase> <GetUpdatableMoodWords>b__f8(Scenario scenario)
		{
			return scenario.Texts;
		}

		private static <>f__AnonymousTypea<Scenario, ScenarioTextBase> <GetUpdatableMoodWords>b__f9(Scenario scenario, ScenarioTextBase text)
		{
			return new <>f__AnonymousTypea<Scenario, ScenarioTextBase>(scenario, text);
		}

		private static bool <GetUpdatableMoodWords>b__fa(<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifierf7)
		{
			//Discarded unreachable code: IL_0002, IL_001d, IL_003b, IL_0040
			int result2;
			if (!<>h__TransparentIdentifierf7.get_scenario().IsInternal)
			{
				bool result = default(bool);
				if (false)
				{
					return result;
				}
				result2 = (((object)<>h__TransparentIdentifierf7.get_text().GetType() == typeof(ScenarioText)) ? 1 : 0);
			}
			else
			{
				result2 = 0;
			}
			return (byte)result2 != 0;
		}

		private static string[] <GetUpdatableMoodWords>b__fb(<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifierf7)
		{
			return <>h__TransparentIdentifierf7.get_text().Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries);
		}

		private static IEnumerable<string> <GetUpdatableMoodWords>b__fc(string[] i)
		{
			return i;
		}

		private static string <GetUpdatableMoodWords>b__fd(string i)
		{
			return i;
		}

		private static IEnumerable<ScenarioTextBase> <GetAllMoodWords>b__105(Scenario scenario)
		{
			return scenario.Texts;
		}

		private static <>f__AnonymousTypea<Scenario, ScenarioTextBase> <GetAllMoodWords>b__106(Scenario scenario, ScenarioTextBase text)
		{
			return new <>f__AnonymousTypea<Scenario, ScenarioTextBase>(scenario, text);
		}

		private static bool <GetAllMoodWords>b__107(<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier104)
		{
			return (object)<>h__TransparentIdentifier104.get_text().GetType() == typeof(ScenarioText);
		}

		private static string[] <GetAllMoodWords>b__108(<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier104)
		{
			return <>h__TransparentIdentifier104.get_text().Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries);
		}

		private static IEnumerable<string> <GetAllMoodWords>b__109(string[] i)
		{
			return i;
		}

		private static IEnumerable<ScenarioTextBase> <GetWords>b__111(Scenario scenario)
		{
			return scenario.Texts;
		}

		private static <>f__AnonymousTypea<Scenario, ScenarioTextBase> <GetWords>b__112(Scenario scenario, ScenarioTextBase text)
		{
			return new <>f__AnonymousTypea<Scenario, ScenarioTextBase>(scenario, text);
		}

		private static IEnumerable<ScenarioAction> <GetWords>b__113(<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier10f)
		{
			return <>h__TransparentIdentifier10f.get_scenario().Actions;
		}

		private static <>f__AnonymousTypeb<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, ScenarioAction> <GetWords>b__114(<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier10f, ScenarioAction scenarioAction)
		{
			return new <>f__AnonymousTypeb<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, ScenarioAction>(<>h__TransparentIdentifier10f, scenarioAction);
		}

		private static string[] <GetWords>b__116(<>f__AnonymousTypeb<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, ScenarioAction> <>h__TransparentIdentifier110)
		{
			return <>h__TransparentIdentifier110.<>h__TransparentIdentifier10f.get_text().Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries);
		}

		private static IEnumerable<string> <GetWords>b__117(string[] i)
		{
			return i;
		}

		private static string <UpdateMoodScenarios>b__122(string word)
		{
			return word;
		}

		private static <>f__AnonymousTypec<string, string> <UpdateMoodScenarios>b__123(string word)
		{
			return new <>f__AnonymousTypec<string, string>(word, word.Trim());
		}

		private static bool <UpdateMoodScenarios>b__124(<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier120)
		{
			return <>h__TransparentIdentifier120.get_theWord() != string.Empty;
		}

		private static string <UpdateMoodScenarios>b__125(<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier120)
		{
			return <>h__TransparentIdentifier120.get_theWord();
		}

		private static <>f__AnonymousTypec<string, string> <UpdateMoodScenarios>b__126(string word)
		{
			return new <>f__AnonymousTypec<string, string>(word, word.Trim());
		}

		private static bool <UpdateMoodScenarios>b__127(<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier121)
		{
			return <>h__TransparentIdentifier121.get_theWord() != string.Empty;
		}

		private static string <UpdateMoodScenarios>b__128(<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier121)
		{
			return <>h__TransparentIdentifier121.get_word().Trim();
		}

		private static string <UpdateMoodScenarios>b__129(string word)
		{
			return word;
		}

		private static string <UpdateMoodScenariosForMoodAndOppositeMood>b__134(string word)
		{
			return word;
		}

		private static <>f__AnonymousTypec<string, string> <UpdateMoodScenariosForMoodAndOppositeMood>b__135(string word)
		{
			return new <>f__AnonymousTypec<string, string>(word, word.Trim());
		}

		private static bool <UpdateMoodScenariosForMoodAndOppositeMood>b__136(<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier132)
		{
			return <>h__TransparentIdentifier132.get_theWord() != string.Empty;
		}

		private static string <UpdateMoodScenariosForMoodAndOppositeMood>b__137(<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier132)
		{
			return <>h__TransparentIdentifier132.get_theWord();
		}

		private static <>f__AnonymousTypec<string, string> <UpdateMoodScenariosForMoodAndOppositeMood>b__138(string word)
		{
			return new <>f__AnonymousTypec<string, string>(word, word.Trim());
		}

		private static bool <UpdateMoodScenariosForMoodAndOppositeMood>b__139(<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier133)
		{
			return <>h__TransparentIdentifier133.get_theWord() != string.Empty;
		}

		private static string <UpdateMoodScenariosForMoodAndOppositeMood>b__13a(<>f__AnonymousTypec<string, string> <>h__TransparentIdentifier133)
		{
			return <>h__TransparentIdentifier133.get_word().Trim();
		}

		private static string <UpdateMoodScenariosForMoodAndOppositeMood>b__13b(string word)
		{
			return word;
		}

		private static bool <SaveMoodScenarioUpdatesToUserData>b__149(Scenario scenario)
		{
			return scenario.IsInternal;
		}

		private static string <SaveMoodScenarioUpdatesToUserData>b__14a(string word)
		{
			return word;
		}

		private static string <SaveMoodScenarioUpdatesToUserData>b__14b(string word)
		{
			return word;
		}

		private static bool <SaveOppositeMoodScenarioUpdatesToUserData>b__152(Scenario scenario)
		{
			return scenario.IsInternal;
		}

		private static string <SaveOppositeMoodScenarioUpdatesToUserData>b__153(string word)
		{
			return word;
		}

		private static bool <SaveMoodScenarioUpdates>b__158(Scenario scenario)
		{
			return !scenario.IsInternal;
		}

		private static string <SaveMoodScenarioUpdates>b__159(string word)
		{
			return word;
		}

		private static ChatmanAction <CheckIfActionNameAlreadyExists>b__15d(KeyValuePair<Guid, ChatmanAction> action)
		{
			return action.Value;
		}

		private static ChatmanAction <CheckIfActionNameAlreadyExists>b__15f(KeyValuePair<Guid, ChatmanAction> action)
		{
			return action.Value;
		}

		private static IEnumerable<ChatmanAction> <AddScenario>b__169(PersonalityDataFile dataFile)
		{
			return dataFile.Data.Actions;
		}

		private static <>f__AnonymousTyped<PersonalityDataFile, ChatmanAction> <AddScenario>b__16a(PersonalityDataFile dataFile, ChatmanAction action)
		{
			return new <>f__AnonymousTyped<PersonalityDataFile, ChatmanAction>(dataFile, action);
		}

		private static Guid <AddScenario>b__16b(<>f__AnonymousTyped<PersonalityDataFile, ChatmanAction> <>h__TransparentIdentifier166)
		{
			return <>h__TransparentIdentifier166.get_action().ID;
		}

		private static Guid <AddScenario>b__16c(ScenarioAction theAction)
		{
			return theAction.ID;
		}

		private static PersonalityDataFile <AddScenario>b__16d(<>f__AnonymousTyped<PersonalityDataFile, ChatmanAction> <>h__TransparentIdentifier166, ScenarioAction theAction)
		{
			return <>h__TransparentIdentifier166.get_dataFile();
		}

		private static <>f__AnonymousTypee<ScenarioAction, ChatmanAction> <AddScenario>b__16f(ScenarioAction scenarioAction, ChatmanAction action)
		{
			return new <>f__AnonymousTypee<ScenarioAction, ChatmanAction>(scenarioAction, action);
		}

		private static bool <AddScenario>b__170(<>f__AnonymousTypee<ScenarioAction, ChatmanAction> <>h__TransparentIdentifier168)
		{
			return <>h__TransparentIdentifier168.get_action().ID == <>h__TransparentIdentifier168.get_scenarioAction().ID;
		}

		private static ႭႥႰ.Ⴗ <AddScenario>b__171(<>f__AnonymousTypee<ScenarioAction, ChatmanAction> <>h__TransparentIdentifier168)
		{
			return new ႭႥႰ.Ⴗ(<>h__TransparentIdentifier168.get_scenarioAction(), <>h__TransparentIdentifier168.get_action());
		}

		private static IEnumerable<string> <AddScenarioWordsAndIcons>b__180(ScenarioTextBase text)
		{
			return text.Data.Split(',');
		}

		private static <>f__AnonymousTypef<ScenarioTextBase, string> <AddScenarioWordsAndIcons>b__181(ScenarioTextBase text, string phraseText)
		{
			return new <>f__AnonymousTypef<ScenarioTextBase, string>(text, phraseText);
		}

		private static IEnumerable<string> <AddScenarioWordsAndIcons>b__183(<>f__AnonymousType10<<>f__AnonymousTypef<ScenarioTextBase, string>, PhraseWordContainer> <>h__TransparentIdentifier17e)
		{
			return <>h__TransparentIdentifier17e.get_phrase().ႰႥ();
		}

		private static IEnumerable<string> <IsScenarioEmpty>b__18b(ScenarioTextBase text)
		{
			return text.Data.Split(',');
		}

		private static string <IsScenarioEmpty>b__18c(ScenarioTextBase text, string phraseText)
		{
			return phraseText;
		}

		private static bool <AddQuestion>b__197(Scenario scenario)
		{
			return scenario.IsUserQnA;
		}

		private static IEnumerable<string> <AddQuestion>b__199(ScenarioTextBase text)
		{
			return text.Data.Split((char[])(object)ႭႭႰ.Ⴓ.Ⴐ, StringSplitOptions.RemoveEmptyEntries);
		}

		private static <>f__AnonymousType11<ScenarioTextBase, string> <AddQuestion>b__19a(ScenarioTextBase text, string q)
		{
			return new <>f__AnonymousType11<ScenarioTextBase, string>(text, q);
		}

		private static bool <AddQuestion>b__19b(<>f__AnonymousType11<ScenarioTextBase, string> <>h__TransparentIdentifier193)
		{
			int num = 1;
			int result;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					num2 = (<>h__TransparentIdentifier193.get_q().EndsWith(ႤႤႭ.Ⴅ.ႰႣ(1821394872)) ? 2 : 0);
					goto IL_002c;
				case 2:
					result = ((<>h__TransparentIdentifier193.get_text().Relation == ScenarioTextRelation.Include) ? 1 : 0);
					break;
				case 0:
					result = 0;
					break;
				}
				break;
				IL_002c:
				num = num2;
			}
			return (byte)result != 0;
		}

		private static IEnumerable<ChatmanAction> <GetNotSpecialActionById>b__1a5(PersonalityData personalityPartData)
		{
			return personalityPartData.Actions;
		}

		private static <>f__AnonymousType1<PersonalityData, ChatmanAction> <GetNotSpecialActionById>b__1a6(PersonalityData personalityPartData, ChatmanAction action)
		{
			return new <>f__AnonymousType1<PersonalityData, ChatmanAction>(personalityPartData, action);
		}

		private static ChatmanAction <GetNotSpecialActionById>b__1a8(<>f__AnonymousType1<PersonalityData, ChatmanAction> <>h__TransparentIdentifier1a4)
		{
			return <>h__TransparentIdentifier1a4.get_action();
		}

		private static IChatmanAction <GetAllActions>b__1ae(ChatmanAction action)
		{
			return action;
		}

		private static IChatmanAction <GetAllSpecialActions>b__1b0(ChatmanAction action)
		{
			return action;
		}

		private static IChatmanAction <GetActionsByMood>b__1b2(ChatmanAction action)
		{
			return action;
		}
	}
	[Serializable]
	[XmlRoot("PersonalityData")]
	public class PersonalityData : IDisposable
	{
		private sealed class <>c__DisplayClass3
		{
			public Personality personality;

			public ႭႥႰ.Ⴅ <Initialize>b__2(ChatmanAction action)
			{
				return new ႭႥႰ.Ⴅ(action, personality);
			}
		}

		[NonSerialized]
		private PersonalityDataFile personalityDataFile;

		private Personality personality;

		private string supportedHardwareModel = string.Empty;

		private bool converted;

		private string version = string.Empty;

		private string engineVersion = string.Empty;

		private List<Scenario> scenarios = new List<Scenario>();

		[NonSerialized]
		private bool scenariosSet = false;

		private List<ChatmanAction> actions = new List<ChatmanAction>();

		[NonSerialized]
		private bool actionsSet = false;

		private List<MoodMatrix> moodMatrixes = new List<MoodMatrix>();

		[NonSerialized]
		private bool moodMatrixSet = false;

		private List<ConstraintFilterDefinition> constraintFilters = new List<ConstraintFilterDefinition>();

		[NonSerialized]
		private bool constraintFiltersSet = false;

		private List<ActionProducerDefinition> actionProducers = new List<ActionProducerDefinition>();

		[NonSerialized]
		private bool ActionProducersSet = false;

		[NonSerialized]
		internal List<WordScenario> wordList;

		[NonSerialized]
		internal int phraseCounter = 0;

		private static string[] blankArray = new string[1]
		{
			string.Empty
		};

		private static string[] starArray = new string[1]
		{
			ႥႠႭ.Ⴃ.ႰႣ(1821394867)
		};

		private static char[] starCharArray = new char[1]
		{
			'*'
		};

		private static int topPhraseCounter = 0;

		private static bool[] falseBoolSingleArray;

		private static int[] emptyIntSingleArray;

		[NonSerialized]
		private bool disposed = false;

		private static Func<Scenario, IEnumerable<ScenarioTextBase>> CS$<>9__CachedAnonymousMethodDelegate1d;

		private static Func<Scenario, ScenarioTextBase, <>f__AnonymousTypea<Scenario, ScenarioTextBase>> CS$<>9__CachedAnonymousMethodDelegate1e;

		private static Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegate1f;

		private static Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string, <>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>> CS$<>9__CachedAnonymousMethodDelegate20;

		private static Func<<>f__AnonymousType13<<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegate22;

		private static Func<<>f__AnonymousType13<<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string, WordScenario> CS$<>9__CachedAnonymousMethodDelegate23;

		private static Func<Scenario, IEnumerable<ScenarioTextBase>> CS$<>9__CachedAnonymousMethodDelegate24;

		private static Func<Scenario, ScenarioTextBase, <>f__AnonymousTypea<Scenario, ScenarioTextBase>> CS$<>9__CachedAnonymousMethodDelegate25;

		private static Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegate26;

		private static Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string, <>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>> CS$<>9__CachedAnonymousMethodDelegate27;

		private static Func<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, IEnumerable<string>> CS$<>9__CachedAnonymousMethodDelegate29;

		private static Func<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string, <>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string>> CS$<>9__CachedAnonymousMethodDelegate2a;

		private static Func<<>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string>, bool> CS$<>9__CachedAnonymousMethodDelegate2b;

		private static Func<<>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string>, WordScenario> CS$<>9__CachedAnonymousMethodDelegate2c;

		[XmlIgnore]
		public PersonalityDataFile PersonalityDataFile
		{
			get
			{
				return personalityDataFile;
			}
			set
			{
				personalityDataFile = value;
			}
		}

		[XmlIgnore]
		public Personality Personality
		{
			get
			{
				return personality;
			}
			set
			{
				personality = value;
			}
		}

		[XmlAttribute]
		public string SupportedHardwareModel
		{
			get
			{
				return supportedHardwareModel;
			}
			set
			{
				supportedHardwareModel = value;
			}
		}

		[XmlAttribute]
		public bool Converted
		{
			get
			{
				return converted;
			}
			set
			{
				converted = value;
			}
		}

		[XmlAttribute]
		public string Version
		{
			get
			{
				return version;
			}
			set
			{
				version = value;
			}
		}

		[XmlAttribute]
		public string EngineVersion
		{
			get
			{
				return engineVersion;
			}
			set
			{
				engineVersion = value;
			}
		}

		[XmlArrayItem("Scenario", typeof(Scenario))]
		[XmlArray("Scenarios")]
		public List<Scenario> Scenarios
		{
			get
			{
				return scenarios;
			}
			set
			{
				int num = 2;
				while (true)
				{
					int num2;
					switch (num)
					{
					default:
						num2 = ((!scenariosSet) ? 1 : 0);
						break;
					case 0:
						throw new InvalidOperationException();
					case 1:
						scenarios = value;
						scenariosSet = true;
						return;
					}
					num = num2;
				}
			}
		}

		[XmlArrayItem("Action", typeof(ChatmanAction))]
		[XmlArray("Actions")]
		public List<ChatmanAction> Actions
		{
			get
			{
				return actions;
			}
			set
			{
				int num = 1;
				while (true)
				{
					int num2;
					switch (num)
					{
					default:
						num2 = ((!actionsSet) ? 2 : 0);
						break;
					case 0:
						throw new InvalidOperationException();
					case 2:
						actions = value;
						actionsSet = true;
						return;
					}
					num = num2;
				}
			}
		}

		[XmlArrayItem("MoodMatrix", typeof(MoodMatrix))]
		[XmlArray("MoodMatrixes")]
		public List<MoodMatrix> MoodMatrixes
		{
			get
			{
				return moodMatrixes;
			}
			set
			{
				//Discarded unreachable code: IL_0002, IL_0027
				if (moodMatrixSet)
				{
					if (626 > 626 - 446)
					{
						throw new InvalidOperationException();
					}
				}
				else
				{
					moodMatrixes = value;
				}
				moodMatrixSet = true;
			}
		}

		[XmlArrayItem("ConstraintFilter", typeof(ConstraintFilterDefinition))]
		[XmlArray("ConstraintFilters")]
		public List<ConstraintFilterDefinition> ConstraintFilters
		{
			get
			{
				return constraintFilters;
			}
			set
			{
				int num = 2;
				while (true)
				{
					int num2;
					switch (num)
					{
					default:
						num2 = (constraintFiltersSet ? 1 : 0);
						break;
					case 1:
						throw new InvalidOperationException();
					case 0:
						constraintFilters = value;
						constraintFiltersSet = true;
						return;
					}
					num = num2;
				}
			}
		}

		[XmlArray("ActionProducers")]
		[XmlArrayItem("ActionProducer", typeof(ActionProducerDefinition))]
		public List<ActionProducerDefinition> ActionProducers
		{
			get
			{
				return actionProducers;
			}
			set
			{
				int num = 1;
				while (true)
				{
					int num2;
					switch (num)
					{
					default:
						num2 = ((!ActionProducersSet) ? 2 : 0);
						break;
					case 0:
						throw new InvalidOperationException();
					case 2:
						actionProducers = value;
						ActionProducersSet = true;
						return;
					}
					num = num2;
				}
			}
		}

		[XmlIgnore]
		public IEnumerable<WordScenario> WordList => wordList;

		static PersonalityData()
		{
			bool[] array = falseBoolSingleArray = new bool[1];
			int[] array2 = emptyIntSingleArray = new int[1];
		}

		public static PersonalityData ႼႷ()
		{
			return ႨႳႭ(Ⴍ: false);
		}

		public static PersonalityData ႨႳႭ(bool Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_002d, IL_008e
			PersonalityData personalityData = new PersonalityData();
			personalityData.Converted = true;
			personalityData.Scenarios = new List<Scenario>();
			personalityData.Actions = new List<ChatmanAction>();
			personalityData.MoodMatrixes = new List<MoodMatrix>();
			personalityData.ConstraintFilters = new List<ConstraintFilterDefinition>();
			personalityData.ActionProducers = new List<ActionProducerDefinition>();
			PersonalityData personalityData2 = personalityData;
			bool flag = Ⴍ;
			while (!flag)
			{
				if ((129 + 129 * 129) % 2 == 0)
				{
					do
					{
						personalityData2.ConstraintFilters.Add(new ConstraintFilterDefinition
						{
							ID = 1
						});
					}
					while (928 <= 928 - 449);
					break;
				}
			}
			return personalityData2;
		}

		~PersonalityData()
		{
			ႨႷႰ(Ⴍ: false);
		}

		public void ႨႳႤ(Personality Ⴍ)
		{
			<>c__DisplayClass3 CS$<>8__locals0 = new <>c__DisplayClass3();
			CS$<>8__locals0.personality = Ⴍ;
			personality = CS$<>8__locals0.personality;
			string text = personalityDataFile.Ⴐ;
			IEnumerable<ႭႥႰ.Ⴅ> source = actions.Select((ChatmanAction action) => new ႭႥႰ.Ⴅ(action, CS$<>8__locals0.personality));
			int num = source.Count();
			ႼႥ();
		}

		internal void ႼႥ()
		{
			ႥႥႨ.Ⴗ.ႨႷႣ(ႥႠႭ.Ⴓ.ႰႤ(1821394867));
			if (!personality.IgnoreInternalScenarios)
			{
				foreach (Scenario scenario4 in scenarios)
				{
					ႨႳႼ(scenario4);
				}
				ႥႥႨ.Ⴗ.ႨႷႣ(ႥႠႭ.Ⴈ.ႰႥ(1821394872));
				List<Scenario> source = scenarios;
				if (CS$<>9__CachedAnonymousMethodDelegate1d == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate1d = ((Scenario scenario) => scenario.DynamicTexts);
				}
				Func<Scenario, IEnumerable<ScenarioTextBase>> cS$<>9__CachedAnonymousMethodDelegate1d = CS$<>9__CachedAnonymousMethodDelegate1d;
				if (CS$<>9__CachedAnonymousMethodDelegate1e == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate1e = ((Scenario scenario, ScenarioTextBase text) => new <>f__AnonymousTypea<Scenario, ScenarioTextBase>(scenario, text));
				}
				IEnumerable<<>f__AnonymousTypea<Scenario, ScenarioTextBase>> source2 = source.SelectMany(cS$<>9__CachedAnonymousMethodDelegate1d, CS$<>9__CachedAnonymousMethodDelegate1e);
				if (CS$<>9__CachedAnonymousMethodDelegate1f == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate1f = ((<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier5) => <>h__TransparentIdentifier5.get_text().Data.Split(','));
				}
				Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, IEnumerable<string>> cS$<>9__CachedAnonymousMethodDelegate1f = CS$<>9__CachedAnonymousMethodDelegate1f;
				if (CS$<>9__CachedAnonymousMethodDelegate20 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate20 = ((<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier5, string phraseText) => new <>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>(<>h__TransparentIdentifier5, phraseText));
				}
				IEnumerable<<>f__AnonymousType13<<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>> source3 = from <>h__TransparentIdentifier6 in source2.SelectMany(cS$<>9__CachedAnonymousMethodDelegate1f, CS$<>9__CachedAnonymousMethodDelegate20)
					select new <>f__AnonymousType13<<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>(<>h__TransparentIdentifier6, new PhraseWordContainer(<>h__TransparentIdentifier6.get_phraseText().Split(' '), 0, phraseCounter++));
				if (CS$<>9__CachedAnonymousMethodDelegate22 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate22 = ((<>f__AnonymousType13<<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer> <>h__TransparentIdentifier7) => <>h__TransparentIdentifier7.get_phrase().ႰႥ());
				}
				Func<<>f__AnonymousType13<<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, IEnumerable<string>> cS$<>9__CachedAnonymousMethodDelegate = CS$<>9__CachedAnonymousMethodDelegate22;
				if (CS$<>9__CachedAnonymousMethodDelegate23 == null)
				{
					CS$<>9__CachedAnonymousMethodDelegate23 = delegate(<>f__AnonymousType13<<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer> <>h__TransparentIdentifier7, string word)
					{
						int iD2 = <>h__TransparentIdentifier7.<>h__TransparentIdentifier6.<>h__TransparentIdentifier5.get_text().ID;
						Scenario scenario3 = <>h__TransparentIdentifier7.<>h__TransparentIdentifier6.<>h__TransparentIdentifier5.get_scenario();
						ScenarioTextBase text3 = <>h__TransparentIdentifier7.<>h__TransparentIdentifier6.<>h__TransparentIdentifier5.get_text();
						int ⴃ2 = <>h__TransparentIdentifier7.get_phrase().ႰႠ();
						PhraseWordContainer phrase2 = <>h__TransparentIdentifier7.get_phrase();
						int ⴗ2;
						phrase2.ႰႥ((ⴗ2 = phrase2.ႰႨ()) + 1);
						return new WordScenario(word, new ScenarioRelationPair(iD2, scenario3, text3, ⴃ2, ⴗ2, <>h__TransparentIdentifier7.get_phrase().ႰႥ().Length - 1));
					};
				}
				wordList = source3.SelectMany(cS$<>9__CachedAnonymousMethodDelegate, CS$<>9__CachedAnonymousMethodDelegate23).ToList();
				ႥႥႨ.Ⴗ.ႨႷႣ(ႥႠႭ.Ⴍ.ႰႣ(1821394866) + wordList.ToString());
				return;
			}
			foreach (Scenario scenario5 in scenarios)
			{
				if (!scenario5.IsInternal)
				{
					ႨႳႼ(scenario5);
				}
			}
			ႥႥႨ.Ⴗ.ႨႷႣ(ႥႠႭ.Ⴍ.ႰႣ(1821394867));
			List<Scenario> source4 = scenarios;
			if (CS$<>9__CachedAnonymousMethodDelegate24 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate24 = ((Scenario scenario) => scenario.DynamicTexts);
			}
			Func<Scenario, IEnumerable<ScenarioTextBase>> cS$<>9__CachedAnonymousMethodDelegate2 = CS$<>9__CachedAnonymousMethodDelegate24;
			if (CS$<>9__CachedAnonymousMethodDelegate25 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate25 = ((Scenario scenario, ScenarioTextBase text) => new <>f__AnonymousTypea<Scenario, ScenarioTextBase>(scenario, text));
			}
			IEnumerable<<>f__AnonymousTypea<Scenario, ScenarioTextBase>> source5 = source4.SelectMany(cS$<>9__CachedAnonymousMethodDelegate2, CS$<>9__CachedAnonymousMethodDelegate25);
			if (CS$<>9__CachedAnonymousMethodDelegate26 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate26 = ((<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier9) => <>h__TransparentIdentifier9.get_text().Data.Split(','));
			}
			Func<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, IEnumerable<string>> cS$<>9__CachedAnonymousMethodDelegate3 = CS$<>9__CachedAnonymousMethodDelegate26;
			if (CS$<>9__CachedAnonymousMethodDelegate27 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate27 = ((<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier9, string phraseText) => new <>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>(<>h__TransparentIdentifier9, phraseText));
			}
			IEnumerable<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>> source6 = from <>h__TransparentIdentifiera in source5.SelectMany(cS$<>9__CachedAnonymousMethodDelegate3, CS$<>9__CachedAnonymousMethodDelegate27)
				select new <>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>(<>h__TransparentIdentifiera, new PhraseWordContainer(<>h__TransparentIdentifiera.get_phraseText().Split(' '), 0, phraseCounter++));
			if (CS$<>9__CachedAnonymousMethodDelegate29 == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate29 = ((<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer> <>h__TransparentIdentifierb) => <>h__TransparentIdentifierb.get_phrase().ႰႥ());
			}
			Func<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, IEnumerable<string>> cS$<>9__CachedAnonymousMethodDelegate4 = CS$<>9__CachedAnonymousMethodDelegate29;
			if (CS$<>9__CachedAnonymousMethodDelegate2a == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate2a = ((<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer> <>h__TransparentIdentifierb, string word) => new <>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string>(<>h__TransparentIdentifierb, word));
			}
			IEnumerable<<>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string>> source7 = source6.SelectMany(cS$<>9__CachedAnonymousMethodDelegate4, CS$<>9__CachedAnonymousMethodDelegate2a);
			if (CS$<>9__CachedAnonymousMethodDelegate2b == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate2b = ((<>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string> <>h__TransparentIdentifierc) => !<>h__TransparentIdentifierc.<>h__TransparentIdentifierb.<>h__TransparentIdentifiera.<>h__TransparentIdentifier9.get_scenario().IsInternal);
			}
			IEnumerable<<>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string>> source8 = source7.Where(CS$<>9__CachedAnonymousMethodDelegate2b);
			if (CS$<>9__CachedAnonymousMethodDelegate2c == null)
			{
				CS$<>9__CachedAnonymousMethodDelegate2c = delegate(<>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string> <>h__TransparentIdentifierc)
				{
					string word2 = <>h__TransparentIdentifierc.get_word();
					int iD = <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.<>h__TransparentIdentifiera.<>h__TransparentIdentifier9.get_text().ID;
					Scenario scenario2 = <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.<>h__TransparentIdentifiera.<>h__TransparentIdentifier9.get_scenario();
					ScenarioTextBase text2 = <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.<>h__TransparentIdentifiera.<>h__TransparentIdentifier9.get_text();
					int ⴃ = <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.get_phrase().ႰႠ();
					PhraseWordContainer phrase = <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.get_phrase();
					int ⴗ;
					phrase.ႰႥ((ⴗ = phrase.ႰႨ()) + 1);
					return new WordScenario(word2, new ScenarioRelationPair(iD, scenario2, text2, ⴃ, ⴗ, <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.get_phrase().ႰႥ().Length - 1));
				};
			}
			wordList = source8.Select(CS$<>9__CachedAnonymousMethodDelegate2c).ToList();
			ႥႥႨ.Ⴗ.ႨႷႣ(ႥႠႭ.Ⴍ.ႰႣ(1821394876));
		}

		internal void ႨႳႼ(Scenario Ⴍ)
		{
			Ⴍ.DynamicTexts.Clear();
			Ⴍ.DynamicTexts.AddRange(Ⴍ.Texts);
		}

		public void Dispose()
		{
			ႨႷႰ(Ⴍ: true);
			GC.SuppressFinalize(this);
		}

		protected void ႨႷႰ(bool Ⴍ)
		{
			int num = 4;
			while (true)
			{
				switch (num)
				{
				default:
					num = (disposed ? 1 : 3);
					break;
				case 3:
					num = (Ⴍ ? 2 : 0);
					break;
				case 2:
					num = 0;
					break;
				case 0:
					num = 1;
					break;
				case 1:
					disposed = true;
					return;
				}
			}
		}

		private static IEnumerable<ScenarioTextBase> <ReloadWordList>b__d(Scenario scenario)
		{
			return scenario.DynamicTexts;
		}

		private static <>f__AnonymousTypea<Scenario, ScenarioTextBase> <ReloadWordList>b__e(Scenario scenario, ScenarioTextBase text)
		{
			return new <>f__AnonymousTypea<Scenario, ScenarioTextBase>(scenario, text);
		}

		private static IEnumerable<string> <ReloadWordList>b__f(<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier5)
		{
			return <>h__TransparentIdentifier5.get_text().Data.Split(',');
		}

		private static <>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string> <ReloadWordList>b__10(<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier5, string phraseText)
		{
			return new <>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>(<>h__TransparentIdentifier5, phraseText);
		}

		private <>f__AnonymousType13<<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer> <ReloadWordList>b__11(<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string> <>h__TransparentIdentifier6)
		{
			return new <>f__AnonymousType13<<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>(<>h__TransparentIdentifier6, new PhraseWordContainer(<>h__TransparentIdentifier6.get_phraseText().Split(' '), 0, phraseCounter++));
		}

		private static IEnumerable<string> <ReloadWordList>b__12(<>f__AnonymousType13<<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer> <>h__TransparentIdentifier7)
		{
			return <>h__TransparentIdentifier7.get_phrase().ႰႥ();
		}

		private static WordScenario <ReloadWordList>b__13(<>f__AnonymousType13<<>f__AnonymousType12<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer> <>h__TransparentIdentifier7, string word)
		{
			int iD = <>h__TransparentIdentifier7.<>h__TransparentIdentifier6.<>h__TransparentIdentifier5.get_text().ID;
			Scenario scenario = <>h__TransparentIdentifier7.<>h__TransparentIdentifier6.<>h__TransparentIdentifier5.get_scenario();
			ScenarioTextBase text = <>h__TransparentIdentifier7.<>h__TransparentIdentifier6.<>h__TransparentIdentifier5.get_text();
			int ⴃ = <>h__TransparentIdentifier7.get_phrase().ႰႠ();
			PhraseWordContainer phrase = <>h__TransparentIdentifier7.get_phrase();
			int ⴗ;
			phrase.ႰႥ((ⴗ = phrase.ႰႨ()) + 1);
			return new WordScenario(word, new ScenarioRelationPair(iD, scenario, text, ⴃ, ⴗ, <>h__TransparentIdentifier7.get_phrase().ႰႥ().Length - 1));
		}

		private static IEnumerable<ScenarioTextBase> <ReloadWordList>b__14(Scenario scenario)
		{
			return scenario.DynamicTexts;
		}

		private static <>f__AnonymousTypea<Scenario, ScenarioTextBase> <ReloadWordList>b__15(Scenario scenario, ScenarioTextBase text)
		{
			return new <>f__AnonymousTypea<Scenario, ScenarioTextBase>(scenario, text);
		}

		private static IEnumerable<string> <ReloadWordList>b__16(<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier9)
		{
			return <>h__TransparentIdentifier9.get_text().Data.Split(',');
		}

		private static <>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string> <ReloadWordList>b__17(<>f__AnonymousTypea<Scenario, ScenarioTextBase> <>h__TransparentIdentifier9, string phraseText)
		{
			return new <>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>(<>h__TransparentIdentifier9, phraseText);
		}

		private <>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer> <ReloadWordList>b__18(<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string> <>h__TransparentIdentifiera)
		{
			return new <>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>(<>h__TransparentIdentifiera, new PhraseWordContainer(<>h__TransparentIdentifiera.get_phraseText().Split(' '), 0, phraseCounter++));
		}

		private static IEnumerable<string> <ReloadWordList>b__19(<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer> <>h__TransparentIdentifierb)
		{
			return <>h__TransparentIdentifierb.get_phrase().ႰႥ();
		}

		private static <>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string> <ReloadWordList>b__1a(<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer> <>h__TransparentIdentifierb, string word)
		{
			return new <>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string>(<>h__TransparentIdentifierb, word);
		}

		private static bool <ReloadWordList>b__1b(<>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string> <>h__TransparentIdentifierc)
		{
			return !<>h__TransparentIdentifierc.<>h__TransparentIdentifierb.<>h__TransparentIdentifiera.<>h__TransparentIdentifier9.get_scenario().IsInternal;
		}

		private static WordScenario <ReloadWordList>b__1c(<>f__AnonymousType16<<>f__AnonymousType15<<>f__AnonymousType14<<>f__AnonymousTypea<Scenario, ScenarioTextBase>, string>, PhraseWordContainer>, string> <>h__TransparentIdentifierc)
		{
			string word = <>h__TransparentIdentifierc.get_word();
			int iD = <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.<>h__TransparentIdentifiera.<>h__TransparentIdentifier9.get_text().ID;
			Scenario scenario = <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.<>h__TransparentIdentifiera.<>h__TransparentIdentifier9.get_scenario();
			ScenarioTextBase text = <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.<>h__TransparentIdentifiera.<>h__TransparentIdentifier9.get_text();
			int ⴃ = <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.get_phrase().ႰႠ();
			PhraseWordContainer phrase = <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.get_phrase();
			int ⴗ;
			phrase.ႰႥ((ⴗ = phrase.ႰႨ()) + 1);
			return new WordScenario(word, new ScenarioRelationPair(iD, scenario, text, ⴃ, ⴗ, <>h__TransparentIdentifierc.<>h__TransparentIdentifierb.get_phrase().ႰႥ().Length - 1));
		}
	}
	[Serializable]
	public class PersonalityDataFile : IEqualityComparer<PersonalityDataFile>
	{
		private string fileName = string.Empty;

		[NonSerialized]
		private PersonalityData data;

		[NonSerialized]
		private DataFileLocation fileRelevance;

		[NonSerialized]
		private string fullFileName = string.Empty;

		[XmlAttribute]
		[DefaultValue("")]
		public string FileName
		{
			get
			{
				return fileName;
			}
			set
			{
				fileName = value;
			}
		}

		[XmlIgnore]
		public PersonalityData Data
		{
			get
			{
				return data;
			}
			set
			{
				data = value;
			}
		}

		[DefaultValue(0)]
		[XmlAttribute]
		public DataFileLocation FileRelevance
		{
			get
			{
				return fileRelevance;
			}
			set
			{
				fileRelevance = value;
			}
		}

		public string Ⴐ
		{
			get
			{
				int num = 1;
				string result;
				while (true)
				{
					int num2;
					switch (num)
					{
					default:
						num2 = ((!string.IsNullOrEmpty(fullFileName)) ? 2 : 0);
						goto IL_0022;
					case 2:
						result = Path.GetDirectoryName(fullFileName);
						break;
					case 0:
						result = string.Empty;
						break;
					}
					break;
					IL_0022:
					num = num2;
				}
				return result;
			}
		}

		public PersonalityDataFile()
		{
		}

		public PersonalityDataFile(string Ⴍ)
		{
			fullFileName = Ⴍ;
			fileName = Path.GetFileName(Ⴍ);
		}

		public bool Equals(PersonalityDataFile Ⴍ, PersonalityDataFile Ⴓ)
		{
			return Ⴍ.fileName == Ⴓ.fileName;
		}

		public int GetHashCode(PersonalityDataFile Ⴍ)
		{
			return fileName.GetHashCode();
		}

		public PersonalityData ႰႠ(string Ⴍ)
		{
			fullFileName = Path.Combine(Ⴍ, fileName);
			data = Ⴈ<PersonalityData>.ႨႷႭ(fullFileName);
			data.PersonalityDataFile = this;
			return data;
		}

		public PersonalityData ႰႤ(Stream Ⴍ)
		{
			data = Ⴈ<PersonalityData>.ႨႷႣ(Ⴍ);
			data.PersonalityDataFile = this;
			return data;
		}

		public void ႰႨ()
		{
			ႰႰ(Ⴍ: false);
		}

		public void ႰႰ(bool Ⴍ)
		{
			int num = 2;
			while (true)
			{
				switch (num)
				{
				case 1:
					return;
				default:
					num = ((!(fullFileName != string.Empty)) ? 1 : 0);
					break;
				case 0:
					ႣႳ(fullFileName, Ⴍ);
					num = 1;
					break;
				}
			}
		}

		public void ႰႳ(string Ⴍ)
		{
			ႣႳ(Ⴍ, Ⴓ: false);
		}

		public void ႣႳ(string Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0018, IL_003a, IL_005e, IL_0062
			while (true)
			{
				bool flag = data != null;
				while (!flag)
				{
					if (873 <= 873 - 598)
					{
						continue;
					}
					return;
				}
				while (true)
				{
					Ⴈ<PersonalityData>.Ⴗ(Ⴍ, data, Ⴈ: true);
					if (!Ⴓ)
					{
						if (817 > 817 - 667)
						{
							Ⴈ<PersonalityData>.ႨႷႤ(Ⴍ);
							if (648 <= 648 - 563)
							{
								continue;
							}
							return;
						}
						break;
					}
					return;
				}
			}
		}

		public void ႰႥ(Stream Ⴍ)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				case 1:
					return;
				default:
					num = ((data == null) ? 2 : 4);
					break;
				case 4:
					num2 = ((Ⴍ == null) ? 1 : 0);
					goto IL_0032;
				case 2:
					num2 = 1;
					goto IL_0032;
				case 3:
					{
						Ⴈ<PersonalityData>.ႳႣ(Ⴍ, data);
						num = 1;
						break;
					}
					IL_0032:
					num = ((num2 != 0) ? 1 : 3);
					break;
				}
			}
		}

		public void ႣႣ(Stream Ⴍ, string Ⴓ)
		{
			//Discarded unreachable code: IL_0002, IL_0026, IL_0044
			do
			{
				if (data == null)
				{
					return;
				}
			}
			while (false);
			Ⴈ<PersonalityData>.Ⴃ(Ⴍ, data, ႥႥႨႣ.Ⴗ.ႤႠႭ(Ⴓ));
			while (521 <= 521 - 274)
			{
			}
		}

		public void ႣႷ(Stream Ⴍ, string Ⴓ)
		{
			data = Ⴈ<PersonalityData>.ႳႭ(Ⴍ, ႥႥႨႣ.Ⴗ.ႤႠႭ(Ⴓ));
		}
	}
	[Serializable]
	public enum PersonalityStatus
	{
		Unloaded,
		Loaded
	}
	[Serializable]
	public class PhraseWordContainer
	{
		private string[] words;

		private int index;

		private int id;

		internal PhraseWordContainer(string[] Ⴍ, int Ⴄ, int Ⴃ)
		{
			words = Ⴍ;
			index = Ⴄ;
			id = Ⴃ;
		}

		internal string[] ႰႥ()
		{
			return words;
		}

		internal int ႰႨ()
		{
			return index;
		}

		internal void ႰႥ(int Ⴍ)
		{
			index = Ⴍ;
		}

		internal int ႰႠ()
		{
			return id;
		}
	}
	[Serializable]
	public enum PushButtonAction
	{
		Mute,
		SurpriseMe,
		ChooseAction
	}
	[Serializable]
	[DefaultValue(0)]
	public enum QnAScenarioMatchActivity
	{
		PlayChitChat,
		RunWebSearch,
		ConfirmWebSearch,
		ConfirmWebSearchWithQ,
		CheckAndPlayChitChat,
		PlayGames,
		Cinema,
		NewChitChat,
		NewWords,
		GoToMyChatman,
		WhatsTheTime,
		AnswerQuestion,
		TeachQOrSearchWeb,
		TeachQOrSearchWebWithQ,
		TeachQuestion,
		UserProfile,
		PromptYesNo,
		WhatsMyName,
		ShowWeather,
		ShowSports,
		ShowTv,
		ShowHomework,
		ShowApps,
		UserProfileOrTeach,
		ShowReminders,
		ShowCinemaAndGames,
		GoToFacebook,
		GoToFunnyWebsite,
		GoToRegistration,
		Personalities,
		ShowCredits,
		DownloadChitChat,
		ShowAllTeach,
		HomeworkOrGamesOrCinema,
		GoToHomework
	}
	[Serializable]
	public class Scenario : IEqualityComparer<Scenario>, IEquatable<Scenario>
	{
		private Guid id;

		private string description = string.Empty;

		private EventType eventType;

		private bool highPriority;

		private bool isInternal;

		private bool isQnA;

		private bool isUserQnA;

		public string originalScenarioID;

		private List<ScenarioMood> moods = null;

		[NonSerialized]
		protected bool moodsSet;

		private List<ScenarioAction> actions;

		[NonSerialized]
		protected bool actionsSet;

		private List<ScenarioTextBase> texts = new List<ScenarioTextBase>();

		[NonSerialized]
		protected bool textsSet;

		private List<ScenarioTextBase> dynamicTexts = new List<ScenarioTextBase>();

		private bool dontOverrideDanger = false;

		[XmlAttribute]
		public Guid ID
		{
			get
			{
				return id;
			}
			set
			{
				id = value;
			}
		}

		[XmlAttribute]
		public string Description
		{
			get
			{
				return description;
			}
			set
			{
				description = value;
			}
		}

		[XmlAttribute]
		public EventType EventType
		{
			get
			{
				return eventType;
			}
			set
			{
				eventType = value;
			}
		}

		[DefaultValue(false)]
		[XmlAttribute]
		public bool HighPriority
		{
			get
			{
				return highPriority;
			}
			set
			{
				highPriority = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(false)]
		public bool IsInternal
		{
			get
			{
				return isInternal;
			}
			set
			{
				isInternal = value;
			}
		}

		[DefaultValue(false)]
		[XmlAttribute]
		public bool IsQnA
		{
			get
			{
				return isQnA;
			}
			set
			{
				isQnA = value;
			}
		}

		[DefaultValue(false)]
		[XmlAttribute]
		public bool IsUserQnA
		{
			get
			{
				return isUserQnA;
			}
			set
			{
				isUserQnA = value;
			}
		}

		[XmlArray("Moods")]
		[XmlArrayItem("Mood", typeof(ScenarioMood))]
		public List<ScenarioMood> Moods
		{
			get
			{
				return moods;
			}
			set
			{
				int num = 1;
				while (true)
				{
					int num2;
					switch (num)
					{
					default:
						num2 = (moodsSet ? 2 : 0);
						break;
					case 2:
						throw new InvalidOperationException();
					case 0:
						moods = value;
						moodsSet = true;
						return;
					}
					num = num2;
				}
			}
		}

		[XmlArrayItem("Action", typeof(ScenarioAction))]
		[XmlArray("Actions")]
		[XmlArrayItem("UserAction", typeof(ScenarioUserAction))]
		public List<ScenarioAction> Actions
		{
			get
			{
				return actions;
			}
			set
			{
				int num = 2;
				while (true)
				{
					int num2;
					switch (num)
					{
					default:
						num2 = ((!actionsSet) ? 1 : 0);
						break;
					case 0:
						throw new InvalidOperationException();
					case 1:
						actions = value;
						actionsSet = true;
						return;
					}
					num = num2;
				}
			}
		}

		[XmlArrayItem("Text", typeof(ScenarioText))]
		[XmlArrayItem("Icon", typeof(ScenarioIconText))]
		[XmlArray("Texts")]
		public List<ScenarioTextBase> Texts
		{
			get
			{
				return texts;
			}
			set
			{
				int num = 2;
				while (true)
				{
					int num2;
					switch (num)
					{
					default:
						num2 = ((!textsSet) ? 1 : 0);
						break;
					case 0:
						throw new InvalidOperationException();
					case 1:
						texts = value;
						textsSet = true;
						return;
					}
					num = num2;
				}
			}
		}

		[XmlIgnore]
		public List<ScenarioTextBase> DynamicTexts
		{
			get
			{
				return dynamicTexts;
			}
			set
			{
				dynamicTexts = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(false)]
		public bool DontOverrideDanger
		{
			get
			{
				return dontOverrideDanger;
			}
			set
			{
				dontOverrideDanger = value;
			}
		}

		public static Scenario ႼႷ()
		{
			Scenario scenario = new Scenario();
			scenario.id = Guid.NewGuid();
			scenario.moods = new List<ScenarioMood>();
			scenario.actions = new List<ScenarioAction>();
			scenario.texts = new List<ScenarioTextBase>();
			return scenario;
		}

		public static Scenario ႰႥ(Scenario Ⴍ)
		{
			return ႤႠ(Ⴍ, Ⴃ: true);
		}

		public static Scenario ႤႠ(Scenario Ⴀ, bool Ⴃ)
		{
			//Discarded unreachable code: IL_0002, IL_004a, IL_006d
			Scenario scenario = Ⴀ.MemberwiseClone() as Scenario;
			while (Ⴃ)
			{
				if (324 >= 324 - 100)
				{
					scenario.actions = ႰႨ(Ⴀ);
					scenario.actionsSet = true;
					do
					{
						scenario.moods = ႰႠ(Ⴀ);
						scenario.moodsSet = true;
						scenario.texts = ႰႤ(Ⴀ);
						scenario.textsSet = true;
					}
					while (141 <= 141 - 88);
					break;
				}
			}
			return scenario;
		}

		public static List<ScenarioAction> ႰႨ(Scenario Ⴓ)
		{
			List<ScenarioAction> list = new List<ScenarioAction>();
			foreach (ScenarioAction action in Ⴓ.Actions)
			{
				list.Add(new ScenarioAction(action.ID));
			}
			return list;
		}

		public static List<ScenarioMood> ႰႠ(Scenario Ⴓ)
		{
			List<ScenarioMood> list = new List<ScenarioMood>();
			foreach (ScenarioMood mood in Ⴓ.Moods)
			{
				list.Add(new ScenarioMood(mood));
			}
			return list;
		}

		public static List<ScenarioTextBase> ႰႤ(Scenario Ⴓ)
		{
			List<ScenarioTextBase> list = new List<ScenarioTextBase>();
			foreach (ScenarioTextBase text in Ⴓ.Texts)
			{
				if (text is ScenarioText)
				{
					list.Add(new ScenarioText(text));
				}
			}
			return list;
		}

		public bool Equals(Scenario Ⴃ)
		{
			return ID == Ⴃ.ID;
		}

		public bool Equals(Scenario Ⴃ, Scenario Ⴀ)
		{
			return Ⴃ.ID == Ⴀ.ID;
		}

		public int GetHashCode(Scenario Ⴃ)
		{
			return Ⴃ.ID.GetHashCode();
		}
	}
	[Serializable]
	public class ScenarioAction : IEqualityComparer<ScenarioAction>, IEquatable<ScenarioAction>
	{
		protected Guid id = Guid.Empty;

		protected int specialCode;

		protected string data;

		private List<ScenarioAction> actions;

		[NonSerialized]
		protected bool actionsSet;

		[NonSerialized]
		private QnAScenarioMatchActivity requestedActivity;

		[NonSerialized]
		protected ChatmanAction action;

		[XmlAttribute]
		public Guid ID
		{
			get
			{
				return id;
			}
			set
			{
				id = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(0)]
		public int SpecialCode
		{
			get
			{
				return specialCode;
			}
			set
			{
				specialCode = value;
			}
		}

		[DefaultValue("")]
		[XmlAttribute]
		public string Data
		{
			get
			{
				return data;
			}
			set
			{
				data = value;
			}
		}

		[XmlElement("Action", typeof(ScenarioAction))]
		public List<ScenarioAction> Actions
		{
			get
			{
				return actions;
			}
			set
			{
				//Discarded unreachable code: IL_0002, IL_0026
				while (actionsSet)
				{
					if ((625 + 625 * 625) % 2 == 0)
					{
						throw new InvalidOperationException();
					}
				}
				actions = value;
				actionsSet = true;
			}
		}

		[DefaultValue(0)]
		[XmlAttribute]
		public QnAScenarioMatchActivity RequestedActivity
		{
			get
			{
				return requestedActivity;
			}
			set
			{
				requestedActivity = value;
			}
		}

		[XmlIgnore]
		public ChatmanAction Action
		{
			get
			{
				return action;
			}
			set
			{
				action = value;
			}
		}

		public ScenarioAction()
		{
		}

		public ScenarioAction(Guid Ⴍ)
		{
			id = Ⴍ;
		}

		public ScenarioAction(ScenarioAction Ⴍ)
		{
			id = Ⴍ.id;
			specialCode = Ⴍ.specialCode;
			action = Ⴍ.action;
			data = Ⴍ.data;
		}

		public bool Equals(ScenarioAction Ⴍ)
		{
			return id == Ⴍ.ID;
		}

		public bool Equals(ScenarioAction Ⴍ, ScenarioAction Ⴓ)
		{
			return Ⴍ.id == Ⴓ.id;
		}

		public int GetHashCode(ScenarioAction Ⴍ)
		{
			return Ⴍ.id.GetHashCode();
		}
	}
	[Serializable]
	public class ScenarioIconText : ScenarioTextBase
	{
		public ScenarioIconText()
		{
		}

		public ScenarioIconText(ScenarioTextBase Ⴀ)
			: base(Ⴀ)
		{
		}
	}
	[Serializable]
	public class ScenarioMood : IEqualityComparer<ScenarioMood>, IEquatable<ScenarioMood>
	{
		private Guid id;

		private string actionMoodId = string.Empty;

		[XmlAttribute]
		public Guid ID
		{
			get
			{
				return id;
			}
			set
			{
				id = value;
			}
		}

		[XmlAttribute]
		[DefaultValue("")]
		public string ActionMoodID
		{
			get
			{
				return actionMoodId;
			}
			set
			{
				actionMoodId = value;
			}
		}

		public ScenarioMood()
		{
		}

		public ScenarioMood(ScenarioMood Ⴗ)
		{
			id = Ⴗ.id;
		}

		public bool Equals(ScenarioMood Ⴍ, ScenarioMood Ⴓ)
		{
			return Ⴍ.id == Ⴓ.id;
		}

		public int GetHashCode(ScenarioMood Ⴍ)
		{
			return Ⴍ.id.GetHashCode();
		}

		public bool Equals(ScenarioMood Ⴍ)
		{
			return id == Ⴍ.ID;
		}
	}
	[Serializable]
	public class ScenarioRelationPair
	{
		private int id;

		private Scenario scenario;

		private ScenarioTextBase text;

		private string phraseUniqueID;

		private int phraseWordIndex;

		private int phraseWordLength;

		public int Ⴐ => id;

		public Scenario Ⴐ => scenario;

		public ScenarioTextBase Ⴐ => text;

		public string Ⴐ => phraseUniqueID;

		public int Ⴈ => phraseWordIndex;

		public int Ⴓ => phraseWordLength;

		public ScenarioRelationPair(int Ⴍ, Scenario Ⴓ, ScenarioTextBase Ⴈ)
		{
			id = Ⴍ;
			scenario = Ⴓ;
			text = Ⴈ;
		}

		public ScenarioRelationPair(int Ⴍ, Scenario Ⴓ, ScenarioTextBase Ⴈ, int Ⴃ, int Ⴗ, int Ⴅ)
			: this(Ⴍ, Ⴓ, Ⴈ)
		{
			phraseUniqueID = string.Format(ႥႠႭ.Ⴃ.ႰႣ(1821394875), Ⴓ.ID, Ⴃ);
			phraseWordIndex = Ⴗ;
			phraseWordLength = Ⴅ;
		}
	}
	[Serializable]
	public class ScenarioText : ScenarioTextBase, IEqualityComparer<ScenarioText>, IComparer<ScenarioText>, IEquatable<ScenarioText>
	{
		public ScenarioText()
		{
		}

		public ScenarioText(ScenarioTextBase Ⴀ)
			: base(Ⴀ)
		{
		}

		private bool ႭႷ(ScenarioText Ⴀ, ScenarioText Ⴍ)
		{
			return Equals(Ⴀ, Ⴍ);
		}

		bool IEqualityComparer<ScenarioText>.Equals(ScenarioText Ⴀ, ScenarioText Ⴍ)
		{
			//ILSpy generated this explicit interface implementation from .override directive in ႭႷ
			return this.ႭႷ(Ⴀ, Ⴍ);
		}

		private int ႨႳႭ(ScenarioText Ⴀ)
		{
			return GetHashCode(Ⴀ);
		}

		int IEqualityComparer<ScenarioText>.GetHashCode(ScenarioText Ⴀ)
		{
			//ILSpy generated this explicit interface implementation from .override directive in ႨႳႭ
			return this.ႨႳႭ(Ⴀ);
		}

		public int Compare(ScenarioText Ⴀ, ScenarioText Ⴍ)
		{
			return Ⴀ.ID.CompareTo(Ⴍ.ID);
		}

		public bool Equals(ScenarioText Ⴀ)
		{
			return base.ID == Ⴀ.ID;
		}
	}
	[Serializable]
	public class ScenarioTextBase : IEqualityComparer<ScenarioTextBase>, IComparer<ScenarioTextBase>, IEquatable<ScenarioTextBase>
	{
		private int id;

		private string data;

		private ScenarioTextRelation relation;

		[NonSerialized]
		private List<ScenarioAction> actions;

		[NonSerialized]
		private bool hasStar;

		[NonSerialized]
		private int topPhraseID;

		[NonSerialized]
		private bool requireAdditionalPhrase;

		[NonSerialized]
		private string matchWord;

		private bool deleted;

		[XmlAttribute]
		public int ID
		{
			get
			{
				return id;
			}
			set
			{
				id = value;
			}
		}

		[DefaultValue("")]
		[XmlAttribute]
		public string Data
		{
			get
			{
				return data;
			}
			set
			{
				data = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(0)]
		public ScenarioTextRelation Relation
		{
			get
			{
				return relation;
			}
			set
			{
				relation = value;
			}
		}

		[XmlArray("Actions")]
		[XmlArrayItem("Action", typeof(ScenarioAction))]
		public List<ScenarioAction> Actions
		{
			get
			{
				return actions;
			}
			set
			{
				actions = value;
			}
		}

		[DefaultValue(false)]
		[XmlAttribute]
		public bool HasStar
		{
			get
			{
				return hasStar;
			}
			set
			{
				hasStar = value;
			}
		}

		[DefaultValue(0)]
		[XmlAttribute]
		public int TopPhraseID
		{
			get
			{
				return topPhraseID;
			}
			set
			{
				topPhraseID = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(false)]
		public bool RequireAdditionalPhrase
		{
			get
			{
				return requireAdditionalPhrase;
			}
			set
			{
				requireAdditionalPhrase = value;
			}
		}

		[DefaultValue("")]
		[XmlAttribute]
		public string MatchWord
		{
			get
			{
				return matchWord;
			}
			set
			{
				matchWord = value;
			}
		}

		[XmlAttribute]
		[DefaultValue(false)]
		public bool Deleted
		{
			get
			{
				return deleted;
			}
			set
			{
				deleted = value;
			}
		}

		public ScenarioTextBase()
		{
		}

		public ScenarioTextBase(ScenarioTextBase Ⴃ)
		{
			id = Ⴃ.id;
			data = Ⴃ.data;
			relation = Ⴃ.relation;
		}

		public int Compare(ScenarioTextBase Ⴀ, ScenarioTextBase Ⴍ)
		{
			return Ⴀ.id.CompareTo(Ⴍ.id);
		}

		public bool Equals(ScenarioTextBase Ⴀ, ScenarioTextBase Ⴍ)
		{
			return Ⴀ.id == Ⴍ.id;
		}

		public int GetHashCode(ScenarioTextBase Ⴀ)
		{
			return Ⴀ.id.GetHashCode();
		}

		public bool Equals(ScenarioTextBase Ⴀ)
		{
			return id == Ⴀ.id;
		}
	}
	[Serializable]
	public enum ScenarioTextRelation
	{
		Include,
		Exclude
	}
	[Serializable]
	public class ScenarioUserAction : ScenarioAction
	{
		protected string answerText;

		[DefaultValue("")]
		[XmlAttribute]
		public string AnswerText
		{
			get
			{
				return answerText;
			}
			set
			{
				answerText = value;
			}
		}

		public ScenarioUserAction()
		{
		}

		public ScenarioUserAction(Guid Ⴍ)
		{
			id = Ⴍ;
		}

		public ScenarioUserAction(ScenarioUserAction Ⴍ)
			: base(Ⴍ)
		{
			answerText = Ⴍ.answerText;
		}
	}
	[Serializable]
	public class SoundHardwareAction : HardwareAction
	{
		private string fileName = string.Empty;

		[XmlAttribute]
		public string FileName
		{
			get
			{
				return fileName;
			}
			set
			{
				fileName = value;
			}
		}

		public SoundHardwareAction ႰႳ()
		{
			return (SoundHardwareAction)MemberwiseClone();
		}
	}
	[Serializable]
	public enum WebConnectionResult
	{
		Unknown,
		Connected,
		Failed,
		AccessDenied
	}
	[Serializable]
	public class WordScenario
	{
		private string word;

		private ScenarioRelationPair scenarioRelation;

		public string Ⴐ
		{
			get
			{
				return word;
			}
			set
			{
				word = value;
			}
		}

		public ScenarioRelationPair Ⴐ
		{
			get
			{
				return scenarioRelation;
			}
			set
			{
				scenarioRelation = value;
			}
		}

		public WordScenario(string Ⴍ, ScenarioRelationPair Ⴓ)
		{
			word = Ⴍ;
			scenarioRelation = Ⴓ;
		}
	}
	[Serializable]
	public class WordScenarios : IComparable<WordScenarios>
	{
		[NonSerialized]
		private static Regex endOfWordStripper = new Regex(ႥႠႭ.Ⴈ.ႰႥ(1821394875), RegexOptions.Compiled);

		private string word;

		private List<ScenarioRelationPair> scenariosRelations;

		public string Ⴐ
		{
			get
			{
				return word;
			}
			set
			{
				word = value;
			}
		}

		public List<ScenarioRelationPair> Ⴐ
		{
			get
			{
				return scenariosRelations;
			}
			set
			{
				scenariosRelations = value;
			}
		}

		public WordScenarios(string Ⴍ, List<ScenarioRelationPair> Ⴓ)
			: this(Ⴍ, Ⴓ, Ⴈ: false)
		{
		}

		public WordScenarios(string Ⴍ, List<ScenarioRelationPair> Ⴓ, bool Ⴈ)
		{
			//Discarded unreachable code: IL_0002, IL_001e, IL_003c, IL_0047
			while (true)
			{
				if (!Ⴈ)
				{
					if ((910 + 910 * 910) % 2 == 0)
					{
						word = Ⴍ;
						break;
					}
				}
				else
				{
					word = ႰႰ(Ⴍ);
					if (876 >= 876 - 634)
					{
						break;
					}
				}
			}
			scenariosRelations = Ⴓ;
		}

		public static string ႰႰ(string Ⴍ)
		{
			return endOfWordStripper.Replace(Ⴍ, string.Empty);
		}

		public int CompareTo(WordScenarios Ⴍ)
		{
			return string.Compare(word, Ⴍ.Ⴐ, StringComparison.OrdinalIgnoreCase);
		}
	}
}
namespace ႤႤႭ
{
	internal sealed class Ⴅ
	{
		private static readonly char[] Ⴓ;

		private static readonly string[] Ⴓ;

		internal static string ႰႣ(int Ⴍ)
		{
			int num = Ⴍ ^ 0x6C9047A4;
			string result;
			if ((result = Ⴓ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "\u059cձघ\u05ecೠగ\u0df1झ\u05bdզऍע\u0cfbచ෩त\u05acխसע\u0cf9ట\u0de0\u093f\u0596յओר";
				break;
			case 1:
				obj = "Ցऌ\u05ff\u0cfaఉඥ\u093f\u05bdՠऌפ\u0cf0\u0c0d෬ण\u05bfԴऎר೧ఈ෪ण\u05b9ոग\u05f9೬\u0c5b෧ऴ\u05f8պटנ\u0cf0\u0c5b";
				break;
			case 2:
				obj = "फ\u05fe\u0cf0ఉ\u0dc7त\u05aaՠख\u05c9\u0cf4ఏ\u0de0";
				break;
			case 3:
				obj = "ח\u0cfcఋෆढ\u05bcձ";
				break;
			case 4:
				obj = "\u0cc0ఈ\u0de0\u093f\u059fձऐש\u0cf0ఉ";
				break;
			case 5:
				obj = "స෭ब\u05acչटף\u0cdbచ෨न";
				break;
			case 6:
				obj = "හम\u05acսईר\u0cc5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfcऄ\u05bc";
				break;
			case 7:
				obj = "\u0901\u05b9էऊכ\u0cfaగ\u0df0ठ\u05bd";
				break;
			case 8:
				obj = "\u0591է\u093f\u05f8ೡఔ\u0dc8स\u05acձच";
				break;
			case 9:
				obj = "Մऋ\u05fe\u0cfdహ\u0df0ह\u05acջऐ\u05cc\u0cf6ఏ෬ढ\u05b6Մछ\u05ff೦ఔ෫ब\u05b4սऊ״\u0cdc\u0c3f";
				break;
			case 10:
				obj = "\u093aע\u0cfbఏ\u0dd5\u093f\u05b7հऋ\u05ee\u0cf0\u0c3a෦ह\u05b1ջऐ\u05fe";
				break;
			case 11:
				obj = "\u05c9\u0cfaక\u0df1झ\u05aaջच\u05f8\u0cf6ఞහम\u05acսऑף೦\u0c3e෫ऩ\u0590ջऋ\u05ff";
				break;
			case 12:
				obj = "\u0cd6ఉ\u0de0ऩ\u05bdպऊפ\u0cf4గ\u0df6";
				break;
			case 13:
				obj = "\u0c56";
				break;
			case 14:
				obj = "";
				break;
			case 15:
				obj = "\u0903\u05b9չछ";
				break;
			case 16:
				obj = "\u0591շऑף\u0cd6ఔ෩ढ\u05aaՇझץ\u0cf0ఖ\u0de0ऄ\u05b6հछ\u05f5";
				break;
			case 17:
				obj = "՝ऍן\u0cf0చ\u0de1\u0902\u05b6ոइ";
				break;
			case 18:
				obj = "प\u05ec೧జ\u0de0ह֍էछ\u05ff\u0cd4జ\u0de0";
				break;
			case 19:
				obj = "\u05c4೦\u0c3a෦ह\u05b1բछ";
				break;
			case 20:
				obj = "\u0cd3చ෬ड\u05bdհफ़\u05f9\u0cfa\u0c5b෩ढ\u05b9հफ़\u05fd\u0cf0ఉ\u0df6ढ\u05b6յऒפೡ\u0c02ඥफ\u05b1ոछ\u05ad";
				break;
			case 21:
				obj = "\u0c4eභन\u05baշघ\u05b5\u0cf0\u0c56\u0de4ॻ\u05eeղ\u0953\u05b9ಭ\u0c4c෦ॠ\u05baԤ\u094c\u05bcಸ\u0c4d\u0db2ॼרղट\u05b9\u0cf0\u0c43\u0dbcॵר";
				break;
			case 22:
				obj = "ඩ";
				break;
			case 23:
				obj = "१\u05f6ջङת";
				break;
			case 24:
				obj = "ײԺओ\u05fdದ";
				break;
			case 25:
				obj = "Լ\u094f\u05ecಧ\u0c49෧ऩתԧ\u0953\u05eb\u0cf0\u0c4cබॠ\u05ecձझ\u05eeಸ\u0c43\u0db2ॺ\u05eeԹट\u05b4\u0cf3ఞඵॵ\u05baձ\u094a\u05bdಠటඬ";
				break;
			case 26:
				obj = "\u0956\u05bcಬఞ\u0de1नׯԤच\u05a0ಠ\u0c4f\u0de0न\u05f5Ԡ\u0946־\u0cf3\u0c56\u0de4ॻ\u05bdձ\u0953\u05b9ದ\u0c49\u0de3म\u05bcղ\u094c\u05b4ತ\u0c4e\u0dbc।";
				break;
			case 27:
				obj = "\u05a3\u0cfaజ\u0de2";
				break;
			case 28:
				obj = "\u0cbf";
				break;
			case 29:
				obj = "య෪ह\u05b9ոऽעೠక\u0df1न\u05aa";
				break;
			case 30:
				obj = "\u0dccउ";
				break;
			case 31:
				obj = "ट\u05bdղछ\u05ff\u0cf0క෦न";
				break;
			case 32:
				obj = "\u0591է\u093b\u05f5\u0cf6గ\u0df0ऩ\u05bdհ";
				break;
			case 33:
				obj = "Գख़\u05a1ವ\u0c3f\u0de0\u093e\u05bbզग\u05fdೡఒ෪णעԴख़";
				break;
			case 34:
				obj = "बע\u0cfbట\u0dfcढ";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴓ = (char[])(object)Ⴅ.Ⴓ;
			int num2 = ⴓ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴓ[(num3 + Ⴍ) % num2]);
			}
			result = new string(array);
			Ⴓ[num] = result;
			return result;
		}

		static Ⴅ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴅ.Ⴓ = (string[])(object)array;
			Ⴓ = new string[35];
		}
	}
}
namespace ႥႠႭ
{
	internal sealed class Ⴃ
	{
		private static readonly char[] Ⴍ;

		private static readonly string[] Ⴀ;

		internal static string ႰႣ(int Ⴍ)
		{
			int num = Ⴍ ^ 0x6C9047A4;
			string result;
			if ((result = Ⴀ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "\u0599\u0558ग\u05f9ೡగ\u0de0ङ\u05bdլऊ";
				break;
			case 1:
				obj = "Ղछ\u05ff೬య\u0de0व\u05ac";
				break;
			case 2:
				obj = "\u093b\u05ff೧ఔ\u0df7७\u05aaձऊ\u05ff\u0cfcఞ\u0df3त\u05b6ճफ़\u05fd\u0cf0ఉ\u0df6ढ\u05b6յऒפೡ\u0c02ඥय\u05a1Դगףೱఞ\u0dfd७";
				break;
			case 3:
				obj = "ט೦ఞ\u0df7ऎ\u05b1ՠइ";
				break;
			case 4:
				obj = "\u0cc0ఈ\u0de0\u093f\u059fձऐש\u0cf0ఉ";
				break;
			case 5:
				obj = "స෭ब\u05acչटף\u0cdbచ෨न";
				break;
			case 6:
				obj = "හम\u05acսईר\u0cc5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfcऄ\u05bc";
				break;
			case 7:
				obj = "ई\u05b6ճगף\u0cf0భ\u0de0\u093f\u05abսऑף";
				break;
			case 8:
				obj = "\u0591է\u093f\u05f8ೡఔ\u0dc8स\u05acձच";
				break;
			case 9:
				obj = "Մऋ\u05fe\u0cfdహ\u0df0ह\u05acջऐ\u05cc\u0cf6ఏ෬ढ\u05b6";
				break;
			case 10:
				obj = "\u093aע\u0cfbఏ\u0dd5\u093f\u05b7հऋ\u05ee\u0cf0\u0c3a෦ह\u05b1ջऐ\u05fe";
				break;
			case 11:
				obj = "\u05c9\u0cfaక\u0df1झ\u05aaջच\u05f8\u0cf6ఞහम\u05acսऑף೦న\u0df1ब\u05aaՠळפ\u0cfbఎ\u0df1न";
				break;
			case 12:
				obj = "\u0cc6ఎ෧\u093e\u05bbզग\u05fdೡఒ෪ण\u0594ձईר\u0cf9";
				break;
			case 13:
				obj = "\u0c56";
				break;
			case 14:
				obj = "";
				break;
			case 15:
				obj = "ऌ\u05adՠखע೧";
				break;
			case 16:
				obj = "֍դच\u05ecೡఞශब\u05acձ";
				break;
			case 17:
				obj = "Ը";
				break;
			case 18:
				obj = "\u094e\u05bdಥ\u0c4bඵॽרԤ\u0953\u05bdಥ\u0c4bඵॠרԤ\u094e\u05bdಸ\u0c4bඵॽרԹ\u094e\u05bdಥ\u0c4bඵॽרԤ\u094e\u05bdಥ\u0c4a";
				break;
			case 19:
				obj = "\u05c1\u0cfcక෮\u093e\u05f8ՠऑ\u05ad";
				break;
			case 20:
				obj = "\u0cc5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfc\u0963\u05bcյऊ";
				break;
			case 21:
				obj = "\u0c53බॿ\u05bcղ\u0947ׯ\u0cf4\u0c42ඨॾשհ\u094d\u05a0ಡ\u0c4f\u0dbcय\u05f5ԭ\u094f\u05bd\u0cf0\u0c56\u0de0ॵ\u05ecձ\u0949\u05b4\u0cf3\u0c4c\u0de1ॼ\u05bdԭ\u0957";
				break;
			case 22:
				obj = "තॵׯԢच\u05ec\u0cf6ఙ\u0de0ॠ\u05bbԠजשಸ\u0c4fනन\u05bcԹ\u0946\u05ecತ\u0c43ඨफרԧजשಡఘ\u0db2य\u05ebնझ\u05a4";
				break;
			case 23:
				obj = "१";
				break;
			case 24:
				obj = "\u059cյइ\u05fe\u0cc0ఈ\u0de0ऩ";
				break;
			case 25:
				obj = "Նऑףೱ\u0c02෪";
				break;
			case 26:
				obj = "र\u05ec\u0cf8ఞ";
				break;
			case 27:
				obj = "׀\u0cfaఔ\u0de1ऄ\u059c";
				break;
			case 28:
				obj = "\u0cdcక\u0df1न\u05b6էग\u05f9೬";
				break;
			case 29:
				obj = "ఉ\u0de0म";
				break;
			case 30:
				obj = "ජॡ\u05f8՚टנ\u0cf0\u0c41ඥ४";
				break;
			case 31:
				obj = "शרթअ\u05bc೨";
				break;
			case 32:
				obj = "\u059cձऍ\u05ee೧ఒ\u0df5ह\u05b1ջऐ";
				break;
			case 33:
				obj = "կफ़\u05ec\u0cf6ఏ෬ढ\u05b6՝\u093aם\u0cf4ఒ\u0df7७ץԴ";
				break;
			case 34:
				obj = "\u0952\u05adೡఓ\u0de0ऌ\u05bbՠगע\u0cfb\u0c5bම७";
				break;
			case 35:
				obj = "\u05ad೨";
				break;
			case 36:
				obj = "೮\u0c5b\u0df5न\u05aaէऑף\u0cf4గ෬ह\u05a1Մट\u05ffೡ\u0c3f\u0de4ह\u05b9Դ\u0943\u05ad";
				break;
			case 37:
				obj = "\u0c57ඥब\u05bbՠगע\u0cfb\u0c5bම७";
				break;
			case 38:
				obj = "ඩ७־ջऋףೱ\u0c3a෦ह\u05b1ջऐ\u05adನ\u0c5b";
				break;
			case 39:
				obj = "श\u05f8Ԩ\u0940ץ\u0ccaత\u0dd1\u093f\u05b9պऍ\u05fd\u0cf4ఉ\u0de0ण\u05ac՝चר\u0cfbఏ෬फ\u05b1ձऌ\u05b8\u0cf0\u0c5bම७";
				break;
			case 40:
				obj = "״Դओע\u0cfaటඥ॰\u05f8";
				break;
			case 41:
				obj = "կफ़\u05fd\u0cf0ఉ\u0df6ढ\u05b6յऒפೡ\u0c02\u0dd5ब\u05aaՠ\u093a\u05ecೡచසत\u05b4ձफ़\u05b0ವ";
				break;
			case 42:
				obj = "\u0952\u05ad೦ఘ\u0de0ण\u05b9զगעವ\u0c46ඥ";
				break;
			case 43:
				obj = "\u05f6ವఝ෬ड\u05bdԴ\u0943\u05ad";
				break;
			case 44:
				obj = "ಹ\u0c5b\u0de0व\u05acձऐ\u05fe\u0cfcఔ෫७ץԴ";
				break;
			case 45:
				obj = "\u0c00ඥऽ\u05bdզऍע\u0cfbచ෩त\u05acխ\u093a\u05ecೡచඥ॰\u05f8";
				break;
			case 46:
				obj = "\u0dfe७פԪखג\u0ccaయ\u0df7ब\u05b6էऎ\u05ec೧ఞ෫ह\u0591հछףೡఒ\u0de3त\u05bdզट\u05ebವ\u0c46ඥ";
				break;
			case 47:
				obj = "ॡ\u05f8ռट\u05ffೱఌ\u0de4\u093f\u05bdՕझ\u05f9\u0cfcఔ෫७ץԴ";
				break;
			case 48:
				obj = "\u05a3Դऍ\u05ee\u0cf0క\u0de4\u093f\u05b1ջपר೭ఏඥ॰\u05f8";
				break;
			case 49:
				obj = "Ըफ़\u05fa\u0cfaఉ\u0de1७ץԴ";
				break;
			case 50:
				obj = "अ\u05ad೦ఘ\u0de0ण\u05b9զगעವ\u0c46ඥ";
				break;
			case 51:
				obj = "\u05a1ವఏ\u0de0व\u05acԴ\u0943\u05ad";
				break;
			case 52:
				obj = "೮\u0c5bඹॳ\u05b0Ջडי೧చ෫\u093e\u05a8յऌר\u0cfbఏ\u0dccऩ\u05bdպऊפ\u0cf3ఒ\u0de0\u093fשԤघ\u05adನ\u0c5b";
				break;
			case 53:
				obj = "\u0c57ඥ\u093e\u05bbձऐ\u05ec೧ఒ෪ऌ\u05bbՠगע\u0cfb\u0c5bම७";
				break;
			case 54:
				obj = "\u0dfe७\u05afջऌשವ\u0c46ඥ";
				break;
			case 55:
				obj = "ॡ\u05f8ՠखר\u0cc2ఔ\u0df7ऩ\u05f8ԩफ़";
				break;
			case 56:
				obj = "\u05a3Դच\u05ecೡచසत\u05b4ձफ़\u05b0ವ";
				break;
			case 57:
				obj = "կफ़\u05fe\u0cf6ఞ෫ब\u05aaսऑ\u05cc\u0cf6ఏ෬ढ\u05b6Դ\u0943\u05ad";
				break;
			case 58:
				obj = "अ\u05adೡఞ\u0dfdह\u05f8ԩफ़";
				break;
			case 59:
				obj = "\u05a1ವఋ෭\u093f\u05b9էछי\u0cf0\u0c03\u0df1७ץԴ";
				break;
			case 60:
				obj = "೮\u0c5bඹॳ\u05b0Ջडי೧చ෫\u093e\u05a8յऌר\u0cfbఏ\u0dccऩ\u05bdպऊפ\u0cf3ఒ\u0de0\u093fשԣच\u05adನ\u0c5b";
				break;
			case 61:
				obj = "\u0c57ඥऽ\u05b0զट\u05fe\u0cf0\u0c5bම७";
				break;
			case 62:
				obj = "ඩ७\u05a9Դ\u0943\u05ad";
				break;
			case 63:
				obj = "श\u05f8Ԩ\u0940ץ\u0ccaత\u0dd1\u093f\u05b9պऍ\u05fd\u0cf4ఉ\u0de0ण\u05ac՝चר\u0cfbఏ෬फ\u05b1ձऌ\u05b8ವ\u0c46ඥ";
				break;
			case 64:
				obj = "\u05a3Դ\u0942\u05b3\u0cfdత\u0ddaङ\u05aaյऐ\u05fe\u0ce5చ\u0df7न\u05b6ՠषש\u0cf0క\u0df1त־սछ\u05ffಣ\u0c5bම७";
				break;
			case 65:
				obj = "կफ़\u05b1ಫఓ\u0ddaऒ\u058cզटף೦ఋ\u0de4\u093f\u05bdպऊ\u05c4ೱఞ෫ह\u05b1ղगר೧\u0c42ඥ॰\u05f8";
				break;
			case 66:
				obj = "अ\u05ad\u0ca9\u0c45෭ऒևՀऌ\u05ec\u0cfbఈ\u0df5ब\u05aaձऐ\u05f9\u0cdcట\u0de0ण\u05acսघפ\u0cf0ఉ\u0de4७ץԴ";
				break;
			case 67:
				obj = "\u05f6ವ\u0c47රथևՋप\u05ff\u0cf4క\u0df6ऽ\u05b9զछףೡల\u0de1न\u05b6ՠग\u05eb\u0cfcఞ\u0df7य\u05f8ԩफ़";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴍ = Ⴃ.Ⴍ;
			int num2 = ⴍ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴍ[(num3 + Ⴍ) % num2]);
			}
			result = new string(array);
			Ⴀ[num] = result;
			return result;
		}

		static Ⴃ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴍ = array;
			Ⴀ = new string[68];
		}
	}
	internal sealed class Ⴈ
	{
		private static readonly char[] Ⴍ;

		private static readonly string[] Ⴍ;

		internal static string ႰႥ(int Ⴍ)
		{
			int num = Ⴍ ^ 0x6C9047A4;
			string result;
			if ((result = Ⴈ.Ⴍ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "\u0599Ֆग\u05f9\u0cc1ఞ\u0dfdह";
				break;
			case 1:
				obj = "Մऌרೡఏ\u0dfcङ\u05bdլऊ";
				break;
			case 2:
				obj = "फ\u05fe\u0cf0ఉ\u0dcbब\u05b5ձ";
				break;
			case 3:
				obj = "ט೦ఞ\u0df7ऎ\u05b1ՠइ";
				break;
			case 4:
				obj = "\u0cc0ఈ\u0de0\u093f\u059bջऋףೡఉ\u0dfc";
				break;
			case 5:
				obj = "వ\u0df0ठ\u05baձऌ\u05c2\u0cf3స\u0df7न\u05bcսऊ\u05fe";
				break;
			case 6:
				obj = "වण\u05bfսऐר\u0cc3ఞ\u0df7\u093e\u05b1ջऐ";
				break;
			case 7:
				obj = "\u0900\u05adՠछ";
				break;
			case 8:
				obj = "ֈաऍץ\u0cd7ఎ\u0df1ह\u05b7պ\u093f\u05eeೡఒ෪ण";
				break;
			case 9:
				obj = "Մऋ\u05fe\u0cfdహ\u0df0ह\u05acջऐ\u05cc\u0cf6ఏ෬ढ\u05b6՝\u093a";
				break;
			case 10:
				obj = "\u093aע\u0cfbఏ\u0dd5\u093f\u05b7հऋ\u05ee\u0cf0\u0c3a෦ह\u05b1ջऐ\u05fe\u0cc6ఏ\u0de4\u093f\u05ac\u0559गףೠఏ\u0de0";
				break;
			case 11:
				obj = "\u05c9\u0cfaక\u0df1झ\u05aaջच\u05f8\u0cf6ఞහम\u05acսऑף೦\u0c3e෫ऩ\u0595սऐ\u05f8ೡఞ";
				break;
			case 12:
				obj = "\u0cc6ఎ෧\u093e\u05bbզग\u05fdೡఒ෪ण\u0594ձईר\u0cf9";
				break;
			case 13:
				obj = "\u0c4aණॽ";
				break;
			case 14:
				obj = "\u0dccउ";
				break;
			case 15:
				obj = "उ\u05bdշऑ\u05ff\u0cf4ఏ෬ढ\u05b6՝ओ\u05ecೲఞ\u0df6";
				break;
			case 16:
				obj = "\u0591էम\u05ff\u0cfc\u0c0d\u0de4ह\u05bd";
				break;
			case 17:
				obj = "Դ\u0952";
				break;
			case 18:
				obj = "\u0952";
				break;
			case 19:
				obj = "\u05a1ವ";
				break;
			case 20:
				obj = "\u0cd6చ෩ड\u05b1պङ\u05ad\u0cd9ఔ\u0de4ऩ\u058bշछף\u0cf4ఉ෬ढ\u0594սऍ\u05f9೦";
				break;
			case 21:
				obj = "ఽ෬ण\u05b1էखרೱ\u0c5b\u0df7न\u05a8ջऎ\u05f8\u0cf9చ\u0df1त\u05b6ճफ़\u05fa\u0cfaఉ\u0de1७\u05acզछר";
				break;
			case 22:
				obj = "";
				break;
			case 23:
				obj = "१\u05f6գट\u05fb";
				break;
			case 24:
				obj = "ײԺऑתೲ";
				break;
			case 25:
				obj = "Մ";
				break;
			case 26:
				obj = "\u0956\u05ee\u0cf4\u0c4eභफ\u05bbԦच\u05a0ತ\u0c43෦ॾ\u05f5Ԡ\u0946\u05ecಢ\u0c56\u0dbcॼ\u05ecԬ\u0953\u05b5ಥఞඵॽסԥच\u05b9ಠటභ।";
				break;
			case 27:
				obj = "\u05a5\u0cf0\u0c4eඵब\u05baԭच\u05b4ಸ\u0c49නफ\u05eeԹ\u094a\u05bc\u0cf7ఞඨॴ\u05bbԬ\u094b\u05a0ಡ\u0c48෦ॿׯհ\u094d\u05bcಭ\u0c42පॿױ";
				break;
			case 28:
				obj = "\u0cc5ఉ෪ऩ\u05adշगףೲ\u0c5b\u0df2ढ\u05aaհफ़ס\u0cfcఈ\u0df1७װդछ\u05ff೦ఔ෫ब\u05b4սऊ״ವట\u0de4ह\u05b9Խ";
				break;
			case 29:
				obj = "\u0c3a\u0df0ह\u05b0ջऌ";
				break;
			case 30:
				obj = "\u0dde\u0903֍\u0558लא";
				break;
			case 31:
				obj = "॥քՕ\u0956בಪఇ\u0dd9\u0963\u05a4Զ\u0902\u05b7೩ౚ\u0df9ॡ\u05a4Տढ\u05fe\u0cc8ఇ\u0dd9॥\u05a4Ո\u0957\u05a4\u0cbeఇතऑקըढ\u05a3೩ౙ\u0df9ॷ\u05a4Ե\u0902\u05a1೩ఠ\u0dd9\u093eօըढ\u05a5೩ధඬ।׳Ոऄ\u05a4\u0cbe";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴍ = (char[])(object)Ⴈ.Ⴍ;
			int num2 = ⴍ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴍ[(num3 + Ⴍ) % num2]);
			}
			result = new string(array);
			Ⴈ.Ⴍ[num] = result;
			return result;
		}

		static Ⴈ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴈ.Ⴍ = (string[])(object)array;
			Ⴍ = new string[32];
		}
	}
	internal sealed class Ⴍ
	{
		private static readonly char[] Ⴓ;

		private static readonly string[] Ⴓ;

		internal static string ႰႣ(int Ⴍ)
		{
			int num = Ⴍ ^ 0x6C9047A4;
			string result;
			if ((result = Ⴓ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "\u059cձघ\u05ecೠగ\u0df1झ\u05bdզऍע\u0cfbచ෩त\u05acխषש";
				break;
			case 1:
				obj = "Ցऌ\u05ff\u0cfaఉඥ\u093f\u05bdՠऌפ\u0cf0\u0c0d෬ण\u05bfԴऎר೧ఈ෪ण\u05b9ոग\u05f9೬\u0c5b෧ऴ\u05f8ճऋפೱ\u0c5b";
				break;
			case 2:
				obj = "फ\u05fe\u0cf0ఉ\u0dc7त\u05aaՠख\u05c9\u0cf4ఏ\u0de0";
				break;
			case 3:
				obj = "ם೧ఔ\u0de3त\u05b4ձषנ\u0cf4జ\u0de0";
				break;
			case 4:
				obj = "\u0ccfఒ\u0df5ऎ\u05b7հछ";
				break;
			case 5:
				obj = "స෭ब\u05acչटף\u0cd7ఒ\u0df7ह\u05b0Րट\u05f9\u0cf0";
				break;
			case 6:
				obj = "\u0dc9ब\u05abՠफ\u05fe\u0cf0\u0c3f\u0de4ह\u05bd";
				break;
			case 7:
				obj = "\u0901\u05b9էऊכ\u0cfaగ\u0df0ठ\u05bd";
				break;
			case 8:
				obj = "ֈաऍץ\u0cd7ఎ\u0df1ह\u05b7պ\u093f\u05eeೡఒ෪णֈձऌ\u05fe\u0cfaక\u0de4ड\u05b1ՠइ\u05c4\u0cd1";
				break;
			case 9:
				obj = "Րऑףೡఫ\u0df7ढ\u05bcաझר\u0cd4ఘ\u0df1त\u05b7պऍמೡచ\u0df7ह\u0590ջऋ\u05ff";
				break;
			case 10:
				obj = "\u093aע\u0cfbఏ\u0dd5\u093f\u05b7հऋ\u05ee\u0cf0\u0c3a෦ह\u05b1ջऐ\u05fe\u0cd0క\u0de1अ\u05b7աऌ";
				break;
			case 11:
				obj = "\u05ce೧ఞ\u0de1न\u05b6ՠग\u05ec\u0cf9ఈ";
				break;
			case 12:
				obj = "\u0cd9చ\u0df6ह֏ձज\u05ce\u0cfaక෫न\u05bbՠगע\u0cfb\u0c29\u0de0\u093e\u05adոऊ";
				break;
			case 13:
				obj = "స෭ब\u05acչटף";
				break;
			case 14:
				obj = "\u0dcc\u093e\u0590սचש\u0cf0క";
				break;
			case 15:
				obj = "";
				break;
			case 16:
				obj = "״";
				break;
			case 17:
				obj = "Ծॐ\u05fa\u0cf4\u0c0d";
				break;
			case 18:
				obj = "\u0956\u05bcಥ\u0c4d\u0de4ऩ\u05edյघ\u05a0ಬచනब\u05f5Ԡ\u094e\u05bfಧ\u0c56\u0dbcनׯԢ\u0953\u05eeಡ\u0c4bඳॹתԭ\u0947\u05bdಥఝඳ।";
				break;
			case 19:
				obj = "\u05a5ಡ\u0c48෧ॾ\u05bdն\u094b\u05b4ಸ\u0c4f෧ॽ\u05bcԹ\u094a\u05bdತఞඨबנԥ\u0948\u05a0ೱ\u0c43\u0db2ॸׯԤ\u094b\u05ecಭ\u0c4c\u0de3ॿױ";
				break;
			case 20:
				obj = "\u0cbbఌ\u0de4\u093b";
				break;
			case 21:
				obj = "ఞ෫";
				break;
			case 22:
				obj = "සत\u05b6սऍץ\u0cf0టඥऽ\u05aaջच\u05f8\u0cf6ఒ෫प\u05f8գऑ\u05ffೱ\u0c5b෩त\u05abՠफ़\u05a5\u0ce5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfc७\u05bcյऊ\u05ec\u0cbc\u0c5b";
				break;
			case 23:
				obj = "झ\u05aaջच\u05f8\u0cf6ఒ෫प\u05f8գऑ\u05ffೱ\u0c5b෩त\u05abՠफ़\u05a5\u0ce5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfc७\u05bcյऊ\u05ec\u0cbc";
				break;
			case 24:
				obj = "\u059eսऐפ೦ఓ\u0de0ऩ\u05f8դऌעೱఎ෦त\u05b6ճफ़\u05fa\u0cfaఉ\u0de1७\u05b4սऍ\u05f9ವ\u0c53\u0df5न\u05aaէऑף\u0cf4గ෬ह\u05a1Դच\u05ecೡచඬ";
				break;
			case 25:
				obj = "Րछ\u05fe\u0cf6ఉ෬ऽ\u05acսऑף";
				break;
			case 26:
				obj = "ऽ\u05ff\u0cf0చ\u0df1त\u05b7պ\u093a\u05ecೡఞ";
				break;
			case 27:
				obj = "\u05aa";
				break;
			case 28:
				obj = "ಥ\u0c4aඪॽ\u05eeԻ\u094e\u05b5";
				break;
			case 29:
				obj = "ఓ\u0de0ॠ\u0591\u0558";
				break;
			case 30:
				obj = "ප\u0963ר";
				break;
			case 31:
				obj = "\u0903\u05b7՝ऐ\u05f9\u0cf0క\u0df6त\u05acխ";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴓ = (char[])(object)Ⴍ.Ⴓ;
			int num2 = ⴓ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴓ[(num3 + Ⴍ) % num2]);
			}
			result = new string(array);
			Ⴓ[num] = result;
			return result;
		}

		static Ⴍ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴍ.Ⴓ = (string[])(object)array;
			Ⴓ = new string[32];
		}
	}
	internal sealed class Ⴓ
	{
		private static readonly char[] Ⴍ;

		private static readonly string[] Ⴍ;

		internal static string ႰႤ(int Ⴍ)
		{
			int num = Ⴍ ^ 0x6C9047A4;
			string result;
			if ((result = Ⴓ.Ⴍ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "\u059cձघ\u05ecೠగ\u0df1झ\u05bdզऍע\u0cfbచ෩त\u05acխर\u05ec\u0cf8ఞ";
				break;
			case 1:
				obj = "Րगש\u0cfb\u0c5c\u0df1७־սऐשವఋ\u0de0\u093f\u05abջऐ\u05ec\u0cf9ఒ\u0df1ऴ\u05f8";
				break;
			case 2:
				obj = "फ\u05fe\u0cf0ఉ\u0dcbब\u05b5ձ";
				break;
			case 3:
				obj = "ם೧ఔ\u0de3त\u05b4ձषנ\u0cf4జ\u0de0";
				break;
			case 4:
				obj = "\u0cc0ఈ\u0de0\u093f\u059bջऋףೡఉ\u0dfc";
				break;
			case 5:
				obj = "వ\u0df0ठ\u05baձऌ\u05c2\u0cf3స\u0df7न\u05bcսऊ\u05fe";
				break;
			case 6:
				obj = "ෆथ\u05b9ՠओ\u05ec\u0cfbహ෬\u093f\u05acռ\u093a\u05ecೡఞ";
				break;
			case 7:
				obj = "\u0901\u05b9էऊט೦ఞශब\u05acձ";
				break;
			case 8:
				obj = "\u0595աऊר";
				break;
			case 9:
				obj = "Մऋ\u05fe\u0cfdహ\u0df0ह\u05acջऐ\u05cc\u0cf6ఏ෬ढ\u05b6՝\u093a";
				break;
			case 10:
				obj = "\u093aע\u0cfbఏ\u0dd5\u093f\u05b7հऋ\u05ee\u0cf0\u0c3a෦ह\u05b1ջऐ\u05fe\u0cc6ఏ\u0de4\u093f\u05ac՜ऑ\u05f8೧";
				break;
			case 11:
				obj = "\u05c9\u0cfaక\u0df1झ\u05aaջच\u05f8\u0cf6ఞහम\u05acսऑף೦\u0c3e෫ऩ\u0595սऐ\u05f8ೡఞ";
				break;
			case 12:
				obj = "\u0cd9చ\u0df6ह֏ձज\u05ce\u0cfaక෫न\u05bbՠगע\u0cfb\u0c29\u0de0\u093e\u05adոऊ";
				break;
			case 13:
				obj = "ఞ෫ॠ֍Շ";
				break;
			case 14:
				obj = "ශन\u05abշऌפ\u0ce5ఏ෬ढ\u05b6";
				break;
			case 15:
				obj = "ऎ\u05aaձट\u05f9\u0cfcఔ෫उ\u05b9ՠछ";
				break;
			case 16:
				obj = "\u058cյऌת\u0cf0ఏ\u0dd0\u093e\u05bdզहר\u0cfbట\u0de0\u093f";
				break;
			case 17:
				obj = "Ը";
				break;
			case 18:
				obj = "";
				break;
			case 19:
				obj = "\u05a7\u0cbbఖ\u0df5ॾ";
				break;
			case 20:
				obj = "\u0cc5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfc\u0963\u05bcյऊ";
				break;
			case 21:
				obj = "\u0c53නबרԭ\u094e\u05ebಬ\u0c43ඨॿתԦच\u05a0ಡ\u0c48\u0db2ॿ\u05f5յ\u094dׯಠ\u0c56නॽ\u05b9ԡ\u094e\u05b4ಠ\u0c4eඳॹׯԥ\u0957";
				break;
			case 22:
				obj = "ණठ\u05a8ԧ";
				break;
			case 23:
				obj = "\u0901\u05b7յचפ\u0cfbజඥ\u093a\u05b7զच\u05ad\u0cf9ఒ\u0df6ह";
				break;
			case 24:
				obj = "\u059cյगס೬\u0c3a\u0df3न\u05aaյङר";
				break;
			case 25:
				obj = "Շझע\u0ce5ఞ";
				break;
			case 26:
				obj = "ष\u05fe\u0cd1ఞ෩न\u05acձच";
				break;
			case 27:
				obj = "\u05c4ೱ\u0c5b\u0dbf७\u05ff";
				break;
			case 28:
				obj = "\u0cceవ\u0dd0\u0901\u0594Չ";
				break;
			case 29:
				obj = "వ\u0de4ठ\u05bd";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴍ = (char[])(object)Ⴓ.Ⴍ;
			int num2 = ⴍ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴍ[(num3 + Ⴍ) % num2]);
			}
			result = new string(array);
			Ⴓ.Ⴍ[num] = result;
			return result;
		}

		static Ⴓ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴓ.Ⴍ = (string[])(object)array;
			Ⴍ = new string[30];
		}
	}
}
namespace ႭႥႨ
{
	[DefaultMember("Item")]
	public class Ⴀ : List<Mood>
	{
		private sealed class <>c__DisplayClass1
		{
			public string name;

			public bool <get_Item>b__0(Mood mood)
			{
				return mood.Name == name;
			}
		}

		private sealed class <>c__DisplayClass4
		{
			public Guid index;

			public bool <get_Item>b__3(Mood mood)
			{
				return mood.ID == index;
			}
		}

		public Mood Ⴐ => base[Ⴍ];

		public Mood Ⴈ
		{
			get
			{
				int num = 3;
				<>c__DisplayClass1 CS$<>8__locals0;
				IEnumerable<Mood> source = default(IEnumerable<Mood>);
				Mood result = default(Mood);
				while (true)
				{
					switch (num)
					{
					default:
						CS$<>8__locals0 = new <>c__DisplayClass1();
						CS$<>8__locals0.name = Ⴍ;
						source = this.Where((Mood mood) => mood.Name == CS$<>8__locals0.name);
						num = ((source.Count() == 0) ? 2 : 0);
						break;
					case 2:
						result = null;
						num = 1;
						break;
					case 0:
						result = source.First();
						num = 1;
						break;
					case 1:
						return result;
					}
				}
			}
		}

		public Mood Ⴓ
		{
			get
			{
				//Discarded unreachable code: IL_0002, IL_0008, IL_0049, IL_0064
				<>c__DisplayClass4 CS$<>8__locals0 = new <>c__DisplayClass4();
				CS$<>8__locals0.index = Ⴍ;
				Mood result = default(Mood);
				do
				{
					IEnumerable<Mood> source = this.Where((Mood mood) => mood.ID == CS$<>8__locals0.index);
					if (source.Count() == 0)
					{
						if ((346 + 346 * 346) % 2 == 0)
						{
							result = null;
						}
						break;
					}
					result = source.First();
				}
				while (593 < 593 - 275);
				return result;
			}
		}

		public Ⴀ()
		{
		}

		public Ⴀ(IEnumerable<Mood> Ⴍ)
			: base(Ⴍ)
		{
		}
	}
	public delegate void Ⴅ(int Ⴐ, int Ⴗ);
	public delegate void Ⴈ(ChatmanAction Ⴃ);
	public delegate void Ⴐ(ChatmanAction Ⴃ);
	public delegate void Ⴓ(bool Ⴃ);
	public delegate void Ⴗ(string[] Ⴃ, string[] Ⴀ);
}
namespace ႭႥႰ
{
	internal sealed class Ⴀ
	{
		internal Ⴀ(Counter Ⴍ, Counter Ⴄ)
		{
			Ⴄ.TotalCounter = Ⴍ.TotalCounter;
			Ⴄ.DailyAverage = Ⴍ.DailyAverage;
			Ⴄ.DaysUsed = Ⴍ.DaysUsed;
			Ⴄ.LastUseDate = Ⴍ.LastUseDate;
		}
	}
	public delegate void Ⴃ(Personality Ⴍ);
	[Flags]
	public enum Ⴄ
	{
		Ⴐ = 0x0,
		Ⴈ = 0x1,
		Ⴓ = 0x2,
		Ⴗ = 0x4,
		Ⴅ = 0x8
	}
	internal sealed class Ⴅ
	{
		internal Ⴅ(ChatmanAction Ⴍ, Personality Ⴄ)
		{
			Ⴍ.personality = Ⴄ;
		}
	}
	[DefaultMember("Item")]
	public class Ⴈ : ObservableCollection<Personality>
	{
		private sealed class <>c__DisplayClass2
		{
			public string index;

			public bool <get_Item>b__0(Personality thePersonality)
			{
				return thePersonality.Name == index;
			}
		}

		private sealed class <>c__DisplayClass6
		{
			public Guid index;

			public bool <get_Item>b__4(Personality thePersonality)
			{
				return thePersonality.ID == index;
			}
		}

		private new bool m_Ⴐ;

		public new Personality Ⴐ
		{
			get
			{
				Personality personality = null;
				try
				{
					personality = base[Ⴍ];
					if (!this.Ⴐ)
					{
						personality.ႼႠ();
					}
				}
				catch (Exception ⴓ)
				{
					ႥႥႨ.Ⴗ.ႳႤ(ႥႠႭ.Ⴃ.ႰႣ(1821394854) + ((personality == null) ? string.Empty : personality.Name), ⴓ);
				}
				return personality;
			}
		}

		public new Personality Ⴈ
		{
			get
			{
				<>c__DisplayClass2 CS$<>8__locals0 = new <>c__DisplayClass2();
				CS$<>8__locals0.index = Ⴍ;
				Personality personality = null;
				try
				{
					IEnumerable<Personality> source = this.Where((Personality thePersonality) => thePersonality.Name == CS$<>8__locals0.index);
					if (source.Count() > 0)
					{
						personality = source.First();
						if (!this.Ⴐ)
						{
							personality.ႼႠ();
						}
					}
					else
					{
						ႥႥႨ.Ⴗ.ႨႷႤ(ႥႠႭ.Ⴓ.ႰႤ(1821394853) + CS$<>8__locals0.index);
					}
				}
				catch (Exception ⴓ)
				{
					ႥႥႨ.Ⴗ.ႳႤ(ႤႤႭ.Ⴅ.ႰႣ(1821394853) + ((personality == null) ? string.Empty : personality.Name), ⴓ);
				}
				return personality;
			}
		}

		public Personality Ⴓ
		{
			get
			{
				<>c__DisplayClass6 CS$<>8__locals0 = new <>c__DisplayClass6();
				CS$<>8__locals0.index = Ⴍ;
				Personality personality = null;
				try
				{
					IEnumerable<Personality> source = this.Where((Personality thePersonality) => thePersonality.ID == CS$<>8__locals0.index);
					if (source.Count() > 0)
					{
						personality = source.First();
						if (!this.Ⴐ)
						{
							personality.ႼႠ();
						}
					}
				}
				catch (Exception ⴓ)
				{
					ႥႥႨ.Ⴗ.ႳႤ(ႥႠႭ.Ⴍ.ႰႣ(1821394853) + ((personality == null) ? string.Empty : personality.Name), ⴓ);
				}
				return personality;
			}
		}

		public new bool Ⴐ
		{
			get
			{
				return this.Ⴐ;
			}
			set
			{
				this.Ⴐ = value;
			}
		}

		public void ႰႰ(Personality Ⴍ)
		{
			int num = 0;
			try
			{
				if (base.Items.Count > 0)
				{
					Personality personality = base.Items[num];
					while (personality.Compare(Ⴍ, personality) > 0)
					{
						num++;
						if (num >= base.Items.Count)
						{
							break;
						}
						personality = base.Items[num];
					}
				}
			}
			catch (Exception ⴍ)
			{
				ႥႥႨ.Ⴗ.ႨႷႭ(ⴍ);
			}
			Insert(num, Ⴍ);
		}
	}
	public delegate bool Ⴍ(Personality Ⴓ);
	[CompilerGenerated]
	[DebuggerNonUserCode]
	[GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
	internal sealed class Ⴐ
	{
		private static ResourceManager m_Ⴐ;

		private static CultureInfo m_Ⴐ;

		[EditorBrowsable(EditorBrowsableState.Advanced)]
		internal static ResourceManager Ⴐ
		{
			get
			{
				//Discarded unreachable code: IL_0002, IL_001f, IL_0058
				bool flag = !object.ReferenceEquals(ႭႥႰ.Ⴐ.Ⴐ, null);
				while (!flag)
				{
					if (42 <= 42 - 1)
					{
						break;
					}
					ResourceManager resourceManager = (ResourceManager)(object)(ႭႥႰ.Ⴐ.Ⴐ = (CultureInfo)(object)new ResourceManager("ႭႥႰ.Ⴐ", typeof(Ⴐ).Assembly));
					if ((644 + 644 * 644) % 2 == 0)
					{
						break;
					}
				}
				return (ResourceManager)(object)ႭႥႰ.Ⴐ.Ⴐ;
			}
		}

		[EditorBrowsable(EditorBrowsableState.Advanced)]
		internal static CultureInfo Ⴐ
		{
			get
			{
				return ႭႥႰ.Ⴐ.Ⴐ;
			}
			set
			{
				ႭႥႰ.Ⴐ.Ⴐ = value;
			}
		}

		internal Ⴐ()
		{
		}

		internal static string ႼႷ()
		{
			return ႭႥႰ.Ⴐ.Ⴐ.GetString(ႥႠႭ.Ⴈ.ႰႥ(1821394852), ႭႥႰ.Ⴐ.Ⴐ);
		}

		internal static string ႼႥ()
		{
			return ႭႥႰ.Ⴐ.Ⴐ.GetString(ႥႠႭ.Ⴃ.ႰႣ(1821394852), ႭႥႰ.Ⴐ.Ⴐ);
		}

		internal static string ႼႠ()
		{
			return ႭႥႰ.Ⴐ.Ⴐ.GetString(ႤႤႭ.Ⴅ.ႰႣ(1821394852), ႭႥႰ.Ⴐ.Ⴐ);
		}

		internal static string ႼႣ()
		{
			return ႭႥႰ.Ⴐ.Ⴐ.GetString(ႥႠႭ.Ⴍ.ႰႣ(1821394852), ႭႥႰ.Ⴐ.Ⴐ);
		}

		internal static string ႼႭ()
		{
			return ႭႥႰ.Ⴐ.Ⴐ.GetString(ႥႠႭ.Ⴓ.ႰႤ(1821394852), ႭႥႰ.Ⴐ.Ⴐ);
		}

		internal static string ႼႤ()
		{
			return ႭႥႰ.Ⴐ.Ⴐ.GetString(ႥႠႭ.Ⴈ.ႰႥ(1821394853), ႭႥႰ.Ⴐ.Ⴐ);
		}

		internal static string ႼႼ()
		{
			return ႭႥႰ.Ⴐ.Ⴐ.GetString(ႥႠႭ.Ⴃ.ႰႣ(1821394853), ႭႥႰ.Ⴐ.Ⴐ);
		}
	}
	public delegate void Ⴓ(int Ⴍ, int Ⴓ);
	internal sealed class Ⴗ
	{
		internal Ⴗ(ScenarioAction Ⴀ, ChatmanAction Ⴍ)
		{
			Ⴀ.Action = Ⴍ;
		}
	}
	public delegate void Ⴜ(ChatmanAction Ⴓ, bool Ⴅ);
}
