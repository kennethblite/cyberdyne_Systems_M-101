
// /home/kensalt/practice/discord/terminator/Chatman/Rondyo.Chatman.Framework.XmlSerializers.dll
// Rondyo.Chatman.Framework.XmlSerializers, Version=1.1.0.0, Culture=neutral, PublicKeyToken=c5cbd59d58549e5d
// Global type: <Module>
// Architecture: x86
// Runtime: v2.0.50727
// This assembly is signed with a strong name key.
// Hash algorithm: SHA1
// Public key: 0024000004800000940000000602000000240000525341310004000001000100191d59fa159c23ec130eff416767aae23b0533b32ead9676e97436dde82b04dd0aae2f743f0b259ead5186c4f921b0230d12318b1fdb6feb32914e1e733a4a9d1693e0473756c24584e144719025749e0f1333e24fa4d6a34a8e3a811b2cb7ea0cb4698f36cfe0c396ed89b6870fa9c1dd357cf01295ab5914e28faf5c2936d8

using Rondyo.Chatman.Framework;
using Rondyo.Chatman.Framework.Configuration;
using Rondyo.Chatman.Framework.URLConfiguration;
using Rondyo.Chatman.Framework.Utils;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Security;
using System.Threading;
using System.Xml;
using System.Xml.Serialization;
using ႥႥႠ;
using ႥႥႣ;
using ႥႥႤ;
using ႥႥႥ;
using ႥႥႨ;
using ႥႥႨႠ;
using ႥႥႨႣ;
using ႥႥႨႤ;
using ႥႥႨႥ;
using ႥႥႨႨ;
using ႥႥႨႭ;
using ႥႥႨႰ;
using ႥႥႨႳ;
using ႥႥႨႷ;
using ႥႥႨႼ;
using ႥႥႭ;
using ႥႥႰ;
using ႥႥႳ;
using ႥႥႳႰ;
using ႥႥႷ;
using ႥႥႼ;
using ႥႭႤ;
using ႰႰႰ;
using ႳႨႭ;

[assembly: CompilationRelaxations(8)]
[assembly: RuntimeCompatibility(WrapNonExceptionThrows = true)]
[assembly: AllowPartiallyTrustedCallers]
[assembly: SecurityTransparent]
[assembly: XmlSerializerVersion(Version = "2.0.0.0", ParentAssemblyId = "6790d38e-3c75-4b11-b387-9453199174ca,")]
[assembly: AssemblyVersion("1.1.0.0")]
namespace Microsoft.Xml.Serialization.GeneratedAssembly
{
	public sealed class AuthorizeDataSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595132), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write164_A(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read164_A();
		}
	}
	public sealed class BaseFileFrameSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595122), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write141_BaseFileFrame(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read141_BaseFileFrame();
		}
	}
	public sealed class BrowserExtensionsInstallerSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595183), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write140_BrowserExtensionsInstaller(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read140_BrowserExtensionsInstaller();
		}
	}
	public sealed class ChatmanCentralConfigurationSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595037), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write116_ChatmanCentralConfiguration(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read116_ChatmanCentralConfiguration();
		}
	}
	public sealed class ChatmanConfigurationSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595140), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write200_ChatmanConfiguration(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read200_ChatmanConfiguration();
		}
	}
	public sealed class ChatManDialogResultSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595077), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write186_ChatManDialogResult(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read186_ChatManDialogResult();
		}
	}
	public sealed class ChatmanEnvironmentSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595193), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write172_ChatmanEnvironment(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read172_ChatmanEnvironment();
		}
	}
	public sealed class ChatManMessageBoxButtonsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595138), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write185_ChatManMessageBoxButtons(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read185_ChatManMessageBoxButtons();
		}
	}
	public sealed class ChatmanMouseButtonsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595195), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write168_ChatmanMouseButtons(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read168_ChatmanMouseButtons();
		}
	}
	public sealed class ChatmanThreadSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595238), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write166_ChatmanThread(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read166_ChatmanThread();
		}
	}
	public sealed class CompressionLevelSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595181), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write145_CompressionLevel(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read145_CompressionLevel();
		}
	}
	public sealed class CompressionMethodSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595168), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write108_CompressionMethod(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read108_CompressionMethod();
		}
	}
	public sealed class CompressionModeSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595127), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write147_CompressionMode(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read147_CompressionMode();
		}
	}
	public sealed class CompressionStrategySerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595126), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write146_CompressionStrategy(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read146_CompressionStrategy();
		}
	}
	public sealed class ContentTypesSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595143), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write198_ContentTypes(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read198_ContentTypes();
		}
	}
	public sealed class CRC32Serializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595255), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write148_CRC32(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read148_CRC32();
		}
	}
	public sealed class DateUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595073), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write178_DateUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read178_DateUtils();
		}
	}
	public sealed class DefaultAudioDeviceControllerSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595240), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write161_DefaultAudioDeviceController(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read161_DefaultAudioDeviceController();
		}
	}
	public sealed class DesktopPointSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595194), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write167_DesktopPoint(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read167_DesktopPoint();
		}
	}
	public sealed class DeviceClassControllerSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595117), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write139_DeviceClassController(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read139_DeviceClassController();
		}
	}
	public sealed class DLLUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595116), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write138_DLLUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read138_DLLUtils();
		}
	}
	public sealed class DynamicActivatorSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595241), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write156_DynamicActivator(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read156_DynamicActivator();
		}
	}
	public sealed class ElevationHelperSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595032), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write174_ElevationHelper(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read174_ElevationHelper();
		}
	}
	public sealed class EncryptionAlgorithmSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595184), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write153_EncryptionAlgorithm(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read153_EncryptionAlgorithm();
		}
	}
	public sealed class ErrorCollectionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595142), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write197_ErrorCollection(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read197_ErrorCollection();
		}
	}
	public sealed class ExtensionsHelperSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595191), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write162_ExtensionsHelper(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read162_ExtensionsHelper();
		}
	}
	public sealed class ExtractExistingFileActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595137), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write195_ExtractExistingFileAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read195_ExtractExistingFileAction();
		}
	}
	public sealed class FileFormatsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595115), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write129_FileFormats(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read129_FileFormats();
		}
	}
	public sealed class FileUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595130), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write151_FileUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read151_FileUtils();
		}
	}
	public sealed class FilterCollectionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595160), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write171_FilterCollection(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read171_FilterCollection();
		}
	}
	public sealed class FilterTypesSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595081), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write192_FilterTypes(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read192_FilterTypes();
		}
	}
	public sealed class FlushTypeSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595128), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write154_FlushType(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read154_FlushType();
		}
	}
	public sealed class FolderTypeSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595113), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write132_FolderType(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read132_FolderType();
		}
	}
	public sealed class FrameFlagsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595139), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write188_FrameFlags(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read188_FrameFlags();
		}
	}
	public sealed class FrameSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595172), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write120_Frame(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read120_Frame();
		}
	}
	public sealed class GetLastErrorResultSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595105), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write122_GetLastErrorResult(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read122_GetLastErrorResult();
		}
	}
	public sealed class GroupIconDirEntrySerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595216), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write112_GroupIconDirEntry(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read112_GroupIconDirEntry();
		}
	}
	public sealed class GroupIconDirSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595039), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write111_GroupIconDir(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read111_GroupIconDir();
		}
	}
	public sealed class HashUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595170), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write105_HashUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read105_HashUtils();
		}
	}
	public sealed class HtmlProcessorSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595186), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write150_HtmlProcessor(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read150_HtmlProcessor();
		}
	}
	public sealed class HTTPUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595190), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write160_HTTPUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read160_HTTPUtils();
		}
	}
	public sealed class IconDirEntrySerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595169), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write110_IconDirEntry(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read110_IconDirEntry();
		}
	}
	public sealed class IconDirSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595033), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write109_IconDir(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read109_IconDir();
		}
	}
	public sealed class IconFlagsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595189), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write165_IconFlags(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read165_IconFlags();
		}
	}
	public sealed class IconSizeSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595112), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write131_IconSize(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read131_IconSize();
		}
	}
	public sealed class IconUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595179), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write127_IconUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read127_IconUtils();
		}
	}
	public sealed class ID3ErrorSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595087), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write196_ID3Error(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read196_ID3Error();
		}
	}
	public sealed class ID3v2FlagsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595080), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write191_ID3v2Flags(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read191_ID3v2Flags();
		}
	}
	public sealed class IncrementDecrementSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595136), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write190_IncrementDecrement(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read190_IncrementDecrement();
		}
	}
	public sealed class ITEMIDLISTSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595177), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write135_ITEMIDLIST(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read135_ITEMIDLIST();
		}
	}
	public sealed class LanguageSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595135), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write159_Language(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read159_Language();
		}
	}
	public sealed class LoadImageTypesSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595178), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write125_LoadImageTypes(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read125_LoadImageTypes();
		}
	}
	public sealed class LoadLibraryExFlagsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595104), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write121_LoadLibraryExFlags(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read121_LoadLibraryExFlags();
		}
	}
	public sealed class LoggerSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595174), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write115_Logger(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read115_Logger();
		}
	}
	public sealed class LookupIconIdFromDirectoryExFlagsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595110), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write124_Item(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read124_Item();
		}
	}
	public sealed class MailUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595192), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write170_MailUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read170_MailUtils();
		}
	}
	public sealed class MessageBoxUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595076), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write184_MessageBoxUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read184_MessageBoxUtils();
		}
	}
	public sealed class MouseActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595121), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write144_MouseAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read144_MouseAction();
		}
	}
	public sealed class NotifyCollectionChangedActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595034), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write106_NotifyCollectionChangedAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read106_NotifyCollectionChangedAction();
		}
	}
	public sealed class NumericUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595107), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write119_NumericUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read119_NumericUtils();
		}
	}
	public sealed class PictureTypesSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595123), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write142_PictureTypes(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read142_PictureTypes();
		}
	}
	public sealed class RecievedAsEnumSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595180), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write143_RecievedAsEnum(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read143_RecievedAsEnum();
		}
	}
	public sealed class RECTSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595079), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write182_RECT(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read182_RECT();
		}
	}
	public sealed class RegistryAccessorSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595163), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write176_RegistryAccessor(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read176_RegistryAccessor();
		}
	}
	public sealed class ResourcesSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595086), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write194_Resources(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read194_Resources();
		}
	}
	public sealed class ResourceTypesSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595173), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write123_ResourceTypes(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read123_ResourceTypes();
		}
	}
	public sealed class ResourceUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595114), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write128_ResourceUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read128_ResourceUtils();
		}
	}
	public sealed class RondyoUtilHelperSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595199), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write177_RondyoUtilHelper(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read177_RondyoUtilHelper();
		}
	}
	public sealed class SecurityUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595075), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write173_SecurityUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read173_SecurityUtils();
		}
	}
	public sealed class Shell32Serializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595118), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write133_Shell32(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read133_Shell32();
		}
	}
	public sealed class ShellUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595029), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write104_ShellUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read104_ShellUtils();
		}
	}
	public sealed class SHGetFileInfoFlagsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595108), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write126_SHGetFileInfoFlags(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read126_SHGetFileInfoFlags();
		}
	}
	public sealed class SHITEMIDSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595119), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write134_SHITEMID(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read134_SHITEMID();
		}
	}
	public sealed class SimpleIconExtractorSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595176), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write130_SimpleIconExtractor(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read130_SimpleIconExtractor();
		}
	}
	public sealed class SimpleOpenFileDialogSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595175), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write117_SimpleOpenFileDialog(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read117_SimpleOpenFileDialog();
		}
	}
	public sealed class SingleProgramInstanceWinSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595109), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write199_SingleProgramInstanceWin(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read199_SingleProgramInstanceWin();
		}
	}
	public sealed class SplashScreenModeSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595078), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write179_SplashScreenMode(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read179_SplashScreenMode();
		}
	}
	public sealed class StreamUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595028), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write193_StreamUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read193_StreamUtils();
		}
	}
	public sealed class TextEncodingsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595082), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write187_TextEncodings(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read187_TextEncodings();
		}
	}
	public sealed class TextOnlyFrameSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595182), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write137_TextOnlyFrame(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read137_TextOnlyFrame();
		}
	}
	public sealed class TextUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595215), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write118_TextUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read118_TextUtils();
		}
	}
	public sealed class TimeStampsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595083), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write189_TimeStamps(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read189_TimeStamps();
		}
	}
	public sealed class TokenElevationTypeSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595198), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write175_TokenElevationType(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read175_TokenElevationType();
		}
	}
	public sealed class UrlConfigurationContainerSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595219), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write113_UrlConfigurationContainer(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read113_UrlConfigurationContainer();
		}
	}
	public sealed class UrlConfigurationSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595036), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write114_UrlConfiguration(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read114_UrlConfiguration();
		}
	}
	public sealed class URLUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595134), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write158_URLUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read158_URLUtils();
		}
	}
	public sealed class User32Serializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595202), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write136_User32(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read136_User32();
		}
	}
	public sealed class VersionUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595125), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write149_VersionUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read149_VersionUtils();
		}
	}
	public sealed class WIN32APISerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595159), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write181_WIN32API(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read181_WIN32API();
		}
	}
	public sealed class WINDOWPLACEMENTSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595197), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write183_WINDOWPLACEMENT(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read183_WINDOWPLACEMENT();
		}
	}
	public class XmlSerializationReader1 : XmlSerializationReader
	{
		private Hashtable Ⴃ;

		private Hashtable Ⴀ;

		private Hashtable Ⴄ;

		private Hashtable Ⴗ;

		private Hashtable Ⴈ;

		private Hashtable Ⴐ;

		private string Ⴃ;

		private string Ⴀ;

		private string Ⴄ;

		private string Ⴗ;

		private string Ⴈ;

		private string Ⴐ;

		private string Ⴍ;

		private string Ⴓ;

		private string Ⴅ;

		private string Ⴜ;

		private string m_ႠႣ;

		private string ႠႠ;

		private string ႠႤ;

		private string m_ႠႷ;

		private string m_ႠႨ;

		private string ႠႰ;

		private string m_ႠႭ;

		private string m_ႠႳ;

		private string ႠႥ;

		private string ႠႼ;

		private string ႤႣ;

		private string ႤႠ;

		private string ႤႤ;

		private string ႤႷ;

		private string ႤႨ;

		private string ႤႰ;

		private string ႤႭ;

		private string ႤႳ;

		private string ႤႥ;

		private string ႤႼ;

		private string m_ႷႣ;

		private string m_ႷႠ;

		private string m_ႷႤ;

		private string m_ႷႷ;

		private string m_ႷႨ;

		private string m_ႷႰ;

		private string m_ႷႭ;

		private string m_ႷႳ;

		private string m_ႷႥ;

		private string m_ႷႼ;

		private string m_ႨႣ;

		private string ႨႠ;

		private string ႨႤ;

		private string ႨႷ;

		private string ႨႨ;

		private string ႨႰ;

		private string m_ႨႭ;

		private string ႨႳ;

		private string ႨႥ;

		private string m_ႨႼ;

		private string m_ႰႣ;

		private string m_ႰႠ;

		private string m_ႰႤ;

		private string m_ႰႷ;

		private string m_ႰႨ;

		private string m_ႰႰ;

		private string m_ႰႭ;

		private string m_ႰႳ;

		private string m_ႰႥ;

		private string m_ႰႼ;

		private string ႭႣ;

		private string ႭႠ;

		private string ႭႤ;

		private string ႭႷ;

		private string ႭႨ;

		private string ႭႰ;

		private string ႭႭ;

		private string ႭႳ;

		private string ႭႥ;

		private string ႭႼ;

		private string m_ႳႣ;

		private string m_ႳႠ;

		private string m_ႳႤ;

		private string m_ႳႷ;

		private string m_ႳႨ;

		private string m_ႳႰ;

		private string ႳႭ;

		private string ႳႳ;

		private string m_ႳႥ;

		private string m_ႳႼ;

		private string m_ႥႣ;

		private string ႥႠ;

		private string ႥႤ;

		private string ႥႷ;

		private string m_ႥႨ;

		private string m_ႥႰ;

		private string m_ႥႭ;

		private string m_ႥႳ;

		private string ႥႥ;

		private string m_ႥႼ;

		private string m_ႼႣ;

		private string ႼႠ;

		private string ႼႤ;

		private string m_ႼႷ;

		private string m_ႼႨ;

		private string ႼႰ;

		private string m_ႼႭ;

		private string m_ႼႳ;

		private string m_ႼႥ;

		private string ႼႼ;

		private string ႠႣႣ;

		private string ႠႣႠ;

		private string ႠႣႤ;

		private string ႠႣႷ;

		private string ႠႣႨ;

		private string ႠႣႰ;

		private string ႠႣႭ;

		private string ႠႣႳ;

		private string ႠႣႥ;

		private string ႠႣႼ;

		private string ႠႠႣ;

		private string ႠႠႠ;

		private string ႠႠႤ;

		private string ႠႠႷ;

		private string ႠႠႨ;

		private string ႠႠႰ;

		private string ႠႠႭ;

		private string ႠႠႳ;

		private string ႠႠႥ;

		private string ႠႠႼ;

		private string ႠႤႣ;

		private string ႠႤႠ;

		private string ႠႤႤ;

		private string ႠႤႷ;

		private string ႠႤႨ;

		private string ႠႤႰ;

		private string ႠႤႭ;

		private string ႠႤႳ;

		private string ႠႤႥ;

		private string ႠႤႼ;

		private string ႠႷႣ;

		private string ႠႷႠ;

		private string ႠႷႤ;

		private string ႠႷႷ;

		private string ႠႷႨ;

		private string ႠႷႰ;

		private string ႠႷႭ;

		private string ႠႷႳ;

		private string ႠႷႥ;

		private string ႠႷႼ;

		private string ႠႨႣ;

		private string ႠႨႠ;

		private string ႠႨႤ;

		private string ႠႨႷ;

		private string ႠႨႨ;

		private string ႠႨႰ;

		private string ႠႨႭ;

		private string ႠႨႳ;

		private string ႠႨႥ;

		private string ႠႨႼ;

		private string ႠႰႣ;

		private string ႠႰႠ;

		private string ႠႰႤ;

		private string ႠႰႷ;

		private string ႠႰႨ;

		private string ႠႰႰ;

		private string ႠႰႭ;

		private string ႠႰႳ;

		private string ႠႰႥ;

		private string ႠႰႼ;

		private string ႠႭႣ;

		private string ႠႭႠ;

		private string ႠႭႤ;

		private string ႠႭႷ;

		private string ႠႭႨ;

		private string ႠႭႰ;

		private string ႠႭႭ;

		public object Read104_ShellUtils()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 3);
					continue;
				case 1:
					num = (((object)base.Reader.LocalName == ႠႤ) ? 5 : 0);
					continue;
				case 5:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 2 : 0);
					continue;
				case 2:
					result = ႠႷ(Ⴀ: true, Ⴍ: true);
					num = 4;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 3:
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595227));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read105_HashUtils()
		{
			//Discarded unreachable code: IL_0002, IL_0032, IL_0054, IL_0094, IL_00a8
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if ((983 + 983 * 983) % 2 == 0)
				{
					while (true)
					{
						if ((object)base.Reader.LocalName == ႼႼ)
						{
							if (202 <= 202 - 83)
							{
								break;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								if (441 >= 441 - 9)
								{
									result = ႠႣ(Ⴀ: true, Ⴍ: true);
									break;
								}
								continue;
							}
						}
						throw CreateUnknownNodeException();
					}
				}
			}
			else
			{
				do
				{
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595221));
				}
				while (826 < 826 - 118);
			}
			return result;
		}

		public object Read106_NotifyCollectionChangedAction()
		{
			//Discarded unreachable code: IL_0002, IL_0035, IL_005a, IL_007d, IL_00c2
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						break;
					}
					if ((object)base.Reader.LocalName == ႠႤႣ)
					{
						if (589 >= 589 - 194)
						{
							if ((object)base.Reader.NamespaceURI != ႠႰႥ)
							{
								goto IL_00a2;
							}
							if (107 < 107 - 19)
							{
								break;
							}
						}
						result = ႳႷႼ(base.Reader.ReadElementString());
						break;
					}
					goto IL_00a2;
				}
				UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595226));
				if (554 > 554 - 142)
				{
					break;
				}
				continue;
				IL_00a2:
				throw CreateUnknownNodeException();
			}
			return result;
		}

		public object Read107_ZipEntryTimestamp()
		{
			//Discarded unreachable code: IL_0002, IL_0032, IL_005a, IL_007c, IL_009e
			object result = null;
			base.Reader.MoveToContent();
			while (true)
			{
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					goto IL_005c;
				}
				if (false)
				{
					continue;
				}
				while ((object)base.Reader.LocalName == ႠႰႰ)
				{
					if (652 <= 652 - 44)
					{
						continue;
					}
					goto IL_0037;
				}
				goto IL_00a0;
				IL_0037:
				if ((object)base.Reader.NamespaceURI == ႠႰႥ)
				{
					if (929 >= 929 - 726)
					{
						result = ႳႷႤ(base.Reader.ReadElementString());
						break;
					}
					goto IL_005c;
				}
				goto IL_00a0;
				IL_00a0:
				throw CreateUnknownNodeException();
				IL_005c:
				UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595216));
				if ((218 + 218 * 218) % 2 == 0)
				{
					break;
				}
				goto IL_0037;
			}
			return result;
		}

		public object Read108_CompressionMethod()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 5 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName != ႠႨႷ) ? 6 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 1 : 6);
					continue;
				case 1:
					result = ႳႷႠ(base.Reader.ReadElementString());
					num = 0;
					continue;
				case 6:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595220));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read109_IconDir()
		{
			//Discarded unreachable code: IL_0002, IL_0036, IL_005a, IL_007d, IL_00a1
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (529 > 529 - 492)
				{
					while (true)
					{
						if ((object)base.Reader.LocalName == this.m_ႷႳ)
						{
							if (false)
							{
								continue;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								break;
							}
						}
						throw CreateUnknownNodeException();
					}
					if ((99 + 99 * 99) % 2 == 0)
					{
						goto IL_00ad;
					}
				}
			}
			else
			{
				UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595216));
				if (833 < 833 - 749)
				{
					goto IL_00ad;
				}
			}
			goto IL_00bc;
			IL_00bc:
			return result;
			IL_00ad:
			result = ႳႷႰ(Ⴀ: true);
			goto IL_00bc;
		}

		public object Read110_IconDirEntry()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 6 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.LocalName == ႭႰ) ? 3 : 0);
					continue;
				case 3:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 4 : 0);
					continue;
				case 4:
					result = ႳႷႥ(Ⴀ: true);
					num = 1;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 6:
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595224));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read111_GroupIconDir()
		{
			//Discarded unreachable code: IL_0002, IL_0032, IL_0056, IL_0078, IL_009a, IL_00b2
			object result;
			while (true)
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if ((275 + 275 * 275) % 2 == 0)
					{
						if ((object)base.Reader.LocalName != ႠႣႠ)
						{
							goto IL_009c;
						}
						if (738 <= 738 - 49)
						{
							goto IL_00a3;
						}
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if ((744 + 744 * 744) % 2 == 0)
						{
							goto IL_00a3;
						}
					}
					goto IL_009c;
				}
				UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595227));
				if ((405 + 405 * 405) % 2 == 0)
				{
					break;
				}
				continue;
				IL_009c:
				throw CreateUnknownNodeException();
				IL_00a3:
				result = ႳႷႷ(Ⴐ: true);
				break;
			}
			return result;
		}

		public object Read112_GroupIconDirEntry()
		{
			//Discarded unreachable code: IL_0030, IL_0055, IL_0072, IL_0094, IL_00ac
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if ((220 + 220 * 220) % 2 == 0)
				{
					while ((object)base.Reader.LocalName == this.m_ႰႥ)
					{
						if (215 < 215 - 59)
						{
							goto IL_0057;
						}
						if ((object)base.Reader.NamespaceURI != ႠႰႥ)
						{
							break;
						}
						if (661 < 661 - 611)
						{
							continue;
						}
						goto IL_009d;
					}
				}
				throw CreateUnknownNodeException();
			}
			goto IL_0057;
			IL_009d:
			result = ႳႷႣ(Ⴐ: true);
			goto IL_00ae;
			IL_0057:
			UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595217));
			if (113 < 113 - 73)
			{
				goto IL_009d;
			}
			goto IL_00ae;
			IL_00ae:
			return result;
		}

		public object Read113_UrlConfigurationContainer()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 1 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.LocalName != ႠႣႭ) ? 2 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 2 : 6);
					continue;
				case 6:
					result = ႠႨ(Ⴐ: true, Ⴗ: true);
					num = 3;
					continue;
				case 2:
					throw CreateUnknownNodeException();
				case 1:
					UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595217));
					break;
				case 3:
					break;
				}
				break;
			}
			return result;
		}

		public object Read114_UrlConfiguration()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 3 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.LocalName != ႠႰႷ) ? 1 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 1 : 2);
					continue;
				case 2:
					result = ႠႳ(Ⴅ: true, Ⴃ: true);
					num = 4;
					continue;
				case 1:
					throw CreateUnknownNodeException();
				case 3:
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595225));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read115_Logger()
		{
			//Discarded unreachable code: IL_0002, IL_0032, IL_0056, IL_0078, IL_009d, IL_00b1
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType != XmlNodeType.Element)
			{
				goto IL_0058;
			}
			if ((848 + 848 * 848) % 2 == 0)
			{
			}
			goto IL_007a;
			IL_00b3:
			return result;
			IL_0058:
			UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595224));
			if (false)
			{
				goto IL_007a;
			}
			goto IL_00b3;
			IL_007a:
			if ((object)base.Reader.LocalName == ႠႷႷ)
			{
				if (752 < 752 - 344)
				{
					goto IL_0058;
				}
				if ((object)base.Reader.NamespaceURI == ႠႰႥ)
				{
					if ((301 + 301 * 301) % 2 == 0)
					{
						result = ႠႭ(Ⴃ: true, Ⴀ: true);
					}
					goto IL_00b3;
				}
			}
			throw CreateUnknownNodeException();
		}

		public object Read116_ChatmanCentralConfiguration()
		{
			//Discarded unreachable code: IL_0002, IL_0053, IL_0076, IL_0098, IL_00ac
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (748 <= 748 - 25)
						{
							break;
						}
						if ((object)base.Reader.LocalName != ႠႠႤ)
						{
							goto IL_009a;
						}
						if (137 >= 137 - 78)
						{
							if ((object)base.Reader.NamespaceURI != ႠႰႥ)
							{
								goto IL_009a;
							}
							if (317 < 317 - 224)
							{
								continue;
							}
						}
						result = ႰႼ(Ⴃ: true, Ⴀ: true);
					}
					else
					{
						do
						{
							UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595222));
						}
						while (393 < 393 - 246);
					}
					return result;
					IL_009a:
					throw CreateUnknownNodeException();
				}
			}
		}

		public object Read117_SimpleOpenFileDialog()
		{
			//Discarded unreachable code: IL_0002, IL_002f, IL_0051, IL_0074, IL_0099, IL_00b0
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (false)
				{
				}
				if ((object)base.Reader.LocalName == ႤႥ)
				{
					if (747 < 747 - 553)
					{
						goto IL_0053;
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (381 >= 381 - 29)
						{
							result = ႰႤ(Ⴃ: true, Ⴀ: true);
							goto IL_00b5;
						}
					}
				}
				throw CreateUnknownNodeException();
			}
			goto IL_0053;
			IL_00b5:
			return result;
			IL_0053:
			UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595221));
			if (1008 < 1008 - 947)
			{
			}
			goto IL_00b5;
		}

		public object Read118_TextUtils()
		{
			//Discarded unreachable code: IL_0002, IL_0035, IL_005a, IL_0079, IL_009a, IL_00ae
			object result = null;
			base.Reader.MoveToContent();
			do
			{
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					goto IL_005c;
				}
				if (false)
				{
					goto IL_00a3;
				}
				if ((object)base.Reader.LocalName == ႭႥ)
				{
					if (false)
					{
						goto IL_005c;
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (702 >= 702 - 277)
						{
							goto IL_00a3;
						}
						break;
					}
				}
				throw CreateUnknownNodeException();
				IL_00a3:
				result = ႰႠ(Ⴃ: true, Ⴀ: true);
				break;
				IL_005c:
				UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595222));
			}
			while (false);
			return result;
		}

		public object Read119_NumericUtils()
		{
			//Discarded unreachable code: IL_0002, IL_0056, IL_0079, IL_009e, IL_00b2
			object result;
			while (true)
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (809 < 809 - 314)
					{
						break;
					}
					if ((object)base.Reader.LocalName == ႳႭ)
					{
						if (373 < 373 - 372)
						{
							goto IL_0058;
						}
						if ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (623 <= 623 - 259)
							{
								continue;
							}
							goto IL_00a7;
						}
					}
					throw CreateUnknownNodeException();
				}
				goto IL_0058;
				IL_00a7:
				result = ႰႰ(Ⴃ: true, Ⴀ: true);
				break;
				IL_0058:
				UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595230));
				if (253 > 253 - 232)
				{
					break;
				}
				goto IL_00a7;
			}
			return result;
		}

		public object Read120_Frame()
		{
			//Discarded unreachable code: IL_0002, IL_0035, IL_0059, IL_0079, IL_009e, IL_00b2
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (false)
				{
					goto IL_00a7;
				}
			}
			else
			{
				UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595225));
				if (662 >= 662 - 25)
				{
					goto IL_00b4;
				}
			}
			while (true)
			{
				if ((object)base.Reader.LocalName == ႠႠ)
				{
					if (291 < 291 - 180)
					{
						continue;
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (442 > 442 - 3)
						{
							break;
						}
					}
				}
				throw CreateUnknownNodeException();
			}
			goto IL_00a7;
			IL_00a7:
			result = ႰႣ(Ⴃ: true, Ⴀ: true);
			goto IL_00b4;
			IL_00b4:
			return result;
		}

		public object Read121_LoadLibraryExFlags()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 2 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.LocalName != ႤႨ) ? 3 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 3 : 0);
					continue;
				case 0:
					result = ႳႷႨ(base.Reader.ReadElementString());
					num = 1;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 2:
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595230));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read122_GetLastErrorResult()
		{
			//Discarded unreachable code: IL_0002, IL_0033, IL_00a2, IL_00c4
			object result;
			while (true)
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (641 < 641 - 346)
					{
						break;
					}
					if ((object)base.Reader.LocalName == Ⴍ)
					{
						if (948 <= 948 - 556)
						{
							continue;
						}
						while ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (175 < 175 - 138)
							{
								continue;
							}
							goto IL_00ab;
						}
					}
					throw CreateUnknownNodeException();
				}
				UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595223));
				if (652 >= 652 - 515)
				{
					break;
				}
				goto IL_00ab;
				IL_00ab:
				result = ႳႷႳ(base.Reader.ReadElementString());
				break;
			}
			return result;
		}

		public object Read123_ResourceTypes()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 2 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.LocalName == ႠႭႷ) ? 3 : 0);
					continue;
				case 3:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 6 : 0);
					continue;
				case 6:
					result = ႳႷႭ(base.Reader.ReadElementString());
					num = 1;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 2:
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595226));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read124_Item()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 5);
					continue;
				case 1:
					num = (((object)base.Reader.LocalName != Ⴗ) ? 4 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 4 : 3);
					continue;
				case 3:
					result = ႳႣႼ(base.Reader.ReadElementString());
					num = 2;
					continue;
				case 4:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595223));
					break;
				case 2:
					break;
				}
				break;
			}
			return result;
		}

		public object Read125_LoadImageTypes()
		{
			//Discarded unreachable code: IL_0002, IL_0032, IL_0059, IL_0099
			object result = null;
			base.Reader.MoveToContent();
			do
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						break;
					}
					while (true)
					{
						if ((object)base.Reader.LocalName == ႠႠႥ)
						{
							if (103 < 103 - 52)
							{
								continue;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								if ((820 + 820 * 820) % 2 == 0)
								{
									break;
								}
								continue;
							}
						}
						throw CreateUnknownNodeException();
					}
					result = ႳႣႤ(base.Reader.ReadElementString());
					break;
				}
				UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595231));
			}
			while (835 < 835 - 508);
			return result;
		}

		public object Read126_SHGetFileInfoFlags()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 4 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName != Ⴄ) ? 6 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 6 : 0);
					continue;
				case 0:
					result = ႳႣႠ(base.Reader.ReadElementString());
					num = 1;
					continue;
				case 6:
					throw CreateUnknownNodeException();
				case 4:
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595231));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read127_IconUtils()
		{
			//Discarded unreachable code: IL_0002, IL_002d, IL_0069, IL_008e, IL_00a2
			object result = null;
			base.Reader.MoveToContent();
			do
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (506 >= 506 - 86)
					{
						if ((object)base.Reader.LocalName == ႠႭႣ)
						{
							if (789 < 789 - 459)
							{
								goto IL_0097;
							}
							while ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								if (113 < 113 - 47)
								{
									continue;
								}
								goto IL_0097;
							}
						}
						throw CreateUnknownNodeException();
					}
				}
				UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595227));
				continue;
				IL_0097:
				result = ႰႨ(Ⴃ: true, Ⴀ: true);
				break;
			}
			while (false);
			return result;
		}

		public object Read128_ResourceUtils()
		{
			//Discarded unreachable code: IL_0002, IL_0033, IL_005b, IL_009e, IL_00b2
			object result;
			while (true)
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (742 > 742 - 237)
					{
						if ((object)base.Reader.LocalName == this.m_ႼႭ)
						{
							if (642 <= 642 - 158)
							{
								continue;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								if (735 > 735 - 133)
								{
									goto IL_00a7;
								}
							}
						}
						throw CreateUnknownNodeException();
					}
				}
				else
				{
					UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595220));
					if (48 >= 48 - 38)
					{
						break;
					}
				}
				goto IL_00a7;
				IL_00a7:
				result = ႰႳ(Ⴓ: true, Ⴅ: true);
				break;
			}
			return result;
		}

		public object Read129_FileFormats()
		{
			//Discarded unreachable code: IL_0002, IL_0036, IL_005a, IL_007d, IL_009f, IL_00c4
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (981 > 981 - 337)
				{
					goto IL_007f;
				}
				goto IL_00ab;
			}
			UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595221));
			if (1014 < 1014 - 708)
			{
				goto IL_0038;
			}
			goto IL_00c9;
			IL_00a4:
			throw CreateUnknownNodeException();
			IL_00ab:
			result = ႳႣႰ(base.Reader.ReadElementString());
			goto IL_00c9;
			IL_0038:
			if ((object)base.Reader.NamespaceURI != ႠႰႥ)
			{
				goto IL_00a4;
			}
			if (false)
			{
				goto IL_007f;
			}
			goto IL_00ab;
			IL_00c9:
			return result;
			IL_007f:
			if ((object)base.Reader.LocalName != this.m_ႷႼ)
			{
				goto IL_00a4;
			}
			if (902 > 902 - 109)
			{
				goto IL_0038;
			}
			goto IL_00c9;
		}

		public object Read130_SimpleIconExtractor()
		{
			//Discarded unreachable code: IL_0002, IL_002f, IL_0053, IL_0075, IL_009d, IL_00b1
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (false)
						{
							continue;
						}
						if ((object)base.Reader.LocalName != ႠႠႷ)
						{
							goto IL_009f;
						}
						if (368 <= 368 - 202)
						{
							break;
						}
					}
					else
					{
						UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595228));
						if ((241 + 241 * 241) % 2 == 0)
						{
							goto IL_00b6;
						}
					}
					while ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (false)
						{
							continue;
						}
						goto IL_00a6;
					}
					goto IL_009f;
					IL_00a6:
					result = ႰႭ(Ⴓ: true, Ⴅ: true);
					goto IL_00b6;
					IL_009f:
					throw CreateUnknownNodeException();
					IL_00b6:
					return result;
				}
			}
		}

		public object Read131_IconSize()
		{
			int num = 0;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 5 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.LocalName != ႨႤ) ? 3 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 1 : 3);
					continue;
				case 1:
					result = ႳႣႥ(base.Reader.ReadElementString());
					num = 4;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595229));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read132_FolderType()
		{
			//Discarded unreachable code: IL_0002, IL_0032, IL_005a, IL_007c, IL_00a1
			object result = null;
			base.Reader.MoveToContent();
			do
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						break;
					}
					while (true)
					{
						if ((object)base.Reader.LocalName == ႠႨႤ)
						{
							if (975 <= 975 - 908)
							{
								continue;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								break;
							}
						}
						throw CreateUnknownNodeException();
					}
					if (867 >= 867 - 518)
					{
						result = ႳႣႷ(base.Reader.ReadElementString());
					}
					break;
				}
				UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595220));
			}
			while (false);
			return result;
		}

		public object Read133_Shell32()
		{
			//Discarded unreachable code: IL_0002, IL_0035, IL_0059, IL_009b, IL_00af
			object result = null;
			do
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if ((498 + 498 * 498) % 2 == 0)
					{
						while (true)
						{
							if ((object)base.Reader.LocalName == ႠႷႤ)
							{
								if (1012 < 1012 - 24)
								{
									break;
								}
								if ((object)base.Reader.NamespaceURI == ႠႰႥ)
								{
									if ((669 + 669 * 669) % 2 == 0)
									{
										break;
									}
									continue;
								}
							}
							throw CreateUnknownNodeException();
						}
					}
					result = ႥႼ(Ⴓ: true, Ⴅ: true);
					break;
				}
				UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595226));
			}
			while (false);
			return result;
		}

		public object Read134_SHITEMID()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 6);
					continue;
				case 1:
					num = (((object)base.Reader.LocalName != this.m_ႥႭ) ? 2 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 2 : 3);
					continue;
				case 3:
					result = ႳႣႣ(Ⴓ: true);
					num = 0;
					continue;
				case 2:
					throw CreateUnknownNodeException();
				case 6:
					UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595227));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read135_ITEMIDLIST()
		{
			//Discarded unreachable code: IL_0030, IL_0055, IL_0074, IL_0099
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						goto IL_00a2;
					}
					if ((object)base.Reader.LocalName == ႠႣႰ)
					{
						if (599 <= 599 - 42)
						{
							continue;
						}
						if ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (133 < 133 - 51)
							{
								continue;
							}
							goto IL_00a2;
						}
					}
					throw CreateUnknownNodeException();
				}
				UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595228));
				if (314 > 314 - 5)
				{
					break;
				}
				continue;
				IL_00a2:
				result = ႳႣႨ(Ⴓ: true);
				break;
			}
			return result;
		}

		public object Read136_User32()
		{
			//Discarded unreachable code: IL_0053, IL_0073, IL_0098, IL_00af
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if ((303 + 303 * 303) % 2 == 0)
				{
					goto IL_0075;
				}
			}
			else
			{
				UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595221));
				if (351 < 351 - 45)
				{
					goto IL_0075;
				}
			}
			goto IL_00b4;
			IL_0075:
			while (true)
			{
				if ((object)base.Reader.LocalName == ႠႠႳ)
				{
					if (495 <= 495 - 132)
					{
						break;
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (961 <= 961 - 193)
						{
							continue;
						}
						result = ႥႰ(Ⴓ: true, Ⴅ: true);
						break;
					}
				}
				throw CreateUnknownNodeException();
			}
			goto IL_00b4;
			IL_00b4:
			return result;
		}

		public object Read137_TextOnlyFrame()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 1 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.LocalName != this.m_ႷႭ) ? 5 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 5 : 0);
					continue;
				case 0:
					result = ႥႣ(Ⴀ: true, Ⴃ: true);
					num = 6;
					continue;
				case 5:
					throw CreateUnknownNodeException();
				case 1:
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595224));
					break;
				case 6:
					break;
				}
				break;
			}
			return result;
		}

		public object Read138_DLLUtils()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 3);
					continue;
				case 1:
					num = (((object)base.Reader.LocalName != ႠႷႨ) ? 2 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 2 : 6);
					continue;
				case 6:
					result = ႥႨ(Ⴍ: true, Ⴄ: true);
					num = 0;
					continue;
				case 2:
					throw CreateUnknownNodeException();
				case 3:
					UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595224));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read139_DeviceClassController()
		{
			//Discarded unreachable code: IL_0002, IL_0030, IL_0054, IL_0076, IL_009e, IL_00b2
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (834 >= 834 - 425)
						{
							if ((object)base.Reader.LocalName != ႠႷႠ)
							{
								goto IL_00a0;
							}
							if (594 < 594 - 474)
							{
								continue;
							}
						}
						if ((object)base.Reader.NamespaceURI != ႠႰႥ)
						{
							goto IL_00a0;
						}
						if (false)
						{
							break;
						}
						result = ႥႳ(Ⴍ: true, Ⴄ: true);
					}
					else
					{
						UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595229));
						if ((778 + 778 * 778) % 2 == 0)
						{
						}
					}
					return result;
					IL_00a0:
					throw CreateUnknownNodeException();
				}
			}
		}

		public object Read140_BrowserExtensionsInstaller()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 1 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName != ႥႠ) ? 5 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 5 : 0);
					continue;
				case 0:
					result = ႥႭ(Ⴍ: true, Ⴄ: true);
					num = 6;
					continue;
				case 5:
					throw CreateUnknownNodeException();
				case 1:
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595042));
					break;
				case 6:
					break;
				}
				break;
			}
			return result;
		}

		public object Read141_BaseFileFrame()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 2 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName == ႠႨႼ) ? 1 : 5);
					continue;
				case 1:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 5 : 0);
					continue;
				case 0:
					result = ႷႼ(Ⴍ: true, Ⴄ: true);
					num = 6;
					continue;
				case 5:
					throw CreateUnknownNodeException();
				case 2:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595226));
					break;
				case 6:
					break;
				}
				break;
			}
			return result;
		}

		public object Read142_PictureTypes()
		{
			int num = 0;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 1 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.LocalName != ႠႣႳ) ? 5 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 5 : 6);
					continue;
				case 6:
					result = ႳႣႳ(base.Reader.ReadElementString());
					num = 3;
					continue;
				case 5:
					throw CreateUnknownNodeException();
				case 1:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595227));
					break;
				case 3:
					break;
				}
				break;
			}
			return result;
		}

		public object Read143_RecievedAsEnum()
		{
			//Discarded unreachable code: IL_0002, IL_0033, IL_00bc
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (313 > 313 - 288)
						{
							if ((object)base.Reader.LocalName != this.m_ႠႭ)
							{
								goto IL_009c;
							}
							if (false)
							{
								break;
							}
						}
						if ((object)base.Reader.NamespaceURI != ႠႰႥ)
						{
							goto IL_009c;
						}
						if ((43 + 43 * 43) % 2 == 0)
						{
							result = ႳႣႭ(base.Reader.ReadElementString());
						}
					}
					else
					{
						UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595225));
						if (false)
						{
							continue;
						}
					}
					return result;
					IL_009c:
					throw CreateUnknownNodeException();
				}
			}
		}

		public object Read144_MouseAction()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 5 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.LocalName != this.m_ႼႥ) ? 4 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 4 : 3);
					continue;
				case 3:
					result = ႳႨႼ(base.Reader.ReadElementString());
					num = 1;
					continue;
				case 4:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595225));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read145_CompressionLevel()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 3 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.LocalName == ႠႣႨ) ? 1 : 0);
					continue;
				case 1:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 6 : 0);
					continue;
				case 6:
					result = ႳႨႠ(base.Reader.ReadElementString());
					num = 4;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 3:
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595042));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read146_CompressionStrategy()
		{
			int num = 1;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 6 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName != this.m_ႷႥ) ? 4 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 4 : 2);
					continue;
				case 2:
					result = ႳႨႰ(base.Reader.ReadElementString());
					num = 0;
					continue;
				case 4:
					throw CreateUnknownNodeException();
				case 6:
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595043));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read147_CompressionMode()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 3 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.LocalName != this.m_ႳႠ) ? 1 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 1 : 2);
					continue;
				case 2:
					result = ႳႨႤ(base.Reader.ReadElementString());
					num = 4;
					continue;
				case 1:
					throw CreateUnknownNodeException();
				case 3:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595224));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read148_CRC32()
		{
			//Discarded unreachable code: IL_0002, IL_002f, IL_0057, IL_007a, IL_009e, IL_00b2
			object result;
			do
			{
				IL_0004:
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						goto IL_0004;
					}
					if ((object)base.Reader.LocalName == ႥႥ)
					{
						if (false)
						{
							goto IL_0059;
						}
						if ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (637 <= 637 - 317)
							{
								goto IL_0004;
							}
							result = ႷႤ(Ⴍ: true, Ⴓ: true);
							break;
						}
					}
					throw CreateUnknownNodeException();
				}
				goto IL_0059;
				IL_0059:
				UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595230));
			}
			while (623 <= 623 - 269);
			return result;
		}

		public object Read149_VersionUtils()
		{
			//Discarded unreachable code: IL_002e, IL_0053, IL_0072, IL_00a8
			while (true)
			{
				object result = null;
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (859 <= 859 - 197)
						{
							continue;
						}
						if ((object)base.Reader.LocalName == ႠႨႣ)
						{
							if (false)
							{
								goto IL_0055;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								if (456 < 456 - 106)
								{
									break;
								}
								result = ႷႠ(Ⴍ: true, Ⴓ: true);
								goto IL_00aa;
							}
						}
						throw CreateUnknownNodeException();
					}
					goto IL_0055;
					IL_00aa:
					return result;
					IL_0055:
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595043));
					if (false)
					{
						continue;
					}
					goto IL_00aa;
				}
			}
		}

		public object Read150_HtmlProcessor()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 2 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.LocalName == this.m_ႰႤ) ? 1 : 5);
					continue;
				case 1:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 5 : 0);
					continue;
				case 0:
					result = ႷႰ(Ⴍ: true, Ⴓ: true);
					num = 3;
					continue;
				case 5:
					throw CreateUnknownNodeException();
				case 2:
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595040));
					break;
				case 3:
					break;
				}
				break;
			}
			return result;
		}

		public object Read151_FileUtils()
		{
			int num = 3;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 4 : 0);
					continue;
				case 4:
					num = (((object)base.Reader.LocalName != this.m_ႠႨ) ? 2 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 2 : 5);
					continue;
				case 5:
					result = ႷႥ(Ⴍ: true, Ⴓ: true);
					num = 1;
					continue;
				case 2:
					throw CreateUnknownNodeException();
				case 0:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595225));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read152_ZlibCodec()
		{
			//Discarded unreachable code: IL_0002, IL_0036, IL_005d, IL_007f, IL_00a3, IL_00b7
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType != XmlNodeType.Element)
			{
				goto IL_005f;
			}
			if (946 >= 946 - 550)
			{
				if ((object)base.Reader.LocalName != Ⴅ)
				{
					goto IL_00a5;
				}
				if ((282 + 282 * 282) % 2 == 0)
				{
					if ((object)base.Reader.NamespaceURI != ႠႰႥ)
					{
						goto IL_00a5;
					}
					if (false)
					{
						goto IL_005f;
					}
				}
				result = ႷႷ(Ⴍ: true, Ⴓ: true);
			}
			goto IL_00bc;
			IL_005f:
			UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595230));
			if ((509 + 509 * 509) % 2 == 0)
			{
			}
			goto IL_00bc;
			IL_00bc:
			return result;
			IL_00a5:
			throw CreateUnknownNodeException();
		}

		public object Read153_EncryptionAlgorithm()
		{
			//Discarded unreachable code: IL_0002, IL_002f, IL_0054, IL_0076, IL_009b
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (false)
				{
				}
				while (true)
				{
					if ((object)base.Reader.LocalName == ႨႥ)
					{
						if (945 <= 945 - 888)
						{
							continue;
						}
						if ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (292 > 292 - 76)
							{
								break;
							}
						}
					}
					throw CreateUnknownNodeException();
				}
				result = ႳႨႥ(base.Reader.ReadElementString());
			}
			else
			{
				UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595231));
				if ((893 + 893 * 893) % 2 == 0)
				{
				}
			}
			return result;
		}

		public object Read154_FlushType()
		{
			//Discarded unreachable code: IL_0002, IL_002d, IL_004e, IL_006e, IL_0093, IL_00b8
			object result;
			do
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (45 >= 45 - 36)
					{
						while (true)
						{
							if ((object)base.Reader.LocalName == ႠႨႭ)
							{
								if (611 <= 611 - 474)
								{
									break;
								}
								if ((object)base.Reader.NamespaceURI == ႠႰႥ)
								{
									if (false)
									{
										continue;
									}
									result = ႳႨႷ(base.Reader.ReadElementString());
									break;
								}
							}
							throw CreateUnknownNodeException();
						}
						break;
					}
				}
				UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595231));
			}
			while (150 < 150 - 18);
			return result;
		}

		public object Read155_ZIPUtils()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 2 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.LocalName != ႠႭႠ) ? 1 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 1 : 5);
					continue;
				case 5:
					result = ႷႣ(Ⴍ: true, Ⴓ: true);
					num = 3;
					continue;
				case 1:
					throw CreateUnknownNodeException();
				case 2:
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595041));
					break;
				case 3:
					break;
				}
				break;
			}
			return result;
		}

		public object Read156_DynamicActivator()
		{
			//Discarded unreachable code: IL_0002, IL_0032, IL_0078, IL_009d, IL_00b4
			object result = null;
			base.Reader.MoveToContent();
			while (true)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						break;
					}
				}
				else
				{
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595230));
					if (439 > 439 - 69)
					{
						break;
					}
				}
				if ((object)base.Reader.LocalName == ႠႷႣ)
				{
					if (943 < 943 - 437)
					{
						break;
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (723 <= 723 - 194)
						{
							continue;
						}
						result = ႷႨ(Ⴍ: true, Ⴓ: true);
						break;
					}
				}
				throw CreateUnknownNodeException();
			}
			return result;
		}

		public object Read157_Zip64Option()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 6 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName != this.m_ႠႷ) ? 2 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 1 : 2);
					continue;
				case 1:
					result = ႳႨႣ(base.Reader.ReadElementString());
					num = 0;
					continue;
				case 2:
					throw CreateUnknownNodeException();
				case 6:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595231));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read158_URLUtils()
		{
			//Discarded unreachable code: IL_0002, IL_0035, IL_005a, IL_007c, IL_00a1, IL_00b5
			object result = null;
			do
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						break;
					}
					if ((object)base.Reader.LocalName == ႠႼ)
					{
						if (538 > 538 - 179 && (object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (927 > 927 - 795)
							{
								result = ႷႳ(Ⴍ: true, Ⴓ: true);
								break;
							}
						}
					}
					throw CreateUnknownNodeException();
				}
				UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595228));
			}
			while (false);
			return result;
		}

		public object Read159_Language()
		{
			//Discarded unreachable code: IL_0002, IL_0030, IL_0051, IL_0073, IL_00aa
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (77 > 77 - 70)
				{
					while ((object)base.Reader.LocalName == ႠႠႠ)
					{
						if (971 <= 971 - 681)
						{
							continue;
						}
						goto IL_0035;
					}
					goto IL_0098;
				}
			}
			else
			{
				UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595040));
				if (false)
				{
					goto IL_0098;
				}
			}
			goto IL_00ac;
			IL_00ac:
			return result;
			IL_009f:
			result = ႷႭ(Ⴍ: true, Ⴓ: true);
			goto IL_00ac;
			IL_0098:
			throw CreateUnknownNodeException();
			IL_0035:
			while ((object)base.Reader.NamespaceURI == ႠႰႥ)
			{
				if (25 < 25 - 8)
				{
					continue;
				}
				goto IL_009f;
			}
			goto IL_0098;
		}

		public object Read160_HTTPUtils()
		{
			//Discarded unreachable code: IL_0002, IL_0033, IL_0079, IL_009b, IL_00b2
			while (true)
			{
				object result = null;
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (238 <= 238 - 14)
						{
							goto IL_00a7;
						}
						if ((object)base.Reader.LocalName == Ⴐ)
						{
							if (51 <= 51 - 39)
							{
								break;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								if (784 <= 784 - 640)
								{
									continue;
								}
								goto IL_00a7;
							}
						}
						throw CreateUnknownNodeException();
					}
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595046));
					if (647 < 647 - 306)
					{
					}
					goto IL_00b4;
					IL_00a7:
					result = ႣႼ(Ⴍ: true, Ⴓ: true);
					goto IL_00b4;
					IL_00b4:
					return result;
				}
			}
		}

		public object Read161_DefaultAudioDeviceController()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 5 : 0);
					continue;
				case 5:
					num = (((object)base.Reader.LocalName != ႠႤႥ) ? 1 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 1 : 3);
					continue;
				case 3:
					result = ႣႤ(Ⴍ: true, Ⴓ: true);
					num = 6;
					continue;
				case 1:
					throw CreateUnknownNodeException();
				case 0:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595228));
					break;
				case 6:
					break;
				}
				break;
			}
			return result;
		}

		public object Read162_ExtensionsHelper()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 2 : 0);
					continue;
				case 2:
					num = (((object)base.Reader.LocalName == ႠႰႤ) ? 1 : 5);
					continue;
				case 1:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 5 : 3);
					continue;
				case 3:
					result = ႣႠ(Ⴍ: true, Ⴓ: true);
					num = 4;
					continue;
				case 5:
					throw CreateUnknownNodeException();
				case 0:
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595228));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read163_ZipErrorAction()
		{
			//Discarded unreachable code: IL_0002, IL_002f, IL_0054, IL_0077, IL_0099, IL_00be
			object result = null;
			base.Reader.MoveToContent();
			while (true)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						continue;
					}
					while (true)
					{
						if ((object)base.Reader.LocalName == ႠႰႳ)
						{
							if (239 < 239 - 63)
							{
								break;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								if (773 > 773 - 375)
								{
									break;
								}
								continue;
							}
						}
						throw CreateUnknownNodeException();
					}
					result = ႳႨႨ(base.Reader.ReadElementString());
					break;
				}
				do
				{
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595229));
				}
				while (769 <= 769 - 310);
				break;
			}
			return result;
		}

		public object Read164_A()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 4 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.LocalName != ႠႰႭ) ? 2 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 1 : 2);
					continue;
				case 1:
					result = (AuthorizeData)ReadSerializable(new AuthorizeData());
					num = 3;
					continue;
				case 2:
					throw CreateUnknownNodeException();
				case 4:
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595042));
					break;
				case 3:
					break;
				}
				break;
			}
			return result;
		}

		public object Read165_IconFlags()
		{
			//Discarded unreachable code: IL_0002, IL_002e, IL_0055, IL_0075, IL_0099, IL_00be
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (4 <= 4 - 1)
					{
						break;
					}
				}
				else
				{
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595041));
					if (455 > 455 - 47)
					{
						break;
					}
				}
				if ((object)base.Reader.LocalName == ႼႰ)
				{
					if ((912 + 912 * 912) % 2 == 0)
					{
						if ((object)base.Reader.NamespaceURI != ႠႰႥ)
						{
							goto IL_009e;
						}
						if (false)
						{
							continue;
						}
					}
					result = ႳႨႳ(base.Reader.ReadElementString());
					break;
				}
				goto IL_009e;
				IL_009e:
				throw CreateUnknownNodeException();
			}
			return result;
		}

		public object Read166_ChatmanThread()
		{
			//Discarded unreachable code: IL_0002, IL_0030, IL_0058, IL_00a1, IL_00b5
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (245 > 245 - 120)
						{
							while (true)
							{
								if ((object)base.Reader.LocalName == ႠႭႨ)
								{
									if (234 < 234 - 171)
									{
										break;
									}
									if ((object)base.Reader.NamespaceURI == ႠႰႥ)
									{
										if (767 <= 767 - 592)
										{
											continue;
										}
										goto IL_00aa;
									}
								}
								throw CreateUnknownNodeException();
							}
							continue;
						}
					}
					else
					{
						UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595229));
						if (452 <= 452 - 367)
						{
							break;
						}
					}
					goto IL_00ba;
					IL_00aa:
					result = ႣႰ(Ⴍ: true, Ⴓ: true);
					goto IL_00ba;
					IL_00ba:
					return result;
				}
			}
		}

		public object Read167_DesktopPoint()
		{
			//Discarded unreachable code: IL_0002, IL_002d, IL_0052, IL_0075, IL_009a, IL_00ae
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (606 >= 606 - 93)
				{
					if ((object)base.Reader.LocalName != this.m_ႼႣ)
					{
						goto IL_009c;
					}
					if (752 <= 752 - 184)
					{
						goto IL_00b0;
					}
				}
				if ((object)base.Reader.NamespaceURI != ႠႰႥ)
				{
					goto IL_009c;
				}
				if (762 >= 762 - 163)
				{
					result = ႣႥ(Ⴍ: true, Ⴓ: true);
				}
			}
			else
			{
				UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595043));
				if (750 < 750 - 197)
				{
				}
			}
			goto IL_00b0;
			IL_009c:
			throw CreateUnknownNodeException();
			IL_00b0:
			return result;
		}

		public object Read168_ChatmanMouseButtons()
		{
			//Discarded unreachable code: IL_002e, IL_0052, IL_0075, IL_009a, IL_00bc
			object result;
			while (true)
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (305 < 305 - 197)
					{
						continue;
					}
					while (true)
					{
						if ((object)base.Reader.LocalName == ႠႭႤ)
						{
							if (440 < 440 - 69)
							{
								break;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								if (false)
								{
									continue;
								}
								goto IL_00a3;
							}
						}
						throw CreateUnknownNodeException();
					}
					continue;
				}
				do
				{
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595040));
				}
				while (489 < 489 - 479);
				break;
				IL_00a3:
				result = ႳႳႼ(base.Reader.ReadElementString());
				break;
			}
			return result;
		}

		public object Read169_ZipProgressEventType()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 6 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName == ႠႨႥ) ? 5 : 0);
					continue;
				case 5:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 1 : 0);
					continue;
				case 1:
					result = ႳႳႤ(base.Reader.ReadElementString());
					num = 4;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 6:
					UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595229));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read170_MailUtils()
		{
			int num = 0;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 5 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.LocalName != this.m_ႼႳ) ? 4 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 4 : 3);
					continue;
				case 3:
					result = ႣႷ(Ⴍ: true, Ⴓ: true);
					num = 1;
					continue;
				case 4:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595047));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read171_FilterCollection()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 5 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.LocalName != Ⴜ) ? 6 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 1 : 6);
					continue;
				case 1:
					result = ႣႣ(Ⴍ: true, Ⴓ: true);
					num = 2;
					continue;
				case 6:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595042));
					break;
				case 2:
					break;
				}
				break;
			}
			return result;
		}

		public object Read172_ChatmanEnvironment()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 5 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName != ႠႷႳ) ? 1 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 1 : 0);
					continue;
				case 0:
					result = ႣႨ(Ⴍ: true, Ⴓ: true);
					num = 2;
					continue;
				case 1:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595041));
					break;
				case 2:
					break;
				}
				break;
			}
			return result;
		}

		public object Read173_SecurityUtils()
		{
			//Discarded unreachable code: IL_0002, IL_002f, IL_0057, IL_007a, IL_00a2, IL_00b6
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (false)
						{
							continue;
						}
						while (true)
						{
							if ((object)base.Reader.LocalName == this.m_ႥႰ)
							{
								if (919 < 919 - 390)
								{
									break;
								}
								if ((object)base.Reader.NamespaceURI == ႠႰႥ)
								{
									if (326 < 326 - 325)
									{
										continue;
									}
									goto IL_00ab;
								}
							}
							throw CreateUnknownNodeException();
						}
						break;
					}
					UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595042));
					if (755 <= 755 - 409)
					{
						goto IL_00ab;
					}
					goto IL_00b8;
					IL_00ab:
					result = ႣႳ(Ⴍ: true, Ⴓ: true);
					goto IL_00b8;
					IL_00b8:
					return result;
				}
			}
		}

		public object Read174_ElevationHelper()
		{
			int num = 1;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 6 : 0);
					continue;
				case 6:
					num = (((object)base.Reader.LocalName != this.m_ႠႣ) ? 3 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 3 : 5);
					continue;
				case 5:
					result = ႣႭ(Ⴍ: true, Ⴓ: true);
					num = 4;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 0:
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595046));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read175_TokenElevationType()
		{
			//Discarded unreachable code: IL_0002, IL_0030, IL_004e, IL_0070, IL_0094, IL_00b9
			object result = null;
			base.Reader.MoveToContent();
			while (true)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (215 <= 215 - 192)
					{
						continue;
					}
					if ((object)base.Reader.LocalName == ႼႠ)
					{
						if (false)
						{
							break;
						}
						if ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (18 >= 18 - 1)
							{
								result = ႳႳႠ(base.Reader.ReadElementString());
								break;
							}
						}
					}
				}
				else
				{
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595047));
					if ((194 + 194 * 194) % 2 == 0)
					{
						break;
					}
				}
				throw CreateUnknownNodeException();
			}
			return result;
		}

		public object Read176_RegistryAccessor()
		{
			//Discarded unreachable code: IL_0002, IL_0033, IL_005b, IL_009d
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (497 <= 497 - 212)
					{
						continue;
					}
					if ((object)base.Reader.LocalName == ႠႨႰ)
					{
						if (263 < 263 - 11)
						{
							break;
						}
						if ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (321 > 321 - 308)
							{
								result = ႨႼ(Ⴍ: true, Ⴓ: true);
								break;
							}
						}
					}
					throw CreateUnknownNodeException();
				}
				UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595043));
				if ((298 + 298 * 298) % 2 == 0)
				{
				}
				break;
			}
			return result;
		}

		public object Read177_RondyoUtilHelper()
		{
			//Discarded unreachable code: IL_0002, IL_002d, IL_0051, IL_0070, IL_0098, IL_00ac
			while (true)
			{
				object result = null;
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (111 >= 111 - 89)
						{
						}
						while (true)
						{
							if ((object)base.Reader.LocalName == ႤႳ)
							{
								if (588 < 588 - 309)
								{
									break;
								}
								if ((object)base.Reader.NamespaceURI == ႠႰႥ)
								{
									if (false)
									{
										continue;
									}
									goto IL_00a1;
								}
							}
							throw CreateUnknownNodeException();
						}
						break;
					}
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595046));
					if (false)
					{
						continue;
					}
					goto IL_00ae;
					IL_00a1:
					result = ႨႣ(Ⴍ: true, Ⴓ: true);
					goto IL_00ae;
					IL_00ae:
					return result;
				}
			}
		}

		public object Read178_DateUtils()
		{
			//Discarded unreachable code: IL_0002, IL_0030, IL_0055, IL_0075, IL_009c, IL_00b0
			while (true)
			{
				object result = null;
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (425 <= 425 - 356)
						{
							continue;
						}
						if ((object)base.Reader.LocalName == ႤႭ)
						{
							if (false)
							{
								continue;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								if (475 > 475 - 436)
								{
									result = ႨႭ(Ⴍ: true, Ⴓ: true);
									goto IL_00b5;
								}
							}
						}
						throw CreateUnknownNodeException();
					}
					UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595043));
					if (302 < 302 - 77)
					{
						break;
					}
					goto IL_00b5;
					IL_00b5:
					return result;
				}
			}
		}

		public object Read179_SplashScreenMode()
		{
			//Discarded unreachable code: IL_002b, IL_004f, IL_0071, IL_0095, IL_00b7
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (703 >= 703 - 111)
				{
					if ((object)base.Reader.LocalName != ႭႤ)
					{
						goto IL_0097;
					}
					if (false)
					{
						goto IL_00b9;
					}
				}
				if ((object)base.Reader.NamespaceURI != ႠႰႥ)
				{
					goto IL_0097;
				}
				if ((599 + 599 * 599) % 2 == 0)
				{
					result = ႳႳႰ(base.Reader.ReadElementString());
					goto IL_00b9;
				}
			}
			UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595040));
			if ((1017 + 1017 * 1017) % 2 == 0)
			{
			}
			goto IL_00b9;
			IL_0097:
			throw CreateUnknownNodeException();
			IL_00b9:
			return result;
		}

		public object Read180_ZipEntrySource()
		{
			//Discarded unreachable code: IL_0002, IL_0035, IL_005d, IL_009f, IL_00c4
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if ((694 + 694 * 694) % 2 == 0 && (object)base.Reader.LocalName == this.m_ႷႤ)
				{
					if ((324 + 324 * 324) % 2 == 0 && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (830 >= 830 - 323)
						{
							result = ႳႳႥ(base.Reader.ReadElementString());
						}
						goto IL_00c6;
					}
				}
			}
			else
			{
				UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595044));
				if (160 >= 160 - 63)
				{
					goto IL_00c6;
				}
			}
			throw CreateUnknownNodeException();
			IL_00c6:
			return result;
		}

		public object Read181_WIN32API()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 6 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.LocalName == this.m_ႥႨ) ? 5 : 0);
					continue;
				case 5:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 1 : 0);
					continue;
				case 1:
					result = ႳႼ(Ⴍ: true, Ⴓ: true);
					num = 3;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 6:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595040));
					break;
				case 3:
					break;
				}
				break;
			}
			return result;
		}

		public object Read182_RECT()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 1 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName != ႠႰႠ) ? 5 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 5 : 6);
					continue;
				case 6:
					result = ႳႳႣ(Ⴍ: true);
					num = 0;
					continue;
				case 5:
					throw CreateUnknownNodeException();
				case 1:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595041));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read183_WINDOWPLACEMENT()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 6 : 0);
					continue;
				case 6:
					num = (((object)base.Reader.LocalName != ႠႤႠ) ? 3 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 3 : 4);
					continue;
				case 4:
					result = ႳႳႨ(Ⴍ: true);
					num = 1;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 0:
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595047));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read184_MessageBoxUtils()
		{
			//Discarded unreachable code: IL_0002, IL_002f, IL_0056, IL_0078, IL_00ae
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if ((175 + 175 * 175) % 2 == 0)
				{
					if ((object)base.Reader.LocalName != this.m_ႰႨ)
					{
						goto IL_009c;
					}
					if (false)
					{
						goto IL_00a3;
					}
				}
				if ((object)base.Reader.NamespaceURI != ႠႰႥ)
				{
					goto IL_009c;
				}
				if ((877 + 877 * 877) % 2 == 0)
				{
					goto IL_00a3;
				}
			}
			do
			{
				UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595045));
			}
			while (false);
			goto IL_00b0;
			IL_00b0:
			return result;
			IL_009c:
			throw CreateUnknownNodeException();
			IL_00a3:
			result = ႳႤ(Ⴍ: true, Ⴓ: true);
			goto IL_00b0;
		}

		public object Read185_ChatManMessageBoxButtons()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 6 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName != ႠႤႼ) ? 1 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 1 : 0);
					continue;
				case 0:
					result = ႳႳႳ(base.Reader.ReadElementString());
					num = 4;
					continue;
				case 1:
					throw CreateUnknownNodeException();
				case 6:
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595050));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read186_ChatManDialogResult()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 6 : 0);
					continue;
				case 6:
					num = (((object)base.Reader.LocalName != this.m_ႳႥ) ? 4 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 4 : 2);
					continue;
				case 2:
					result = ႳႳႭ(base.Reader.ReadElementString());
					num = 1;
					continue;
				case 4:
					throw CreateUnknownNodeException();
				case 0:
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595044));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read187_TextEncodings()
		{
			//Discarded unreachable code: IL_0002, IL_0030, IL_0070, IL_0094, IL_00b6
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (290 <= 290 - 188)
				{
					goto IL_0032;
				}
			}
			else
			{
				UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595046));
				if (267 > 267 - 240)
				{
					goto IL_00b8;
				}
			}
			goto IL_0072;
			IL_00b8:
			return result;
			IL_009d:
			result = ႳႭႼ(base.Reader.ReadElementString());
			goto IL_00b8;
			IL_0072:
			if ((object)base.Reader.LocalName != ႭႼ)
			{
				goto IL_0096;
			}
			if ((228 + 228 * 228) % 2 == 0)
			{
				goto IL_0032;
			}
			goto IL_009d;
			IL_0096:
			throw CreateUnknownNodeException();
			IL_0032:
			if ((object)base.Reader.NamespaceURI != ႠႰႥ)
			{
				goto IL_0096;
			}
			if (47 <= 47 - 27)
			{
				goto IL_0072;
			}
			goto IL_009d;
		}

		public object Read188_FrameFlags()
		{
			//Discarded unreachable code: IL_0002, IL_004d, IL_0070, IL_008f, IL_00b1
			while (true)
			{
				object result = null;
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (63 < 63 - 62)
						{
							break;
						}
						if ((object)base.Reader.LocalName == ႭႣ)
						{
							if (71 >= 71 - 11 && (object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								if (882 >= 882 - 360)
								{
									result = ႳႭႤ(base.Reader.ReadElementString());
									goto IL_00b6;
								}
							}
						}
						throw CreateUnknownNodeException();
					}
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595044));
					if (589 <= 589 - 438)
					{
						continue;
					}
					goto IL_00b6;
					IL_00b6:
					return result;
				}
			}
		}

		public object Read189_TimeStamps()
		{
			//Discarded unreachable code: IL_0002, IL_002f, IL_0059, IL_007f, IL_00a3, IL_00c8
			object result;
			while (true)
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						continue;
					}
					if ((object)base.Reader.LocalName == this.m_ႨႭ)
					{
						if ((271 + 271 * 271) % 2 == 0 && (object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (false)
							{
								break;
							}
							goto IL_00af;
						}
					}
					throw CreateUnknownNodeException();
				}
				UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595041));
				if (708 >= 708 - 615)
				{
					break;
				}
				goto IL_00af;
				IL_00af:
				result = ႳႭႠ(base.Reader.ReadElementString());
				break;
			}
			return result;
		}

		public object Read190_IncrementDecrement()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 1 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.LocalName != ႠႥ) ? 3 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 3 : 5);
					continue;
				case 5:
					result = ႳႭႰ(base.Reader.ReadElementString());
					num = 0;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 1:
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595051));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read191_ID3v2Flags()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 3 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.LocalName == this.m_ႠႳ) ? 1 : 2);
					continue;
				case 1:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 2 : 0);
					continue;
				case 0:
					result = ႳႭႥ(base.Reader.ReadElementString());
					num = 4;
					continue;
				case 2:
					throw CreateUnknownNodeException();
				case 3:
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595045));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read192_FilterTypes()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 2);
					continue;
				case 1:
					num = (((object)base.Reader.LocalName != ႭႭ) ? 6 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 6 : 0);
					continue;
				case 0:
					result = ႳႭႷ(base.Reader.ReadElementString());
					num = 3;
					continue;
				case 6:
					throw CreateUnknownNodeException();
				case 2:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595047));
					break;
				case 3:
					break;
				}
				break;
			}
			return result;
		}

		public object Read193_StreamUtils()
		{
			//Discarded unreachable code: IL_0002, IL_0032, IL_005a, IL_007d, IL_00a2, IL_00b9
			object result = null;
			base.Reader.MoveToContent();
			do
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						break;
					}
					if ((object)base.Reader.LocalName == Ⴃ)
					{
						if (639 >= 639 - 200)
						{
						}
						if ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (179 >= 179 - 109)
							{
								result = ႳႠ(Ⴍ: true, Ⴓ: true);
							}
							break;
						}
					}
					throw CreateUnknownNodeException();
				}
				UnknownNode(null, ႰႰႰ.Ⴐ.ႳႭႨ(863595046));
			}
			while (357 <= 357 - 139);
			return result;
		}

		public object Read194_Resources()
		{
			//Discarded unreachable code: IL_0002, IL_0036, IL_005d, IL_007a, IL_009c, IL_00b3
			object result;
			while (true)
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (727 < 727 - 618)
					{
						break;
					}
					while (true)
					{
						if ((object)base.Reader.LocalName == Ⴓ)
						{
							if (391 <= 391 - 46)
							{
								continue;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								break;
							}
						}
						throw CreateUnknownNodeException();
					}
					if (false)
					{
						continue;
					}
					result = ႳႰ(Ⴍ: true, Ⴓ: true);
					break;
				}
				UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595048));
				if (76 < 76 - 43)
				{
				}
				break;
			}
			return result;
		}

		public object Read195_ExtractExistingFileAction()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 3);
					continue;
				case 1:
					num = (((object)base.Reader.LocalName != ႤႣ) ? 2 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 2 : 4);
					continue;
				case 4:
					result = ႳႭႣ(base.Reader.ReadElementString());
					num = 5;
					continue;
				case 2:
					throw CreateUnknownNodeException();
				case 3:
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595049));
					break;
				case 5:
					break;
				}
				break;
			}
			return result;
		}

		public object Read196_ID3Error()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 5 : 0);
					continue;
				case 5:
					num = (((object)base.Reader.LocalName != ႤႠ) ? 1 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 1 : 3);
					continue;
				case 3:
					result = ႳႥ(Ⴍ: true, Ⴓ: true);
					num = 6;
					continue;
				case 1:
					throw CreateUnknownNodeException();
				case 0:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595044));
					break;
				case 6:
					break;
				}
				break;
			}
			return result;
		}

		public object Read197_ErrorCollection()
		{
			//Discarded unreachable code: IL_0002, IL_0053, IL_0075, IL_009a, IL_00ae
			object result;
			do
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (101 > 101 - 78 && (object)base.Reader.LocalName == this.m_ႳႤ)
					{
						if (533 > 533 - 357 && (object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (193 >= 193 - 163)
							{
								result = ႳႷ(Ⴍ: true, Ⴓ: true);
							}
							break;
						}
					}
					throw CreateUnknownNodeException();
				}
				UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595045));
			}
			while (false);
			return result;
		}

		public object Read198_ContentTypes()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 4);
					continue;
				case 1:
					num = (((object)base.Reader.LocalName == ႠႣႣ) ? 3 : 0);
					continue;
				case 3:
					num = (((object)base.Reader.NamespaceURI == ႠႰႥ) ? 2 : 0);
					continue;
				case 2:
					result = ႳႭႨ(base.Reader.ReadElementString());
					num = 5;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 4:
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595050));
					break;
				case 5:
					break;
				}
				break;
			}
			return result;
		}

		public object Read199_SingleProgramInstanceWin()
		{
			//Discarded unreachable code: IL_0002, IL_0055, IL_0078, IL_009a, IL_00ae
			object result;
			while (true)
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (213 < 213 - 2)
					{
						break;
					}
				}
				else
				{
					UnknownNode(null, ႰႰႰ.Ⴗ.ႳႭႨ(863595054));
					if (643 >= 643 - 570)
					{
						break;
					}
				}
				if ((object)base.Reader.LocalName == this.m_ႨႣ)
				{
					if (244 <= 244 - 60)
					{
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (656 >= 656 - 481)
						{
							result = ႳႣ(Ⴍ: true, Ⴓ: true);
							break;
						}
						continue;
					}
				}
				throw CreateUnknownNodeException();
			}
			return result;
		}

		public object Read200_ChatmanConfiguration()
		{
			//Discarded unreachable code: IL_0002, IL_0033, IL_0078, IL_009c, IL_00b0
			while (true)
			{
				object result = null;
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (768 <= 768 - 588)
						{
							break;
						}
						if ((object)base.Reader.LocalName == this.m_ႳႣ)
						{
							if (false)
							{
								goto IL_0057;
							}
							if ((object)base.Reader.NamespaceURI == ႠႰႥ)
							{
								if ((13 + 13 * 13) % 2 == 0)
								{
									result = ႳႨ(Ⴍ: true, Ⴓ: true);
								}
								goto IL_00b2;
							}
						}
						throw CreateUnknownNodeException();
					}
					goto IL_0057;
					IL_00b2:
					return result;
					IL_0057:
					UnknownNode(null, ႰႰႰ.Ⴓ.ႳႭႨ(863595050));
					if (157 <= 157 - 149)
					{
						continue;
					}
					goto IL_00b2;
				}
			}
		}

		private ႥႥႳႰ.Ⴍ ႳႨ(bool Ⴍ, bool Ⴓ)
		{
			int num = 6;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႳႰ.Ⴍ ⴍ = default(ႥႥႳႰ.Ⴍ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 16 : 15);
					break;
				case 15:
					obj = null;
					goto IL_0084;
				case 16:
					obj = GetXsiType();
					goto IL_0084;
				case 1:
					flag = ReadNull();
					num = 4;
					break;
				case 4:
					num = ((!Ⴓ) ? 20 : 10);
					break;
				case 10:
					num = ((xmlQualifiedName == null) ? 20 : 3);
					break;
				case 3:
					num = (((object)xmlQualifiedName.Name != this.m_ႳႣ) ? 23 : 18);
					break;
				case 18:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 20 : 23);
					break;
				case 23:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 20:
					num = ((!flag) ? 7 : 12);
					break;
				case 12:
					return null;
				case 7:
					ⴍ = new ႥႥႳႰ.Ⴍ();
					num = 8;
					break;
				case 2:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 8 : 14);
					break;
				case 14:
					UnknownNode(ⴍ);
					goto case 8;
				case 8:
					num = (base.Reader.MoveToNextAttribute() ? 2 : 17);
					break;
				case 17:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 5 : 13);
					break;
				case 13:
					base.Reader.Skip();
					return ⴍ;
				case 5:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 9;
					break;
				case 0:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 21 : 22);
					break;
				case 22:
					UnknownNode(ⴍ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					num = 24;
					break;
				case 21:
					UnknownNode(ⴍ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					goto case 24;
				case 24:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 9;
				case 9:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 19 : 11);
					break;
				case 11:
					num = ((base.Reader.NodeType == XmlNodeType.None) ? 19 : 0);
					break;
				case 19:
					{
						ReadEndElement();
						return ⴍ;
					}
					IL_0084:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = (Ⴍ ? 1 : 4);
					break;
				}
			}
		}

		private ႥႥႳႰ.Ⴅ ႳႣ(bool Ⴍ, bool Ⴓ)
		{
			int num = 16;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႳႰ.Ⴅ ⴅ = default(ႥႥႳႰ.Ⴅ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 3 : 10);
					break;
				case 10:
					obj = null;
					goto IL_0084;
				case 3:
					obj = GetXsiType();
					goto IL_0084;
				case 17:
					flag = ReadNull();
					num = 4;
					break;
				case 4:
					num = ((!Ⴓ) ? 22 : 15);
					break;
				case 15:
					num = ((xmlQualifiedName == null) ? 22 : 18);
					break;
				case 18:
					num = (((object)xmlQualifiedName.Name != this.m_ႨႣ) ? 23 : 20);
					break;
				case 20:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 22 : 23);
					break;
				case 23:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 22:
					num = ((!flag) ? 13 : 19);
					break;
				case 19:
					return null;
				case 13:
					ⴅ = new ႥႥႳႰ.Ⴅ();
					num = 6;
					break;
				case 5:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 6 : 24);
					break;
				case 24:
					UnknownNode(ⴅ);
					goto case 6;
				case 6:
					num = (base.Reader.MoveToNextAttribute() ? 5 : 14);
					break;
				case 14:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 1 : 9);
					break;
				case 9:
					base.Reader.Skip();
					return ⴅ;
				case 1:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 2;
					break;
				case 0:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 11 : 12);
					break;
				case 12:
					UnknownNode(ⴅ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					num = 8;
					break;
				case 11:
					UnknownNode(ⴅ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					goto case 8;
				case 8:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 2;
				case 2:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 21 : 7);
					break;
				case 7:
					num = ((base.Reader.NodeType == XmlNodeType.None) ? 21 : 0);
					break;
				case 21:
					{
						ReadEndElement();
						return ⴅ;
					}
					IL_0084:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 4 : 17);
					break;
				}
			}
		}

		private ႥႥႨႼ.Ⴗ.ႭႷ ႳႭႨ(string Ⴍ)
		{
			int num = 9;
			string key = default(string);
			int value = default(int);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((key = Ⴍ) == null) ? 10 : 5);
					break;
				case 5:
					num = ((<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600012b-1 != null) ? 7 : 8);
					break;
				case 8:
					<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600012b-1 = new Dictionary<string, int>(7)
					{
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595045),
							0
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595047),
							1
						},
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595051),
							2
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595051),
							3
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595141),
							4
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595050),
							5
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595044),
							6
						}
					};
					num = 7;
					break;
				case 7:
					num = ((!<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600012b-1.TryGetValue(key, out value)) ? 10 : 0);
					break;
				case 0:
				{
					int num2;
					switch (value)
					{
					default:
						num2 = 13;
						break;
					case 0:
						num2 = 4;
						break;
					case 1:
						num2 = 11;
						break;
					case 2:
						num2 = 2;
						break;
					case 3:
						num2 = 12;
						break;
					case 4:
						num2 = 3;
						break;
					case 5:
						num2 = 1;
						break;
					case 6:
						num2 = 6;
						break;
					}
					num = num2;
					break;
				}
				case 13:
					num = 10;
					break;
				case 4:
					return ႥႥႨႼ.Ⴗ.ႭႷ.Ⴐ;
				case 11:
					return ႥႥႨႼ.Ⴗ.ႭႷ.Ⴈ;
				case 2:
					return ႥႥႨႼ.Ⴗ.ႭႷ.Ⴓ;
				case 12:
					return ႥႥႨႼ.Ⴗ.ႭႷ.Ⴗ;
				case 3:
					return ႥႥႨႼ.Ⴗ.ႭႷ.Ⴅ;
				case 1:
					return ႥႥႨႼ.Ⴗ.ႭႷ.Ⴀ;
				case 6:
					return ႥႥႨႼ.Ⴗ.ႭႷ.Ⴃ;
				case 10:
					throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႼ.Ⴗ.ႭႷ));
				}
			}
		}

		private ႥႥႨႼ.Ⴓ ႳႷ(bool Ⴍ, bool Ⴓ)
		{
			int num = 14;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႼ.Ⴓ ⴓ = default(ႥႥႨႼ.Ⴓ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 12 : 20);
					break;
				case 20:
					obj = null;
					goto IL_0085;
				case 12:
					obj = GetXsiType();
					goto IL_0085;
				case 19:
					flag = ReadNull();
					num = 24;
					break;
				case 24:
					num = ((!Ⴓ) ? 6 : 0);
					break;
				case 0:
					num = ((xmlQualifiedName == null) ? 6 : 10);
					break;
				case 10:
					num = (((object)xmlQualifiedName.Name != this.m_ႳႤ) ? 9 : 5);
					break;
				case 5:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 6 : 9);
					break;
				case 9:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 6:
					num = ((!flag) ? 22 : 23);
					break;
				case 23:
					return null;
				case 22:
					ⴓ = new ႥႥႨႼ.Ⴓ();
					num = 8;
					break;
				case 1:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 8 : 18);
					break;
				case 18:
					UnknownNode(ⴓ);
					goto case 8;
				case 8:
					num = (base.Reader.MoveToNextAttribute() ? 1 : 4);
					break;
				case 4:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 3 : 11);
					break;
				case 11:
					base.Reader.Skip();
					return ⴓ;
				case 3:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 15;
					break;
				case 16:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 13 : 17);
					break;
				case 17:
					UnknownNode(ⴓ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					num = 7;
					break;
				case 13:
					UnknownNode(ⴓ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					goto case 7;
				case 7:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 15;
				case 15:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 2 : 21);
					break;
				case 21:
					num = ((base.Reader.NodeType != 0) ? 16 : 2);
					break;
				case 2:
					{
						ReadEndElement();
						return ⴓ;
					}
					IL_0085:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 24 : 19);
					break;
				}
			}
		}

		private ႥႥႨႼ.Ⴀ ႳႥ(bool Ⴍ, bool Ⴓ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴓ ? GetXsiType() : null;
			bool flag = false;
			if (Ⴍ)
			{
				flag = ReadNull();
			}
			if (Ⴓ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != ႤႠ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			if (flag)
			{
				return null;
			}
			ႥႥႨႼ.Ⴀ ⴀ;
			try
			{
				ⴀ = (ႥႥႨႼ.Ⴀ)Activator.CreateInstance(typeof(ႥႥႨႼ.Ⴀ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴓ.ႳႭႨ(863595048));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴐ.ႳႭႨ(863595045));
			}
			bool[] array = new bool[1];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴀ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴀ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == ႭႠ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴀ.Ⴈ = base.Reader.ReadElementString();
						array[0] = true;
					}
					else
					{
						UnknownNode(ⴀ, ႰႰႰ.Ⴍ.ႳႭႨ(863595051));
					}
				}
				else
				{
					UnknownNode(ⴀ, ႰႰႰ.Ⴓ.ႳႭႨ(863595049));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴀ;
		}

		private ႥႥႨႼ.Ⴈ ႳႭႣ(string Ⴍ)
		{
			int num = 6;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴍ) != null) ? 7 : 0);
					break;
				case 7:
					num = ((a == ႰႰႰ.Ⴍ.ႳႭႨ(863595236)) ? 4 : 10);
					break;
				case 10:
					num = ((a == ႰႰႰ.Ⴗ.ႳႭႨ(863595055)) ? 1 : 2);
					break;
				case 2:
					num = ((a == ႰႰႰ.Ⴄ.ႳႭႨ(863595048)) ? 3 : 9);
					break;
				case 9:
					num = ((a == ႰႰႰ.Ⴓ.ႳႭႨ(863595054)) ? 5 : 8);
					break;
				case 8:
					num = 0;
					break;
				case 4:
					return ႥႥႨႼ.Ⴈ.Ⴐ;
				case 1:
					return ႥႥႨႼ.Ⴈ.Ⴈ;
				case 3:
					return ႥႥႨႼ.Ⴈ.Ⴓ;
				case 5:
					return ႥႥႨႼ.Ⴈ.Ⴗ;
				case 0:
					throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႼ.Ⴈ));
				}
			}
		}

		private ႥႥႨႼ.Ⴐ ႳႰ(bool Ⴍ, bool Ⴓ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴓ ? GetXsiType() : null;
			bool flag = false;
			if (Ⴍ)
			{
				flag = ReadNull();
			}
			if (Ⴓ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != this.Ⴓ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			if (flag)
			{
				return null;
			}
			ႥႥႨႼ.Ⴐ ⴐ;
			try
			{
				ⴐ = (ႥႥႨႼ.Ⴐ)Activator.CreateInstance(typeof(ႥႥႨႼ.Ⴐ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴄ.ႳႭႨ(863595049));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴓ.ႳႭႨ(863595055));
			}
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴐ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴐ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					UnknownNode(ⴐ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
				}
				else
				{
					UnknownNode(ⴐ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴐ;
		}

		private ႥႥႨႤ.Ⴜ ႳႠ(bool Ⴍ, bool Ⴓ)
		{
			int num = 3;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႤ.Ⴜ ⴜ = default(ႥႥႨႤ.Ⴜ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 9 : 2);
					break;
				case 2:
					obj = null;
					goto IL_0083;
				case 9:
					obj = GetXsiType();
					goto IL_0083;
				case 13:
					flag = ReadNull();
					num = 18;
					break;
				case 18:
					num = ((!Ⴓ) ? 6 : 0);
					break;
				case 0:
					num = ((xmlQualifiedName == null) ? 6 : 19);
					break;
				case 19:
					num = (((object)xmlQualifiedName.Name != Ⴃ) ? 12 : 17);
					break;
				case 17:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 6 : 12);
					break;
				case 12:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 6:
					num = ((!flag) ? 8 : 10);
					break;
				case 10:
					return null;
				case 8:
					ⴜ = new ႥႥႨႤ.Ⴜ();
					num = 23;
					break;
				case 14:
					num = ((!IsXmlnsAttribute(base.Reader.Name)) ? 1 : 23);
					break;
				case 1:
					UnknownNode(ⴜ);
					goto case 23;
				case 23:
					num = (base.Reader.MoveToNextAttribute() ? 14 : 4);
					break;
				case 4:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 21 : 22);
					break;
				case 22:
					base.Reader.Skip();
					return ⴜ;
				case 21:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 7;
					break;
				case 11:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 20 : 16);
					break;
				case 16:
					UnknownNode(ⴜ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					num = 5;
					break;
				case 20:
					UnknownNode(ⴜ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					goto case 5;
				case 5:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 7;
				case 7:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 24 : 15);
					break;
				case 15:
					num = ((base.Reader.NodeType != 0) ? 11 : 24);
					break;
				case 24:
					{
						ReadEndElement();
						return ⴜ;
					}
					IL_0083:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 18 : 13);
					break;
				}
			}
		}

		private ႥႥႨႤ.Ⴃ ႳႭႷ(string Ⴍ)
		{
			int num = 5;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴍ) != null) ? 1 : 6);
					break;
				case 1:
					num = ((a == ႰႰႰ.Ⴗ.ႳႭႨ(863595052)) ? 8 : 2);
					break;
				case 2:
					num = ((!(a == ႰႰႰ.Ⴄ.ႳႭႨ(863595054))) ? 4 : 0);
					break;
				case 4:
					num = ((a == ႰႰႰ.Ⴓ.ႳႭႨ(863595052)) ? 7 : 3);
					break;
				case 3:
					num = 6;
					break;
				case 8:
					return ႥႥႨႤ.Ⴃ.Ⴐ;
				case 0:
					return ႥႥႨႤ.Ⴃ.Ⴈ;
				case 7:
					return ႥႥႨႤ.Ⴃ.Ⴓ;
				case 6:
					throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႤ.Ⴃ));
				}
			}
		}

		internal Hashtable ႼႭ()
		{
			int num = 2;
			while (true)
			{
				switch (num)
				{
				default:
					num = ((this.Ⴃ != null) ? 1 : 0);
					break;
				case 0:
				{
					Hashtable hashtable = new Hashtable();
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595053), 128L);
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595048), 64L);
					hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595053), 32L);
					this.Ⴃ = (string)(object)hashtable;
					num = 1;
					break;
				}
				case 1:
					return (Hashtable)(object)this.Ⴃ;
				}
			}
		}

		private ႥႥႨႤ.Ⴍ ႳႭႥ(string Ⴍ)
		{
			return (ႥႥႨႤ.Ⴍ)XmlSerializationReader.ToEnum(Ⴍ, ႼႭ(), ႰႰႰ.Ⴄ.ႳႭႨ(863595055));
		}

		private ႥႥႨႤ.Ⴗ ႳႭႰ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0019, IL_003a, IL_005f, IL_0065
			string a;
			while ((a = Ⴍ) != null)
			{
				if (false)
				{
					continue;
				}
				if (!(a == ႰႰႰ.Ⴄ.ႳႭႨ(863595052)))
				{
					if (false)
					{
						continue;
					}
					if (!(a == ႰႰႰ.Ⴓ.ႳႭႨ(863595058)))
					{
						if (234 >= 234 - 71)
						{
							break;
						}
					}
					return ႥႥႨႤ.Ⴗ.Ⴈ;
				}
				return ႥႥႨႤ.Ⴗ.Ⴐ;
			}
			throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႤ.Ⴗ));
		}

		private ႥႥႨႤ.Ⴓ ႳႭႠ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_001e, IL_003e, IL_0063, IL_0069
			string a;
			while ((a = Ⴍ) != null)
			{
				if (false)
				{
					break;
				}
				if (!(a == ႰႰႰ.Ⴐ.ႳႭႨ(863595148)))
				{
					if (false)
					{
					}
					if (!(a == ႰႰႰ.Ⴍ.ႳႭႨ(863595148)))
					{
						if (942 <= 942 - 5)
						{
							continue;
						}
						break;
					}
					return ႥႥႨႤ.Ⴓ.Ⴈ;
				}
				return ႥႥႨႤ.Ⴓ.Ⴐ;
			}
			throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႤ.Ⴓ));
		}

		internal Hashtable ႼႳ()
		{
			int num = 0;
			while (true)
			{
				switch (num)
				{
				default:
					num = ((this.Ⴀ == null) ? 1 : 2);
					break;
				case 1:
				{
					Hashtable hashtable = new Hashtable();
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595207), 32768L);
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595204), 16384L);
					hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595059), 8192L);
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595149), 128L);
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595149), 64L);
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595154), 32L);
					this.Ⴀ = (string)(object)hashtable;
					num = 2;
					break;
				}
				case 2:
					return (Hashtable)(object)this.Ⴀ;
				}
			}
		}

		private ႥႥႨႤ.Ⴀ ႳႭႤ(string Ⴍ)
		{
			return (ႥႥႨႤ.Ⴀ)XmlSerializationReader.ToEnum(Ⴍ, ႼႳ(), ႰႰႰ.Ⴍ.ႳႭႨ(863595049));
		}

		private ႥႥႨႤ.Ⴄ ႳႭႼ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_002c, IL_004b, IL_0081, IL_00cb, IL_00d4
			string a;
			if ((a = Ⴍ) == null)
			{
				goto IL_0050;
			}
			if (612 <= 612 - 517)
			{
				goto IL_00d9;
			}
			if (!(a == ႰႰႰ.Ⴍ.ႳႭႨ(863595154)))
			{
				if (590 > 590 - 64)
				{
					do
					{
						if (!(a == ႰႰႰ.Ⴗ.ႳႭႨ(863595151)))
						{
							if (756 >= 756 - 66)
							{
							}
							if (a == ႰႰႰ.Ⴄ.ႳႭႨ(863595154))
							{
								return ႥႥႨႤ.Ⴄ.Ⴓ;
							}
							continue;
						}
						return ႥႥႨႤ.Ⴄ.Ⴈ;
					}
					while (977 < 977 - 691);
					if (!(a == ႰႰႰ.Ⴓ.ႳႭႨ(863595149)))
					{
						if ((932 + 932 * 932) % 2 == 0)
						{
							goto IL_0050;
						}
					}
					goto IL_00d9;
				}
			}
			return ႥႥႨႤ.Ⴄ.Ⴐ;
			IL_0050:
			throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႤ.Ⴄ));
			IL_00d9:
			return ႥႥႨႤ.Ⴄ.Ⴗ;
		}

		private ႥႥႨႭ.Ⴃ ႳႳႭ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0023, IL_0062, IL_008b, IL_00ab, IL_015a, IL_0175
			string key;
			if ((key = Ⴍ) != null)
			{
				if (false)
				{
					goto IL_017c;
				}
				if (<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000139-1 == null)
				{
					if (false)
					{
						goto IL_017c;
					}
					<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000139-1 = new Dictionary<string, int>(8)
					{
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595241),
							0
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595053),
							1
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595154),
							2
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595054),
							3
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595051),
							4
						},
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595057),
							5
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595059),
							6
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595155),
							7
						}
					};
					if (191 < 191 - 125)
					{
						goto IL_0027;
					}
				}
				if (<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000139-1.TryGetValue(key, out int value))
				{
					if (640 <= 640 - 547)
					{
					}
					switch (value)
					{
					case 6:
						return ႥႥႨႭ.Ⴃ.Ⴃ;
					case 0:
						return ႥႥႨႭ.Ⴃ.Ⴐ;
					case 3:
						break;
					default:
						goto IL_004f;
					case 2:
						return ႥႥႨႭ.Ⴃ.Ⴓ;
					case 5:
						return ႥႥႨႭ.Ⴃ.Ⴀ;
					case 4:
						return ႥႥႨႭ.Ⴃ.Ⴅ;
					case 1:
						goto IL_017c;
					case 7:
						return ႥႥႨႭ.Ⴃ.Ⴍ;
					}
					goto IL_0027;
				}
			}
			goto IL_015f;
			IL_017c:
			return ႥႥႨႭ.Ⴃ.Ⴈ;
			IL_0027:
			return ႥႥႨႭ.Ⴃ.Ⴗ;
			IL_004f:
			if (455 <= 455 - 297)
			{
				goto IL_0027;
			}
			goto IL_015f;
			IL_015f:
			throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႭ.Ⴃ));
		}

		private ႥႥႨႭ.Ⴍ ႳႳႳ(string Ⴍ)
		{
			int num = 7;
			string key = default(string);
			int value = default(int);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((key = Ⴍ) == null) ? 9 : 10);
					break;
				case 10:
					num = ((<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600013a-1 != null) ? 11 : 8);
					break;
				case 8:
					<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600013a-1 = new Dictionary<string, int>(6)
					{
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595152),
							0
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595050),
							1
						},
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595056),
							2
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595058),
							3
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595058),
							4
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595159),
							5
						}
					};
					num = 11;
					break;
				case 11:
					num = ((!<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600013a-1.TryGetValue(key, out value)) ? 9 : 12);
					break;
				case 12:
				{
					int num2;
					switch (value)
					{
					default:
						num2 = 2;
						break;
					case 0:
						num2 = 6;
						break;
					case 1:
						num2 = 5;
						break;
					case 2:
						num2 = 0;
						break;
					case 3:
						num2 = 1;
						break;
					case 4:
						num2 = 3;
						break;
					case 5:
						num2 = 4;
						break;
					}
					num = num2;
					break;
				}
				case 2:
					num = 9;
					break;
				case 6:
					return ႥႥႨႭ.Ⴍ.Ⴐ;
				case 5:
					return ႥႥႨႭ.Ⴍ.Ⴈ;
				case 0:
					return ႥႥႨႭ.Ⴍ.Ⴓ;
				case 1:
					return ႥႥႨႭ.Ⴍ.Ⴗ;
				case 3:
					return ႥႥႨႭ.Ⴍ.Ⴅ;
				case 4:
					return ႥႥႨႭ.Ⴍ.Ⴀ;
				case 9:
					throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႭ.Ⴍ));
				}
			}
		}

		private ႥႥႨႭ.Ⴗ ႳႤ(bool Ⴍ, bool Ⴓ)
		{
			int num = 5;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႭ.Ⴗ ⴗ = default(ႥႥႨႭ.Ⴗ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 2 : 19);
					break;
				case 19:
					obj = null;
					goto IL_0083;
				case 2:
					obj = GetXsiType();
					goto IL_0083;
				case 11:
					flag = ReadNull();
					num = 24;
					break;
				case 24:
					num = ((!Ⴓ) ? 3 : 7);
					break;
				case 7:
					num = ((!(xmlQualifiedName == null)) ? 1 : 3);
					break;
				case 1:
					num = (((object)xmlQualifiedName.Name != this.m_ႰႨ) ? 6 : 0);
					break;
				case 0:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 3 : 6);
					break;
				case 6:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 3:
					num = ((!flag) ? 9 : 10);
					break;
				case 10:
					return null;
				case 9:
					ⴗ = new ႥႥႨႭ.Ⴗ();
					num = 21;
					break;
				case 12:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 21 : 22);
					break;
				case 22:
					UnknownNode(ⴗ);
					goto case 21;
				case 21:
					num = (base.Reader.MoveToNextAttribute() ? 12 : 16);
					break;
				case 16:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 23 : 18);
					break;
				case 18:
					base.Reader.Skip();
					return ⴗ;
				case 23:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 14;
					break;
				case 13:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 20 : 4);
					break;
				case 4:
					UnknownNode(ⴗ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					num = 15;
					break;
				case 20:
					UnknownNode(ⴗ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					goto case 15;
				case 15:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 14;
				case 14:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 17 : 8);
					break;
				case 8:
					num = ((base.Reader.NodeType != 0) ? 13 : 17);
					break;
				case 17:
					{
						ReadEndElement();
						return ⴗ;
					}
					IL_0083:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 24 : 11);
					break;
				}
			}
		}

		private unsafe ႥႥႨႭ.Ⴀ.ႭႨ ႳႳႨ(bool Ⴍ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴍ ? GetXsiType() : null;
			if (Ⴍ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != ႠႤႠ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			ႥႥႨႭ.Ⴀ.ႭႨ ⴍႨ;
			try
			{
				ⴍႨ = (ႥႥႨႭ.Ⴀ.ႭႨ)Activator.CreateInstance(typeof(ႥႥႨႭ.Ⴀ.ႭႨ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴐ.ႳႭႨ(863595048));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴍ.ႳႭႨ(863595055));
			}
			bool[] array = new bool[6];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴍႨ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴍႨ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == ႤႰ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(int*)(&ⴍႨ.Ⴐ) = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[0] = true;
					}
					else if (!array[1] && (object)base.Reader.LocalName == ႼႤ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(int*)(&ⴍႨ.Ⴈ) = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[1] = true;
					}
					else if (!array[2] && (object)base.Reader.LocalName == ႠႷႥ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴍႨ.Ⴓ = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[2] = true;
					}
					else if (!array[3] && (object)base.Reader.LocalName == ႭႨ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(Point*)(&ⴍႨ.Ⴐ) = ႳႳႷ(Ⴍ: true);
						array[3] = true;
					}
					else if (!array[4] && (object)base.Reader.LocalName == ႠႨႳ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴍႨ.Ⴈ = ႳႳႷ(Ⴍ: true);
						array[4] = true;
					}
					else if (!array[5] && (object)base.Reader.LocalName == this.m_ႳႷ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴍႨ.Ⴐ = ႳႳႣ(Ⴍ: true);
						array[5] = true;
					}
					else
					{
						UnknownNode(ⴍႨ, ႰႰႰ.Ⴄ.ႳႭႨ(863595056));
					}
				}
				else
				{
					UnknownNode(ⴍႨ, ႰႰႰ.Ⴍ.ႳႭႨ(863595052));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴍႨ;
		}

		private ႥႥႨႭ.Ⴀ.ႭႰ ႳႳႣ(bool Ⴍ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴍ ? GetXsiType() : null;
			if (Ⴍ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != ႠႰႠ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			ႥႥႨႭ.Ⴀ.ႭႰ ⴍႰ;
			try
			{
				ⴍႰ = (ႥႥႨႭ.Ⴀ.ႭႰ)Activator.CreateInstance(typeof(ႥႥႨႭ.Ⴀ.ႭႰ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴗ.ႳႭႨ(863595059));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴄ.ႳႭႨ(863595057));
			}
			bool[] array = new bool[4];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴍႰ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴍႰ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == this.m_ႥႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴍႰ.Ⴅ = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[0] = true;
					}
					else if (!array[1] && (object)base.Reader.LocalName == ႳႳ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴍႰ.Ⴈ = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[1] = true;
					}
					else if (!array[2] && (object)base.Reader.LocalName == ႠႣႤ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴍႰ.Ⴀ = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[2] = true;
					}
					else if (!array[3] && (object)base.Reader.LocalName == ႠႤႷ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴍႰ.Ⴄ = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[3] = true;
					}
					else
					{
						UnknownNode(ⴍႰ, ႰႰႰ.Ⴓ.ႳႭႨ(863595062));
					}
				}
				else
				{
					UnknownNode(ⴍႰ, ႰႰႰ.Ⴗ.ႳႭႨ(863595056));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴍႰ;
		}

		private Point ႳႳႷ(bool Ⴍ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴍ ? GetXsiType() : null;
			if (Ⴍ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != ႨႳ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			Point point;
			try
			{
				point = (Point)Activator.CreateInstance(typeof(Point), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴓ.ႳႭႨ(863595063));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴐ.ႳႭႨ(863595049));
			}
			bool[] array = new bool[2];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(point);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return point;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == ႠႨႨ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						point.X = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[0] = true;
					}
					else if (!array[1] && (object)base.Reader.LocalName == ႠႨႠ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						point.Y = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[1] = true;
					}
					else
					{
						UnknownNode(point, ႰႰႰ.Ⴍ.ႳႭႨ(863595053));
					}
				}
				else
				{
					UnknownNode(point, ႰႰႰ.Ⴓ.ႳႭႨ(863595060));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return point;
		}

		private ႥႥႨႭ.Ⴀ ႳႼ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0031, IL_0050, IL_006f, IL_0097, IL_00bb, IL_00c6, IL_00f0, IL_010a, IL_0127, IL_0154, IL_017c, IL_0186, IL_01a3, IL_01cd, IL_01f4, IL_021a, IL_0245, IL_0279, IL_0291, IL_02ae, IL_02cf, IL_02fb
			if (Ⴓ)
			{
				goto IL_017e;
			}
			object obj;
			if ((660 + 660 * 660) % 2 == 0)
			{
				obj = null;
				goto IL_0188;
			}
			goto IL_012c;
			IL_012c:
			base.Reader.MoveToContent();
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if ((513 + 513 * 513) % 2 == 0)
			{
			}
			goto IL_00cd;
			IL_0156:
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			whileIterations = 0;
			goto IL_016f;
			IL_017e:
			obj = GetXsiType();
			goto IL_0188;
			IL_0188:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			goto IL_018b;
			IL_018b:
			ႥႥႨႭ.Ⴀ ⴀ = default(ႥႥႨႭ.Ⴀ);
			while (true)
			{
				if (Ⴍ)
				{
					if (false)
					{
						goto IL_0099;
					}
					do
					{
						flag = ReadNull();
					}
					while (481 <= 481 - 250);
				}
				if (Ⴓ)
				{
					if (false)
					{
						break;
					}
					if (!(xmlQualifiedName == null))
					{
						if (411 <= 411 - 53)
						{
							break;
						}
						if ((object)xmlQualifiedName.Name != this.m_ႥႨ)
						{
							goto IL_01a5;
						}
						if (966 < 966 - 203)
						{
							continue;
						}
						if ((object)xmlQualifiedName.Namespace != ႠႰႥ)
						{
							if (960 > 960 - 750)
							{
								goto IL_01a5;
							}
						}
					}
				}
				if (flag)
				{
					if ((730 + 730 * 730) % 2 == 0)
					{
						return null;
					}
					continue;
				}
				ⴀ = new ႥႥႨႭ.Ⴀ();
				goto IL_0099;
				IL_0099:
				while (base.Reader.MoveToNextAttribute())
				{
					if (IsXmlnsAttribute(base.Reader.Name))
					{
						continue;
					}
					if (372 > 372 - 121)
					{
						UnknownNode(ⴀ);
						if (547 >= 547 - 246)
						{
							continue;
						}
						goto IL_012c;
					}
					goto IL_0156;
				}
				if (false)
				{
					continue;
				}
				goto IL_024a;
				IL_01a5:
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			goto IL_00cd;
			IL_016f:
			readerCount = base.ReaderCount;
			goto IL_00cd;
			IL_024a:
			base.Reader.MoveToElement();
			if (!base.Reader.IsEmptyElement)
			{
				goto IL_0156;
			}
			if (310 > 310 - 65)
			{
				base.Reader.Skip();
				goto IL_011a;
			}
			goto IL_01b3;
			IL_00cd:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (false)
				{
					goto IL_017e;
				}
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (624 < 624 - 144)
						{
							goto IL_018b;
						}
						UnknownNode(ⴀ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					}
					else
					{
						UnknownNode(ⴀ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
						if (false)
						{
							goto IL_016f;
						}
					}
					goto IL_012c;
				}
				if (false)
				{
					goto IL_011a;
				}
			}
			ReadEndElement();
			goto IL_01b3;
			IL_01b3:
			return ⴀ;
			IL_011a:
			return ⴀ;
		}

		private ႥႥႨႣ.Ⴜ ႳႳႥ(string Ⴍ)
		{
			int num = 11;
			string key = default(string);
			int value = default(int);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((key = Ⴍ) == null) ? 13 : 8);
					break;
				case 8:
					num = ((<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000140-1 != null) ? 1 : 6);
					break;
				case 6:
					<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000140-1 = new Dictionary<string, int>(7)
					{
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595165),
							0
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595156),
							1
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595058),
							2
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595054),
							3
						},
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595061),
							4
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595062),
							5
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595162),
							6
						}
					};
					num = 1;
					break;
				case 1:
					num = ((!<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000140-1.TryGetValue(key, out value)) ? 13 : 9);
					break;
				case 9:
				{
					int num2;
					switch (value)
					{
					default:
						num2 = 10;
						break;
					case 0:
						num2 = 0;
						break;
					case 1:
						num2 = 2;
						break;
					case 2:
						num2 = 5;
						break;
					case 3:
						num2 = 4;
						break;
					case 4:
						num2 = 3;
						break;
					case 5:
						num2 = 12;
						break;
					case 6:
						num2 = 7;
						break;
					}
					num = num2;
					break;
				}
				case 10:
					num = 13;
					break;
				case 0:
					return ႥႥႨႣ.Ⴜ.Ⴅ;
				case 2:
					return ႥႥႨႣ.Ⴜ.Ⴈ;
				case 5:
					return ႥႥႨႣ.Ⴜ.Ⴀ;
				case 4:
					return ႥႥႨႣ.Ⴜ.Ⴄ;
				case 3:
					return ႥႥႨႣ.Ⴜ.Ⴐ;
				case 12:
					return ႥႥႨႣ.Ⴜ.Ⴗ;
				case 7:
					return ႥႥႨႣ.Ⴜ.Ⴍ;
				case 13:
					throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႣ.Ⴜ));
				}
			}
		}

		private ႥႥႨႣ.Ⴐ ႳႳႰ(string Ⴍ)
		{
			int num = 7;
			string key = default(string);
			int value = default(int);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((key = Ⴍ) == null) ? 9 : 4);
					break;
				case 4:
					num = ((<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000141-1 != null) ? 11 : 0);
					break;
				case 0:
					<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000141-1 = new Dictionary<string, int>(6)
					{
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595163),
							0
						},
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595066),
							1
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595063),
							2
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595057),
							3
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595059),
							4
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595161),
							5
						}
					};
					num = 11;
					break;
				case 11:
					num = (<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000141-1.TryGetValue(key, out value) ? 1 : 9);
					break;
				case 1:
				{
					int num2;
					switch (value)
					{
					default:
						num2 = 3;
						break;
					case 0:
						num2 = 6;
						break;
					case 1:
						num2 = 10;
						break;
					case 2:
						num2 = 2;
						break;
					case 3:
						num2 = 8;
						break;
					case 4:
						num2 = 5;
						break;
					case 5:
						num2 = 12;
						break;
					}
					num = num2;
					break;
				}
				case 3:
					num = 9;
					break;
				case 6:
					return ႥႥႨႣ.Ⴐ.Ⴅ;
				case 10:
					return ႥႥႨႣ.Ⴐ.Ⴈ;
				case 2:
					return ႥႥႨႣ.Ⴐ.Ⴀ;
				case 8:
					return ႥႥႨႣ.Ⴐ.Ⴄ;
				case 5:
					return ႥႥႨႣ.Ⴐ.Ⴐ;
				case 12:
					return ႥႥႨႣ.Ⴐ.Ⴗ;
				case 9:
					throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႣ.Ⴐ));
				}
			}
		}

		private ႥႥႨႣ.Ⴈ ႨႭ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0030, IL_004e, IL_0070, IL_009b, IL_00c2, IL_00ca, IL_00f0, IL_010a, IL_0127, IL_0152, IL_017a, IL_0187, IL_01a7, IL_01d7, IL_021b, IL_0243, IL_027a, IL_0295, IL_02b5, IL_02d5, IL_02fd
			if (Ⴓ)
			{
				goto IL_017f;
			}
			if ((340 + 340 * 340) % 2 == 0)
			{
				goto IL_00c4;
			}
			goto IL_01fb;
			IL_01b4:
			ReadEndElement();
			goto IL_01ba;
			IL_017f:
			object obj = GetXsiType();
			goto IL_018c;
			IL_018c:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			goto IL_018f;
			IL_018f:
			if (Ⴍ)
			{
				if ((162 + 162 * 162) % 2 == 0)
				{
					goto IL_0053;
				}
				goto IL_011c;
			}
			goto IL_01bc;
			IL_01ac:
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_01bc:
			if (Ⴓ)
			{
				if (false)
				{
					goto IL_0075;
				}
				if (!(xmlQualifiedName == null))
				{
					if (false)
					{
						goto IL_012c;
					}
					if ((object)xmlQualifiedName.Name != ႤႭ)
					{
						goto IL_01ac;
					}
					if (false)
					{
						goto IL_0053;
					}
					goto IL_01fb;
				}
			}
			goto IL_00f5;
			IL_00c4:
			obj = null;
			goto IL_018c;
			IL_012c:
			base.Reader.MoveToContent();
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (269 > 269 - 109)
			{
				goto IL_00ce;
			}
			goto IL_017f;
			IL_01ba:
			ႥႥႨႣ.Ⴈ ⴈ = default(ႥႥႨႣ.Ⴈ);
			return ⴈ;
			IL_016d:
			readerCount = base.ReaderCount;
			goto IL_00ce;
			IL_00ce:
			while (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (783 <= 783 - 114)
				{
					continue;
				}
				goto IL_01d9;
			}
			goto IL_01b4;
			IL_0053:
			flag = ReadNull();
			if (267 <= 267 - 148)
			{
				goto IL_016d;
			}
			goto IL_01bc;
			IL_01fb:
			while ((object)xmlQualifiedName.Namespace != ႠႰႥ)
			{
				if (false)
				{
					continue;
				}
				goto IL_01ac;
			}
			goto IL_00f5;
			IL_0075:
			if (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (324 < 324 - 128)
				{
					goto IL_01bc;
				}
				UnknownNode(ⴈ);
				if (false)
				{
					goto IL_010f;
				}
			}
			goto IL_00a0;
			IL_00f5:
			if (!flag)
			{
				goto IL_011c;
			}
			if ((293 + 293 * 293) % 2 == 0)
			{
				return null;
			}
			goto IL_018f;
			IL_010f:
			base.Reader.Skip();
			return ⴈ;
			IL_01d9:
			if (base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						goto IL_01ba;
					}
					UnknownNode(ⴈ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
				}
				else
				{
					UnknownNode(ⴈ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					if (false)
					{
						goto IL_00c4;
					}
				}
				goto IL_012c;
			}
			if (false)
			{
				goto IL_00c4;
			}
			goto IL_01b4;
			IL_011c:
			ⴈ = new ႥႥႨႣ.Ⴈ();
			goto IL_00a0;
			IL_00a0:
			if (base.Reader.MoveToNextAttribute())
			{
				goto IL_0075;
			}
			if (false)
			{
				goto IL_01ac;
			}
			base.Reader.MoveToElement();
			if (!base.Reader.IsEmptyElement)
			{
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				whileIterations = 0;
				goto IL_016d;
			}
			if (625 > 625 - 616)
			{
				goto IL_010f;
			}
			goto IL_017f;
		}

		private ႥႥႨႣ.Ⴅ ႨႣ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0030, IL_004f, IL_006d, IL_0097, IL_00bc, IL_00c7, IL_00f5, IL_0109, IL_0126, IL_0156, IL_0181, IL_018e, IL_01a8, IL_01d6, IL_01fe, IL_0221, IL_024d, IL_0280, IL_02b4, IL_02d2, IL_02fd
			if (Ⴓ)
			{
				goto IL_0186;
			}
			if (512 < 512 - 481)
			{
				goto IL_0172;
			}
			object obj = null;
			goto IL_0193;
			IL_01bb:
			ႥႥႨႣ.Ⴅ ⴅ = default(ႥႥႨႣ.Ⴅ);
			return ⴅ;
			IL_0119:
			return ⴅ;
			IL_0186:
			obj = GetXsiType();
			goto IL_0193;
			IL_0193:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			if (Ⴍ)
			{
				if (774 <= 774 - 5)
				{
					goto IL_012b;
				}
				flag = ReadNull();
				if (false)
				{
					goto IL_0035;
				}
			}
			if (!Ⴓ)
			{
				goto IL_00f7;
			}
			if (378 <= 378 - 343)
			{
				goto IL_0186;
			}
			goto IL_02b9;
			IL_012b:
			base.Reader.MoveToContent();
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (false)
			{
				goto IL_009c;
			}
			goto IL_00ce;
			IL_0172:
			whileIterations = 0;
			readerCount = base.ReaderCount;
			goto IL_00ce;
			IL_010e:
			base.Reader.Skip();
			goto IL_0119;
			IL_00ce:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if ((1014 + 1014 * 1014) % 2 == 0)
				{
					if (base.Reader.NodeType != 0)
					{
						if (base.Reader.NodeType == XmlNodeType.Element)
						{
							if ((680 + 680 * 680) % 2 == 0)
							{
								UnknownNode(ⴅ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
								goto IL_012b;
							}
						}
						else
						{
							UnknownNode(ⴅ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
							if (964 > 964 - 332)
							{
								goto IL_012b;
							}
						}
						goto IL_0186;
					}
					if (443 >= 443 - 162)
					{
						goto IL_01b5;
					}
				}
				goto IL_0035;
			}
			goto IL_01b5;
			IL_00f7:
			if (flag)
			{
				if ((492 + 492 * 492) % 2 == 0)
				{
					return null;
				}
				goto IL_00ce;
			}
			ⴅ = new ႥႥႨႣ.Ⴅ();
			goto IL_009c;
			IL_01b5:
			ReadEndElement();
			goto IL_01bb;
			IL_02b9:
			if (xmlQualifiedName == null)
			{
				goto IL_00f7;
			}
			if (51 <= 51 - 46)
			{
				goto IL_01bb;
			}
			if ((object)xmlQualifiedName.Name == ႤႳ)
			{
				if (false)
				{
					goto IL_0119;
				}
				if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
				{
					goto IL_00f7;
				}
				if (522 <= 522 - 25)
				{
					goto IL_0035;
				}
			}
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_0085:
			if ((879 + 879 * 879) % 2 == 0)
			{
				goto IL_0035;
			}
			goto IL_02b9;
			IL_009c:
			while (true)
			{
				if (!base.Reader.MoveToNextAttribute())
				{
					if (822 >= 822 - 745)
					{
						base.Reader.MoveToElement();
						if (!base.Reader.IsEmptyElement)
						{
							break;
						}
						if (false)
						{
							continue;
						}
						goto IL_010e;
					}
				}
				if (IsXmlnsAttribute(base.Reader.Name))
				{
					continue;
				}
				goto IL_0085;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			goto IL_0172;
			IL_0035:
			UnknownNode(ⴅ);
			if (570 > 570 - 357)
			{
				goto IL_009c;
			}
			goto IL_00f7;
		}

		private ႥႥႨႣ.Ⴄ ႨႼ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0031, IL_0050, IL_0071, IL_009c, IL_00c0, IL_00cb, IL_00f6, IL_010a, IL_0124, IL_0151, IL_017c, IL_0189, IL_01a3, IL_01ce, IL_01f3, IL_021c, IL_0241, IL_0274, IL_028f, IL_02af, IL_02d2, IL_02fe
			object obj;
			if (Ⴓ)
			{
				obj = GetXsiType();
				goto IL_018b;
			}
			if ((358 + 358 * 358) % 2 == 0)
			{
				goto IL_00c5;
			}
			goto IL_0156;
			IL_01a5:
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_01f8:
			if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
			{
				goto IL_00f8;
			}
			if (421 < 421 - 396)
			{
				goto IL_00c5;
			}
			goto IL_01a5;
			IL_018b:
			xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			if (Ⴍ)
			{
				if ((789 + 789 * 789) % 2 == 0)
				{
					goto IL_0055;
				}
				goto IL_0161;
			}
			goto IL_01b5;
			IL_00c5:
			obj = null;
			goto IL_018b;
			IL_01b5:
			if (!Ⴓ)
			{
				goto IL_00f8;
			}
			if (307 < 307 - 59)
			{
				goto IL_00c5;
			}
			goto IL_02b4;
			IL_0252:
			if (!base.Reader.IsEmptyElement)
			{
				goto IL_0156;
			}
			ႥႥႨႣ.Ⴄ ⴄ = default(ႥႥႨႣ.Ⴄ);
			if ((776 + 776 * 776) % 2 == 0)
			{
				base.Reader.Skip();
				return ⴄ;
			}
			goto IL_02b4;
			IL_00f8:
			if (!flag)
			{
				goto IL_0119;
			}
			if ((604 + 604 * 604) % 2 == 0)
			{
				return null;
			}
			goto IL_016f;
			IL_0161:
			base.Reader.MoveToContent();
			int whileIterations = 0;
			goto IL_016f;
			IL_02b4:
			if (xmlQualifiedName == null)
			{
				goto IL_00f8;
			}
			if (false)
			{
				goto IL_0161;
			}
			goto IL_02d7;
			IL_0119:
			ⴄ = new ႥႥႨႣ.Ⴄ();
			while (base.Reader.MoveToNextAttribute())
			{
				if (IsXmlnsAttribute(base.Reader.Name))
				{
					continue;
				}
				if (742 > 742 - 449)
				{
					UnknownNode(ⴄ);
					if (981 > 981 - 382)
					{
						continue;
					}
					goto IL_0252;
				}
				goto IL_01f8;
			}
			if (false)
			{
				goto IL_0055;
			}
			base.Reader.MoveToElement();
			goto IL_0252;
			IL_02d7:
			if ((object)xmlQualifiedName.Name != ႠႨႰ)
			{
				goto IL_01a5;
			}
			if (838 < 838 - 130)
			{
				goto IL_0119;
			}
			goto IL_01f8;
			IL_016f:
			int readerCount = base.ReaderCount;
			while (true)
			{
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (false)
					{
						break;
					}
					if (base.Reader.NodeType != 0)
					{
						if (base.Reader.NodeType == XmlNodeType.Element)
						{
							if (353 > 353 - 280)
							{
								UnknownNode(ⴄ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
							}
						}
						else
						{
							UnknownNode(ⴄ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
							if ((932 + 932 * 932) % 2 == 0)
							{
							}
						}
						base.Reader.MoveToContent();
						CheckReaderCount(ref whileIterations, ref readerCount);
						if ((439 + 439 * 439) % 2 == 0)
						{
							continue;
						}
						goto IL_02d7;
					}
					if (479 < 479 - 195)
					{
						goto IL_0161;
					}
				}
				ReadEndElement();
				return ⴄ;
			}
			goto IL_0119;
			IL_0055:
			flag = ReadNull();
			if ((675 + 675 * 675) % 2 == 0)
			{
			}
			goto IL_01b5;
			IL_0156:
			base.Reader.ReadStartElement();
			goto IL_0161;
		}

		private ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ ႳႳႠ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_001c, IL_0040, IL_0058, IL_007b, IL_0099
			string a;
			if ((a = Ⴍ) != null)
			{
				if ((235 + 235 * 235) % 2 == 0)
				{
					while (true)
					{
						if (!(a == ႰႰႰ.Ⴗ.ႳႭႨ(863595062)))
						{
							if ((603 + 603 * 603) % 2 == 0)
							{
								if (a == ႰႰႰ.Ⴄ.ႳႭႨ(863595060))
								{
									return ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ.Ⴄ;
								}
								if (117 < 117 - 12)
								{
									continue;
								}
								if (!(a == ႰႰႰ.Ⴓ.ႳႭႨ(863595067)))
								{
									break;
								}
							}
							return ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ.Ⴐ;
						}
						return ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ.Ⴀ;
					}
					if (656 > 656 - 403)
					{
					}
				}
			}
			throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ));
		}

		private ႥႥႨႣ.Ⴗ.ႣႠ ႣႭ(bool Ⴍ, bool Ⴓ)
		{
			int num = 10;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႣ.Ⴗ.ႣႠ ⴃႠ = default(ႥႥႨႣ.Ⴗ.ႣႠ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 19 : 24);
					break;
				case 24:
					obj = null;
					goto IL_0085;
				case 19:
					obj = GetXsiType();
					goto IL_0085;
				case 17:
					flag = ReadNull();
					num = 1;
					break;
				case 1:
					num = ((!Ⴓ) ? 15 : 11);
					break;
				case 11:
					num = ((xmlQualifiedName == null) ? 15 : 18);
					break;
				case 18:
					num = (((object)xmlQualifiedName.Name != this.m_ႠႣ) ? 9 : 12);
					break;
				case 12:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 15 : 9);
					break;
				case 9:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 15:
					num = ((!flag) ? 21 : 20);
					break;
				case 20:
					return null;
				case 21:
					ⴃႠ = new ႥႥႨႣ.Ⴗ.ႣႠ();
					num = 0;
					break;
				case 3:
					num = ((!IsXmlnsAttribute(base.Reader.Name)) ? 14 : 0);
					break;
				case 14:
					UnknownNode(ⴃႠ);
					goto case 0;
				case 0:
					num = (base.Reader.MoveToNextAttribute() ? 3 : 5);
					break;
				case 5:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 7 : 13);
					break;
				case 13:
					base.Reader.Skip();
					return ⴃႠ;
				case 7:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 16;
					break;
				case 23:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 4 : 8);
					break;
				case 8:
					UnknownNode(ⴃႠ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					num = 2;
					break;
				case 4:
					UnknownNode(ⴃႠ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					goto case 2;
				case 2:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 16;
				case 16:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 6 : 22);
					break;
				case 22:
					num = ((base.Reader.NodeType != 0) ? 23 : 6);
					break;
				case 6:
					{
						ReadEndElement();
						return ⴃႠ;
					}
					IL_0085:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 1 : 17);
					break;
				}
			}
		}

		private ႥႥႨႣ.Ⴗ ႣႳ(bool Ⴍ, bool Ⴓ)
		{
			int num = 6;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႣ.Ⴗ ⴗ = default(ႥႥႨႣ.Ⴗ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 12 : 2);
					break;
				case 2:
					obj = null;
					goto IL_0083;
				case 12:
					obj = GetXsiType();
					goto IL_0083;
				case 3:
					flag = ReadNull();
					num = 13;
					break;
				case 13:
					num = ((!Ⴓ) ? 5 : 17);
					break;
				case 17:
					num = ((xmlQualifiedName == null) ? 5 : 8);
					break;
				case 8:
					num = (((object)xmlQualifiedName.Name != this.m_ႥႰ) ? 21 : 9);
					break;
				case 9:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 5 : 21);
					break;
				case 21:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 5:
					num = (flag ? 1 : 24);
					break;
				case 1:
					return null;
				case 24:
					ⴗ = new ႥႥႨႣ.Ⴗ();
					num = 11;
					break;
				case 7:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 11 : 22);
					break;
				case 22:
					UnknownNode(ⴗ);
					goto case 11;
				case 11:
					num = (base.Reader.MoveToNextAttribute() ? 7 : 4);
					break;
				case 4:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 23 : 18);
					break;
				case 18:
					base.Reader.Skip();
					return ⴗ;
				case 23:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 14;
					break;
				case 19:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 16 : 0);
					break;
				case 0:
					UnknownNode(ⴗ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					num = 10;
					break;
				case 16:
					UnknownNode(ⴗ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					goto case 10;
				case 10:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 14;
				case 14:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 15 : 20);
					break;
				case 20:
					num = ((base.Reader.NodeType != 0) ? 19 : 15);
					break;
				case 15:
					{
						ReadEndElement();
						return ⴗ;
					}
					IL_0083:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 13 : 3);
					break;
				}
			}
		}

		private ႣႳ ႣႨ(bool Ⴍ, bool Ⴓ)
		{
			int num = 2;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႣႳ ⴃႳ = default(ႣႳ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 17 : 6);
					break;
				case 6:
					obj = null;
					goto IL_0083;
				case 17:
					obj = GetXsiType();
					goto IL_0083;
				case 21:
					flag = ReadNull();
					num = 9;
					break;
				case 9:
					num = ((!Ⴓ) ? 11 : 0);
					break;
				case 0:
					num = ((xmlQualifiedName == null) ? 11 : 3);
					break;
				case 3:
					num = (((object)xmlQualifiedName.Name != ႠႷႳ) ? 7 : 16);
					break;
				case 16:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 11 : 7);
					break;
				case 7:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 11:
					num = ((!flag) ? 20 : 23);
					break;
				case 23:
					return null;
				case 20:
					ⴃႳ = new ႣႳ();
					num = 8;
					break;
				case 22:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 8 : 10);
					break;
				case 10:
					UnknownNode(ⴃႳ);
					goto case 8;
				case 8:
					num = (base.Reader.MoveToNextAttribute() ? 22 : 14);
					break;
				case 14:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 12 : 19);
					break;
				case 19:
					base.Reader.Skip();
					return ⴃႳ;
				case 12:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 13;
					break;
				case 18:
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 5);
					break;
				case 1:
					UnknownNode(ⴃႳ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					num = 4;
					break;
				case 5:
					UnknownNode(ⴃႳ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					goto case 4;
				case 4:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 13;
				case 13:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 15 : 24);
					break;
				case 24:
					num = ((base.Reader.NodeType != 0) ? 18 : 15);
					break;
				case 15:
					{
						ReadEndElement();
						return ⴃႳ;
					}
					IL_0083:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 9 : 21);
					break;
				}
			}
		}

		private ႥႥႨႠ.Ⴍ ႣႣ(bool Ⴍ, bool Ⴓ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴓ ? GetXsiType() : null;
			bool flag = false;
			if (Ⴍ)
			{
				flag = ReadNull();
			}
			if (Ⴓ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != Ⴜ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			if (flag)
			{
				return null;
			}
			ႥႥႨႠ.Ⴍ ⴍ;
			try
			{
				ⴍ = (ႥႥႨႠ.Ⴍ)Activator.CreateInstance(typeof(ႥႥႨႠ.Ⴍ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴐ.ႳႭႨ(863595055));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴍ.ႳႭႨ(863595056));
			}
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴍ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴍ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					UnknownNode(ⴍ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
				}
				else
				{
					UnknownNode(ⴍ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴍ;
		}

		private ႥႥႨႠ.Ⴀ ႣႷ(bool Ⴍ, bool Ⴓ)
		{
			int num = 5;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႠ.Ⴀ ⴀ = default(ႥႥႨႠ.Ⴀ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 3 : 12);
					break;
				case 12:
					obj = null;
					goto IL_0083;
				case 3:
					obj = GetXsiType();
					goto IL_0083;
				case 9:
					flag = ReadNull();
					num = 22;
					break;
				case 22:
					num = ((!Ⴓ) ? 18 : 17);
					break;
				case 17:
					num = ((xmlQualifiedName == null) ? 18 : 7);
					break;
				case 7:
					num = (((object)xmlQualifiedName.Name != this.m_ႼႳ) ? 10 : 2);
					break;
				case 2:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 18 : 10);
					break;
				case 10:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 18:
					num = ((!flag) ? 1 : 23);
					break;
				case 23:
					return null;
				case 1:
					ⴀ = new ႥႥႨႠ.Ⴀ();
					num = 24;
					break;
				case 21:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 24 : 16);
					break;
				case 16:
					UnknownNode(ⴀ);
					goto case 24;
				case 24:
					num = (base.Reader.MoveToNextAttribute() ? 21 : 19);
					break;
				case 19:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 6 : 8);
					break;
				case 8:
					base.Reader.Skip();
					return ⴀ;
				case 6:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 4;
					break;
				case 13:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 15 : 0);
					break;
				case 0:
					UnknownNode(ⴀ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					num = 11;
					break;
				case 15:
					UnknownNode(ⴀ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					goto case 11;
				case 11:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 4;
				case 4:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 20 : 14);
					break;
				case 14:
					num = ((base.Reader.NodeType != 0) ? 13 : 20);
					break;
				case 20:
					{
						ReadEndElement();
						return ⴀ;
					}
					IL_0083:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 22 : 9);
					break;
				}
			}
		}

		private ႥႥႨႥ.Ⴐ ႳႳႤ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_002f, IL_00c0, IL_0290, IL_02c9, IL_02d1, IL_0308
			string key;
			if ((key = Ⴍ) != null)
			{
				if (869 >= 869 - 334)
				{
					if (<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600014b-1 == null)
					{
						if (601 <= 601 - 187)
						{
						}
						<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600014b-1 = new Dictionary<string, int>(24)
						{
							{
								ႰႰႰ.Ⴄ.ႳႭႨ(863595061),
								0
							},
							{
								ႰႰႰ.Ⴗ.ႳႭႨ(863595161),
								1
							},
							{
								ႰႰႰ.Ⴍ.ႳႭႨ(863595057),
								2
							},
							{
								ႰႰႰ.Ⴐ.ႳႭႨ(863595052),
								3
							},
							{
								ႰႰႰ.Ⴓ.ႳႭႨ(863595064),
								4
							},
							{
								ႰႰႰ.Ⴄ.ႳႭႨ(863595066),
								5
							},
							{
								ႰႰႰ.Ⴗ.ႳႭႨ(863595167),
								6
							},
							{
								ႰႰႰ.Ⴍ.ႳႭႨ(863595062),
								7
							},
							{
								ႰႰႰ.Ⴐ.ႳႭႨ(863595058),
								8
							},
							{
								ႰႰႰ.Ⴓ.ႳႭႨ(863595070),
								9
							},
							{
								ႰႰႰ.Ⴐ.ႳႭႨ(863595233),
								10
							},
							{
								ႰႰႰ.Ⴍ.ႳႭႨ(863595060),
								11
							},
							{
								ႰႰႰ.Ⴗ.ႳႭႨ(863595060),
								12
							},
							{
								ႰႰႰ.Ⴄ.ႳႭႨ(863595065),
								13
							},
							{
								ႰႰႰ.Ⴓ.ႳႭႨ(863595068),
								14
							},
							{
								ႰႰႰ.Ⴐ.ႳႭႨ(863595056),
								15
							},
							{
								ႰႰႰ.Ⴍ.ႳႭႨ(863595066),
								16
							},
							{
								ႰႰႰ.Ⴗ.ႳႭႨ(863595065),
								17
							},
							{
								ႰႰႰ.Ⴄ.ႳႭႨ(863595068),
								18
							},
							{
								ႰႰႰ.Ⴓ.ႳႭႨ(863595011),
								19
							},
							{
								ႰႰႰ.Ⴐ.ႳႭႨ(863595062),
								20
							},
							{
								ႰႰႰ.Ⴍ.ႳႭႨ(863595067),
								21
							},
							{
								ႰႰႰ.Ⴗ.ႳႭႨ(863595071),
								22
							},
							{
								ႰႰႰ.Ⴄ.ႳႭႨ(863595010),
								23
							}
						};
						if (620 <= 620 - 516)
						{
							goto IL_00c5;
						}
					}
					if (<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600014b-1.TryGetValue(key, out int value))
					{
						if (677 >= 677 - 120)
						{
							switch (value)
							{
							case 19:
								return ႥႥႨႥ.Ⴐ.ႨႼ;
							case 9:
								return ႥႥႨႥ.Ⴐ.Ⴜ;
							case 12:
								return ႥႥႨႥ.Ⴐ.ႨႳ;
							case 14:
								return ႥႥႨႥ.Ⴐ.ႨႥ;
							case 8:
								return ႥႥႨႥ.Ⴐ.Ⴄ;
							case 7:
								return ႥႥႨႥ.Ⴐ.Ⴍ;
							case 10:
								return ႥႥႨႥ.Ⴐ.ႨႰ;
							case 16:
								return ႥႥႨႥ.Ⴐ.ႨႣ;
							default:
								if (782 < 782 - 223)
								{
									goto case 10;
								}
								goto IL_02d3;
							case 11:
								break;
							case 5:
								return ႥႥႨႥ.Ⴐ.Ⴀ;
							case 22:
								return ႥႥႨႥ.Ⴐ.ႳႳ;
							case 2:
								return ႥႥႨႥ.Ⴐ.Ⴓ;
							case 23:
								return ႥႥႨႥ.Ⴐ.ႳႷ;
							case 15:
								goto IL_029f;
							case 21:
								return ႥႥႨႥ.Ⴐ.ႳႨ;
							case 17:
								return ႥႥႨႥ.Ⴐ.ႨႭ;
							case 6:
								return ႥႥႨႥ.Ⴐ.Ⴃ;
							case 3:
								return ႥႥႨႥ.Ⴐ.Ⴗ;
							case 4:
								return ႥႥႨႥ.Ⴐ.Ⴅ;
							case 20:
								return ႥႥႨႥ.Ⴐ.ႳႰ;
							case 13:
								return ႥႥႨႥ.Ⴐ.ႨႷ;
							case 18:
								return ႥႥႨႥ.Ⴐ.ႨႤ;
							case 0:
								return ႥႥႨႥ.Ⴐ.Ⴐ;
							case 1:
								return ႥႥႨႥ.Ⴐ.Ⴈ;
							}
							goto IL_00c5;
						}
						goto IL_029f;
					}
				}
			}
			goto IL_02d3;
			IL_02d3:
			throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႥ.Ⴐ));
			IL_00c5:
			return ႥႥႨႥ.Ⴐ.ႨႨ;
			IL_029f:
			return ႥႥႨႥ.Ⴐ.ႨႠ;
		}

		internal Hashtable ႼႨ()
		{
			//Discarded unreachable code: IL_0005, IL_00be, IL_00e5
			if (this.Ⴄ == null)
			{
				Hashtable hashtable = default(Hashtable);
				if (406 > 406 - 305)
				{
					hashtable = new Hashtable();
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595152), 0L);
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595166), 1048576L);
				}
				hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595238), 2097152L);
				do
				{
					hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595065), 4194304L);
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595064), 8388608L);
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595063), 16777216L);
					this.Ⴄ = (string)(object)hashtable;
				}
				while (false);
			}
			return (Hashtable)(object)this.Ⴄ;
		}

		private ႥႥႨႥ.Ⴄ ႳႳႼ(string Ⴍ)
		{
			return (ႥႥႨႥ.Ⴄ)XmlSerializationReader.ToEnum(Ⴍ, ႼႨ(), ႰႰႰ.Ⴐ.ႳႭႨ(863595053));
		}

		private ႥႥႨႥ.Ⴗ ႣႥ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0033, IL_0067, IL_0088, IL_00ae, IL_00ce, IL_00e9, IL_010e, IL_0116, IL_0139, IL_0165, IL_0190, IL_01bb, IL_01c5, IL_01e9, IL_020d, IL_0236, IL_0259, IL_0287, IL_02ba, IL_02e4, IL_0306, IL_0324, IL_0348, IL_036d, IL_0384, IL_03b5, IL_03e0, IL_0404, IL_041c, IL_0444
			object obj;
			if (Ⴓ)
			{
				obj = GetXsiType();
				goto IL_01ca;
			}
			if (50 > 50 - 30)
			{
				goto IL_0110;
			}
			goto IL_025e;
			IL_0212:
			while (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (false)
				{
					continue;
				}
				goto IL_006c;
			}
			goto IL_02bf;
			IL_02bf:
			ReadEndElement();
			ႥႥႨႥ.Ⴗ ⴗ = default(ႥႥႨႥ.Ⴗ);
			return ⴗ;
			IL_01ca:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			goto IL_01cd;
			IL_01cd:
			if (Ⴍ)
			{
				if (985 < 985 - 612)
				{
					goto IL_0155;
				}
				flag = ReadNull();
				if (819 <= 819 - 552)
				{
					goto IL_0378;
				}
			}
			if (!Ⴓ)
			{
				goto IL_030b;
			}
			if (false)
			{
				goto IL_028e;
			}
			goto IL_0329;
			IL_034d:
			if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
			{
				goto IL_030b;
			}
			if (false)
			{
				goto IL_0329;
			}
			goto IL_0449;
			IL_01ee:
			ⴗ.Ⴐ = XmlConvert.ToInt32(base.Reader.ReadElementString());
			bool[] array = default(bool[]);
			array[0] = true;
			goto IL_028e;
			IL_006c:
			if (base.Reader.NodeType == XmlNodeType.None)
			{
				if (23 >= 23 - 7)
				{
					goto IL_02bf;
				}
				goto IL_0372;
			}
			if (base.Reader.NodeType != XmlNodeType.Element)
			{
				UnknownNode(ⴗ, ႰႰႰ.Ⴍ.ႳႭႨ(863595063));
				if (207 <= 207 - 88)
				{
					goto IL_0045;
				}
				goto IL_028e;
			}
			if ((950 + 950 * 950) % 2 == 0)
			{
				if (array[0])
				{
					goto IL_023b;
				}
				if (496 >= 496 - 354)
				{
					goto IL_03ba;
				}
			}
			goto IL_034d;
			IL_0389:
			if ((object)base.Reader.NamespaceURI == ႠႰႥ)
			{
				if (251 < 251 - 181)
				{
				}
				goto IL_01ee;
			}
			goto IL_023b;
			IL_030b:
			if (!flag)
			{
				goto IL_0372;
			}
			if (709 >= 709 - 517)
			{
				return null;
			}
			goto IL_03ba;
			IL_00d3:
			UnknownNode(ⴗ, ႰႰႰ.Ⴄ.ႳႭႨ(863595067));
			goto IL_028e;
			IL_0329:
			if (xmlQualifiedName == null)
			{
				goto IL_030b;
			}
			if (324 <= 324 - 262)
			{
				goto IL_01ee;
			}
			goto IL_0421;
			IL_0372:
			ⴗ = new ႥႥႨႥ.Ⴗ();
			goto IL_0378;
			IL_0378:
			array = new bool[2];
			goto IL_0045;
			IL_0045:
			if (!base.Reader.MoveToNextAttribute())
			{
				if ((623 + 623 * 623) % 2 == 0)
				{
					base.Reader.MoveToElement();
					if (base.Reader.IsEmptyElement)
					{
						if (63 <= 63 - 19)
						{
							goto IL_0110;
						}
						base.Reader.Skip();
						return ⴗ;
					}
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					goto IL_0155;
				}
				goto IL_0158;
			}
			goto IL_0195;
			IL_03ba:
			if ((object)base.Reader.LocalName != ႠႭႰ)
			{
				goto IL_023b;
			}
			if (168 < 168 - 109)
			{
				goto IL_0195;
			}
			goto IL_0389;
			IL_028e:
			base.Reader.MoveToContent();
			goto IL_029a;
			IL_023b:
			if (!array[1])
			{
				if (279 >= 279 - 248 && (object)base.Reader.LocalName == ႠႭႭ)
				{
					if (622 >= 622 - 85)
					{
						goto IL_025e;
					}
					goto IL_0389;
				}
			}
			goto IL_00d3;
			IL_0110:
			obj = null;
			goto IL_01ca;
			IL_0421:
			if ((object)xmlQualifiedName.Name == this.m_ႼႣ)
			{
				if (false)
				{
					goto IL_0195;
				}
				goto IL_034d;
			}
			goto IL_0449;
			IL_029a:
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (923 >= 923 - 744)
			{
				goto IL_0212;
			}
			goto IL_0421;
			IL_0155:
			whileIterations = 0;
			goto IL_0158;
			IL_0158:
			readerCount = base.ReaderCount;
			goto IL_0212;
			IL_0195:
			if (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (199 < 199 - 107)
				{
					goto IL_0212;
				}
				UnknownNode(ⴗ);
				if (796 <= 796 - 617)
				{
					goto IL_01cd;
				}
			}
			goto IL_0045;
			IL_0449:
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_025e:
			if ((object)base.Reader.NamespaceURI != ႠႰႥ)
			{
				goto IL_00d3;
			}
			if (686 <= 686 - 510)
			{
				goto IL_029a;
			}
			ⴗ.Ⴈ = XmlConvert.ToInt32(base.Reader.ReadElementString());
			array[1] = true;
			goto IL_028e;
		}

		private ႥႥႨႥ.Ⴓ ႣႰ(bool Ⴍ, bool Ⴓ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴓ ? GetXsiType() : null;
			bool flag = false;
			if (Ⴍ)
			{
				flag = ReadNull();
			}
			if (Ⴓ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != ႠႭႨ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			if (flag)
			{
				return null;
			}
			ႥႥႨႥ.Ⴓ ⴓ;
			try
			{
				ⴓ = (ႥႥႨႥ.Ⴓ)Activator.CreateInstance(typeof(ႥႥႨႥ.Ⴓ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴗ.ႳႭႨ(863595061));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴄ.ႳႭႨ(863595070));
			}
			bool[] array = new bool[2];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴓ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴓ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == this.m_ႼႨ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴓ.Ⴐ = XmlConvert.ToBoolean(base.Reader.ReadElementString());
						array[0] = true;
					}
					else if (!array[1] && (object)base.Reader.LocalName == this.m_ႳႰ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴓ.Ⴐ = ႳႨႭ(base.Reader.ReadElementString());
						array[1] = true;
					}
					else
					{
						UnknownNode(ⴓ, ႰႰႰ.Ⴓ.ႳႭႨ(863595069));
					}
				}
				else
				{
					UnknownNode(ⴓ, ႰႰႰ.Ⴗ.ႳႭႨ(863595064));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴓ;
		}

		private ThreadPriority ႳႨႭ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_0045, IL_0087, IL_0092, IL_00b1, IL_00d4, IL_00f3
			while (true)
			{
				string a;
				if ((a = Ⴍ) == null)
				{
					goto IL_000e;
				}
				if (683 < 683 - 562 || a == ႰႰႰ.Ⴓ.ႳႭႨ(863595071))
				{
					return ThreadPriority.Lowest;
				}
				if (876 <= 876 - 83)
				{
					goto IL_008b;
				}
				if (a == ႰႰႰ.Ⴐ.ႳႭႨ(863595059))
				{
					break;
				}
				if (false)
				{
					goto IL_0020;
				}
				goto IL_00d6;
				IL_008b:
				return ThreadPriority.Normal;
				IL_00d6:
				if (!(a == ႰႰႰ.Ⴍ.ႳႭႨ(863595061)))
				{
					if (4 <= 4 - 1)
					{
						goto IL_000e;
					}
					goto IL_0020;
				}
				goto IL_008b;
				IL_0020:
				if (a == ႰႰႰ.Ⴗ.ႳႭႨ(863595066))
				{
					return ThreadPriority.AboveNormal;
				}
				if (704 >= 704 - 282)
				{
					if (!(a == ႰႰႰ.Ⴄ.ႳႭႨ(863595071)))
					{
						if (false)
						{
							continue;
						}
						goto IL_000e;
					}
					return ThreadPriority.Highest;
				}
				goto IL_00d6;
				IL_000e:
				throw CreateUnknownConstantException(Ⴍ, typeof(ThreadPriority));
			}
			return ThreadPriority.BelowNormal;
		}

		private ႥႥႨႷ.Ⴍ ႳႨႳ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_000c, IL_004a, IL_006d, IL_00ab, IL_0144, IL_0170
			string key;
			if ((key = Ⴍ) != null)
			{
				if ((469 + 469 * 469) % 2 == 0 && <PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000151-1 == null)
				{
					if (false)
					{
						goto IL_0013;
					}
					<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000151-1 = new Dictionary<string, int>(7)
					{
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595067),
							0
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595239),
							1
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595057),
							2
						},
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595010),
							3
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595204),
							4
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595070),
							5
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595237),
							6
						}
					};
					if (853 < 853 - 708)
					{
						goto IL_0074;
					}
				}
				int value;
				while (<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000151-1.TryGetValue(key, out value))
				{
					if (185 < 185 - 139)
					{
						continue;
					}
					switch (value)
					{
					case 4:
						return ႥႥႨႷ.Ⴍ.Ⴅ;
					case 5:
						break;
					default:
						goto IL_0037;
					case 2:
						return ႥႥႨႷ.Ⴍ.Ⴓ;
					case 6:
						return ႥႥႨႷ.Ⴍ.Ⴃ;
					case 0:
						return ႥႥႨႷ.Ⴍ.Ⴐ;
					case 1:
						return ႥႥႨႷ.Ⴍ.Ⴈ;
					case 3:
						return ႥႥႨႷ.Ⴍ.Ⴗ;
					}
					goto IL_0013;
					IL_0037:
					if (525 >= 525 - 164)
					{
						break;
					}
				}
			}
			goto IL_0074;
			IL_0013:
			return ႥႥႨႷ.Ⴍ.Ⴀ;
			IL_0074:
			throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႷ.Ⴍ));
		}

		private ႥႥႨႷ.Ⴄ ႳႨႨ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_004f, IL_0075, IL_0079, IL_0091, IL_00c9
			string a;
			if ((a = Ⴍ) != null)
			{
				if (false)
				{
				}
				if (a == ႰႰႰ.Ⴄ.ႳႭႨ(863595069))
				{
					return ႥႥႨႷ.Ⴄ.Ⴐ;
				}
				if (892 >= 892 - 452)
				{
				}
				do
				{
					if (a == ႰႰႰ.Ⴓ.ႳႭႨ(863595008))
					{
						return ႥႥႨႷ.Ⴄ.Ⴈ;
					}
				}
				while (false);
				if (a == ႰႰႰ.Ⴐ.ႳႭႨ(863595051))
				{
					return ႥႥႨႷ.Ⴄ.Ⴓ;
				}
				if (957 > 957 - 364)
				{
					do
					{
						if (a == ႰႰႰ.Ⴍ.ႳႭႨ(863595064))
						{
							return ႥႥႨႷ.Ⴄ.Ⴗ;
						}
					}
					while (693 < 693 - 462);
				}
			}
			throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႷ.Ⴄ));
		}

		private ႥႥႨႷ.Ⴗ ႣႠ(bool Ⴍ, bool Ⴓ)
		{
			int num = 6;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႷ.Ⴗ ⴗ = default(ႥႥႨႷ.Ⴗ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 18 : 9);
					break;
				case 9:
					obj = null;
					goto IL_0084;
				case 18:
					obj = GetXsiType();
					goto IL_0084;
				case 7:
					flag = ReadNull();
					num = 14;
					break;
				case 14:
					num = ((!Ⴓ) ? 11 : 4);
					break;
				case 4:
					num = ((xmlQualifiedName == null) ? 11 : 5);
					break;
				case 5:
					num = (((object)xmlQualifiedName.Name != ႠႰႤ) ? 21 : 20);
					break;
				case 20:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 11 : 21);
					break;
				case 21:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 11:
					num = ((!flag) ? 13 : 0);
					break;
				case 0:
					return null;
				case 13:
					ⴗ = new ႥႥႨႷ.Ⴗ();
					num = 23;
					break;
				case 17:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 23 : 8);
					break;
				case 8:
					UnknownNode(ⴗ);
					goto case 23;
				case 23:
					num = (base.Reader.MoveToNextAttribute() ? 17 : 10);
					break;
				case 10:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 3 : 15);
					break;
				case 15:
					base.Reader.Skip();
					return ⴗ;
				case 3:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 22;
					break;
				case 16:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 2 : 24);
					break;
				case 24:
					UnknownNode(ⴗ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					num = 1;
					break;
				case 2:
					UnknownNode(ⴗ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					goto case 1;
				case 1:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 22;
				case 22:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 19 : 12);
					break;
				case 12:
					num = ((base.Reader.NodeType != 0) ? 16 : 19);
					break;
				case 19:
					{
						ReadEndElement();
						return ⴗ;
					}
					IL_0084:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 14 : 7);
					break;
				}
			}
		}

		private global::ႳႨႭ.Ⴐ ႣႤ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_002d, IL_0049, IL_0068, IL_0090, IL_00b4, IL_00bf, IL_00e7, IL_0102, IL_011c, IL_0147, IL_016f, IL_017c, IL_019a, IL_01c5, IL_01ec, IL_0215, IL_023b, IL_026f, IL_0287, IL_029e, IL_02c2, IL_02ed
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			bool flag = default(bool);
			int whileIterations = default(int);
			int readerCount = default(int);
			global::ႳႨႭ.Ⴐ ⴐ = default(global::ႳႨႭ.Ⴐ);
			while (true)
			{
				object obj;
				if (Ⴓ)
				{
					obj = GetXsiType();
					goto IL_017e;
				}
				if (50 > 50 - 5)
				{
					goto IL_00b9;
				}
				goto IL_0160;
				IL_019f:
				throw CreateUnknownTypeException(xmlQualifiedName);
				IL_00b9:
				obj = null;
				goto IL_017e;
				IL_017e:
				xmlQualifiedName = (XmlQualifiedName)obj;
				flag = false;
				goto IL_0181;
				IL_0181:
				if (Ⴍ)
				{
					if (678 < 678 - 181)
					{
						continue;
					}
					goto IL_004e;
				}
				goto IL_01af;
				IL_0121:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (353 > 353 - 41)
				{
					goto IL_00c3;
				}
				goto IL_0154;
				IL_01af:
				if (Ⴓ)
				{
					if (698 < 698 - 68)
					{
						goto IL_01f1;
					}
					if (!(xmlQualifiedName == null))
					{
						if (186 <= 186 - 179)
						{
							break;
						}
						goto IL_02c7;
					}
				}
				goto IL_00ec;
				IL_0162:
				readerCount = base.ReaderCount;
				goto IL_00c3;
				IL_00c3:
				if (base.Reader.NodeType == XmlNodeType.EndElement)
				{
					break;
				}
				if (false)
				{
					goto IL_00ec;
				}
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (false)
						{
							goto IL_00b9;
						}
						UnknownNode(ⴐ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
						goto IL_0121;
					}
					goto IL_021a;
				}
				if ((978 + 978 * 978) % 2 == 0)
				{
					break;
				}
				goto IL_02c7;
				IL_021a:
				UnknownNode(ⴐ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
				if (184 > 184 - 34)
				{
					goto IL_0121;
				}
				goto IL_01f1;
				IL_00ec:
				if (flag)
				{
					if (137 >= 137 - 129)
					{
						return null;
					}
					goto IL_004e;
				}
				ⴐ = new global::ႳႨႭ.Ⴐ();
				while (base.Reader.MoveToNextAttribute())
				{
					if (IsXmlnsAttribute(base.Reader.Name))
					{
						continue;
					}
					if (700 >= 700 - 50)
					{
						UnknownNode(ⴐ);
						if (498 >= 498 - 108)
						{
							continue;
						}
						goto IL_0162;
					}
					goto IL_0181;
				}
				if (false)
				{
					goto IL_00c3;
				}
				base.Reader.MoveToElement();
				if (!base.Reader.IsEmptyElement)
				{
					base.Reader.ReadStartElement();
					goto IL_0154;
				}
				if (914 < 914 - 415)
				{
					continue;
				}
				goto IL_0104;
				IL_01f1:
				if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
				{
					goto IL_00ec;
				}
				if (728 <= 728 - 675)
				{
					goto IL_0104;
				}
				goto IL_019f;
				IL_02c7:
				if ((object)xmlQualifiedName.Name != ႠႤႥ)
				{
					goto IL_019f;
				}
				if ((412 + 412 * 412) % 2 == 0)
				{
					goto IL_01f1;
				}
				goto IL_021a;
				IL_004e:
				flag = ReadNull();
				if (908 < 908 - 610)
				{
					goto IL_00b9;
				}
				goto IL_01af;
				IL_0160:
				whileIterations = 0;
				goto IL_0162;
				IL_0154:
				base.Reader.MoveToContent();
				goto IL_0160;
				IL_0104:
				base.Reader.Skip();
				return ⴐ;
			}
			ReadEndElement();
			return ⴐ;
		}

		private ႥႥႨႳ.Ⴀ ႣႼ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0030, IL_004c, IL_0068, IL_0090, IL_00b8, IL_00c3, IL_00e9, IL_00fd, IL_011a, IL_0142, IL_016d, IL_0177, IL_0192, IL_01c0, IL_01e5, IL_020b, IL_0234, IL_025e, IL_0279, IL_0293, IL_02b7, IL_02e0
			if (Ⴓ)
			{
				goto IL_016f;
			}
			if ((482 + 482 * 482) % 2 == 0)
			{
				goto IL_00bd;
			}
			goto IL_02bc;
			IL_010d:
			ႥႥႨႳ.Ⴀ ⴀ = default(ႥႥႨႳ.Ⴀ);
			return ⴀ;
			IL_016f:
			object obj = GetXsiType();
			goto IL_0179;
			IL_0179:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			goto IL_017a;
			IL_017a:
			bool flag = default(bool);
			while (true)
			{
				flag = false;
				if (!Ⴍ)
				{
					break;
				}
				if (558 < 558 - 491)
				{
					continue;
				}
				goto IL_004e;
			}
			goto IL_01a7;
			IL_015e:
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (true)
			{
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (901 <= 901 - 104)
					{
						continue;
					}
					if (base.Reader.NodeType != 0)
					{
						if (base.Reader.NodeType == XmlNodeType.Element)
						{
							if (false)
							{
								goto IL_00eb;
							}
							UnknownNode(ⴀ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
							goto IL_011f;
						}
						goto IL_0210;
					}
					if (187 < 187 - 85)
					{
						break;
					}
				}
				ReadEndElement();
				return ⴀ;
				IL_0210:
				UnknownNode(ⴀ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
				if (186 <= 186 - 66)
				{
					continue;
				}
				goto IL_011f;
				IL_011f:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (78 > 78 - 15)
				{
					continue;
				}
				goto IL_0210;
			}
			goto IL_010d;
			IL_004e:
			flag = ReadNull();
			if (528 < 528 - 160)
			{
				goto IL_00bd;
			}
			goto IL_01a7;
			IL_01a7:
			if (!Ⴓ)
			{
				goto IL_00eb;
			}
			if (606 < 606 - 235)
			{
				goto IL_0152;
			}
			goto IL_0298;
			IL_00bd:
			obj = null;
			goto IL_0179;
			IL_00eb:
			if (flag)
			{
				if ((19 + 19 * 19) % 2 == 0)
				{
					goto IL_00c5;
				}
				goto IL_017a;
			}
			ⴀ = new ႥႥႨႳ.Ⴀ();
			while (base.Reader.MoveToNextAttribute())
			{
				if (IsXmlnsAttribute(base.Reader.Name))
				{
					continue;
				}
				if (704 > 704 - 626)
				{
					UnknownNode(ⴀ);
					if (751 > 751 - 33)
					{
						continue;
					}
					goto IL_015e;
				}
				goto IL_00bd;
			}
			if (988 <= 988 - 170)
			{
				goto IL_01a7;
			}
			base.Reader.MoveToElement();
			if (!base.Reader.IsEmptyElement)
			{
				goto IL_0147;
			}
			if (43 >= 43 - 2)
			{
				base.Reader.Skip();
				goto IL_010d;
			}
			goto IL_0298;
			IL_0298:
			if (xmlQualifiedName == null)
			{
				goto IL_00eb;
			}
			if (397 <= 397 - 292)
			{
				goto IL_016f;
			}
			goto IL_02bc;
			IL_0147:
			base.Reader.ReadStartElement();
			goto IL_0152;
			IL_02bc:
			if ((object)xmlQualifiedName.Name == Ⴐ)
			{
				if (130 <= 130 - 72)
				{
					goto IL_00c5;
				}
				if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
				{
					goto IL_00eb;
				}
				if (150 <= 150 - 65)
				{
					goto IL_0147;
				}
			}
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_0152:
			base.Reader.MoveToContent();
			goto IL_015e;
			IL_00c5:
			return null;
		}

		private ႥႥႨႳ.Ⴈ ႷႭ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_001f, IL_003a, IL_0068, IL_0089, IL_00a1, IL_00cc, IL_00e6, IL_010f, IL_0134, IL_013f, IL_0167, IL_019a, IL_01d1, IL_01ee, IL_0219, IL_0238, IL_0277, IL_029d, IL_02bb, IL_02e4, IL_0304, IL_0323, IL_0341, IL_0362, IL_038b
			object obj;
			if (Ⴓ)
			{
				obj = GetXsiType();
			}
			else
			{
				if (669 <= 669 - 107)
				{
					goto IL_0143;
				}
				obj = null;
			}
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			if (Ⴍ)
			{
				if (112 <= 112 - 69)
				{
					goto IL_0141;
				}
				flag = ReadNull();
				if (959 <= 959 - 34)
				{
					goto IL_019f;
				}
			}
			if (Ⴓ)
			{
				if (false)
				{
					goto IL_00eb;
				}
				if (!(xmlQualifiedName == null))
				{
					if (93 <= 93 - 12)
					{
					}
					if ((object)xmlQualifiedName.Name == ႠႠႠ)
					{
						if (909 < 909 - 149)
						{
							goto IL_0114;
						}
						if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
						{
							goto IL_02a2;
						}
						if (195 < 195 - 65)
						{
							goto IL_016c;
						}
					}
					throw CreateUnknownTypeException(xmlQualifiedName);
				}
			}
			goto IL_02a2;
			IL_0143:
			if (base.Reader.NodeType == XmlNodeType.EndElement)
			{
				goto IL_016c;
			}
			if (false)
			{
				goto IL_031a;
			}
			while (base.Reader.NodeType == XmlNodeType.None)
			{
				if (323 <= 323 - 36)
				{
					continue;
				}
				goto IL_016c;
			}
			goto IL_02e6;
			IL_0141:
			return null;
			IL_0114:
			if (base.Reader.MoveToNextAttribute())
			{
				goto IL_00a6;
			}
			if (563 <= 563 - 473)
			{
				goto IL_003c;
			}
			goto IL_019f;
			IL_003c:
			base.Reader.MoveToContent();
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (1000 >= 1000 - 932)
			{
				goto IL_0143;
			}
			goto IL_02e6;
			IL_01ab:
			if (!base.Reader.IsEmptyElement)
			{
				goto IL_00eb;
			}
			if (656 > 656 - 189)
			{
				base.Reader.Skip();
				goto IL_0015;
			}
			goto IL_0105;
			IL_0015:
			ႥႥႨႳ.Ⴈ ⴈ = default(ႥႥႨႳ.Ⴈ);
			return ⴈ;
			IL_019f:
			base.Reader.MoveToElement();
			goto IL_01ab;
			IL_0172:
			return ⴈ;
			IL_00eb:
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			whileIterations = 0;
			goto IL_0105;
			IL_0105:
			readerCount = base.ReaderCount;
			goto IL_0143;
			IL_00a6:
			if (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (214 > 214 - 175)
				{
					UnknownNode(ⴈ);
					if (false)
					{
						goto IL_0309;
					}
				}
			}
			goto IL_0114;
			IL_02e6:
			bool[] array = default(bool[]);
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (78 < 78 - 43)
				{
					goto IL_0015;
				}
				if (!array[0])
				{
					if (412 < 412 - 328)
					{
						goto IL_00a6;
					}
					if ((object)base.Reader.LocalName == ႠႤႰ)
					{
						if (435 < 435 - 203)
						{
							goto IL_0141;
						}
						if ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (78 < 78 - 50)
							{
								goto IL_00a6;
							}
							goto IL_0309;
						}
					}
				}
				UnknownNode(ⴈ, ႰႰႰ.Ⴍ.ႳႭႨ(863595065));
			}
			else
			{
				UnknownNode(ⴈ, ႰႰႰ.Ⴓ.ႳႭႨ(863595009));
				if (885 < 885 - 558)
				{
					goto IL_0172;
				}
			}
			goto IL_003c;
			IL_0309:
			ⴈ.Ⴐ = base.Reader.ReadElementString();
			goto IL_031a;
			IL_031a:
			array[0] = true;
			goto IL_003c;
			IL_016c:
			ReadEndElement();
			goto IL_0172;
			IL_02a2:
			if (!flag)
			{
				ⴈ = new ႥႥႨႳ.Ⴈ();
				array = new bool[1];
				goto IL_0114;
			}
			if (816 > 816 - 541)
			{
				goto IL_0141;
			}
			goto IL_01ab;
		}

		private ႥႥႨႳ.Ⴃ ႷႳ(bool Ⴍ, bool Ⴓ)
		{
			int num = 4;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႳ.Ⴃ ⴃ = default(ႥႥႨႳ.Ⴃ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 5 : 21);
					break;
				case 21:
					obj = null;
					goto IL_0083;
				case 5:
					obj = GetXsiType();
					goto IL_0083;
				case 6:
					flag = ReadNull();
					num = 7;
					break;
				case 7:
					num = ((!Ⴓ) ? 1 : 10);
					break;
				case 10:
					num = ((xmlQualifiedName == null) ? 1 : 0);
					break;
				case 0:
					num = (((object)xmlQualifiedName.Name != ႠႼ) ? 11 : 2);
					break;
				case 2:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 1 : 11);
					break;
				case 11:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 1:
					num = ((!flag) ? 15 : 23);
					break;
				case 23:
					return null;
				case 15:
					ⴃ = new ႥႥႨႳ.Ⴃ();
					num = 19;
					break;
				case 24:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 19 : 18);
					break;
				case 18:
					UnknownNode(ⴃ);
					goto case 19;
				case 19:
					num = (base.Reader.MoveToNextAttribute() ? 24 : 8);
					break;
				case 8:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 22 : 9);
					break;
				case 9:
					base.Reader.Skip();
					return ⴃ;
				case 22:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 14;
					break;
				case 12:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 20 : 3);
					break;
				case 3:
					UnknownNode(ⴃ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					num = 17;
					break;
				case 20:
					UnknownNode(ⴃ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					goto case 17;
				case 17:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 14;
				case 14:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 13 : 16);
					break;
				case 16:
					num = ((base.Reader.NodeType != 0) ? 12 : 13);
					break;
				case 13:
					{
						ReadEndElement();
						return ⴃ;
					}
					IL_0083:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 7 : 6);
					break;
				}
			}
		}

		private ႥႥႨႨ.Ⴀ ႳႨႣ(string Ⴍ)
		{
			int num = 2;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴍ) == null) ? 8 : 3);
					break;
				case 3:
					num = ((a == ႰႰႰ.Ⴐ.ႳႭႨ(863595246)) ? 10 : 9);
					break;
				case 9:
					num = ((a == ႰႰႰ.Ⴍ.ႳႭႨ(863595070)) ? 4 : 6);
					break;
				case 6:
					num = ((a == ႰႰႰ.Ⴗ.ႳႭႨ(863595068)) ? 1 : 0);
					break;
				case 0:
					num = ((a == ႰႰႰ.Ⴄ.ႳႭႨ(863595011)) ? 5 : 7);
					break;
				case 7:
					num = 8;
					break;
				case 10:
					return ႥႥႨႨ.Ⴀ.Ⴅ;
				case 4:
					return ႥႥႨႨ.Ⴀ.Ⴅ;
				case 1:
					return ႥႥႨႨ.Ⴀ.Ⴀ;
				case 5:
					return ႥႥႨႨ.Ⴀ.Ⴄ;
				case 8:
					throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႨ.Ⴀ));
				}
			}
		}

		private ႥႥႨႨ.Ⴈ ႷႨ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0031, IL_0050, IL_0069, IL_008d, IL_00af, IL_00ba, IL_00e9, IL_00fb, IL_0118, IL_0145, IL_016d, IL_0177, IL_018e, IL_01bf, IL_01e1, IL_0207, IL_0233, IL_0267, IL_0282, IL_029d, IL_02be, IL_02ea
			object obj;
			if (!Ⴓ)
			{
				if (155 <= 155 - 101)
				{
					goto IL_01c1;
				}
				obj = null;
			}
			else
			{
				obj = GetXsiType();
			}
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			goto IL_017c;
			IL_011d:
			base.Reader.MoveToContent();
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if ((855 + 855 * 855) % 2 == 0)
			{
				goto IL_00c1;
			}
			goto IL_0100;
			IL_0100:
			base.Reader.Skip();
			goto IL_010b;
			IL_00eb:
			if (flag)
			{
				if (136 > 136 - 52)
				{
					return null;
				}
				goto IL_00c1;
			}
			goto IL_010d;
			IL_0152:
			base.Reader.MoveToContent();
			whileIterations = 0;
			goto IL_0160;
			IL_017c:
			if (Ⴍ)
			{
				if (false)
				{
					goto IL_0160;
				}
				flag = ReadNull();
				if (20 < 20 - 19)
				{
					goto IL_020c;
				}
			}
			if (Ⴓ)
			{
				if (330 <= 330 - 197)
				{
					goto IL_011d;
				}
				if (!(xmlQualifiedName == null))
				{
					if (577 >= 577 - 284)
					{
						if ((object)xmlQualifiedName.Name == ႠႷႣ)
						{
							if (534 <= 534 - 421)
							{
								goto IL_0152;
							}
							if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
							{
								goto IL_00eb;
							}
							if (728 <= 728 - 268)
							{
								goto IL_011d;
							}
						}
						throw CreateUnknownTypeException(xmlQualifiedName);
					}
					goto IL_008f;
				}
			}
			goto IL_00eb;
			IL_010d:
			ႥႥႨႨ.Ⴈ ⴈ = new ႥႥႨႨ.Ⴈ();
			goto IL_008f;
			IL_008f:
			while (base.Reader.MoveToNextAttribute())
			{
				if (IsXmlnsAttribute(base.Reader.Name))
				{
					continue;
				}
				if ((82 + 82 * 82) % 2 == 0)
				{
					UnknownNode(ⴈ);
					if (526 > 526 - 301)
					{
						continue;
					}
					goto IL_010d;
				}
				goto IL_00c1;
			}
			if (395 < 395 - 112)
			{
				goto IL_017c;
			}
			goto IL_0238;
			IL_010b:
			return ⴈ;
			IL_020c:
			UnknownNode(ⴈ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
			if (510 <= 510 - 295)
			{
				goto IL_010b;
			}
			goto IL_011d;
			IL_019b:
			ReadEndElement();
			return ⴈ;
			IL_0160:
			readerCount = base.ReaderCount;
			goto IL_00c1;
			IL_00c1:
			if (base.Reader.NodeType == XmlNodeType.EndElement)
			{
				goto IL_019b;
			}
			if (883 >= 883 - 376)
			{
				goto IL_01c1;
			}
			goto IL_0238;
			IL_01c1:
			if (base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (715 <= 715 - 448)
					{
						goto IL_010d;
					}
					UnknownNode(ⴈ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					goto IL_011d;
				}
				goto IL_020c;
			}
			if (921 < 921 - 583)
			{
				goto IL_00c1;
			}
			goto IL_019b;
			IL_0238:
			while (true)
			{
				base.Reader.MoveToElement();
				if (!base.Reader.IsEmptyElement)
				{
					break;
				}
				if (607 < 607 - 445)
				{
					continue;
				}
				goto IL_0100;
			}
			base.Reader.ReadStartElement();
			goto IL_0152;
		}

		private ႥႥႨႨ.Ⴅ ႷႣ(bool Ⴍ, bool Ⴓ)
		{
			int num = 15;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႨ.Ⴅ ⴅ = default(ႥႥႨႨ.Ⴅ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 22 : 8);
					break;
				case 8:
					obj = null;
					goto IL_0084;
				case 22:
					obj = GetXsiType();
					goto IL_0084;
				case 12:
					flag = ReadNull();
					num = 20;
					break;
				case 20:
					num = ((!Ⴓ) ? 21 : 9);
					break;
				case 9:
					num = ((xmlQualifiedName == null) ? 21 : 3);
					break;
				case 3:
					num = (((object)xmlQualifiedName.Name != ႠႭႠ) ? 2 : 17);
					break;
				case 17:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 21 : 2);
					break;
				case 2:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 21:
					num = ((!flag) ? 10 : 19);
					break;
				case 19:
					return null;
				case 10:
					ⴅ = new ႥႥႨႨ.Ⴅ();
					num = 4;
					break;
				case 1:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 4 : 16);
					break;
				case 16:
					UnknownNode(ⴅ);
					goto case 4;
				case 4:
					num = (base.Reader.MoveToNextAttribute() ? 1 : 14);
					break;
				case 14:
					base.Reader.MoveToElement();
					num = (base.Reader.IsEmptyElement ? 13 : 0);
					break;
				case 13:
					base.Reader.Skip();
					return ⴅ;
				case 0:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 6;
					break;
				case 23:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 18 : 24);
					break;
				case 24:
					UnknownNode(ⴅ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					num = 5;
					break;
				case 18:
					UnknownNode(ⴅ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					goto case 5;
				case 5:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 6;
				case 6:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 11 : 7);
					break;
				case 7:
					num = ((base.Reader.NodeType != 0) ? 23 : 11);
					break;
				case 11:
					{
						ReadEndElement();
						return ⴅ;
					}
					IL_0084:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 20 : 12);
					break;
				}
			}
		}

		private ႥႥႨႨ.Ⴓ ႳႨႷ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_003f, IL_0063, IL_0084, IL_008f, IL_00a8, IL_00cf, IL_00f9
			while (true)
			{
				string a;
				if ((a = Ⴍ) != null)
				{
					if (621 <= 621 - 14)
					{
						continue;
					}
					while (true)
					{
						if (!(a == ႰႰႰ.Ⴍ.ႳႭႨ(863595163)))
						{
							if (156 <= 156 - 94)
							{
								continue;
							}
							if (!(a == ႰႰႰ.Ⴗ.ႳႭႨ(863595069)))
							{
								if (317 >= 317 - 79)
								{
									if (a == ႰႰႰ.Ⴄ.ႳႭႨ(863595008))
									{
										return ႥႥႨႨ.Ⴓ.Ⴐ;
									}
									if (967 < 967 - 509)
									{
										goto IL_0007;
									}
									if (!(a == ႰႰႰ.Ⴓ.ႳႭႨ(863595015)))
									{
										break;
									}
								}
								return ႥႥႨႨ.Ⴓ.Ⴓ;
							}
							return ႥႥႨႨ.Ⴓ.Ⴄ;
						}
						goto IL_0007;
						IL_0007:
						return ႥႥႨႨ.Ⴓ.Ⴀ;
					}
					if (655 <= 655 - 391 || a == ႰႰႰ.Ⴐ.ႳႭႨ(863595060))
					{
						break;
					}
					if (904 < 904 - 776)
					{
					}
				}
				throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႨ.Ⴓ));
			}
			return ႥႥႨႨ.Ⴓ.Ⴅ;
		}

		private ႥႥႨႰ.Ⴜ ႳႨႥ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_001c, IL_003f, IL_0058, IL_0079, IL_009d
			while (true)
			{
				string a;
				if ((a = Ⴍ) != null)
				{
					if (983 <= 983 - 426)
					{
						continue;
					}
					if (a == ႰႰႰ.Ⴄ.ႳႭႨ(863595165))
					{
						break;
					}
					if (262 < 262 - 103 || a == ႰႰႰ.Ⴓ.ႳႭႨ(863595014))
					{
						return ႥႥႨႰ.Ⴜ.Ⴄ;
					}
					if (731 <= 731 - 587)
					{
						continue;
					}
					if (!(a == ႰႰႰ.Ⴐ.ႳႭႨ(863595063)))
					{
						if ((470 + 470 * 470) % 2 == 0)
						{
							goto IL_0004;
						}
					}
					return ႥႥႨႰ.Ⴜ.Ⴐ;
				}
				goto IL_0004;
				IL_0004:
				throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႨႰ.Ⴜ));
			}
			return ႥႥႨႰ.Ⴜ.Ⴀ;
		}

		private unsafe ႥႥႨႰ.Ⴍ ႷႷ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0038, IL_005c, IL_00aa, IL_00b7, IL_00da, IL_00fc, IL_0123, IL_0145, IL_016f, IL_0192, IL_01b6, IL_01e6, IL_0209, IL_0223, IL_0247, IL_0271, IL_0290, IL_02b3, IL_02e3, IL_02fe, IL_032e, IL_035f, IL_038f, IL_03e4, IL_0404, IL_040f, IL_0439, IL_046a, IL_049a, IL_04cc, IL_04fa, IL_0520, IL_053b, IL_055f, IL_058f, IL_05aa, IL_05c8, IL_05f0, IL_061c, IL_063c, IL_0654, IL_0675, IL_06a6, IL_06d6, IL_06fd, IL_072e, IL_075e, IL_078c, IL_07bc, IL_07da, IL_07fb, IL_081d, IL_0840, IL_086b, IL_0885, IL_08af, IL_08da, IL_090a, IL_092b, IL_0955, IL_0978, IL_099a, IL_09b7, IL_09e4, IL_0a15, IL_0a36, IL_0a6d, IL_0a96
			object obj;
			if (Ⴓ)
			{
				obj = GetXsiType();
			}
			else
			{
				if (972 <= 972 - 792)
				{
					goto IL_0017;
				}
				obj = null;
			}
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			if (Ⴍ)
			{
				if ((351 + 351 * 351) % 2 == 0)
				{
					flag = ReadNull();
					if (703 < 703 - 345)
					{
						goto IL_0656;
					}
				}
			}
			if (Ⴓ)
			{
				if (820 < 820 - 282)
				{
					goto IL_0621;
				}
				goto IL_06db;
			}
			goto IL_07be;
			IL_09bc:
			ႥႥႨႰ.Ⴍ ⴍ = default(ႥႥႨႰ.Ⴍ);
			bool[] array = default(bool[]);
			if ((object)base.Reader.NamespaceURI == ႠႰႥ)
			{
				if ((337 + 337 * 337) % 2 == 0)
				{
					ⴍ.Ⴄ = XmlConvert.ToInt64(base.Reader.ReadElementString());
					array[7] = true;
					goto IL_01bb;
				}
				goto IL_0540;
			}
			goto IL_099f;
			IL_05cd:
			if ((object)base.Reader.NamespaceURI != ႠႰႥ)
			{
				goto IL_01eb;
			}
			if (109 >= 109 - 95)
			{
				ⴍ.Ⴓ = XmlConvert.ToInt32(base.Reader.ReadElementString());
				goto IL_0053;
			}
			goto IL_05f5;
			IL_05f5:
			UnknownNode(ⴍ, ႰႰႰ.Ⴄ.ႳႭႨ(863595009));
			if (990 > 990 - 835)
			{
				goto IL_01bb;
			}
			goto IL_0564;
			IL_0109:
			if (!array[11])
			{
				if (false)
				{
					goto IL_097d;
				}
				if ((object)base.Reader.LocalName == ႠႤႤ)
				{
					if (false)
					{
						goto IL_020e;
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (false)
						{
							goto IL_095a;
						}
						ⴍ.Ⴅ = (int)ႳႨႰ(base.Reader.ReadElementString());
						array[11] = true;
						goto IL_01bb;
					}
				}
			}
			goto IL_0525;
			IL_0228:
			*(int*)(&ⴍ.Ⴄ) = XmlConvert.ToInt32(base.Reader.ReadElementString());
			array[2] = true;
			goto IL_01bb;
			IL_0733:
			if ((object)base.Reader.LocalName == ႨႠ)
			{
				if (false)
				{
					goto IL_0107;
				}
				if ((object)base.Reader.NamespaceURI == ႠႰႥ)
				{
					if (false)
					{
						goto IL_04fc;
					}
					goto IL_0656;
				}
			}
			goto IL_0621;
			IL_099f:
			if (!array[8])
			{
				if (100 < 100 - 84)
				{
					goto IL_014a;
				}
				if ((object)base.Reader.LocalName == Ⴀ)
				{
					if ((153 + 153 * 153) % 2 == 0)
					{
						goto IL_04d1;
					}
					goto IL_0733;
				}
			}
			goto IL_0197;
			IL_0656:
			*(long*)(&ⴍ.Ⴀ) = XmlConvert.ToInt64(base.Reader.ReadElementString());
			array[3] = true;
			goto IL_01bb;
			IL_07be:
			if (!flag)
			{
				ⴍ = new ႥႥႨႰ.Ⴍ();
			}
			else if (913 > 913 - 326)
			{
				return null;
			}
			array = new bool[12];
			goto IL_024c;
			IL_0053:
			array[6] = true;
			goto IL_01bb;
			IL_0197:
			if (!array[9])
			{
				if (728 <= 728 - 516)
				{
					goto IL_0053;
				}
				if ((object)base.Reader.LocalName == this.m_ႷႠ)
				{
					if (13 <= 13 - 6)
					{
						goto IL_03ae;
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (140 > 140 - 44)
						{
							goto IL_0017;
						}
						goto IL_0845;
					}
				}
			}
			if (array[10])
			{
				goto IL_0109;
			}
			if (89 < 89 - 5)
			{
				goto IL_06db;
			}
			goto IL_0845;
			IL_0525:
			UnknownNode(ⴍ, ႰႰႰ.Ⴐ.ႳႭႨ(863595061));
			goto IL_01bb;
			IL_0621:
			if (!array[4])
			{
				if (314 < 314 - 76)
				{
					goto IL_043e;
				}
				if ((object)base.Reader.LocalName == ႠႰ)
				{
					if (468 <= 468 - 122)
					{
						goto IL_020e;
					}
					goto IL_08e1;
				}
			}
			goto IL_0295;
			IL_024c:
			if (!base.Reader.MoveToNextAttribute())
			{
				if ((491 + 491 * 491) % 2 == 0)
				{
					goto IL_0a3b;
				}
			}
			goto IL_0564;
			IL_08e1:
			if ((object)base.Reader.NamespaceURI == ႠႰႥ)
			{
				if (179 > 179 - 75)
				{
					ⴍ.Ⴈ = ToByteArrayBase64(isNull: false);
					array[4] = true;
					goto IL_01bb;
				}
				goto IL_020e;
			}
			goto IL_0295;
			IL_0564:
			if (IsXmlnsAttribute(base.Reader.Name))
			{
				goto IL_024c;
			}
			if ((490 + 490 * 490) % 2 == 0)
			{
				goto IL_00df;
			}
			goto IL_09bc;
			IL_013e:
			array[10] = true;
			goto IL_01bb;
			IL_00df:
			UnknownNode(ⴍ);
			if (382 <= 382 - 128)
			{
				goto IL_01bb;
			}
			goto IL_024c;
			IL_01bb:
			base.Reader.MoveToContent();
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if ((404 + 404 * 404) % 2 == 0)
			{
				goto IL_014a;
			}
			goto IL_02f5;
			IL_014a:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (638 < 638 - 508)
				{
					goto IL_0276;
				}
				if (base.Reader.NodeType != 0)
				{
					while (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (415 < 415 - 167)
						{
							continue;
						}
						goto IL_095a;
					}
					goto IL_05f5;
				}
				if (false)
				{
					goto IL_01bb;
				}
			}
			goto IL_0101;
			IL_06db:
			if (!(xmlQualifiedName == null))
			{
				if (324 <= 324 - 195)
				{
					goto IL_04d1;
				}
				goto IL_04fc;
			}
			goto IL_07be;
			IL_0295:
			if (!array[5])
			{
				if (724 <= 724 - 437)
				{
					goto IL_0656;
				}
				if ((object)base.Reader.LocalName == this.m_ႰႷ)
				{
					if ((38 + 38 * 38) % 2 == 0)
					{
						goto IL_043e;
					}
					goto IL_0a3b;
				}
			}
			goto IL_020e;
			IL_0276:
			ⴍ.Ⴀ = base.Reader.ReadElementString();
			array[8] = true;
			goto IL_01bb;
			IL_03ae:
			readerCount = base.ReaderCount;
			goto IL_014a;
			IL_0107:
			return ⴍ;
			IL_095a:
			if (!array[0])
			{
				if (487 <= 487 - 226)
				{
					goto IL_0228;
				}
				if ((object)base.Reader.LocalName == this.m_ႷႷ)
				{
					if (false)
					{
						goto IL_0017;
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (386 > 386 - 154)
						{
							*(byte[]*)(&ⴍ.Ⴐ) = ToByteArrayBase64(isNull: false);
							goto IL_02f5;
						}
						goto IL_0128;
					}
				}
			}
			if (!array[1])
			{
				if (441 < 441 - 56)
				{
					goto IL_0197;
				}
				if ((object)base.Reader.LocalName == ႠႣႼ)
				{
					if (56 > 56 - 33)
					{
						if ((object)base.Reader.NamespaceURI != ႠႰႥ)
						{
							goto IL_097d;
						}
						if (false)
						{
							goto IL_0101;
						}
						*(int*)(&ⴍ.Ⴀ) = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[1] = true;
					}
					goto IL_01bb;
				}
			}
			goto IL_097d;
			IL_0a3b:
			base.Reader.MoveToElement();
			if (!base.Reader.IsEmptyElement)
			{
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				whileIterations = 0;
				goto IL_03ae;
			}
			if (804 > 804 - 553)
			{
				goto IL_000a;
			}
			goto IL_0525;
			IL_0101:
			ReadEndElement();
			goto IL_0107;
			IL_000a:
			base.Reader.Skip();
			return ⴍ;
			IL_0017:
			ⴍ.Ⴅ = (int)ႳႨႠ(base.Reader.ReadElementString());
			array[9] = true;
			goto IL_01bb;
			IL_043e:
			if ((object)base.Reader.NamespaceURI != ႠႰႥ)
			{
				goto IL_020e;
			}
			if (301 <= 301 - 148)
			{
				goto IL_01bb;
			}
			goto IL_0540;
			IL_0128:
			ⴍ.Ⴅ = XmlConvert.ToInt32(base.Reader.ReadElementString());
			goto IL_013e;
			IL_02f5:
			array[0] = true;
			goto IL_01bb;
			IL_04d1:
			if ((object)base.Reader.NamespaceURI != ႠႰႥ)
			{
				goto IL_0197;
			}
			if (783 >= 783 - 492)
			{
				goto IL_0276;
			}
			goto IL_0540;
			IL_020e:
			if (array[6])
			{
				goto IL_01eb;
			}
			if (37 <= 37 - 31)
			{
				goto IL_013e;
			}
			goto IL_06ab;
			IL_0540:
			ⴍ.Ⴐ = XmlConvert.ToInt32(base.Reader.ReadElementString());
			array[5] = true;
			goto IL_01bb;
			IL_06ab:
			if ((object)base.Reader.LocalName != ႠႣႷ)
			{
				goto IL_01eb;
			}
			if ((149 + 149 * 149) % 2 == 0)
			{
				goto IL_05cd;
			}
			goto IL_07be;
			IL_0845:
			if ((object)base.Reader.LocalName == ႠႷႭ)
			{
				if (99 <= 99 - 20)
				{
					goto IL_0733;
				}
				if ((object)base.Reader.NamespaceURI == ႠႰႥ)
				{
					if (169 > 169 - 156)
					{
						goto IL_0128;
					}
					goto IL_095a;
				}
			}
			goto IL_0109;
			IL_01eb:
			if (!array[7])
			{
				if (569 <= 569 - 457)
				{
					goto IL_01bb;
				}
				if ((object)base.Reader.LocalName == ႠႠႣ)
				{
					if (false)
					{
						goto IL_0540;
					}
					goto IL_09bc;
				}
			}
			goto IL_099f;
			IL_04fc:
			if ((object)xmlQualifiedName.Name == Ⴅ)
			{
				if (883 < 883 - 136)
				{
					goto IL_05cd;
				}
				if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
				{
					goto IL_07be;
				}
				if (90 <= 90 - 22)
				{
					goto IL_00df;
				}
			}
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_097d:
			if (!array[2])
			{
				if (false)
				{
					goto IL_07be;
				}
				if ((object)base.Reader.LocalName == ႭႳ)
				{
					if (349 < 349 - 129)
					{
						goto IL_000a;
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (930 >= 930 - 783)
						{
							goto IL_0228;
						}
						goto IL_08e1;
					}
				}
			}
			if (array[3])
			{
				goto IL_0621;
			}
			if (286 <= 286 - 252)
			{
				goto IL_06ab;
			}
			goto IL_0733;
		}

		private ႥႥႼ.Ⴐ ႳႨႰ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_001c, IL_003f, IL_0052, IL_0073, IL_009a
			string a;
			if ((a = Ⴍ) != null)
			{
				if (28 >= 28 - 9)
				{
				}
				if (a == ႰႰႰ.Ⴗ.ႳႭႨ(863595244))
				{
					return ႥႥႼ.Ⴐ.Ⴐ;
				}
				if (330 > 330 - 92)
				{
					if (a == ႰႰႰ.Ⴄ.ႳႭႨ(863595241))
					{
						return ႥႥႼ.Ⴐ.Ⴈ;
					}
					if (748 <= 748 - 347 || a == ႰႰႰ.Ⴓ.ႳႭႨ(863595244))
					{
						return ႥႥႼ.Ⴐ.Ⴓ;
					}
					if ((342 + 342 * 342) % 2 == 0)
					{
					}
				}
			}
			throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႼ.Ⴐ));
		}

		private ႥႥႼ.Ⴓ ႳႨႠ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_0133, IL_014f, IL_017c, IL_01a4, IL_01f7, IL_0201
			string key;
			if ((key = Ⴍ) == null)
			{
				goto IL_0010;
			}
			if (917 > 917 - 510)
			{
				if (<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600015f-1 == null)
				{
					if (5 >= 5 - 2)
					{
						<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600015f-1 = new Dictionary<string, int>(14)
						{
							{
								ႰႰႰ.Ⴄ.ႳႭႨ(863595165),
								0
							},
							{
								ႰႰႰ.Ⴗ.ႳႭႨ(863595010),
								1
							},
							{
								ႰႰႰ.Ⴍ.ႳႭႨ(863595246),
								2
							},
							{
								ႰႰႰ.Ⴐ.ႳႭႨ(863595066),
								3
							},
							{
								ႰႰႰ.Ⴓ.ႳႭႨ(863595012),
								4
							},
							{
								ႰႰႰ.Ⴄ.ႳႭႨ(863595246),
								5
							},
							{
								ႰႰႰ.Ⴗ.ႳႭႨ(863595011),
								6
							},
							{
								ႰႰႰ.Ⴍ.ႳႭႨ(863595071),
								7
							},
							{
								ႰႰႰ.Ⴐ.ႳႭႨ(863595246),
								8
							},
							{
								ႰႰႰ.Ⴓ.ႳႭႨ(863595013),
								9
							},
							{
								ႰႰႰ.Ⴐ.ႳႭႨ(863595067),
								10
							},
							{
								ႰႰႰ.Ⴍ.ႳႭႨ(863595068),
								11
							},
							{
								ႰႰႰ.Ⴗ.ႳႭႨ(863595008),
								12
							},
							{
								ႰႰႰ.Ⴄ.ႳႭႨ(863595014),
								13
							}
						};
						if (429 > 429 - 152)
						{
							goto IL_0155;
						}
					}
					goto IL_0151;
				}
				goto IL_0155;
			}
			goto IL_0186;
			IL_0010:
			throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႼ.Ⴓ));
			IL_0186:
			return ႥႥႼ.Ⴓ.ႨႰ;
			IL_01e4:
			if (632 > 632 - 131)
			{
			}
			goto IL_0010;
			IL_0151:
			return ႥႥႼ.Ⴓ.Ⴄ;
			IL_0155:
			if (<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x600015f-1.TryGetValue(key, out int value))
			{
				if (592 > 592 - 365)
				{
					switch (value)
					{
					case 3:
						return ႥႥႼ.Ⴓ.Ⴓ;
					case 4:
						return ႥႥႼ.Ⴓ.Ⴅ;
					case 1:
						break;
					case 12:
						return ႥႥႼ.Ⴓ.ႨႳ;
					case 2:
						return ႥႥႼ.Ⴓ.Ⴓ;
					case 5:
						return ႥႥႼ.Ⴓ.Ⴀ;
					case 11:
						return ႥႥႼ.Ⴓ.ႨႨ;
					case 8:
						goto IL_0151;
					case 7:
						return ႥႥႼ.Ⴓ.Ⴍ;
					case 13:
						return ႥႥႼ.Ⴓ.ႨႳ;
					case 0:
						return ႥႥႼ.Ⴓ.Ⴐ;
					case 10:
						goto IL_0186;
					case 6:
						return ႥႥႼ.Ⴓ.Ⴃ;
					case 9:
						return ႥႥႼ.Ⴓ.Ⴄ;
					default:
						goto IL_01e4;
					}
				}
				return ႥႥႼ.Ⴓ.Ⴐ;
			}
			goto IL_0010;
		}

		private FileUtils ႷႥ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_002e, IL_004a, IL_0069, IL_0090, IL_00b8, IL_00c3, IL_00ec, IL_0104, IL_011e, IL_014c, IL_0177, IL_0184, IL_01a5, IL_01d5, IL_01fa, IL_0244, IL_0278, IL_0293, IL_02b1, IL_02d1, IL_02fa
			object obj;
			if (!Ⴓ)
			{
				if (291 < 291 - 173)
				{
					goto IL_02b6;
				}
				obj = null;
			}
			else
			{
				obj = GetXsiType();
			}
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			if (Ⴍ)
			{
				if (731 < 731 - 389)
				{
					goto IL_0113;
				}
				flag = ReadNull();
				if (675 < 675 - 34)
				{
					goto IL_0120;
				}
			}
			if (!Ⴓ)
			{
				goto IL_00f1;
			}
			if (false)
			{
				goto IL_012c;
			}
			goto IL_02b6;
			IL_006e:
			while (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (false)
				{
					continue;
				}
				goto IL_0033;
			}
			goto IL_0095;
			IL_0033:
			FileUtils fileUtils = default(FileUtils);
			UnknownNode(fileUtils);
			if (274 > 274 - 78)
			{
				goto IL_0095;
			}
			goto IL_0255;
			IL_02d6:
			if ((object)xmlQualifiedName.Name == this.m_ႠႨ)
			{
				if (622 <= 622 - 109)
				{
					goto IL_0151;
				}
				if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
				{
					goto IL_00f1;
				}
				if (610 <= 610 - 433)
				{
					goto IL_01b8;
				}
			}
			goto IL_01aa;
			IL_01b8:
			return fileUtils;
			IL_0120:
			base.Reader.MoveToContent();
			goto IL_012c;
			IL_01b2:
			ReadEndElement();
			goto IL_01b8;
			IL_0255:
			if (base.Reader.IsEmptyElement)
			{
				if (882 > 882 - 235)
				{
					base.Reader.Skip();
					return fileUtils;
				}
				goto IL_0120;
			}
			goto IL_0151;
			IL_0151:
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			goto IL_00c7;
			IL_02b6:
			if (xmlQualifiedName == null)
			{
				goto IL_00f1;
			}
			if (false)
			{
				goto IL_006e;
			}
			goto IL_02d6;
			IL_00c7:
			while (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (147 < 147 - 78)
				{
					goto IL_0033;
				}
				while (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						goto IL_0018;
					}
					UnknownNode(fileUtils, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					if (624 < 624 - 247)
					{
						continue;
					}
					goto IL_0120;
				}
				goto IL_01e7;
				IL_0018:
				if (701 < 701 - 555)
				{
					continue;
				}
				UnknownNode(fileUtils, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
				goto IL_0120;
			}
			goto IL_01b2;
			IL_00f1:
			if (!flag)
			{
				goto IL_0113;
			}
			if (172 > 172 - 47)
			{
				return null;
			}
			goto IL_01aa;
			IL_01aa:
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_012c:
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (921 >= 921 - 859)
			{
				goto IL_00c7;
			}
			goto IL_02d6;
			IL_0113:
			fileUtils = new FileUtils();
			goto IL_0095;
			IL_0095:
			if (base.Reader.MoveToNextAttribute())
			{
				goto IL_006e;
			}
			if (932 <= 932 - 751)
			{
				goto IL_01b8;
			}
			base.Reader.MoveToElement();
			goto IL_0255;
			IL_01e7:
			if (927 <= 927 - 276)
			{
				goto IL_012c;
			}
			goto IL_01b2;
		}

		private ႥႥႨႰ.Ⴈ ႷႰ(bool Ⴍ, bool Ⴓ)
		{
			int num = 23;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႰ.Ⴈ ⴈ = default(ႥႥႨႰ.Ⴈ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 24 : 7);
					break;
				case 7:
					obj = null;
					goto IL_0084;
				case 24:
					obj = GetXsiType();
					goto IL_0084;
				case 1:
					flag = ReadNull();
					num = 9;
					break;
				case 9:
					num = ((!Ⴓ) ? 4 : 19);
					break;
				case 19:
					num = ((xmlQualifiedName == null) ? 4 : 17);
					break;
				case 17:
					num = (((object)xmlQualifiedName.Name == this.m_ႰႤ) ? 3 : 0);
					break;
				case 3:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 4 : 0);
					break;
				case 0:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 4:
					num = ((!flag) ? 12 : 8);
					break;
				case 8:
					return null;
				case 12:
					ⴈ = new ႥႥႨႰ.Ⴈ();
					num = 14;
					break;
				case 21:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 14 : 18);
					break;
				case 18:
					UnknownNode(ⴈ);
					goto case 14;
				case 14:
					num = (base.Reader.MoveToNextAttribute() ? 21 : 16);
					break;
				case 16:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 22 : 6);
					break;
				case 6:
					base.Reader.Skip();
					return ⴈ;
				case 22:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 20;
					break;
				case 5:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 2 : 10);
					break;
				case 10:
					UnknownNode(ⴈ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					num = 11;
					break;
				case 2:
					UnknownNode(ⴈ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					goto case 11;
				case 11:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 20;
				case 20:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 13 : 15);
					break;
				case 15:
					num = ((base.Reader.NodeType != 0) ? 5 : 13);
					break;
				case 13:
					{
						ReadEndElement();
						return ⴈ;
					}
					IL_0084:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = (Ⴍ ? 1 : 9);
					break;
				}
			}
		}

		private ႥႥႨႰ.Ⴄ ႷႠ(bool Ⴍ, bool Ⴓ)
		{
			int num = 13;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႰ.Ⴄ ⴄ = default(ႥႥႨႰ.Ⴄ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 15 : 23);
					break;
				case 23:
					obj = null;
					goto IL_0085;
				case 15:
					obj = GetXsiType();
					goto IL_0085;
				case 12:
					flag = ReadNull();
					num = 22;
					break;
				case 22:
					num = ((!Ⴓ) ? 4 : 9);
					break;
				case 9:
					num = ((xmlQualifiedName == null) ? 4 : 14);
					break;
				case 14:
					num = (((object)xmlQualifiedName.Name != ႠႨႣ) ? 2 : 10);
					break;
				case 10:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 4 : 2);
					break;
				case 2:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 4:
					num = (flag ? 5 : 0);
					break;
				case 5:
					return null;
				case 0:
					ⴄ = new ႥႥႨႰ.Ⴄ();
					num = 17;
					break;
				case 8:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 17 : 16);
					break;
				case 16:
					UnknownNode(ⴄ);
					goto case 17;
				case 17:
					num = (base.Reader.MoveToNextAttribute() ? 8 : 7);
					break;
				case 7:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 18 : 6);
					break;
				case 6:
					base.Reader.Skip();
					return ⴄ;
				case 18:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 3;
					break;
				case 21:
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 24);
					break;
				case 1:
					UnknownNode(ⴄ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					num = 19;
					break;
				case 24:
					UnknownNode(ⴄ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					goto case 19;
				case 19:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 3;
				case 3:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 11 : 20);
					break;
				case 20:
					num = ((base.Reader.NodeType != 0) ? 21 : 11);
					break;
				case 11:
					{
						ReadEndElement();
						return ⴄ;
					}
					IL_0085:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 22 : 12);
					break;
				}
			}
		}

		private ႥႥႨႰ.Ⴗ ႷႤ(bool Ⴍ, bool Ⴓ)
		{
			int num = 21;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႨႰ.Ⴗ ⴗ = default(ႥႥႨႰ.Ⴗ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 16 : 4);
					break;
				case 4:
					obj = null;
					goto IL_0084;
				case 16:
					obj = GetXsiType();
					goto IL_0084;
				case 6:
					flag = ReadNull();
					num = 14;
					break;
				case 14:
					num = ((!Ⴓ) ? 5 : 10);
					break;
				case 10:
					num = ((xmlQualifiedName == null) ? 5 : 24);
					break;
				case 24:
					num = (((object)xmlQualifiedName.Name != ႥႥ) ? 1 : 11);
					break;
				case 11:
					num = (((object)xmlQualifiedName.Namespace != ႠႰႥ) ? 1 : 5);
					break;
				case 1:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 5:
					num = ((!flag) ? 20 : 12);
					break;
				case 12:
					return null;
				case 20:
					ⴗ = new ႥႥႨႰ.Ⴗ();
					num = 7;
					break;
				case 0:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 7 : 2);
					break;
				case 2:
					UnknownNode(ⴗ);
					goto case 7;
				case 7:
					num = ((!base.Reader.MoveToNextAttribute()) ? 18 : 0);
					break;
				case 18:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 15 : 13);
					break;
				case 13:
					base.Reader.Skip();
					return ⴗ;
				case 15:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 23;
					break;
				case 9:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 3 : 8);
					break;
				case 8:
					UnknownNode(ⴗ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					num = 22;
					break;
				case 3:
					UnknownNode(ⴗ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					goto case 22;
				case 22:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 23;
				case 23:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 17 : 19);
					break;
				case 19:
					num = ((base.Reader.NodeType != 0) ? 9 : 17);
					break;
				case 17:
					{
						ReadEndElement();
						return ⴗ;
					}
					IL_0084:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 14 : 6);
					break;
				}
			}
		}

		private ႥႥႼ.Ⴀ ႳႨႤ(string Ⴀ)
		{
			//Discarded unreachable code: IL_0002, IL_002c, IL_0042, IL_0078
			string a;
			if ((a = Ⴀ) != null)
			{
				if (false)
				{
				}
				do
				{
					if (a == ႰႰႰ.Ⴓ.ႳႭႨ(863595018))
					{
						return ႥႥႼ.Ⴀ.Ⴐ;
					}
					if (912 <= 912 - 248)
					{
					}
					if (a == ႰႰႰ.Ⴐ.ႳႭႨ(863595064))
					{
						return ႥႥႼ.Ⴀ.Ⴈ;
					}
				}
				while (691 <= 691 - 577);
			}
			throw CreateUnknownConstantException(Ⴀ, typeof(ႥႥႼ.Ⴀ));
		}

		private ႥႥႼ.Ⴈ ႳႨႼ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_004f, IL_0053, IL_0070, IL_00a2, IL_0127, IL_0155
			while (true)
			{
				string key;
				if ((key = Ⴍ) != null)
				{
					if (829 >= 829 - 744)
					{
						if (<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000165-1 == null)
						{
							if (false)
							{
								break;
							}
							<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000165-1 = new Dictionary<string, int>(6)
							{
								{
									ႰႰႰ.Ⴗ.ႳႭႨ(863595253),
									0
								},
								{
									ႰႰႰ.Ⴍ.ႳႭႨ(863595069),
									1
								},
								{
									ႰႰႰ.Ⴐ.ႳႭႨ(863595065),
									2
								},
								{
									ႰႰႰ.Ⴓ.ႳႭႨ(863595019),
									3
								},
								{
									ႰႰႰ.Ⴄ.ႳႭႨ(863595015),
									4
								},
								{
									ႰႰႰ.Ⴗ.ႳႭႨ(863595258),
									5
								}
							};
							if (128 < 128 - 86)
							{
								continue;
							}
						}
						if (!<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000165-1.TryGetValue(key, out int value))
						{
							goto IL_0016;
						}
						if (false)
						{
							goto IL_0010;
						}
						switch (value)
						{
						case 1:
							break;
						case 4:
							goto IL_0010;
						default:
							goto IL_0046;
						case 5:
							return ႥႥႼ.Ⴈ.Ⴀ;
						case 3:
							return ႥႥႼ.Ⴈ.Ⴗ;
						case 0:
							return ႥႥႼ.Ⴈ.Ⴐ;
						case 2:
							goto end_IL_008a;
						}
					}
					return ႥႥႼ.Ⴈ.Ⴈ;
				}
				goto IL_0016;
				IL_0010:
				return ႥႥႼ.Ⴈ.Ⴅ;
				IL_0016:
				throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႼ.Ⴈ));
				IL_0046:
				if (53 < 53 - 5)
				{
				}
				goto IL_0016;
				continue;
				end_IL_008a:
				break;
			}
			return ႥႥႼ.Ⴈ.Ⴓ;
		}

		private ႥႥႤ.Ⴗ.ႥႤ ႳႣႭ(string Ⴍ)
		{
			int num = 6;
			string key = default(string);
			int value = default(int);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((key = Ⴍ) == null) ? 8 : 10);
					break;
				case 10:
					num = ((<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000166-1 == null) ? 1 : 13);
					break;
				case 1:
					<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000166-1 = new Dictionary<string, int>(10)
					{
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595009),
							0
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595010),
							1
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595070),
							2
						},
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595016),
							3
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595248),
							4
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595015),
							5
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595011),
							6
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595068),
							7
						},
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595022),
							8
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595249),
							9
						}
					};
					num = 13;
					break;
				case 13:
					num = ((!<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000166-1.TryGetValue(key, out value)) ? 8 : 0);
					break;
				case 0:
				{
					int num2;
					switch (value)
					{
					default:
						num2 = 4;
						break;
					case 0:
						num2 = 14;
						break;
					case 1:
						num2 = 2;
						break;
					case 2:
						num2 = 11;
						break;
					case 3:
						num2 = 9;
						break;
					case 4:
						num2 = 5;
						break;
					case 5:
						num2 = 12;
						break;
					case 6:
						num2 = 3;
						break;
					case 7:
						num2 = 7;
						break;
					case 8:
						num2 = 16;
						break;
					case 9:
						num2 = 15;
						break;
					}
					num = num2;
					break;
				}
				case 4:
					num = 8;
					break;
				case 14:
					return ႥႥႤ.Ⴗ.ႥႤ.Ⴐ;
				case 2:
					return ႥႥႤ.Ⴗ.ႥႤ.Ⴈ;
				case 11:
					return ႥႥႤ.Ⴗ.ႥႤ.Ⴓ;
				case 9:
					return ႥႥႤ.Ⴗ.ႥႤ.Ⴗ;
				case 5:
					return ႥႥႤ.Ⴗ.ႥႤ.Ⴅ;
				case 12:
					return ႥႥႤ.Ⴗ.ႥႤ.Ⴀ;
				case 3:
					return ႥႥႤ.Ⴗ.ႥႤ.Ⴃ;
				case 7:
					return ႥႥႤ.Ⴗ.ႥႤ.Ⴍ;
				case 16:
					return ႥႥႤ.Ⴗ.ႥႤ.Ⴄ;
				case 15:
					return ႥႥႤ.Ⴗ.ႥႤ.Ⴜ;
				case 8:
					throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႤ.Ⴗ.ႥႤ));
				}
			}
		}

		private ႥႥႤ.Ⴅ.ႥႭ ႳႣႳ(string Ⴍ)
		{
			int num = 20;
			string key = default(string);
			int value = default(int);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((key = Ⴍ) == null) ? 18 : 21);
					break;
				case 21:
					num = ((<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000167-1 != null) ? 15 : 5);
					break;
				case 5:
					<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000167-1 = new Dictionary<string, int>(21)
					{
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595255),
							0
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595012),
							1
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595014),
							2
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595254),
							3
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595071),
							4
						},
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595017),
							5
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595018),
							6
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595012),
							7
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595252),
							8
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595069),
							9
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595008),
							10
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595013),
							11
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595019),
							12
						},
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595023),
							13
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595010),
							14
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595009),
							15
						},
						{
							ႰႰႰ.Ⴗ.ႳႭႨ(863595018),
							16
						},
						{
							ႰႰႰ.Ⴄ.ႳႭႨ(863595016),
							17
						},
						{
							ႰႰႰ.Ⴓ.ႳႭႨ(863595020),
							18
						},
						{
							ႰႰႰ.Ⴐ.ႳႭႨ(863595011),
							19
						},
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595014),
							20
						}
					};
					num = 15;
					break;
				case 15:
					num = ((!<PrivateImplementationDetails>{DD171B6A-C7EE-4FB5-A2BC-CD5C49D2326F}.$$method0x6000167-1.TryGetValue(key, out value)) ? 18 : 12);
					break;
				case 12:
				{
					int num2;
					switch (value)
					{
					default:
						num2 = 25;
						break;
					case 0:
						num2 = 27;
						break;
					case 1:
						num2 = 8;
						break;
					case 2:
						num2 = 2;
						break;
					case 3:
						num2 = 22;
						break;
					case 4:
						num2 = 14;
						break;
					case 5:
						num2 = 26;
						break;
					case 6:
						num2 = 6;
						break;
					case 7:
						num2 = 1;
						break;
					case 8:
						num2 = 3;
						break;
					case 9:
						num2 = 17;
						break;
					case 10:
						num2 = 13;
						break;
					case 11:
						num2 = 24;
						break;
					case 12:
						num2 = 7;
						break;
					case 13:
						num2 = 11;
						break;
					case 14:
						num2 = 19;
						break;
					case 15:
						num2 = 16;
						break;
					case 16:
						num2 = 23;
						break;
					case 17:
						num2 = 0;
						break;
					case 18:
						num2 = 9;
						break;
					case 19:
						num2 = 10;
						break;
					case 20:
						num2 = 4;
						break;
					}
					num = num2;
					break;
				}
				case 25:
					num = 18;
					break;
				case 27:
					return ႥႥႤ.Ⴅ.ႥႭ.Ⴐ;
				case 8:
					return ႥႥႤ.Ⴅ.ႥႭ.Ⴈ;
				case 2:
					return ႥႥႤ.Ⴅ.ႥႭ.Ⴓ;
				case 22:
					return ႥႥႤ.Ⴅ.ႥႭ.Ⴗ;
				case 14:
					return ႥႥႤ.Ⴅ.ႥႭ.Ⴅ;
				case 26:
					return ႥႥႤ.Ⴅ.ႥႭ.Ⴀ;
				case 6:
					return ႥႥႤ.Ⴅ.ႥႭ.Ⴃ;
				case 1:
					return ႥႥႤ.Ⴅ.ႥႭ.Ⴍ;
				case 3:
					return ႥႥႤ.Ⴅ.ႥႭ.Ⴄ;
				case 17:
					return ႥႥႤ.Ⴅ.ႥႭ.Ⴜ;
				case 13:
					return ႥႥႤ.Ⴅ.ႥႭ.ႨႰ;
				case 24:
					return ႥႥႤ.Ⴅ.ႥႭ.ႨႨ;
				case 7:
					return ႥႥႤ.Ⴅ.ႥႭ.ႨႳ;
				case 11:
					return ႥႥႤ.Ⴅ.ႥႭ.ႨႷ;
				case 19:
					return ႥႥႤ.Ⴅ.ႥႭ.ႨႥ;
				case 16:
					return ႥႥႤ.Ⴅ.ႥႭ.ႨႠ;
				case 23:
					return ႥႥႤ.Ⴅ.ႥႭ.ႨႣ;
				case 0:
					return ႥႥႤ.Ⴅ.ႥႭ.ႨႭ;
				case 9:
					return ႥႥႤ.Ⴅ.ႥႭ.ႨႤ;
				case 10:
					return ႥႥႤ.Ⴅ.ႥႭ.ႨႼ;
				case 4:
					return ႥႥႤ.Ⴅ.ႥႭ.ႳႰ;
				case 18:
					throw CreateUnknownConstantException(Ⴍ, typeof(ႥႥႤ.Ⴅ.ႥႭ));
				}
			}
		}

		private ႥႭႤ.Ⴃ ႷႼ(bool Ⴍ, bool Ⴄ)
		{
			//Discarded unreachable code: IL_0005, IL_0055, IL_006c, IL_0074, IL_0096, IL_00b5, IL_00ca, IL_00d7, IL_00f1, IL_0113
			while (true)
			{
				IL_00b7:
				if (Ⴄ)
				{
					goto IL_00cf;
				}
				object obj;
				if (190 > 190 - 64)
				{
					obj = null;
					goto IL_00d9;
				}
				break;
				IL_00cf:
				obj = GetXsiType();
				goto IL_00d9;
				IL_00d9:
				XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
				bool flag = false;
				while (true)
				{
					if (Ⴍ)
					{
						if (false)
						{
							break;
						}
						flag = ReadNull();
						if (629 < 629 - 628)
						{
							goto end_IL_00b7;
						}
					}
					if (Ⴄ)
					{
						if (419 < 419 - 282)
						{
							goto IL_00b7;
						}
						if (!(xmlQualifiedName == null))
						{
							if (847 <= 847 - 30)
							{
								goto IL_00b7;
							}
							goto IL_0025;
						}
					}
					goto IL_005a;
					IL_0025:
					if ((object)xmlQualifiedName.Name == ႠႨႼ)
					{
						if (36 <= 36 - 4)
						{
							continue;
						}
						if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
						{
							goto IL_005a;
						}
						if (false)
						{
							continue;
						}
					}
					throw CreateUnknownTypeException(xmlQualifiedName);
					IL_005a:
					if (!flag)
					{
						goto end_IL_00b7;
					}
					if (false)
					{
						goto IL_0025;
					}
					return null;
				}
				goto IL_00cf;
				continue;
				end_IL_00b7:
				break;
			}
			throw CreateAbstractTypeException(ႰႰႰ.Ⴄ.ႳႭႨ(863595013), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
		}

		private ႥႥႣ.Ⴜ ႥႭ(bool Ⴍ, bool Ⴄ)
		{
			int num = 5;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႣ.Ⴜ ⴜ = default(ႥႥႣ.Ⴜ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = ((!Ⴄ) ? 15 : 0);
					break;
				case 15:
					obj = null;
					goto IL_0083;
				case 0:
					obj = GetXsiType();
					goto IL_0083;
				case 4:
					flag = ReadNull();
					num = 7;
					break;
				case 7:
					num = ((!Ⴄ) ? 9 : 8);
					break;
				case 8:
					num = ((xmlQualifiedName == null) ? 9 : 2);
					break;
				case 2:
					num = (((object)xmlQualifiedName.Name != ႥႠ) ? 23 : 14);
					break;
				case 14:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 9 : 23);
					break;
				case 23:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 9:
					num = (flag ? 1 : 17);
					break;
				case 1:
					return null;
				case 17:
					ⴜ = new ႥႥႣ.Ⴜ();
					num = 13;
					break;
				case 20:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 13 : 18);
					break;
				case 18:
					UnknownNode(ⴜ);
					goto case 13;
				case 13:
					num = (base.Reader.MoveToNextAttribute() ? 20 : 22);
					break;
				case 22:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 6 : 3);
					break;
				case 3:
					base.Reader.Skip();
					return ⴜ;
				case 6:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 10;
					break;
				case 11:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 24 : 12);
					break;
				case 12:
					UnknownNode(ⴜ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					num = 21;
					break;
				case 24:
					UnknownNode(ⴜ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					goto case 21;
				case 21:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 10;
				case 10:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 16 : 19);
					break;
				case 19:
					num = ((base.Reader.NodeType != 0) ? 11 : 16);
					break;
				case 16:
					{
						ReadEndElement();
						return ⴜ;
					}
					IL_0083:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 7 : 4);
					break;
				}
			}
		}

		private global::ႳႨႭ.Ⴓ ႥႳ(bool Ⴍ, bool Ⴄ)
		{
			int num = 6;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			global::ႳႨႭ.Ⴓ ⴓ = default(global::ႳႨႭ.Ⴓ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴄ ? 8 : 16);
					break;
				case 16:
					obj = null;
					goto IL_0083;
				case 8:
					obj = GetXsiType();
					goto IL_0083;
				case 9:
					flag = ReadNull();
					num = 4;
					break;
				case 4:
					num = ((!Ⴄ) ? 7 : 0);
					break;
				case 0:
					num = ((xmlQualifiedName == null) ? 7 : 10);
					break;
				case 10:
					num = (((object)xmlQualifiedName.Name != ႠႷႠ) ? 24 : 21);
					break;
				case 21:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 7 : 24);
					break;
				case 24:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 7:
					num = ((!flag) ? 13 : 5);
					break;
				case 5:
					return null;
				case 13:
					ⴓ = new global::ႳႨႭ.Ⴓ();
					num = 20;
					break;
				case 18:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 20 : 22);
					break;
				case 22:
					UnknownNode(ⴓ);
					goto case 20;
				case 20:
					num = (base.Reader.MoveToNextAttribute() ? 18 : 17);
					break;
				case 17:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 1 : 12);
					break;
				case 12:
					base.Reader.Skip();
					return ⴓ;
				case 1:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 14;
					break;
				case 2:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 23 : 19);
					break;
				case 19:
					UnknownNode(ⴓ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					num = 3;
					break;
				case 23:
					UnknownNode(ⴓ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					goto case 3;
				case 3:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 14;
				case 14:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 11 : 15);
					break;
				case 15:
					num = ((base.Reader.NodeType != 0) ? 2 : 11);
					break;
				case 11:
					{
						ReadEndElement();
						return ⴓ;
					}
					IL_0083:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 4 : 9);
					break;
				}
			}
		}

		private ႥႥႣ.Ⴗ ႥႨ(bool Ⴍ, bool Ⴄ)
		{
			//Discarded unreachable code: IL_0005, IL_0031, IL_004f, IL_0071, IL_009b, IL_00c0, IL_00c8, IL_00f4, IL_010c, IL_0129, IL_0156, IL_017e, IL_0188, IL_01a3, IL_01d4, IL_01fc, IL_021c, IL_0245, IL_027c, IL_0297, IL_02b8, IL_02d9, IL_0302
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႣ.Ⴗ ⴗ = default(ႥႥႣ.Ⴗ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				if (!Ⴄ)
				{
					if (437 < 437 - 422)
					{
						goto IL_01d9;
					}
					obj = null;
				}
				else
				{
					obj = GetXsiType();
				}
				xmlQualifiedName = (XmlQualifiedName)obj;
				goto IL_018b;
				IL_0111:
				base.Reader.Skip();
				goto IL_011c;
				IL_0036:
				UnknownNode(ⴗ);
				if (false)
				{
					break;
				}
				goto IL_00a0;
				IL_00a0:
				while (base.Reader.MoveToNextAttribute())
				{
					if (IsXmlnsAttribute(base.Reader.Name))
					{
						continue;
					}
					goto IL_0089;
				}
				if (663 < 663 - 280)
				{
					goto IL_0054;
				}
				goto IL_024a;
				IL_0089:
				if ((235 + 235 * 235) % 2 == 0)
				{
					goto IL_0036;
				}
				goto IL_01a8;
				IL_018b:
				bool flag = false;
				if (!Ⴍ)
				{
					goto IL_01b8;
				}
				if (325 >= 325 - 93)
				{
					goto IL_0054;
				}
				goto IL_02bd;
				IL_024a:
				base.Reader.MoveToElement();
				if (base.Reader.IsEmptyElement)
				{
					if (984 < 984 - 580)
					{
						goto IL_0036;
					}
					goto IL_0111;
				}
				goto IL_0158;
				IL_01b8:
				if (!Ⴄ)
				{
					goto IL_00f6;
				}
				if (978 <= 978 - 857)
				{
					goto IL_024a;
				}
				goto IL_02bd;
				IL_01a8:
				throw CreateUnknownTypeException(xmlQualifiedName);
				IL_02bd:
				if (xmlQualifiedName == null)
				{
					goto IL_00f6;
				}
				if (431 < 431 - 123)
				{
					goto IL_011c;
				}
				if ((object)xmlQualifiedName.Name == ႠႷႨ)
				{
					if (684 > 684 - 98)
					{
						while ((object)xmlQualifiedName.Namespace != ႠႰႥ)
						{
							if (556 < 556 - 71)
							{
								continue;
							}
							goto IL_01a8;
						}
						goto IL_00f6;
					}
				}
				goto IL_01a8;
				IL_0158:
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_00cf;
				IL_00cf:
				if (base.Reader.NodeType == XmlNodeType.EndElement)
				{
					break;
				}
				if (336 >= 336 - 188)
				{
					goto IL_01d9;
				}
				goto IL_00a0;
				IL_011c:
				return ⴗ;
				IL_01d9:
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (448 <= 448 - 288)
						{
							continue;
						}
						UnknownNode(ⴗ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					}
					else
					{
						UnknownNode(ⴗ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
						if (421 < 421 - 355)
						{
							goto IL_024a;
						}
					}
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					if (false)
					{
						goto IL_0036;
					}
					goto IL_00cf;
				}
				if (721 > 721 - 593)
				{
					break;
				}
				goto IL_0158;
				IL_00f6:
				if (flag)
				{
					if (612 >= 612 - 482)
					{
						return null;
					}
					goto IL_018b;
				}
				ⴗ = new ႥႥႣ.Ⴗ();
				goto IL_00a0;
				IL_0054:
				flag = ReadNull();
				if (155 <= 155 - 140)
				{
					goto IL_0111;
				}
				goto IL_01b8;
			}
			ReadEndElement();
			return ⴗ;
		}

		private ႥႥႠ.Ⴐ ႥႣ(bool Ⴀ, bool Ⴃ)
		{
			int num = 1;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴃ ? 3 : 7);
					break;
				case 7:
					obj = null;
					goto IL_004b;
				case 3:
					obj = GetXsiType();
					goto IL_004b;
				case 10:
					flag = ReadNull();
					num = 11;
					break;
				case 11:
					num = ((!Ⴃ) ? 8 : 0);
					break;
				case 0:
					num = ((xmlQualifiedName == null) ? 8 : 9);
					break;
				case 9:
					num = (((object)xmlQualifiedName.Name != this.m_ႷႭ) ? 2 : 6);
					break;
				case 6:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 8 : 2);
					break;
				case 2:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 8:
					num = ((!flag) ? 5 : 4);
					break;
				case 4:
					return null;
				case 5:
					{
						throw CreateAbstractTypeException(ႰႰႰ.Ⴍ.ႳႭႨ(863595183), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					}
					IL_004b:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴀ) ? 11 : 10);
					break;
				}
			}
		}

		private ႥႥႠ.Ⴗ ႥႰ(bool Ⴓ, bool Ⴅ)
		{
			//Discarded unreachable code: IL_0005, IL_0030, IL_004e, IL_0069, IL_0091, IL_00b8, IL_00c0, IL_00e3, IL_00fb, IL_0112, IL_013a, IL_0162, IL_016f, IL_018f, IL_01b6, IL_01dd, IL_0206, IL_0231, IL_0268, IL_0283, IL_029e, IL_02bc, IL_02e2
			ႥႥႠ.Ⴗ ⴗ = default(ႥႥႠ.Ⴗ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				if (Ⴅ)
				{
					goto IL_0167;
				}
				object obj;
				if (192 >= 192 - 71)
				{
					obj = null;
					goto IL_0174;
				}
				goto IL_0242;
				IL_00e8:
				bool flag;
				if (flag)
				{
					if (599 >= 599 - 408)
					{
						return null;
					}
				}
				else
				{
					ⴗ = new ႥႥႠ.Ⴗ();
				}
				goto IL_0096;
				IL_026d:
				UnknownNode(ⴗ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
				goto IL_0117;
				IL_0167:
				obj = GetXsiType();
				goto IL_0174;
				IL_0174:
				XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
				flag = false;
				if (Ⴓ)
				{
					if (false)
					{
						goto IL_0236;
					}
					flag = ReadNull();
					if (false)
					{
						goto IL_0035;
					}
				}
				if (Ⴅ)
				{
					if (false)
					{
						goto IL_0153;
					}
					if (!(xmlQualifiedName == null))
					{
						if (683 <= 683 - 202)
						{
							goto IL_026d;
						}
						if ((object)xmlQualifiedName.Name == ႠႠႳ)
						{
							if (367 < 367 - 67)
							{
								continue;
							}
							if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
							{
								goto IL_00e8;
							}
							if (709 < 709 - 442)
							{
								goto IL_0167;
							}
						}
						throw CreateUnknownTypeException(xmlQualifiedName);
					}
				}
				goto IL_00e8;
				IL_020b:
				UnknownNode(ⴗ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
				if ((298 + 298 * 298) % 2 == 0)
				{
					goto IL_0117;
				}
				goto IL_0167;
				IL_0096:
				while (base.Reader.MoveToNextAttribute())
				{
					if (IsXmlnsAttribute(base.Reader.Name))
					{
						continue;
					}
					goto IL_007e;
				}
				if ((716 + 716 * 716) % 2 == 0)
				{
					goto IL_0236;
				}
				goto IL_026d;
				IL_0117:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (717 < 717 - 30)
				{
					break;
				}
				goto IL_00c4;
				IL_007e:
				if (236 > 236 - 160)
				{
					goto IL_0035;
				}
				goto IL_00fd;
				IL_0236:
				base.Reader.MoveToElement();
				goto IL_0242;
				IL_0242:
				if (!base.Reader.IsEmptyElement)
				{
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					goto IL_0153;
				}
				if (231 >= 231 - 229)
				{
					goto IL_00fd;
				}
				goto IL_0167;
				IL_0035:
				UnknownNode(ⴗ);
				if ((250 + 250 * 250) % 2 == 0)
				{
					goto IL_0096;
				}
				goto IL_00fd;
				IL_0153:
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_00c4;
				IL_00c4:
				while (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (124 <= 124 - 17)
					{
						continue;
					}
					if (base.Reader.NodeType == XmlNodeType.None)
					{
						goto IL_01cb;
					}
					if (base.Reader.NodeType != XmlNodeType.Element)
					{
						goto IL_020b;
					}
					if (false)
					{
						continue;
					}
					goto IL_026d;
				}
				break;
				IL_01cb:
				if ((298 + 298 * 298) % 2 == 0)
				{
					break;
				}
				goto IL_00fd;
				IL_00fd:
				base.Reader.Skip();
				return ⴗ;
			}
			ReadEndElement();
			return ⴗ;
		}

		private ႥႥႠ.Ⴅ.ႥႳ ႳႣႨ(bool Ⴓ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴓ ? GetXsiType() : null;
			if (Ⴓ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != ႠႣႰ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			ႥႥႠ.Ⴅ.ႥႳ ⴅႳ;
			try
			{
				ⴅႳ = (ႥႥႠ.Ⴅ.ႥႳ)Activator.CreateInstance(typeof(ႥႥႠ.Ⴅ.ႥႳ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴐ.ႳႭႨ(863595008));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴍ.ႳႭႨ(863595015));
			}
			bool[] array = new bool[1];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴅႳ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴅႳ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == this.m_ႳႨ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴅႳ.Ⴀ = ႳႣႣ(Ⴓ: true);
						array[0] = true;
					}
					else
					{
						UnknownNode(ⴅႳ, ႰႰႰ.Ⴓ.ႳႭႨ(863595021));
					}
				}
				else
				{
					UnknownNode(ⴅႳ, ႰႰႰ.Ⴗ.ႳႭႨ(863595016));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴅႳ;
		}

		private unsafe ႥႥႠ.Ⴅ.ႥႨ ႳႣႣ(bool Ⴓ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴓ ? GetXsiType() : null;
			if (Ⴓ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != this.m_ႥႭ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			ႥႥႠ.Ⴅ.ႥႨ ⴅႨ;
			try
			{
				ⴅႨ = (ႥႥႠ.Ⴅ.ႥႨ)Activator.CreateInstance(typeof(ႥႥႠ.Ⴅ.ႥႨ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴗ.ႳႭႨ(863595019));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴄ.ႳႭႨ(863595017));
			}
			bool[] array = new bool[2];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴅႨ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴅႨ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == ႠႷႰ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(ushort*)(&ⴅႨ.Ⴀ) = XmlConvert.ToUInt16(base.Reader.ReadElementString());
						array[0] = true;
					}
					else if (!array[1] && (object)base.Reader.LocalName == this.m_ႰႠ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴅႨ.Ⴀ = ToByteArrayBase64(isNull: false);
						array[1] = true;
					}
					else
					{
						UnknownNode(ⴅႨ, ႰႰႰ.Ⴍ.ႳႭႨ(863595012));
					}
				}
				else
				{
					UnknownNode(ⴅႨ, ႰႰႰ.Ⴓ.ႳႭႨ(863595026));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴅႨ;
		}

		private ႥႥႠ.Ⴅ ႥႼ(bool Ⴓ, bool Ⴅ)
		{
			int num = 7;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႠ.Ⴅ ⴅ = default(ႥႥႠ.Ⴅ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴅ ? 3 : 14);
					break;
				case 14:
					obj = null;
					goto IL_0083;
				case 3:
					obj = GetXsiType();
					goto IL_0083;
				case 20:
					flag = ReadNull();
					num = 4;
					break;
				case 4:
					num = ((!Ⴅ) ? 11 : 12);
					break;
				case 12:
					num = ((xmlQualifiedName == null) ? 11 : 16);
					break;
				case 16:
					num = (((object)xmlQualifiedName.Name != ႠႷႤ) ? 24 : 21);
					break;
				case 21:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 11 : 24);
					break;
				case 24:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 11:
					num = ((!flag) ? 15 : 13);
					break;
				case 13:
					return null;
				case 15:
					ⴅ = new ႥႥႠ.Ⴅ();
					num = 2;
					break;
				case 5:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 2 : 18);
					break;
				case 18:
					UnknownNode(ⴅ);
					goto case 2;
				case 2:
					num = ((!base.Reader.MoveToNextAttribute()) ? 1 : 5);
					break;
				case 1:
					base.Reader.MoveToElement();
					num = (base.Reader.IsEmptyElement ? 17 : 0);
					break;
				case 17:
					base.Reader.Skip();
					return ⴅ;
				case 0:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 19;
					break;
				case 6:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 23 : 9);
					break;
				case 9:
					UnknownNode(ⴅ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					num = 8;
					break;
				case 23:
					UnknownNode(ⴅ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					goto case 8;
				case 8:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 19;
				case 19:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 22 : 10);
					break;
				case 10:
					num = ((base.Reader.NodeType != 0) ? 6 : 22);
					break;
				case 22:
					{
						ReadEndElement();
						return ⴅ;
					}
					IL_0083:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴓ) ? 4 : 20);
					break;
				}
			}
		}

		private ႥႥႠ.Ⴍ.ႥႰ ႳႣႷ(string Ⴓ)
		{
			//Discarded unreachable code: IL_0002, IL_0027, IL_002b, IL_0076
			string a;
			while ((a = Ⴓ) != null)
			{
				if (422 >= 422 - 147)
				{
				}
				if (a == ႰႰႰ.Ⴐ.ႳႭႨ(863595009))
				{
					return ႥႥႠ.Ⴍ.ႥႰ.Ⴓ;
				}
				if (893 < 893 - 149 || a == ႰႰႰ.Ⴍ.ႳႭႨ(863595013))
				{
					return ႥႥႠ.Ⴍ.ႥႰ.Ⴃ;
				}
				if (292 <= 292 - 9)
				{
					continue;
				}
				break;
			}
			throw CreateUnknownConstantException(Ⴓ, typeof(ႥႥႠ.Ⴍ.ႥႰ));
		}

		private ႥႥႠ.Ⴍ.ႷႼ ႳႣႥ(string Ⴓ)
		{
			int num = 1;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴓ) == null) ? 6 : 4);
					break;
				case 4:
					num = ((a == ႰႰႰ.Ⴗ.ႳႭႨ(863595017)) ? 2 : 5);
					break;
				case 5:
					num = ((!(a == ႰႰႰ.Ⴄ.ႳႭႨ(863595022))) ? 3 : 0);
					break;
				case 3:
					num = 6;
					break;
				case 2:
					return ႥႥႠ.Ⴍ.ႷႼ.Ⴃ;
				case 0:
					return ႥႥႠ.Ⴍ.ႷႼ.Ⴓ;
				case 6:
					throw CreateUnknownConstantException(Ⴓ, typeof(ႥႥႠ.Ⴍ.ႷႼ));
				}
			}
		}

		private ႥႥႠ.Ⴍ ႰႭ(bool Ⴓ, bool Ⴅ)
		{
			int num = 14;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႠ.Ⴍ ⴍ = default(ႥႥႠ.Ⴍ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴅ ? 16 : 12);
					break;
				case 12:
					obj = null;
					goto IL_0085;
				case 16:
					obj = GetXsiType();
					goto IL_0085;
				case 15:
					flag = ReadNull();
					num = 18;
					break;
				case 18:
					num = ((!Ⴅ) ? 17 : 5);
					break;
				case 5:
					num = ((xmlQualifiedName == null) ? 17 : 4);
					break;
				case 4:
					num = (((object)xmlQualifiedName.Name != ႠႠႷ) ? 13 : 9);
					break;
				case 9:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 17 : 13);
					break;
				case 13:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 17:
					num = ((!flag) ? 3 : 6);
					break;
				case 6:
					return null;
				case 3:
					ⴍ = new ႥႥႠ.Ⴍ();
					num = 2;
					break;
				case 8:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 2 : 19);
					break;
				case 19:
					UnknownNode(ⴍ);
					goto case 2;
				case 2:
					num = (base.Reader.MoveToNextAttribute() ? 8 : 7);
					break;
				case 7:
					base.Reader.MoveToElement();
					num = (base.Reader.IsEmptyElement ? 1 : 10);
					break;
				case 1:
					base.Reader.Skip();
					return ⴍ;
				case 10:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 11;
					break;
				case 22:
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 21 : 0);
					break;
				case 21:
					UnknownNode(ⴍ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					num = 23;
					break;
				case 0:
					UnknownNode(ⴍ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					goto case 23;
				case 23:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 11;
				case 11:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 20 : 24);
					break;
				case 24:
					num = ((base.Reader.NodeType != 0) ? 22 : 20);
					break;
				case 20:
					{
						ReadEndElement();
						return ⴍ;
					}
					IL_0085:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴓ) ? 18 : 15);
					break;
				}
			}
		}

		private FileFormats ႳႣႰ(string Ⴓ)
		{
			//Discarded unreachable code: IL_0002, IL_0029, IL_003e, IL_0071
			string a;
			if ((a = Ⴓ) != null)
			{
				if ((120 + 120 * 120) % 2 == 0)
				{
					if (!(a == ႰႰႰ.Ⴍ.ႳႭႨ(863595018)))
					{
						if (422 >= 422 - 85)
						{
							if (a == ႰႰႰ.Ⴗ.ႳႭႨ(863595022))
							{
								return FileFormats.Xml;
							}
							if ((194 + 194 * 194) % 2 == 0)
							{
							}
							goto IL_0040;
						}
					}
					return FileFormats.Binary;
				}
			}
			goto IL_0040;
			IL_0040:
			throw CreateUnknownConstantException(Ⴓ, typeof(FileFormats));
		}

		private ႥႥႥ.Ⴗ ႰႳ(bool Ⴓ, bool Ⴅ)
		{
			//Discarded unreachable code: IL_0005, IL_0031, IL_0049, IL_0067, IL_008e, IL_00b3, IL_00be, IL_00ec, IL_0103, IL_011d, IL_013e, IL_0166, IL_0173, IL_0190, IL_01c1, IL_01e9, IL_020e, IL_0236, IL_026c, IL_0287, IL_02a8, IL_02bf, IL_02e7
			object obj;
			if (!Ⴅ)
			{
				if (914 < 914 - 170)
				{
					goto IL_00c3;
				}
				obj = null;
			}
			else
			{
				obj = GetXsiType();
			}
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			if (Ⴓ)
			{
				if (false)
				{
					goto IL_000a;
				}
				goto IL_004e;
			}
			goto IL_01a5;
			IL_01eb:
			if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
			{
				goto IL_00f1;
			}
			if (false)
			{
				goto IL_0105;
			}
			goto IL_0195;
			IL_0195:
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_0110:
			ႥႥႥ.Ⴗ ⴗ = default(ႥႥႥ.Ⴗ);
			return ⴗ;
			IL_00a0:
			if (357 <= 357 - 113)
			{
				goto IL_01eb;
			}
			base.Reader.MoveToElement();
			goto IL_0247;
			IL_0105:
			base.Reader.Skip();
			goto IL_0110;
			IL_01a5:
			if (Ⴅ)
			{
				if (291 < 291 - 201)
				{
					goto IL_0247;
				}
				if (!(xmlQualifiedName == null))
				{
					if (25 <= 25 - 3)
					{
						goto IL_0271;
					}
					if ((object)xmlQualifiedName.Name != this.m_ႼႭ)
					{
						goto IL_0195;
					}
					if (false)
					{
						goto IL_011f;
					}
					goto IL_01eb;
				}
			}
			goto IL_00f1;
			IL_000a:
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (672 <= 672 - 478)
				{
					goto IL_012b;
				}
				goto IL_0271;
			}
			UnknownNode(ⴗ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
			if (false)
			{
				goto IL_004e;
			}
			goto IL_011f;
			IL_00c3:
			return null;
			IL_012b:
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (31 <= 31 - 4)
			{
				goto IL_00c3;
			}
			goto IL_00c5;
			IL_0247:
			if (!base.Reader.IsEmptyElement)
			{
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_00c5;
			}
			if ((588 + 588 * 588) % 2 == 0)
			{
				goto IL_0105;
			}
			goto IL_0110;
			IL_00c5:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (false)
				{
					goto IL_0271;
				}
				if (base.Reader.NodeType != 0)
				{
					goto IL_000a;
				}
				if (724 < 724 - 299)
				{
					goto IL_00f1;
				}
			}
			ReadEndElement();
			return ⴗ;
			IL_00f1:
			while (true)
			{
				IL_00f1:
				if (flag)
				{
					if ((776 + 776 * 776) % 2 == 0)
					{
						break;
					}
				}
				ⴗ = new ႥႥႥ.Ⴗ();
				while (base.Reader.MoveToNextAttribute())
				{
					if (IsXmlnsAttribute(base.Reader.Name))
					{
						continue;
					}
					if ((719 + 719 * 719) % 2 == 0)
					{
						UnknownNode(ⴗ);
						if (762 > 762 - 6)
						{
							continue;
						}
						goto IL_0247;
					}
					goto IL_00f1;
				}
				goto IL_00a0;
			}
			goto IL_00c3;
			IL_011f:
			base.Reader.MoveToContent();
			goto IL_012b;
			IL_004e:
			flag = ReadNull();
			if (false)
			{
				goto IL_00c5;
			}
			goto IL_01a5;
			IL_0271:
			UnknownNode(ⴗ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			goto IL_011f;
		}

		private ႥႥႥ.Ⴅ ႰႨ(bool Ⴃ, bool Ⴀ)
		{
			//Discarded unreachable code: IL_0005, IL_0031, IL_0050, IL_006c, IL_0093, IL_00b8, IL_00c3, IL_00ef, IL_010a, IL_0124, IL_0174, IL_0181, IL_019e, IL_01eb, IL_0211, IL_023a, IL_0271, IL_028c, IL_02a6, IL_02ca, IL_02f3
			object obj;
			while (true)
			{
				if (Ⴀ)
				{
					obj = GetXsiType();
					break;
				}
				if ((641 + 641 * 641) % 2 == 0)
				{
					obj = null;
					break;
				}
			}
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			int whileIterations = default(int);
			int readerCount = default(int);
			ႥႥႥ.Ⴅ ⴅ = default(ႥႥႥ.Ⴅ);
			while (true)
			{
				bool flag = false;
				while (true)
				{
					if (Ⴃ)
					{
						if ((365 + 365 * 365) % 2 == 0)
						{
						}
						goto IL_0055;
					}
					goto IL_01b3;
					IL_01a3:
					throw CreateUnknownTypeException(xmlQualifiedName);
					IL_01b3:
					if (Ⴀ)
					{
						if (false)
						{
							goto IL_01a3;
						}
						if (!(xmlQualifiedName == null))
						{
							if (408 > 408 - 161)
							{
								if ((object)xmlQualifiedName.Name != ႠႭႣ)
								{
									goto IL_01a3;
								}
								if (603 < 603 - 189)
								{
									goto IL_0126;
								}
							}
							if ((object)xmlQualifiedName.Namespace != ႠႰႥ)
							{
								if (495 > 495 - 234)
								{
									goto IL_01a3;
								}
								goto IL_024b;
							}
						}
					}
					goto IL_00f4;
					IL_0165:
					whileIterations = 0;
					readerCount = base.ReaderCount;
					goto IL_00ca;
					IL_01ab:
					ReadEndElement();
					return ⴅ;
					IL_0126:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					if ((683 + 683 * 683) % 2 == 0)
					{
						goto IL_00ca;
					}
					goto IL_00f4;
					IL_0055:
					flag = ReadNull();
					if (425 < 425 - 33)
					{
						goto IL_00ca;
					}
					goto IL_01b3;
					IL_024b:
					if (!base.Reader.IsEmptyElement)
					{
						base.Reader.ReadStartElement();
						base.Reader.MoveToContent();
						goto IL_0165;
					}
					if (904 >= 904 - 141)
					{
						goto IL_010c;
					}
					goto IL_01a3;
					IL_00ca:
					if (base.Reader.NodeType != XmlNodeType.EndElement)
					{
						if (542 < 542 - 361)
						{
							goto IL_010c;
						}
						if (base.Reader.NodeType != 0)
						{
							if (base.Reader.NodeType != XmlNodeType.Element)
							{
								UnknownNode(ⴅ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
								if (870 <= 870 - 740)
								{
									goto IL_0055;
								}
								goto IL_0126;
							}
							if (696 <= 696 - 665)
							{
								break;
							}
						}
						else if (183 > 183 - 60)
						{
							goto IL_01ab;
						}
						UnknownNode(ⴅ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
						goto IL_0126;
					}
					goto IL_01ab;
					IL_010c:
					base.Reader.Skip();
					return ⴅ;
					IL_00f4:
					if (flag)
					{
						if (504 > 504 - 493)
						{
							return null;
						}
						continue;
					}
					ⴅ = new ႥႥႥ.Ⴅ();
					while (base.Reader.MoveToNextAttribute())
					{
						if (IsXmlnsAttribute(base.Reader.Name))
						{
							continue;
						}
						if (649 > 649 - 1)
						{
							UnknownNode(ⴅ);
							if (660 >= 660 - 534)
							{
								continue;
							}
							goto IL_0126;
						}
						goto IL_0165;
					}
					if (1012 <= 1012 - 614)
					{
						goto IL_0055;
					}
					base.Reader.MoveToElement();
					goto IL_024b;
				}
			}
		}

		internal Hashtable ႼႣ()
		{
			int num = 2;
			while (true)
			{
				switch (num)
				{
				default:
					num = ((this.Ⴗ == null) ? 1 : 0);
					break;
				case 1:
				{
					Hashtable hashtable = new Hashtable();
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595202), 256L);
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595014), 512L);
					hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595203), 1024L);
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595023), 2048L);
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595023), 4096L);
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595201), 8192L);
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595015), 16384L);
					hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595206), 32768L);
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595021), 65536L);
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595208), 131072L);
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595017), 0L);
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595205), 1L);
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595024), 2L);
					hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595208), 4L);
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595012), 8L);
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595023), 16L);
					this.Ⴗ = (string)(object)hashtable;
					num = 0;
					break;
				}
				case 0:
					return (Hashtable)(object)this.Ⴗ;
				}
			}
		}

		private ႥႥႷ.Ⴐ ႳႣႠ(string Ⴃ)
		{
			return (ႥႥႷ.Ⴐ)XmlSerializationReader.ToEnum(Ⴃ, ႼႣ(), ႰႰႰ.Ⴍ.ႳႭႨ(863595019));
		}

		private ႥႥႷ.Ⴃ ႳႣႤ(string Ⴃ)
		{
			//Discarded unreachable code: IL_0002, IL_001c, IL_003a, IL_0053, IL_0074, IL_0097
			string a;
			if ((a = Ⴃ) != null)
			{
				if (511 > 511 - 164)
				{
					while (true)
					{
						if (!(a == ႰႰႰ.Ⴍ.ႳႭႨ(863595016)))
						{
							if (476 <= 476 - 33)
							{
								continue;
							}
							if (a == ႰႰႰ.Ⴗ.ႳႭႨ(863595020))
							{
								return ႥႥႷ.Ⴃ.Ⴈ;
							}
							if ((985 + 985 * 985) % 2 == 0)
							{
								if (a == ႰႰႰ.Ⴄ.ႳႭႨ(863595020))
								{
									return ႥႥႷ.Ⴃ.Ⴀ;
								}
								if (76 >= 76 - 48)
								{
									break;
								}
								continue;
							}
						}
						return ႥႥႷ.Ⴃ.Ⴅ;
					}
				}
			}
			throw CreateUnknownConstantException(Ⴃ, typeof(ႥႥႷ.Ⴃ));
		}

		private ႥႥႷ.Ⴈ ႳႣႼ(string Ⴃ)
		{
			//Discarded unreachable code: IL_0002, IL_002a, IL_002e, IL_003f, IL_0075
			string a;
			while ((a = Ⴃ) != null)
			{
				if (47 <= 47 - 45)
				{
					goto IL_0006;
				}
				if (!(a == ႰႰႰ.Ⴄ.ႳႭႨ(863595262)))
				{
					if (794 < 794 - 314)
					{
						continue;
					}
					if (a == ႰႰႰ.Ⴓ.ႳႭႨ(863595201))
					{
						goto IL_0006;
					}
					if (909 >= 909 - 574)
					{
						break;
					}
				}
				return ႥႥႷ.Ⴈ.Ⴅ;
				IL_0006:
				return ႥႥႷ.Ⴈ.Ⴈ;
			}
			throw CreateUnknownConstantException(Ⴃ, typeof(ႥႥႷ.Ⴈ));
		}

		private ႥႥႷ.Ⴀ ႳႷႭ(string Ⴃ)
		{
			int num = 0;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴃ) == null) ? 3 : 2);
					break;
				case 2:
					num = ((a == ႰႰႰ.Ⴐ.ႳႭႨ(863595203)) ? 5 : 4);
					break;
				case 4:
					num = ((a == ႰႰႰ.Ⴍ.ႳႭႨ(863595261)) ? 1 : 6);
					break;
				case 6:
					num = 3;
					break;
				case 5:
					return ႥႥႷ.Ⴀ.Ⴈ;
				case 1:
					return ႥႥႷ.Ⴀ.Ⴅ;
				case 3:
					throw CreateUnknownConstantException(Ⴃ, typeof(ႥႥႷ.Ⴀ));
				}
			}
		}

		private ႥႥႷ.Ⴅ ႳႷႳ(string Ⴃ)
		{
			//Discarded unreachable code: IL_0005, IL_0026, IL_0054, IL_007e, IL_0082, IL_009a, IL_00d3
			string a;
			while ((a = Ⴃ) != null)
			{
				if ((825 + 825 * 825) % 2 == 0)
				{
					if (a == ႰႰႰ.Ⴗ.ႳႭႨ(863595210))
					{
						return ႥႥႷ.Ⴅ.Ⴗ;
					}
					if ((888 + 888 * 888) % 2 == 0)
					{
						if (a == ႰႰႰ.Ⴄ.ႳႭႨ(863595260))
						{
							return ႥႥႷ.Ⴅ.Ⴍ;
						}
						if (321 <= 321 - 183)
						{
							continue;
						}
						if (!(a == ႰႰႰ.Ⴓ.ႳႭႨ(863595205)))
						{
							if (199 >= 199 - 26)
							{
								goto IL_005c;
							}
							break;
						}
					}
					return ႥႥႷ.Ⴅ.Ⴀ;
				}
				goto IL_005c;
				IL_005c:
				if (a == ႰႰႰ.Ⴐ.ႳႭႨ(863595201))
				{
					return ႥႥႷ.Ⴅ.Ⴃ;
				}
				if (728 < 728 - 644)
				{
				}
				break;
			}
			throw CreateUnknownConstantException(Ⴃ, typeof(ႥႥႷ.Ⴅ));
		}

		internal Hashtable ႼႷ()
		{
			//Discarded unreachable code: IL_0002, IL_005e, IL_0079
			if (this.Ⴈ == null)
			{
				if (59 >= 59 - 30)
				{
					Hashtable hashtable = new Hashtable();
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595021), 1L);
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595027), 2L);
					do
					{
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595027), 8L);
						this.Ⴈ = (string)(object)hashtable;
					}
					while (5 <= 5 - 2);
				}
			}
			return (Hashtable)(object)this.Ⴈ;
		}

		private ႥႥႷ.Ⴄ ႳႷႨ(string Ⴃ)
		{
			return (ႥႥႷ.Ⴄ)XmlSerializationReader.ToEnum(Ⴃ, ႼႷ(), ႰႰႰ.Ⴄ.ႳႭႨ(863595026));
		}

		private ႥႥႳ.Ⴅ ႰႣ(bool Ⴃ, bool Ⴀ)
		{
			int num = 4;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴀ ? 19 : 2);
					break;
				case 2:
					obj = null;
					goto IL_0070;
				case 19:
					obj = GetXsiType();
					goto IL_0070;
				case 8:
					flag = ReadNull();
					num = 14;
					break;
				case 14:
					num = ((!Ⴀ) ? 9 : 6);
					break;
				case 6:
					num = ((xmlQualifiedName == null) ? 9 : 0);
					break;
				case 0:
					num = (((object)xmlQualifiedName.Name != ႠႠ) ? 11 : 17);
					break;
				case 17:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 9 : 11);
					break;
				case 11:
					num = (((object)xmlQualifiedName.Name != ႠႠႰ) ? 1 : 12);
					break;
				case 12:
					num = (((object)xmlQualifiedName.Namespace != ႠႰႥ) ? 1 : 5);
					break;
				case 5:
					return ႰႷ(Ⴃ, Ⴀ: false);
				case 1:
					num = (((object)xmlQualifiedName.Name != ႠႨႼ) ? 10 : 20);
					break;
				case 20:
					num = (((object)xmlQualifiedName.Namespace != ႠႰႥ) ? 10 : 15);
					break;
				case 15:
					return ႷႼ(Ⴃ, Ⴄ: false);
				case 10:
					num = (((object)xmlQualifiedName.Name != this.m_ႷႭ) ? 7 : 13);
					break;
				case 13:
					num = (((object)xmlQualifiedName.Namespace != ႠႰႥ) ? 7 : 3);
					break;
				case 3:
					return ႥႣ(Ⴃ, Ⴃ: false);
				case 7:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 9:
					num = ((!flag) ? 18 : 16);
					break;
				case 16:
					return null;
				case 18:
					{
						throw CreateAbstractTypeException(ႰႰႰ.Ⴄ.ႳႭႨ(863595178), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					}
					IL_0070:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴃ) ? 14 : 8);
					break;
				}
			}
		}

		private ႥႥႭ.Ⴀ ႰႷ(bool Ⴃ, bool Ⴀ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴀ ? GetXsiType() : null;
			bool flag = false;
			if (Ⴃ)
			{
				flag = ReadNull();
			}
			if (Ⴀ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != ႠႠႰ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				if ((object)xmlQualifiedName.Name == ႠႨႼ && (object)xmlQualifiedName.Namespace == ႠႰႥ)
				{
					return ႷႼ(Ⴃ, Ⴄ: false);
				}
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			if (flag)
			{
				return null;
			}
			ႥႥႭ.Ⴀ ⴀ;
			try
			{
				ⴀ = (ႥႥႭ.Ⴀ)Activator.CreateInstance(typeof(ႥႥႭ.Ⴀ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴓ.ႳႭႨ(863595024));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴐ.ႳႭႨ(863595013));
			}
			bool[] array = new bool[8];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴀ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴀ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == ႠႤႭ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴀ.Ⴍ = XmlConvert.ToBoolean(base.Reader.ReadElementString());
						array[0] = true;
					}
					else if (!array[1] && (object)base.Reader.LocalName == Ⴈ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴀ.Ⴀ = XmlConvert.ToBoolean(base.Reader.ReadElementString());
						array[1] = true;
					}
					else if (!array[2] && (object)base.Reader.LocalName == this.m_ႰႣ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴀ.Ⴃ = XmlConvert.ToBoolean(base.Reader.ReadElementString());
						array[2] = true;
					}
					else if (!array[3] && (object)base.Reader.LocalName == ႠႤႳ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴀ.Ⴄ = XmlConvert.ToBoolean(base.Reader.ReadElementString());
						array[3] = true;
					}
					else if (!array[4] && (object)base.Reader.LocalName == ႠႰႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴀ.Ⴐ = XmlConvert.ToBoolean(base.Reader.ReadElementString());
						array[4] = true;
					}
					else if (!array[5] && (object)base.Reader.LocalName == ႭႷ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						((ႥႥႳ.Ⴅ)ⴀ).Ⴓ = XmlConvert.ToBoolean(base.Reader.ReadElementString());
						array[5] = true;
					}
					else if (!array[6] && (object)base.Reader.LocalName == this.m_ႨႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴀ.Ⴅ = XmlConvert.ToBoolean(base.Reader.ReadElementString());
						array[6] = true;
					}
					else if (!array[7] && (object)base.Reader.LocalName == ႥႤ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴀ.Ⴓ = ႰႥ(Ⴃ: false, Ⴀ: true);
						array[7] = true;
					}
					else
					{
						UnknownNode(ⴀ, ႰႰႰ.Ⴍ.ႳႭႨ(863595020));
					}
				}
				else
				{
					UnknownNode(ⴀ, ႰႰႰ.Ⴓ.ႳႭႨ(863595030));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴀ;
		}

		private MemoryStream ႰႥ(bool Ⴃ, bool Ⴀ)
		{
			//Discarded unreachable code: IL_0005, IL_002d, IL_0068, IL_0098, IL_00bc, IL_00d7, IL_00e4, IL_00ff, IL_012a, IL_014b, IL_0172, IL_019f, IL_01bf, IL_01e3, IL_020c, IL_0238, IL_0256, IL_0273, IL_02a4, IL_02d2, IL_02f2, IL_031d, IL_0339, IL_0364, IL_036f, IL_038c, IL_03b7, IL_03d2, IL_0409, IL_0420, IL_0444, IL_0466, IL_0484, IL_04aa, IL_04f9, IL_051a, IL_054b, IL_056c
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			bool flag = default(bool);
			MemoryStream memoryStream = default(MemoryStream);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				if (Ⴀ)
				{
					obj = GetXsiType();
				}
				else
				{
					if (947 < 947 - 581)
					{
						goto IL_046b;
					}
					obj = null;
				}
				xmlQualifiedName = (XmlQualifiedName)obj;
				flag = false;
				if (!Ⴃ)
				{
					goto IL_00c1;
				}
				if (146 >= 146 - 31)
				{
					goto IL_0322;
				}
				goto IL_033e;
				IL_04b5:
				return memoryStream;
				IL_0278:
				base.Reader.MoveToContent();
				goto IL_0284;
				IL_03bc:
				UnknownNode(memoryStream, ႰႰႰ.Ⴍ.ႳႭႨ(863595022));
				goto IL_0278;
				IL_025b:
				if (!array[1])
				{
					if (109 < 109 - 66)
					{
						goto IL_003d;
					}
					goto IL_0104;
				}
				goto IL_04dc;
				IL_04dc:
				if (!array[2])
				{
					if (false)
					{
						goto IL_0322;
					}
					if ((object)base.Reader.LocalName == this.m_ႷႨ)
					{
						if (237 < 237 - 125)
						{
							goto IL_02a9;
						}
						if ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (916 <= 916 - 887)
							{
								goto IL_04b7;
							}
							memoryStream.WriteTimeout = XmlConvert.ToInt32(base.Reader.ReadElementString());
							array[2] = true;
							goto IL_0278;
						}
					}
				}
				goto IL_0371;
				IL_00c1:
				if (Ⴀ)
				{
					if (85 < 85 - 54)
					{
						goto IL_0278;
					}
					if (!(xmlQualifiedName == null))
					{
						if (567 >= 567 - 22)
						{
							if ((object)xmlQualifiedName.Name == this.m_ႰႭ)
							{
								if (935 <= 935 - 865)
								{
									continue;
								}
								if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
								{
									goto IL_02d7;
								}
								if (943 < 943 - 119)
								{
									goto IL_04b7;
								}
							}
							throw CreateUnknownTypeException(xmlQualifiedName);
						}
						goto IL_01da;
					}
				}
				goto IL_02d7;
				IL_0284:
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (388 > 388 - 199)
				{
					goto IL_012c;
				}
				goto IL_03d7;
				IL_0322:
				flag = ReadNull();
				if (1005 >= 1005 - 57)
				{
					goto IL_00c1;
				}
				goto IL_0371;
				IL_03d7:
				base.Reader.MoveToElement();
				if (!base.Reader.IsEmptyElement)
				{
					goto IL_01e5;
				}
				if (700 < 700 - 279)
				{
					goto IL_0278;
				}
				goto IL_0032;
				IL_02f4:
				if ((object)base.Reader.LocalName != ႠႤႨ)
				{
					goto IL_025b;
				}
				if (975 < 975 - 277)
				{
					continue;
				}
				goto IL_033e;
				IL_012c:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (53 <= 53 - 29)
					{
						goto IL_0284;
					}
					if (base.Reader.NodeType == XmlNodeType.None)
					{
						if ((458 + 458 * 458) % 2 == 0)
						{
							goto IL_04af;
						}
					}
					else
					{
						if (base.Reader.NodeType != XmlNodeType.Element)
						{
							UnknownNode(memoryStream, ႰႰႰ.Ⴓ.ႳႭႨ(863595025));
							if ((72 + 72 * 72) % 2 == 0)
							{
								goto IL_0278;
							}
							goto IL_02d7;
						}
						if (29 <= 29 - 5)
						{
							continue;
						}
						if (array[0])
						{
							goto IL_025b;
						}
						if (906 >= 906 - 387)
						{
							goto IL_02f4;
						}
					}
					goto IL_01e5;
				}
				goto IL_04af;
				IL_003d:
				return memoryStream;
				IL_0371:
				if (!array[3])
				{
					if (642 <= 642 - 431)
					{
						goto IL_04b5;
					}
					if ((object)base.Reader.LocalName == ႠႠႭ)
					{
						if (262 >= 262 - 3)
						{
							if ((object)base.Reader.NamespaceURI != ႠႰႥ)
							{
								goto IL_03bc;
							}
							if (670 < 670 - 287)
							{
								goto IL_01e5;
							}
							memoryStream.Capacity = XmlConvert.ToInt32(base.Reader.ReadElementString());
							array[3] = true;
						}
						goto IL_0278;
					}
				}
				goto IL_03bc;
				IL_0032:
				base.Reader.Skip();
				goto IL_003d;
				IL_02d7:
				if (flag)
				{
					if ((524 + 524 * 524) % 2 == 0)
					{
						break;
					}
				}
				memoryStream = new MemoryStream();
				array = new bool[4];
				goto IL_04b7;
				IL_01e5:
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_012c;
				IL_033e:
				if ((object)base.Reader.NamespaceURI == ႠႰႥ)
				{
					if (49 > 49 - 19)
					{
						memoryStream.Position = XmlConvert.ToInt64(base.Reader.ReadElementString());
						goto IL_01da;
					}
					continue;
				}
				goto IL_025b;
				IL_04b7:
				if (base.Reader.MoveToNextAttribute())
				{
					goto IL_02a9;
				}
				if (false)
				{
					goto IL_0032;
				}
				goto IL_03d7;
				IL_04af:
				ReadEndElement();
				goto IL_04b5;
				IL_02a9:
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					if (487 <= 487 - 101)
					{
						goto IL_012c;
					}
					goto IL_046b;
				}
				goto IL_04b7;
				IL_01da:
				array[0] = true;
				goto IL_0278;
				IL_046b:
				UnknownNode(memoryStream);
				if (false)
				{
					goto IL_0104;
				}
				goto IL_04b7;
				IL_0104:
				if ((object)base.Reader.LocalName == ႠႣႥ)
				{
					if (19 <= 19 - 15)
					{
						goto IL_02f4;
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (false)
						{
							goto IL_025b;
						}
						memoryStream.ReadTimeout = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[1] = true;
						goto IL_0278;
					}
				}
				goto IL_04dc;
			}
			return null;
		}

		private ႥႥႳ.Ⴐ ႰႰ(bool Ⴃ, bool Ⴀ)
		{
			//Discarded unreachable code: IL_0005, IL_0030, IL_004c, IL_006b, IL_0090, IL_00b7, IL_00c2, IL_00e7, IL_0101, IL_011b, IL_0140, IL_016b, IL_0175, IL_0193, IL_01c4, IL_0210, IL_0239, IL_026a, IL_0285, IL_02a6, IL_02c4, IL_02ef
			int whileIterations = default(int);
			int readerCount = default(int);
			ႥႥႳ.Ⴐ ⴐ = default(ႥႥႳ.Ⴐ);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			bool flag = default(bool);
			while (true)
			{
				IL_028a:
				if (Ⴀ)
				{
					goto IL_016d;
				}
				object obj;
				if (858 > 858 - 277)
				{
					obj = null;
					goto IL_0177;
				}
				goto IL_000a;
				IL_0150:
				base.Reader.MoveToContent();
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_00c6;
				IL_023e:
				base.Reader.MoveToElement();
				if (!base.Reader.IsEmptyElement)
				{
					base.Reader.ReadStartElement();
				}
				else if (123 >= 123 - 95)
				{
					base.Reader.Skip();
					return ⴐ;
				}
				goto IL_0150;
				IL_016d:
				obj = GetXsiType();
				goto IL_0177;
				IL_0177:
				xmlQualifiedName = (XmlQualifiedName)obj;
				flag = false;
				goto IL_017a;
				IL_017a:
				if (Ⴃ)
				{
					if (871 < 871 - 745)
					{
						goto IL_0095;
					}
					flag = ReadNull();
					if (130 < 130 - 111)
					{
						break;
					}
				}
				goto IL_01a8;
				IL_00c6:
				if (base.Reader.NodeType == XmlNodeType.EndElement)
				{
					break;
				}
				if (false)
				{
					goto IL_0095;
				}
				if (base.Reader.NodeType != 0)
				{
					goto IL_000a;
				}
				if (688 >= 688 - 624)
				{
					break;
				}
				goto IL_0120;
				IL_0095:
				while (base.Reader.MoveToNextAttribute())
				{
					if (IsXmlnsAttribute(base.Reader.Name))
					{
						continue;
					}
					if (218 >= 218 - 24)
					{
						UnknownNode(ⴐ);
						if (859 >= 859 - 111)
						{
							continue;
						}
						goto IL_028a;
					}
					goto IL_00ec;
				}
				if (false)
				{
					goto IL_017a;
				}
				goto IL_023e;
				IL_01a8:
				if (Ⴀ)
				{
					if (771 <= 771 - 407)
					{
						goto IL_0120;
					}
					if (!(xmlQualifiedName == null))
					{
						if (14 >= 14 - 13)
						{
							if ((object)xmlQualifiedName.Name == ႳႭ)
							{
								if (false)
								{
									goto IL_016d;
								}
								if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
								{
									goto IL_00ec;
								}
								if (374 < 374 - 337)
								{
									goto IL_0110;
								}
							}
							throw CreateUnknownTypeException(xmlQualifiedName);
						}
						goto IL_00c6;
					}
				}
				goto IL_00ec;
				IL_00ec:
				if (!flag)
				{
					goto IL_0110;
				}
				if ((585 + 585 * 585) % 2 == 0)
				{
					return null;
				}
				goto IL_023e;
				IL_000a:
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						goto IL_0150;
					}
					UnknownNode(ⴐ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
				}
				else
				{
					UnknownNode(ⴐ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					if (356 <= 356 - 99)
					{
						goto IL_00c6;
					}
				}
				goto IL_0120;
				IL_0120:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (87 >= 87 - 57)
				{
					goto IL_00c6;
				}
				goto IL_01a8;
				IL_0110:
				ⴐ = new ႥႥႳ.Ⴐ();
				goto IL_0095;
			}
			ReadEndElement();
			return ⴐ;
		}

		private ႥႥႨ.Ⴜ ႰႠ(bool Ⴃ, bool Ⴀ)
		{
			//Discarded unreachable code: IL_0005, IL_002d, IL_0048, IL_0061, IL_008b, IL_00b0, IL_00bb, IL_00e7, IL_0102, IL_011f, IL_0150, IL_0178, IL_0182, IL_01a0, IL_01d1, IL_01f5, IL_021a, IL_0245, IL_0276, IL_0291, IL_02b1, IL_02d5, IL_0301
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			int whileIterations = default(int);
			int readerCount = default(int);
			bool flag = default(bool);
			ႥႥႨ.Ⴜ ⴜ = default(ႥႥႨ.Ⴜ);
			while (true)
			{
				object obj;
				if (!Ⴀ)
				{
					if (false)
					{
						goto IL_015d;
					}
					obj = null;
				}
				else
				{
					obj = GetXsiType();
				}
				xmlQualifiedName = (XmlQualifiedName)obj;
				goto IL_0188;
				IL_015d:
				base.Reader.MoveToContent();
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_00bf;
				IL_0124:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (1019 >= 1019 - 176)
				{
					goto IL_00bf;
				}
				goto IL_02da;
				IL_0152:
				base.Reader.ReadStartElement();
				goto IL_015d;
				IL_0090:
				while (base.Reader.MoveToNextAttribute())
				{
					if (IsXmlnsAttribute(base.Reader.Name))
					{
						continue;
					}
					goto IL_0079;
				}
				if (227 < 227 - 38)
				{
					goto IL_0124;
				}
				base.Reader.MoveToElement();
				goto IL_0256;
				IL_0188:
				flag = false;
				while (Ⴃ)
				{
					if (1006 < 1006 - 586)
					{
						continue;
					}
					goto IL_004a;
				}
				goto IL_01b5;
				IL_00bf:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (675 < 675 - 363)
					{
						goto IL_0032;
					}
					if (base.Reader.NodeType != 0)
					{
						if (base.Reader.NodeType == XmlNodeType.Element)
						{
							if (141 <= 141 - 2)
							{
								goto IL_0188;
							}
							UnknownNode(ⴜ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
						}
						else
						{
							UnknownNode(ⴜ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
							if (false)
							{
								goto IL_02da;
							}
						}
						goto IL_0124;
					}
					if (false)
					{
						goto IL_0256;
					}
				}
				ReadEndElement();
				break;
				IL_004a:
				flag = ReadNull();
				if (989 < 989 - 114)
				{
					goto IL_00bf;
				}
				goto IL_01b5;
				IL_01b5:
				if (Ⴀ)
				{
					if (722 < 722 - 703)
					{
						continue;
					}
					if (!(xmlQualifiedName == null))
					{
						if (961 < 961 - 269)
						{
							goto IL_0152;
						}
						goto IL_02da;
					}
				}
				goto IL_00ec;
				IL_02da:
				if ((object)xmlQualifiedName.Name == ႭႥ)
				{
					if (278 < 278 - 131)
					{
						goto IL_0188;
					}
					if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
					{
						goto IL_00ec;
					}
					if (false)
					{
						goto IL_01b5;
					}
				}
				goto IL_01a5;
				IL_0256:
				while (base.Reader.IsEmptyElement)
				{
					if (643 < 643 - 85)
					{
						continue;
					}
					goto IL_0107;
				}
				goto IL_0152;
				IL_01a5:
				throw CreateUnknownTypeException(xmlQualifiedName);
				IL_00ec:
				if (flag)
				{
					if (795 >= 795 - 177)
					{
						return null;
					}
					goto IL_01a5;
				}
				ⴜ = new ႥႥႨ.Ⴜ();
				goto IL_0090;
				IL_0079:
				if (false)
				{
					break;
				}
				goto IL_0032;
				IL_0107:
				base.Reader.Skip();
				return ⴜ;
				IL_0032:
				UnknownNode(ⴜ);
				if ((27 + 27 * 27) % 2 == 0)
				{
					goto IL_0090;
				}
				goto IL_0107;
			}
			return ⴜ;
		}

		private ႥႥႨ.Ⴅ ႰႤ(bool Ⴃ, bool Ⴀ)
		{
			//Discarded unreachable code: IL_0005, IL_0030, IL_004e, IL_0070, IL_0097, IL_00bf, IL_00f1, IL_0109, IL_0123, IL_0147, IL_0172, IL_017c, IL_019d, IL_01cb, IL_01ed, IL_0212, IL_023a, IL_026b, IL_0283, IL_02a1, IL_02bc, IL_02e1
			if (Ⴀ)
			{
				goto IL_0174;
			}
			if (928 < 928 - 207)
			{
				goto IL_009c;
			}
			object obj = null;
			goto IL_0181;
			IL_026d:
			ႥႥႨ.Ⴅ ⴅ = default(ႥႥႨ.Ⴅ);
			UnknownNode(ⴅ, ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			goto IL_0125;
			IL_023f:
			base.Reader.MoveToElement();
			if (!base.Reader.IsEmptyElement)
			{
				goto IL_014c;
			}
			if (430 > 430 - 49)
			{
				base.Reader.Skip();
				goto IL_0116;
			}
			goto IL_026d;
			IL_0174:
			obj = GetXsiType();
			goto IL_0181;
			IL_0181:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			if (Ⴃ)
			{
				if (999 <= 999 - 477)
				{
					goto IL_0035;
				}
				flag = ReadNull();
				if (836 < 836 - 351)
				{
					goto IL_0116;
				}
			}
			if (Ⴀ)
			{
				if (245 <= 245 - 26)
				{
					goto IL_0131;
				}
				if (!(xmlQualifiedName == null))
				{
					if (109 >= 109 - 102)
					{
						while ((object)xmlQualifiedName.Name == ႤႥ)
						{
							if (false)
							{
								continue;
							}
							goto IL_01f2;
						}
						goto IL_01a2;
					}
					goto IL_023f;
				}
			}
			goto IL_00f6;
			IL_0165:
			int readerCount = base.ReaderCount;
			goto IL_00c9;
			IL_0116:
			return ⴅ;
			IL_0163:
			int whileIterations = 0;
			goto IL_0165;
			IL_01b0:
			return ⴅ;
			IL_0088:
			if ((501 + 501 * 501) % 2 == 0)
			{
				goto IL_0035;
			}
			goto IL_00f6;
			IL_0035:
			UnknownNode(ⴅ);
			if ((207 + 207 * 207) % 2 == 0)
			{
				goto IL_009c;
			}
			goto IL_0217;
			IL_0217:
			do
			{
				UnknownNode(ⴅ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
			}
			while (false);
			goto IL_0125;
			IL_000a:
			if (base.Reader.NodeType != XmlNodeType.Element)
			{
				goto IL_0217;
			}
			if (false)
			{
				goto IL_0163;
			}
			goto IL_026d;
			IL_01f2:
			if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
			{
				goto IL_00f6;
			}
			if (false)
			{
				goto IL_0125;
			}
			goto IL_01a2;
			IL_0125:
			base.Reader.MoveToContent();
			goto IL_0131;
			IL_01a2:
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_00f6:
			if (flag)
			{
				if (973 > 973 - 737)
				{
					return null;
				}
				goto IL_0165;
			}
			ⴅ = new ႥႥႨ.Ⴅ();
			goto IL_009c;
			IL_0131:
			CheckReaderCount(ref whileIterations, ref readerCount);
			if ((89 + 89 * 89) % 2 == 0)
			{
				goto IL_00c9;
			}
			goto IL_014c;
			IL_00c9:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (489 < 489 - 190)
				{
					goto IL_0174;
				}
				if (base.Reader.NodeType != 0)
				{
					goto IL_000a;
				}
				if (678 < 678 - 558)
				{
					goto IL_01b0;
				}
			}
			ReadEndElement();
			goto IL_01b0;
			IL_014c:
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			goto IL_0163;
			IL_009c:
			while (base.Reader.MoveToNextAttribute())
			{
				if (IsXmlnsAttribute(base.Reader.Name))
				{
					continue;
				}
				goto IL_0088;
			}
			if (332 <= 332 - 174)
			{
				goto IL_000a;
			}
			goto IL_023f;
		}

		private ChatmanCentralConfiguration ႰႼ(bool Ⴃ, bool Ⴀ)
		{
			//Discarded unreachable code: IL_001f, IL_0043, IL_006f, IL_0098, IL_00ba, IL_00e4, IL_010c, IL_013d, IL_0154, IL_017c, IL_019a, IL_01c8, IL_01f4, IL_0214, IL_025e, IL_0279, IL_0298, IL_02c8, IL_02f6, IL_0319, IL_0343, IL_0362, IL_036f, IL_038f, IL_03c2, IL_03e6, IL_0402, IL_0421, IL_0445, IL_0472, IL_047d, IL_04a6, IL_04d7, IL_04f4, IL_051c, IL_0547, IL_0572, IL_0592, IL_05c0, IL_05f4, IL_0625, IL_064f, IL_067f, IL_06a0, IL_06d3
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			bool flag = default(bool);
			ChatmanCentralConfiguration chatmanCentralConfiguration = default(ChatmanCentralConfiguration);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				if (Ⴀ)
				{
					obj = GetXsiType();
				}
				else
				{
					if (483 <= 483 - 245)
					{
						goto IL_029d;
					}
					obj = null;
				}
				xmlQualifiedName = (XmlQualifiedName)obj;
				flag = false;
				while (Ⴃ)
				{
					if (false)
					{
						continue;
					}
					goto IL_0181;
				}
				goto IL_01f9;
				IL_0391:
				base.Reader.MoveToElement();
				if (base.Reader.IsEmptyElement)
				{
					if (false)
					{
						goto IL_0111;
					}
					base.Reader.Skip();
					goto IL_05a2;
				}
				goto IL_05cd;
				IL_05a2:
				return chatmanCentralConfiguration;
				IL_0111:
				if ((object)base.Reader.NamespaceURI == ႠႰႥ)
				{
					if (273 > 273 - 180)
					{
						goto IL_01d5;
					}
					goto IL_01eb;
				}
				goto IL_02fb;
				IL_01cd:
				throw CreateUnknownTypeException(xmlQualifiedName);
				IL_05cd:
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				goto IL_05e4;
				IL_0181:
				flag = ReadNull();
				if ((699 + 699 * 699) % 2 == 0)
				{
					goto IL_01f9;
				}
				goto IL_05cd;
				IL_01f9:
				if (!Ⴀ)
				{
					goto IL_05a4;
				}
				if ((435 + 435 * 435) % 2 == 0)
				{
					goto IL_0426;
				}
				goto IL_05c5;
				IL_01eb:
				array[4] = true;
				goto IL_0156;
				IL_05a4:
				if (flag)
				{
					if (496 > 496 - 481)
					{
						break;
					}
				}
				goto IL_0142;
				IL_03eb:
				UnknownNode(chatmanCentralConfiguration);
				if (104 > 104 - 64)
				{
					goto IL_0521;
				}
				goto IL_05a2;
				IL_0142:
				chatmanCentralConfiguration = new ChatmanCentralConfiguration();
				array = new bool[6];
				goto IL_0521;
				IL_0521:
				while (base.Reader.MoveToNextAttribute())
				{
					if (IsXmlnsAttribute(base.Reader.Name))
					{
						continue;
					}
					goto IL_06bd;
				}
				if (363 < 363 - 304)
				{
					goto IL_0142;
				}
				goto IL_0391;
				IL_01d5:
				chatmanCentralConfiguration.LastUpdateCheck = XmlSerializationReader.ToDateTime(base.Reader.ReadElementString());
				goto IL_01eb;
				IL_06bd:
				if (392 <= 392 - 248)
				{
					goto IL_0016;
				}
				goto IL_03eb;
				IL_0016:
				array[1] = true;
				goto IL_0156;
				IL_0156:
				base.Reader.MoveToContent();
				goto IL_0162;
				IL_0162:
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (63 > 63 - 18)
				{
					goto IL_00bc;
				}
				goto IL_02fb;
				IL_00bc:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (527 < 527 - 306)
					{
						goto IL_0162;
					}
					if (base.Reader.NodeType != 0)
					{
						goto IL_0482;
					}
					if (false)
					{
						goto IL_0111;
					}
				}
				goto IL_05c5;
				IL_009d:
				if (array[4])
				{
					goto IL_02fb;
				}
				if (false)
				{
					goto IL_0482;
				}
				goto IL_04ab;
				IL_0263:
				UnknownNode(chatmanCentralConfiguration, ႰႰႰ.Ⴐ.ႳႭႨ(863595018));
				goto IL_0156;
				IL_05f9:
				if ((object)base.Reader.NamespaceURI != ႠႰႥ)
				{
					goto IL_009d;
				}
				if (693 > 693 - 136)
				{
					chatmanCentralConfiguration.NextUpdateCheck = XmlSerializationReader.ToDateTime(base.Reader.ReadElementString());
					array[3] = true;
					goto IL_0156;
				}
				goto IL_04f9;
				IL_0482:
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					UnknownNode(chatmanCentralConfiguration, ႰႰႰ.Ⴄ.ႳႭႨ(863595025));
					if (133 >= 133 - 83)
					{
						goto IL_0156;
					}
					goto IL_0359;
				}
				if (798 < 798 - 670)
				{
					goto IL_03eb;
				}
				goto IL_04d9;
				IL_02fb:
				if (!array[5])
				{
					if (1000 >= 1000 - 431)
					{
						if ((object)base.Reader.LocalName != ႠႰႨ)
						{
							goto IL_0263;
						}
						if (false)
						{
							goto IL_05e4;
						}
					}
					if ((object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						if (79 >= 79 - 57)
						{
							chatmanCentralConfiguration.DisplayedMessageCounter = XmlConvert.ToInt32(base.Reader.ReadElementString());
							goto IL_03dd;
						}
						goto IL_04ab;
					}
				}
				goto IL_0263;
				IL_04d9:
				if (!array[0])
				{
					if (200 < 200 - 142)
					{
						goto IL_03dd;
					}
					goto IL_04f9;
				}
				goto IL_0577;
				IL_04f9:
				if ((object)base.Reader.LocalName != ႠႷႼ)
				{
					goto IL_0577;
				}
				if (121 >= 121 - 55)
				{
					goto IL_029d;
				}
				goto IL_05c5;
				IL_0577:
				if (!array[1])
				{
					if (195 < 195 - 106)
					{
						goto IL_01cd;
					}
					if ((object)base.Reader.LocalName == this.m_ႷႣ)
					{
						if (310 < 310 - 173)
						{
							goto IL_05cd;
						}
						if ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if ((176 + 176 * 176) % 2 == 0)
							{
								chatmanCentralConfiguration.PAC = base.Reader.ReadElementString();
								goto IL_0016;
							}
							goto IL_05f9;
						}
					}
				}
				if (!array[2])
				{
					if (false)
					{
						goto IL_04f9;
					}
					if ((object)base.Reader.LocalName == ႠႠႨ)
					{
						if (false)
						{
							goto IL_04d9;
						}
						if ((object)base.Reader.NamespaceURI == ႠႰႥ)
						{
							if (237 > 237 - 21)
							{
								chatmanCentralConfiguration.DW = base.Reader.ReadElementString();
								array[2] = true;
							}
							goto IL_0156;
						}
					}
				}
				if (!array[3])
				{
					if (false)
					{
						break;
					}
					if ((object)base.Reader.LocalName == ႨႷ)
					{
						if (false)
						{
							goto IL_0359;
						}
						goto IL_05f9;
					}
				}
				goto IL_009d;
				IL_05e4:
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_00bc;
				IL_0426:
				if (!(xmlQualifiedName == null))
				{
					if (622 >= 622 - 70)
					{
						if ((object)xmlQualifiedName.Name == ႠႠႤ)
						{
							if (false)
							{
								goto IL_0156;
							}
							if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
							{
								goto IL_05a4;
							}
							if (815 < 815 - 247)
							{
								goto IL_01d5;
							}
						}
						goto IL_01cd;
					}
					goto IL_0391;
				}
				goto IL_05a4;
				IL_0359:
				array[0] = true;
				goto IL_0156;
				IL_05c5:
				ReadEndElement();
				return chatmanCentralConfiguration;
				IL_03dd:
				array[5] = true;
				goto IL_0156;
				IL_04ab:
				if ((object)base.Reader.LocalName == ႤႤ)
				{
					if (667 < 667 - 360)
					{
						continue;
					}
					goto IL_0111;
				}
				goto IL_02fb;
				IL_029d:
				if ((object)base.Reader.NamespaceURI == ႠႰႥ)
				{
					if (false)
					{
						goto IL_0426;
					}
					chatmanCentralConfiguration.PAP = base.Reader.ReadElementString();
					goto IL_0359;
				}
				goto IL_0577;
			}
			return null;
		}

		private ႥႥႨ.Ⴗ ႠႭ(bool Ⴃ, bool Ⴀ)
		{
			//Discarded unreachable code: IL_0005, IL_002d, IL_0049, IL_0067, IL_0091, IL_00b5, IL_00c0, IL_00ef, IL_0106, IL_0120, IL_014e, IL_0176, IL_0183, IL_01a0, IL_01d0, IL_01f8, IL_021e, IL_024a, IL_027e, IL_0299, IL_02b9, IL_02d6, IL_0302
			ႥႥႨ.Ⴗ ⴗ = default(ႥႥႨ.Ⴗ);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			bool flag = default(bool);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				if (Ⴀ)
				{
					goto IL_017b;
				}
				object obj;
				if ((764 + 764 * 764) % 2 == 0)
				{
					obj = null;
					goto IL_0188;
				}
				goto IL_0125;
				IL_0032:
				UnknownNode(ⴗ);
				if (399 >= 399 - 78)
				{
					goto IL_0096;
				}
				goto IL_0113;
				IL_01a5:
				throw CreateUnknownTypeException(xmlQualifiedName);
				IL_017b:
				obj = GetXsiType();
				goto IL_0188;
				IL_0188:
				xmlQualifiedName = (XmlQualifiedName)obj;
				flag = false;
				if (Ⴃ)
				{
					if (false)
					{
						goto IL_017b;
					}
					flag = ReadNull();
					if (false)
					{
						goto IL_0096;
					}
				}
				if (Ⴀ)
				{
					if (false)
					{
						continue;
					}
					if (!(xmlQualifiedName == null))
					{
						if (false)
						{
							goto IL_0096;
						}
						if ((object)xmlQualifiedName.Name != ႠႷႷ)
						{
							goto IL_01a5;
						}
						if (673 < 673 - 579)
						{
							goto IL_0131;
						}
						goto IL_01fd;
					}
				}
				goto IL_00f1;
				IL_0131:
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (809 >= 809 - 525)
				{
					goto IL_00c7;
				}
				goto IL_017b;
				IL_024f:
				base.Reader.MoveToElement();
				if (!base.Reader.IsEmptyElement)
				{
					base.Reader.ReadStartElement();
					goto IL_015b;
				}
				if (415 >= 415 - 408)
				{
					goto IL_0108;
				}
				goto IL_0125;
				IL_0096:
				while (base.Reader.MoveToNextAttribute())
				{
					if (IsXmlnsAttribute(base.Reader.Name))
					{
						continue;
					}
					if (false)
					{
						continue;
					}
					goto IL_0032;
				}
				if (false)
				{
					goto IL_0108;
				}
				goto IL_024f;
				IL_0125:
				base.Reader.MoveToContent();
				goto IL_0131;
				IL_0108:
				base.Reader.Skip();
				goto IL_0113;
				IL_01fd:
				if ((object)xmlQualifiedName.Namespace == ႠႰႥ)
				{
					goto IL_00f1;
				}
				if (909 < 909 - 89)
				{
					goto IL_015b;
				}
				goto IL_01a5;
				IL_015b:
				base.Reader.MoveToContent();
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_00c7;
				IL_00c7:
				if (base.Reader.NodeType == XmlNodeType.EndElement)
				{
					break;
				}
				if (377 >= 377 - 317)
				{
					if (base.Reader.NodeType != 0)
					{
						if (base.Reader.NodeType == XmlNodeType.Element)
						{
							if (false)
							{
								goto IL_01fd;
							}
							UnknownNode(ⴗ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
						}
						else
						{
							UnknownNode(ⴗ, ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
							if (633 <= 633 - 196)
							{
								goto IL_0032;
							}
						}
					}
					else if (360 > 360 - 313)
					{
						break;
					}
					goto IL_0125;
				}
				goto IL_024f;
				IL_00f1:
				if (flag)
				{
					if ((324 + 324 * 324) % 2 == 0)
					{
						return null;
					}
					goto IL_01fd;
				}
				ⴗ = new ႥႥႨ.Ⴗ();
				goto IL_0096;
				IL_0113:
				return ⴗ;
			}
			ReadEndElement();
			return ⴗ;
		}

		private UrlConfiguration ႠႳ(bool Ⴅ, bool Ⴃ)
		{
			int num = 22;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			UrlConfiguration urlConfiguration = default(UrlConfiguration);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴃ ? 30 : 8);
					break;
				case 8:
					obj = null;
					goto IL_00a7;
				case 30:
					obj = GetXsiType();
					goto IL_00a7;
				case 3:
					flag = ReadNull();
					num = 10;
					break;
				case 10:
					num = ((!Ⴃ) ? 12 : 17);
					break;
				case 17:
					num = ((xmlQualifiedName == null) ? 12 : 32);
					break;
				case 32:
					num = (((object)xmlQualifiedName.Name != ႠႰႷ) ? 2 : 24);
					break;
				case 24:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 12 : 2);
					break;
				case 2:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 12:
					num = ((!flag) ? 28 : 7);
					break;
				case 7:
					return null;
				case 28:
					urlConfiguration = new UrlConfiguration();
					array = new bool[2];
					num = 19;
					break;
				case 18:
					num = (array[0] ? 13 : 27);
					break;
				case 27:
					num = (((object)base.Reader.LocalName != this.m_ႥႳ) ? 13 : 15);
					break;
				case 15:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 13 : 20);
					break;
				case 20:
					urlConfiguration.Key = base.Reader.Value;
					array[0] = true;
					num = 19;
					break;
				case 13:
					num = (array[1] ? 25 : 0);
					break;
				case 0:
					num = (((object)base.Reader.LocalName != this.m_ႰႰ) ? 25 : 31);
					break;
				case 31:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 25 : 5);
					break;
				case 5:
					urlConfiguration.Url = base.Reader.Value;
					array[1] = true;
					num = 19;
					break;
				case 25:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 19 : 29);
					break;
				case 29:
					UnknownNode(urlConfiguration, ႰႰႰ.Ⴐ.ႳႭႨ(863595019));
					goto case 19;
				case 19:
					num = (base.Reader.MoveToNextAttribute() ? 18 : 11);
					break;
				case 11:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 14 : 16);
					break;
				case 16:
					base.Reader.Skip();
					return urlConfiguration;
				case 14:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 4;
					break;
				case 1:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 9 : 26);
					break;
				case 26:
					UnknownNode(urlConfiguration, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					num = 21;
					break;
				case 9:
					UnknownNode(urlConfiguration, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					goto case 21;
				case 21:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 4;
				case 4:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 6 : 23);
					break;
				case 23:
					num = ((base.Reader.NodeType != 0) ? 1 : 6);
					break;
				case 6:
					{
						ReadEndElement();
						return urlConfiguration;
					}
					IL_00a7:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴅ) ? 10 : 3);
					break;
				}
			}
		}

		private UrlConfigurationContainer ႠႨ(bool Ⴐ, bool Ⴗ)
		{
			int num = 12;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			UrlConfigurationContainer urlConfigurationContainer = default(UrlConfigurationContainer);
			int whileIterations = default(int);
			int readerCount = default(int);
			List<UrlConfiguration> urls = default(List<UrlConfiguration>);
			int whileIterations2 = default(int);
			int readerCount2 = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴗ ? 25 : 2);
					break;
				case 2:
					obj = null;
					goto IL_00df;
				case 25:
					obj = GetXsiType();
					goto IL_00df;
				case 26:
					flag = ReadNull();
					num = 28;
					break;
				case 28:
					num = ((!Ⴗ) ? 46 : 0);
					break;
				case 0:
					num = ((xmlQualifiedName == null) ? 46 : 15);
					break;
				case 15:
					num = (((object)xmlQualifiedName.Name == ႠႣႭ) ? 1 : 5);
					break;
				case 1:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 46 : 5);
					break;
				case 5:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 46:
					num = ((!flag) ? 6 : 31);
					break;
				case 31:
					return null;
				case 6:
					urlConfigurationContainer = new UrlConfigurationContainer();
					num = ((urlConfigurationContainer.Urls != null) ? 3 : 45);
					break;
				case 45:
					urlConfigurationContainer.Urls = new List<UrlConfiguration>();
					goto case 3;
				case 3:
					_ = urlConfigurationContainer.Urls;
					num = 29;
					break;
				case 42:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 29 : 37);
					break;
				case 37:
					UnknownNode(urlConfigurationContainer);
					goto case 29;
				case 29:
					num = (base.Reader.MoveToNextAttribute() ? 42 : 17);
					break;
				case 17:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 7 : 35);
					break;
				case 35:
					base.Reader.Skip();
					return urlConfigurationContainer;
				case 7:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 40;
					break;
				case 27:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 41 : 24);
					break;
				case 24:
					num = (((object)base.Reader.LocalName != this.m_ႼႷ) ? 21 : 18);
					break;
				case 18:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 21 : 32);
					break;
				case 32:
					num = (ReadNull() ? 39 : 19);
					break;
				case 19:
					num = ((urlConfigurationContainer.Urls != null) ? 36 : 23);
					break;
				case 23:
					urlConfigurationContainer.Urls = new List<UrlConfiguration>();
					goto case 36;
				case 36:
					urls = urlConfigurationContainer.Urls;
					num = ((!base.Reader.IsEmptyElement) ? 8 : 38);
					break;
				case 38:
					base.Reader.Skip();
					num = 39;
					break;
				case 8:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations2 = 0;
					readerCount2 = base.ReaderCount;
					num = 10;
					break;
				case 34:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 16 : 20);
					break;
				case 20:
					num = (((object)base.Reader.LocalName != ႨႰ) ? 43 : 11);
					break;
				case 11:
					num = (((object)base.Reader.NamespaceURI != ႠႰႥ) ? 43 : 4);
					break;
				case 4:
					num = ((urls != null) ? 33 : 22);
					break;
				case 22:
					base.Reader.Skip();
					num = 13;
					break;
				case 33:
					urls.Add(ႠႳ(Ⴅ: true, Ⴃ: true));
					num = 13;
					break;
				case 43:
					UnknownNode(null, ႰႰႰ.Ⴄ.ႳႭႨ(863595030));
					num = 13;
					break;
				case 16:
					UnknownNode(null, ႰႰႰ.Ⴍ.ႳႭႨ(863595021));
					goto case 13;
				case 13:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations2, ref readerCount2);
					goto case 10;
				case 10:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 44 : 14);
					break;
				case 14:
					num = ((base.Reader.NodeType != 0) ? 34 : 44);
					break;
				case 44:
					ReadEndElement();
					num = 39;
					break;
				case 21:
					UnknownNode(urlConfigurationContainer, ႰႰႰ.Ⴗ.ႳႭႨ(863595026));
					num = 39;
					break;
				case 41:
					UnknownNode(urlConfigurationContainer, ႰႰႰ.Ⴐ.ႳႭႨ(863595016));
					goto case 39;
				case 39:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 40;
				case 40:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 30 : 9);
					break;
				case 9:
					num = ((base.Reader.NodeType != 0) ? 27 : 30);
					break;
				case 30:
					{
						ReadEndElement();
						return urlConfigurationContainer;
					}
					IL_00df:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴐ) ? 28 : 26);
					break;
				}
			}
		}

		private unsafe ႥႥႨ.Ⴓ ႳႷႣ(bool Ⴐ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴐ ? GetXsiType() : null;
			if (Ⴐ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != this.m_ႰႥ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			ႥႥႨ.Ⴓ ⴓ;
			try
			{
				ⴓ = (ႥႥႨ.Ⴓ)Activator.CreateInstance(typeof(ႥႥႨ.Ⴓ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴓ.ႳႭႨ(863595031));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴐ.ႳႭႨ(863595017));
			}
			bool[] array = new bool[8];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴓ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴓ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == ႤႷ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(byte*)(&ⴓ.Ⴐ) = XmlConvert.ToByte(base.Reader.ReadElementString());
						array[0] = true;
					}
					else if (!array[1] && (object)base.Reader.LocalName == this.m_ႥႣ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(byte*)(&ⴓ.Ⴈ) = XmlConvert.ToByte(base.Reader.ReadElementString());
						array[1] = true;
					}
					else if (!array[2] && (object)base.Reader.LocalName == ႠႠႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(byte*)(&ⴓ.Ⴓ) = XmlConvert.ToByte(base.Reader.ReadElementString());
						array[2] = true;
					}
					else if (!array[3] && (object)base.Reader.LocalName == ႤႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴓ.Ⴗ = XmlConvert.ToByte(base.Reader.ReadElementString());
						array[3] = true;
					}
					else if (!array[4] && (object)base.Reader.LocalName == this.m_ႰႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(short*)(&ⴓ.Ⴐ) = XmlConvert.ToInt16(base.Reader.ReadElementString());
						array[4] = true;
					}
					else if (!array[5] && (object)base.Reader.LocalName == this.m_ႷႰ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴓ.Ⴈ = XmlConvert.ToInt16(base.Reader.ReadElementString());
						array[5] = true;
					}
					else if (!array[6] && (object)base.Reader.LocalName == ႨႨ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴓ.Ⴐ = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[6] = true;
					}
					else if (!array[7] && (object)base.Reader.LocalName == this.m_ႰႳ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴓ.Ⴓ = XmlConvert.ToInt16(base.Reader.ReadElementString());
						array[7] = true;
					}
					else
					{
						UnknownNode(ⴓ, ႰႰႰ.Ⴍ.ႳႭႨ(863595027));
					}
				}
				else
				{
					UnknownNode(ⴓ, ႰႰႰ.Ⴓ.ႳႭႨ(863595029));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴓ;
		}

		private ႥႥႨ.Ⴈ ႳႷႷ(bool Ⴐ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴐ ? GetXsiType() : null;
			if (Ⴐ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != ႠႣႠ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			ႥႥႨ.Ⴈ ⴈ;
			try
			{
				ⴈ = (ႥႥႨ.Ⴈ)Activator.CreateInstance(typeof(ႥႥႨ.Ⴈ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴍ.ႳႭႨ(863595026));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴗ.ႳႭႨ(863595027));
			}
			bool[] array = new bool[3];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴈ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴈ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == ႤႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴈ.Ⴐ = XmlConvert.ToInt16(base.Reader.ReadElementString());
						array[0] = true;
					}
					else if (!array[1] && (object)base.Reader.LocalName == ႠႰႣ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴈ.Ⴈ = XmlConvert.ToInt16(base.Reader.ReadElementString());
						array[1] = true;
					}
					else if (!array[2] && (object)base.Reader.LocalName == ႥႷ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴈ.Ⴓ = XmlConvert.ToInt16(base.Reader.ReadElementString());
						array[2] = true;
					}
					else
					{
						UnknownNode(ⴈ, ႰႰႰ.Ⴄ.ႳႭႨ(863595028));
					}
				}
				else
				{
					UnknownNode(ⴈ, ႰႰႰ.Ⴍ.ႳႭႨ(863595024));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴈ;
		}

		private unsafe ႥႥႨ.Ⴐ ႳႷႥ(bool Ⴀ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴀ ? GetXsiType() : null;
			if (Ⴀ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != ႭႰ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			ႥႥႨ.Ⴐ ⴐ;
			try
			{
				ⴐ = (ႥႥႨ.Ⴐ)Activator.CreateInstance(typeof(ႥႥႨ.Ⴐ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴄ.ႳႭႨ(863595031));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴓ.ႳႭႨ(863595028));
			}
			bool[] array = new bool[8];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴐ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴐ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == ႤႷ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(byte*)(&ⴐ.Ⴐ) = XmlConvert.ToByte(base.Reader.ReadElementString());
						array[0] = true;
					}
					else if (!array[1] && (object)base.Reader.LocalName == this.m_ႥႣ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(byte*)(&ⴐ.Ⴈ) = XmlConvert.ToByte(base.Reader.ReadElementString());
						array[1] = true;
					}
					else if (!array[2] && (object)base.Reader.LocalName == ႠႠႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴐ.Ⴓ = XmlConvert.ToByte(base.Reader.ReadElementString());
						array[2] = true;
					}
					else if (!array[3] && (object)base.Reader.LocalName == ႤႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴐ.Ⴗ = XmlConvert.ToByte(base.Reader.ReadElementString());
						array[3] = true;
					}
					else if (!array[4] && (object)base.Reader.LocalName == this.m_ႰႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(short*)(&ⴐ.Ⴐ) = XmlConvert.ToInt16(base.Reader.ReadElementString());
						array[4] = true;
					}
					else if (!array[5] && (object)base.Reader.LocalName == this.m_ႷႰ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						*(short*)(&ⴐ.Ⴈ) = XmlConvert.ToInt16(base.Reader.ReadElementString());
						array[5] = true;
					}
					else if (!array[6] && (object)base.Reader.LocalName == ႨႨ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴐ.Ⴐ = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[6] = true;
					}
					else if (!array[7] && (object)base.Reader.LocalName == this.m_ႳႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴐ.Ⴈ = XmlConvert.ToInt32(base.Reader.ReadElementString());
						array[7] = true;
					}
					else
					{
						UnknownNode(ⴐ, ႰႰႰ.Ⴐ.ႳႭႨ(863595022));
					}
				}
				else
				{
					UnknownNode(ⴐ, ႰႰႰ.Ⴄ.ႳႭႨ(863595029));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴐ;
		}

		private ႥႥႰ.Ⴜ ႳႷႰ(bool Ⴀ)
		{
			XmlQualifiedName xmlQualifiedName = Ⴀ ? GetXsiType() : null;
			if (Ⴀ && !(xmlQualifiedName == null) && ((object)xmlQualifiedName.Name != this.m_ႷႳ || (object)xmlQualifiedName.Namespace != ႠႰႥ))
			{
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			ႥႥႰ.Ⴜ ⴜ;
			try
			{
				ⴜ = (ႥႥႰ.Ⴜ)Activator.CreateInstance(typeof(ႥႥႰ.Ⴜ), BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.CreateInstance, null, new object[0], null);
			}
			catch (MissingMethodException)
			{
				throw CreateInaccessibleConstructorException(ႰႰႰ.Ⴐ.ႳႭႨ(863595023));
			}
			catch (SecurityException)
			{
				throw CreateCtorHasSecurityException(ႰႰႰ.Ⴍ.ႳႭႨ(863595025));
			}
			bool[] array = new bool[3];
			while (base.Reader.MoveToNextAttribute())
			{
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					UnknownNode(ⴜ);
				}
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				base.Reader.Skip();
				return ⴜ;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			while (base.Reader.NodeType != XmlNodeType.EndElement && base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (!array[0] && (object)base.Reader.LocalName == ႤႼ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴜ.Ⴐ = XmlConvert.ToInt16(base.Reader.ReadElementString());
						array[0] = true;
					}
					else if (!array[1] && (object)base.Reader.LocalName == ႠႰႣ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴜ.Ⴈ = XmlConvert.ToInt16(base.Reader.ReadElementString());
						array[1] = true;
					}
					else if (!array[2] && (object)base.Reader.LocalName == ႥႷ && (object)base.Reader.NamespaceURI == ႠႰႥ)
					{
						ⴜ.Ⴓ = XmlConvert.ToInt16(base.Reader.ReadElementString());
						array[2] = true;
					}
					else
					{
						UnknownNode(ⴜ, ႰႰႰ.Ⴗ.ႳႭႨ(863595024));
					}
				}
				else
				{
					UnknownNode(ⴜ, ႰႰႰ.Ⴐ.ႳႭႨ(863595020));
				}
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			ReadEndElement();
			return ⴜ;
		}

		private ႥႥႰ.Ⴄ ႳႷႠ(string Ⴀ)
		{
			//Discarded unreachable code: IL_0028, IL_002c, IL_0040, IL_0075
			string a;
			if ((a = Ⴀ) == null)
			{
				goto IL_0042;
			}
			if (154 < 154 - 29)
			{
				goto IL_0006;
			}
			goto IL_0054;
			IL_0004:
			return ႥႥႰ.Ⴄ.Ⴈ;
			IL_0006:
			if (a == ႰႰႰ.Ⴗ.ႳႭႨ(863595025))
			{
				goto IL_0004;
			}
			if (990 <= 990 - 165)
			{
				goto IL_0054;
			}
			goto IL_0042;
			IL_0042:
			throw CreateUnknownConstantException(Ⴀ, typeof(ႥႥႰ.Ⴄ));
			IL_0054:
			if (a == ႰႰႰ.Ⴍ.ႳႭႨ(863595163))
			{
				return ႥႥႰ.Ⴄ.Ⴐ;
			}
			if (false)
			{
				goto IL_0004;
			}
			goto IL_0006;
		}

		internal Hashtable ႼႥ()
		{
			int num = 0;
			while (true)
			{
				switch (num)
				{
				default:
					num = ((this.Ⴐ == null) ? 1 : 2);
					break;
				case 1:
				{
					Hashtable hashtable = new Hashtable();
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595163), 0L);
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595030), 1L);
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595034), 2L);
					hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595034), 4L);
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595021), 8L);
					this.Ⴐ = (string)(object)hashtable;
					num = 2;
					break;
				}
				case 2:
					return (Hashtable)(object)this.Ⴐ;
				}
			}
		}

		private ႥႥႰ.Ⴍ ႳႷႤ(string Ⴀ)
		{
			return (ႥႥႰ.Ⴍ)XmlSerializationReader.ToEnum(Ⴀ, ႼႥ(), ႰႰႰ.Ⴗ.ႳႭႨ(863595031));
		}

		private ႥႥႰ.Ⴃ ႳႷႼ(string Ⴀ)
		{
			int num = 5;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴀ) == null) ? 1 : 11);
					break;
				case 11:
					num = ((a == ႰႰႰ.Ⴗ.ႳႭႨ(863595221)) ? 4 : 8);
					break;
				case 8:
					num = ((a == ႰႰႰ.Ⴄ.ႳႭႨ(863595222)) ? 3 : 6);
					break;
				case 6:
					num = ((a == ႰႰႰ.Ⴓ.ႳႭႨ(863595223)) ? 9 : 12);
					break;
				case 12:
					num = ((a == ႰႰႰ.Ⴐ.ႳႭႨ(863595218)) ? 10 : 7);
					break;
				case 7:
					num = ((a == ႰႰႰ.Ⴍ.ႳႭႨ(863595213)) ? 2 : 0);
					break;
				case 0:
					num = 1;
					break;
				case 4:
					return ႥႥႰ.Ⴃ.Ⴐ;
				case 3:
					return ႥႥႰ.Ⴃ.Ⴈ;
				case 9:
					return ႥႥႰ.Ⴃ.Ⴓ;
				case 10:
					return ႥႥႰ.Ⴃ.Ⴗ;
				case 2:
					return ႥႥႰ.Ⴃ.Ⴅ;
				case 1:
					throw CreateUnknownConstantException(Ⴀ, typeof(ႥႥႰ.Ⴃ));
				}
			}
		}

		private ႥႥႰ.Ⴓ ႠႣ(bool Ⴀ, bool Ⴍ)
		{
			int num = 10;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႰ.Ⴓ ⴓ = default(ႥႥႰ.Ⴓ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴍ ? 20 : 11);
					break;
				case 11:
					obj = null;
					goto IL_0085;
				case 20:
					obj = GetXsiType();
					goto IL_0085;
				case 8:
					flag = ReadNull();
					num = 9;
					break;
				case 9:
					num = ((!Ⴍ) ? 23 : 13);
					break;
				case 13:
					num = ((xmlQualifiedName == null) ? 23 : 3);
					break;
				case 3:
					num = (((object)xmlQualifiedName.Name != ႼႼ) ? 6 : 5);
					break;
				case 5:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 23 : 6);
					break;
				case 6:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 23:
					num = ((!flag) ? 19 : 14);
					break;
				case 14:
					return null;
				case 19:
					ⴓ = new ႥႥႰ.Ⴓ();
					num = 16;
					break;
				case 4:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 16 : 18);
					break;
				case 18:
					UnknownNode(ⴓ);
					goto case 16;
				case 16:
					num = (base.Reader.MoveToNextAttribute() ? 4 : 12);
					break;
				case 12:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 15 : 17);
					break;
				case 17:
					base.Reader.Skip();
					return ⴓ;
				case 15:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 21;
					break;
				case 22:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 2 : 7);
					break;
				case 7:
					UnknownNode(ⴓ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					num = 24;
					break;
				case 2:
					UnknownNode(ⴓ, ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					goto case 24;
				case 24:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 21;
				case 21:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 1 : 0);
					break;
				case 0:
					num = ((base.Reader.NodeType == XmlNodeType.None) ? 1 : 22);
					break;
				case 1:
					{
						ReadEndElement();
						return ⴓ;
					}
					IL_0085:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴀ) ? 9 : 8);
					break;
				}
			}
		}

		private ႥႥႰ.Ⴈ ႠႷ(bool Ⴀ, bool Ⴍ)
		{
			int num = 11;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ႥႥႰ.Ⴈ ⴈ = default(ႥႥႰ.Ⴈ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴍ ? 24 : 22);
					break;
				case 22:
					obj = null;
					goto IL_0085;
				case 24:
					obj = GetXsiType();
					goto IL_0085;
				case 5:
					flag = ReadNull();
					num = 10;
					break;
				case 10:
					num = ((!Ⴍ) ? 8 : 20);
					break;
				case 20:
					num = ((xmlQualifiedName == null) ? 8 : 3);
					break;
				case 3:
					num = (((object)xmlQualifiedName.Name != ႠႤ) ? 14 : 2);
					break;
				case 2:
					num = (((object)xmlQualifiedName.Namespace == ႠႰႥ) ? 8 : 14);
					break;
				case 14:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 8:
					num = ((!flag) ? 16 : 4);
					break;
				case 4:
					return null;
				case 16:
					ⴈ = new ႥႥႰ.Ⴈ();
					num = 1;
					break;
				case 7:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 1 : 13);
					break;
				case 13:
					UnknownNode(ⴈ);
					goto case 1;
				case 1:
					num = (base.Reader.MoveToNextAttribute() ? 7 : 18);
					break;
				case 18:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 21 : 6);
					break;
				case 6:
					base.Reader.Skip();
					return ⴈ;
				case 21:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 23;
					break;
				case 12:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 19 : 9);
					break;
				case 9:
					UnknownNode(ⴈ, ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					num = 17;
					break;
				case 19:
					UnknownNode(ⴈ, ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					goto case 17;
				case 17:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 23;
				case 23:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 15 : 0);
					break;
				case 0:
					num = ((base.Reader.NodeType != 0) ? 12 : 15);
					break;
				case 15:
					{
						ReadEndElement();
						return ⴈ;
					}
					IL_0085:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴀ) ? 10 : 5);
					break;
				}
			}
		}

		protected override void InitCallbacks()
		{
		}

		protected override void InitIDs()
		{
			Ⴃ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595028));
			Ⴀ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595030));
			Ⴄ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595026));
			Ⴗ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595178));
			Ⴈ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595035));
			Ⴐ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595190));
			Ⴍ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595178));
			Ⴓ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595141));
			Ⴅ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595035));
			Ⴜ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595032));
			this.m_ႠႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595032));
			ႠႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595031));
			ႠႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595170));
			this.m_ႠႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595032));
			this.m_ႠႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595033));
			ႠႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595038));
			this.m_ႠႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595028));
			this.m_ႠႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595027));
			ႠႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595033));
			ႠႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595194));
			ႤႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595137));
			ႤႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595029));
			ႤႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595024));
			ႤႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595218));
			ႤႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595179));
			ႤႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595106));
			ႤႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595034));
			ႤႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595167));
			ႤႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595215));
			ႤႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595038));
			this.m_ႷႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595213));
			this.m_ႷႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595035));
			this.m_ႷႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595025));
			this.m_ႷႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595038));
			this.m_ႷႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595211));
			this.m_ႷႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595111));
			this.m_ႷႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595183));
			this.m_ႷႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595169));
			this.m_ႷႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595185));
			this.m_ႷႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595039));
			this.m_ႨႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595109));
			ႨႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595032));
			ႨႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595030));
			ႨႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595039));
			ႨႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595036));
			ႨႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595120));
			this.m_ႨႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595033));
			ႨႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595031));
			ႨႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595036));
			this.m_ႨႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595037));
			this.m_ႰႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595124));
			this.m_ႰႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595038));
			this.m_ႰႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595028));
			this.m_ႰႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595037));
			this.m_ႰႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595106));
			this.m_ႰႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595131));
			this.m_ႰႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595039));
			this.m_ႰႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595029));
			this.m_ႰႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595106));
			this.m_ႰႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595215));
			ႭႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595139));
			ႭႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595036));
			ႭႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595138));
			ႭႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595154));
			ႭႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595107));
			ႭႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595169));
			ႭႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595137));
			ႭႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595251));
			ႭႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595172));
			ႭႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595104));
			this.m_ႳႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595140));
			this.m_ႳႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595187));
			this.m_ႳႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595034));
			this.m_ႳႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595107));
			this.m_ႳႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595105));
			this.m_ႳႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595074));
			ႳႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595173));
			ႳႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595035));
			this.m_ႳႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595136));
			this.m_ႳႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595110));
			this.m_ႥႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595072));
			ႥႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595037));
			ႥႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595032));
			ႥႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595104));
			this.m_ႥႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595111));
			this.m_ႥႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595075));
			this.m_ႥႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595106));
			this.m_ႥႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595033));
			ႥႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595190));
			this.m_ႥႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595159));
			this.m_ႼႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595194));
			ႼႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595193));
			ႼႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595038));
			this.m_ႼႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595213));
			this.m_ႼႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595108));
			ႼႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595189));
			this.m_ႼႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595107));
			this.m_ႼႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595039));
			this.m_ႼႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595184));
			ႼႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595170));
			ႠႣႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595143));
			ႠႣႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595104));
			ႠႣႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595156));
			ႠႣႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595109));
			ႠႣႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595113));
			ႠႣႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595177));
			ႠႣႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595109));
			ႠႣႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595186));
			ႠႣႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595214));
			ႠႣႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595117));
			ႠႠႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595093));
			ႠႠႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595191));
			ႠႠႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595172));
			ႠႠႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595260));
			ႠႠႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595121));
			ႠႠႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595097));
			ႠႠႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595122));
			ႠႠႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595183));
			ႠႠႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595121));
			ႠႠႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595125));
			ႠႤႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595034));
			ႠႤႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595127));
			ႠႤႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595122));
			ႠႤႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595125));
			ႠႤႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595129));
			ႠႤႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595430));
			ႠႤႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595128));
			ႠႤႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595126));
			ႠႤႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595195));
			ႠႤႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595074));
			ႠႷႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595241));
			ႠႷႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595180));
			ႠႷႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595124));
			ႠႷႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595132));
			ႠႷႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595186));
			ႠႷႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595438));
			ႠႷႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595133));
			ႠႷႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595165));
			ႠႷႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595073));
			ႠႷႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595208));
			ႠႨႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595125));
			ႠႨႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595162));
			ႠႨႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595177));
			ႠႨႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595079));
			ႠႨႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595083));
			ႠႨႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595163));
			ႠႨႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595082));
			ႠႨႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595074));
			ႠႨႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595193));
			ႠႨႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595013));
			ႠႰႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595222));
			ႠႰႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595196));
			ႠႰႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595241));
			ႠႰႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595087));
			ႠႰႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595209));
			ႠႰႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595035));
			ႠႰႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595084));
			ႠႰႳ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595082));
			ႠႰႥ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			ႠႰႼ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595155));
			ႠႭႣ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595179));
			ႠႭႠ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595088));
			ႠႭႤ = base.Reader.NameTable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595087));
			ႠႭႷ = base.Reader.NameTable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595094));
			ႠႭႨ = base.Reader.NameTable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595092));
			ႠႭႰ = base.Reader.NameTable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595232));
			ႠႭႭ = base.Reader.NameTable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595233));
		}
	}
	public class XmlSerializationWriter1 : XmlSerializationWriter
	{
		public void Write104_ShellUtils(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0061
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
				ႥႣ(ႰႰႰ.Ⴍ.ႳႭႨ(863595170), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (ႥႥႰ.Ⴈ)o, Ⴃ: true, Ⴗ: false);
			}
			else if (557 > 557 - 162)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴐ.ႳႭႨ(863595170), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
			}
		}

		public void Write105_HashUtils(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴗ.ႳႭႨ(863595170), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				case 1:
					TopLevelElement();
					ႥႨ(ႰႰႰ.Ⴄ.ႳႭႨ(863595170), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), (ႥႥႰ.Ⴓ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write106_NotifyCollectionChangedAction(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴓ.ႳႭႨ(863595170), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				case 2:
					WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595168), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), ႳႷႭ((ႥႥႰ.Ⴃ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write107_ZipEntryTimestamp(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴍ.ႳႭႨ(863595168), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					return;
				case 0:
					WriteElementString(ႰႰႰ.Ⴐ.ႳႭႨ(863595168), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), ႳႣႼ((ႥႥႰ.Ⴍ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write108_CompressionMethod(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴄ.ႳႭႨ(863595169), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 2:
					WriteElementString(ႰႰႰ.Ⴗ.ႳႭႨ(863595168), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), ႳႣႤ((ႥႥႰ.Ⴄ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write109_IconDir(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0059
			WriteStartDocument();
			if (o == null)
			{
				if (false)
				{
				}
				WriteEmptyTag(ႰႰႰ.Ⴐ.ႳႭႨ(863595169), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
			}
			else
			{
				ႳႷ(ႰႰႰ.Ⴓ.ႳႭႨ(863595168), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (ႥႥႰ.Ⴜ)o, Ⴃ: false);
			}
		}

		public void Write110_IconDirEntry(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0057
			while (true)
			{
				WriteStartDocument();
				if (o != null)
				{
					break;
				}
				if (456 > 456 - 118)
				{
					WriteEmptyTag(ႰႰႰ.Ⴗ.ႳႭႨ(863595169), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				}
			}
			ႳႣ(ႰႰႰ.Ⴍ.ႳႭႨ(863595169), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (ႥႥႨ.Ⴐ)o, Ⴃ: false);
		}

		public void Write111_GroupIconDir(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴓ.ႳႭႨ(863595169), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				case 0:
					ႳႨ(ႰႰႰ.Ⴄ.ႳႭႨ(863595174), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), (ႥႥႨ.Ⴈ)o, Ⴃ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write112_GroupIconDirEntry(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005a
			WriteStartDocument();
			if (o != null)
			{
				ႳႳ(ႰႰႰ.Ⴐ.ႳႭႨ(863595174), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (ႥႥႨ.Ⴓ)o, Ⴃ: false);
			}
			else if (590 >= 590 - 134)
			{
				WriteEmptyTag(ႰႰႰ.Ⴍ.ႳႭႨ(863595174), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
			}
		}

		public void Write113_UrlConfigurationContainer(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0061
			while (true)
			{
				WriteStartDocument();
				if (o != null)
				{
					break;
				}
				if (733 >= 733 - 550)
				{
					WriteNullTagLiteral(ႰႰႰ.Ⴄ.ႳႭႨ(863595175), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				}
			}
			TopLevelElement();
			ႥႳ(ႰႰႰ.Ⴓ.ႳႭႨ(863595174), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (UrlConfigurationContainer)o, Ⴃ: true, Ⴗ: false);
		}

		public void Write114_UrlConfiguration(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
				ႥႭ(ႰႰႰ.Ⴍ.ႳႭႨ(863595175), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (UrlConfiguration)o, Ⴃ: true, Ⴗ: false);
			}
			else if (535 > 535 - 49)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴐ.ႳႭႨ(863595175), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
			}
		}

		public void Write115_Logger(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴗ.ႳႭႨ(863595174), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				case 1:
					TopLevelElement();
					ႷႼ(ႰႰႰ.Ⴄ.ႳႭႨ(863595172), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), (ႥႥႨ.Ⴗ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write116_ChatmanCentralConfiguration(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
				ႷႤ(ႰႰႰ.Ⴐ.ႳႭႨ(863595172), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (ChatmanCentralConfiguration)o, Ⴃ: true, Ⴗ: false);
			}
			else if (369 >= 369 - 53)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴓ.ႳႭႨ(863595175), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			}
		}

		public void Write117_SimpleOpenFileDialog(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0061
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
			}
			else if (655 > 655 - 451)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴍ.ႳႭႨ(863595172), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
				return;
			}
			ႷႠ(ႰႰႰ.Ⴗ.ႳႭႨ(863595175), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), (ႥႥႨ.Ⴅ)o, Ⴃ: true, Ⴗ: false);
		}

		public void Write118_TextUtils(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 2 : 0);
					break;
				case 0:
					WriteNullTagLiteral(ႰႰႰ.Ⴄ.ႳႭႨ(863595173), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 2:
					TopLevelElement();
					ႷႰ(ႰႰႰ.Ⴓ.ႳႭႨ(863595172), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (ႥႥႨ.Ⴜ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write119_NumericUtils(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 0);
					break;
				case 0:
					WriteNullTagLiteral(ႰႰႰ.Ⴐ.ႳႭႨ(863595173), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				case 1:
					TopLevelElement();
					ႷႥ(ႰႰႰ.Ⴍ.ႳႭႨ(863595173), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (ႥႥႳ.Ⴐ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write120_Frame(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0061
			WriteStartDocument();
			if (o == null)
			{
				if (533 >= 533 - 420)
				{
				}
				WriteNullTagLiteral(ႰႰႰ.Ⴗ.ႳႭႨ(863595172), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
			}
			else
			{
				TopLevelElement();
				ႷႨ(ႰႰႰ.Ⴄ.ႳႭႨ(863595178), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), (ႥႥႳ.Ⴅ)o, Ⴃ: true, Ⴗ: false);
			}
		}

		public void Write121_LoadLibraryExFlags(object o)
		{
			//Discarded unreachable code: IL_005d
			WriteStartDocument();
			if (o == null)
			{
				if (359 <= 359 - 333)
				{
				}
				WriteEmptyTag(ႰႰႰ.Ⴓ.ႳႭႨ(863595173), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			}
			else
			{
				WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595179), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), ႳႣႠ((ႥႥႷ.Ⴄ)o));
			}
		}

		public void Write122_GetLastErrorResult(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o == null)
			{
				if (false)
				{
				}
				WriteEmptyTag(ႰႰႰ.Ⴍ.ႳႭႨ(863595178), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
			}
			else
			{
				WriteElementString(ႰႰႰ.Ⴐ.ႳႭႨ(863595178), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), ႳႣႰ((ႥႥႷ.Ⴅ)o));
			}
		}

		public void Write123_ResourceTypes(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴄ.ႳႭႨ(863595176), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 0:
					WriteElementString(ႰႰႰ.Ⴗ.ႳႭႨ(863595173), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), ႳႣႥ((ႥႥႷ.Ⴀ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write124_Item(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴐ.ႳႭႨ(863595179), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				case 2:
					WriteElementString(ႰႰႰ.Ⴓ.ႳႭႨ(863595178), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), ႳႣႷ((ႥႥႷ.Ⴈ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write125_LoadImageTypes(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005f
			WriteStartDocument();
			if (o == null)
			{
				if (802 >= 802 - 350)
				{
				}
				WriteEmptyTag(ႰႰႰ.Ⴗ.ႳႭႨ(863595178), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
			}
			else
			{
				WriteElementString(ႰႰႰ.Ⴍ.ႳႭႨ(863595179), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), ႳႣႣ((ႥႥႷ.Ⴃ)o));
			}
		}

		public void Write126_SHGetFileInfoFlags(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 2 : 0);
					break;
				case 0:
					WriteEmptyTag(ႰႰႰ.Ⴓ.ႳႭႨ(863595179), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				case 2:
					WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595177), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), ႳႣႨ((ႥႥႷ.Ⴐ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write127_IconUtils(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0060
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
				ႷႳ(ႰႰႰ.Ⴗ.ႳႭႨ(863595179), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), (ႥႥႥ.Ⴅ)o, Ⴓ: true, Ⴗ: false);
			}
			else if ((149 + 149 * 149) % 2 == 0)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴍ.ႳႭႨ(863595176), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
			}
		}

		public void Write128_ResourceUtils(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteNullTagLiteral(ႰႰႰ.Ⴄ.ႳႭႨ(863595182), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 2:
					TopLevelElement();
					ႷႭ(ႰႰႰ.Ⴓ.ႳႭႨ(863595176), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (ႥႥႥ.Ⴗ)o, Ⴓ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write129_FileFormats(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 2 : 0);
					break;
				case 0:
					WriteEmptyTag(ႰႰႰ.Ⴐ.ႳႭႨ(863595176), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				case 2:
					WriteElementString(ႰႰႰ.Ⴓ.ႳႭႨ(863595177), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), ႳႣႳ((FileFormats)o));
					return;
				}
				num = num2;
			}
		}

		public void Write130_SimpleIconExtractor(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0061
			WriteStartDocument();
			if (o == null)
			{
				if (438 >= 438 - 345)
				{
					WriteNullTagLiteral(ႰႰႰ.Ⴗ.ႳႭႨ(863595176), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				}
			}
			TopLevelElement();
			ႣႼ(ႰႰႰ.Ⴄ.ႳႭႨ(863595183), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), (ႥႥႠ.Ⴍ)o, Ⴓ: true, Ⴗ: false);
		}

		public void Write131_IconSize(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o != null)
			{
				WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595180), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), ႳႣႭ((ႥႥႠ.Ⴍ.ႷႼ)o));
			}
			else if ((250 + 250 * 250) % 2 == 0)
			{
				WriteEmptyTag(ႰႰႰ.Ⴓ.ႳႭႨ(863595182), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			}
		}

		public void Write132_FolderType(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴍ.ႳႭႨ(863595177), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					return;
				case 2:
					WriteElementString(ႰႰႰ.Ⴐ.ႳႭႨ(863595177), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), ႳႨႼ((ႥႥႠ.Ⴍ.ႥႰ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write133_Shell32(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴄ.ႳႭႨ(863595181), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 0:
					TopLevelElement();
					ႣႤ(ႰႰႰ.Ⴓ.ႳႭႨ(863595183), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (ႥႥႠ.Ⴅ)o, Ⴓ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write134_SHITEMID(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0059
			WriteStartDocument();
			if (o == null)
			{
				if (false)
				{
				}
				WriteEmptyTag(ႰႰႰ.Ⴐ.ႳႭႨ(863595182), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
			}
			else
			{
				ႳႭ(ႰႰႰ.Ⴓ.ႳႭႨ(863595180), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (ႥႥႠ.Ⴅ.ႥႨ)o, Ⴓ: false);
			}
		}

		public void Write135_ITEMIDLIST(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴗ.ႳႭႨ(863595177), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				case 2:
					Ⴜ(ႰႰႰ.Ⴍ.ႳႭႨ(863595182), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (ႥႥႠ.Ⴅ.ႥႳ)o, Ⴓ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write136_User32(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴓ.ႳႭႨ(863595181), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				case 1:
					TopLevelElement();
					ႣႠ(ႰႰႰ.Ⴐ.ႳႭႨ(863595183), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (ႥႥႠ.Ⴗ)o, Ⴓ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write137_TextOnlyFrame(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0060
			while (true)
			{
				WriteStartDocument();
				if (o != null)
				{
					break;
				}
				if ((954 + 954 * 954) % 2 == 0)
				{
					WriteNullTagLiteral(ႰႰႰ.Ⴍ.ႳႭႨ(863595183), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					return;
				}
			}
			TopLevelElement();
			ႣႰ(ႰႰႰ.Ⴗ.ႳႭႨ(863595182), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), (ႥႥႠ.Ⴐ)o, Ⴄ: true, Ⴍ: false);
		}

		public void Write138_DLLUtils(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0061
			WriteStartDocument();
			if (o == null)
			{
				if (689 >= 689 - 633)
				{
				}
				WriteNullTagLiteral(ႰႰႰ.Ⴄ.ႳႭႨ(863595186), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
			}
			else
			{
				TopLevelElement();
				ႣႥ(ႰႰႰ.Ⴓ.ႳႭႨ(863595186), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (ႥႥႣ.Ⴗ)o, Ⴍ: true, Ⴄ: false);
			}
		}

		public void Write139_DeviceClassController(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteNullTagLiteral(ႰႰႰ.Ⴐ.ႳႭႨ(863595180), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				case 0:
					TopLevelElement();
					ႣႷ(ႰႰႰ.Ⴍ.ႳႭႨ(863595180), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (global::ႳႨႭ.Ⴓ)o, Ⴍ: true, Ⴄ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write140_BrowserExtensionsInstaller(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0059
			WriteStartDocument();
			while (o == null)
			{
				if (6 >= 6 - 2)
				{
					WriteNullTagLiteral(ႰႰႰ.Ⴗ.ႳႭႨ(863595183), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				}
			}
			TopLevelElement();
			ႣႣ(ႰႰႰ.Ⴄ.ႳႭႨ(863595187), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), (ႥႥႣ.Ⴜ)o, Ⴍ: true, Ⴄ: false);
		}

		public void Write141_BaseFileFrame(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o == null)
			{
				if (264 <= 264 - 85)
				{
				}
				WriteNullTagLiteral(ႰႰႰ.Ⴓ.ႳႭႨ(863595187), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			}
			else
			{
				TopLevelElement();
				ႣႨ(ႰႰႰ.Ⴐ.ႳႭႨ(863595181), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (ႥႭႤ.Ⴃ)o, Ⴗ: true, Ⴈ: false);
			}
		}

		public void Write142_PictureTypes(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o == null)
			{
				if ((211 + 211 * 211) % 2 == 0)
				{
					WriteEmptyTag(ႰႰႰ.Ⴍ.ႳႭႨ(863595181), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					return;
				}
			}
			WriteElementString(ႰႰႰ.Ⴐ.ႳႭႨ(863595186), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), ႳႨႤ((ႥႥႤ.Ⴅ.ႥႭ)o));
		}

		public void Write143_RecievedAsEnum(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o == null)
			{
				if (false)
				{
				}
				WriteEmptyTag(ႰႰႰ.Ⴄ.ႳႭႨ(863595184), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
			}
			else
			{
				WriteElementString(ႰႰႰ.Ⴗ.ႳႭႨ(863595180), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), ႳႨႠ((ႥႥႤ.Ⴗ.ႥႤ)o));
			}
		}

		public void Write144_MouseAction(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			while (o == null)
			{
				if ((805 + 805 * 805) % 2 == 0)
				{
					WriteEmptyTag(ႰႰႰ.Ⴐ.ႳႭႨ(863595187), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				}
			}
			WriteElementString(ႰႰႰ.Ⴓ.ႳႭႨ(863595184), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), ႳႨႰ((ႥႥႼ.Ⴈ)o));
		}

		public void Write145_CompressionLevel(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 0);
					break;
				case 0:
					WriteEmptyTag(ႰႰႰ.Ⴗ.ႳႭႨ(863595181), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				case 1:
					WriteElementString(ႰႰႰ.Ⴍ.ႳႭႨ(863595186), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), ႳႨႷ((ႥႥႼ.Ⴓ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write146_CompressionStrategy(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0059
			WriteStartDocument();
			if (o != null)
			{
				WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595185), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), ႳႨႣ((ႥႥႼ.Ⴐ)o));
			}
			else if (22 > 22 - 10)
			{
				WriteEmptyTag(ႰႰႰ.Ⴓ.ႳႭႨ(863595185), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			}
		}

		public void Write147_CompressionMode(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴍ.ႳႭႨ(863595187), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					return;
				case 0:
					WriteElementString(ႰႰႰ.Ⴐ.ႳႭႨ(863595184), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), ႳႨႥ((ႥႥႼ.Ⴀ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write148_CRC32(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteNullTagLiteral(ႰႰႰ.Ⴄ.ႳႭႨ(863595190), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 0:
					TopLevelElement();
					ႣႳ(ႰႰႰ.Ⴓ.ႳႭႨ(863595190), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (ႥႥႨႰ.Ⴗ)o, Ⴗ: true, Ⴈ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write149_VersionUtils(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0061
			WriteStartDocument();
			while (o == null)
			{
				if (874 >= 874 - 581)
				{
					WriteNullTagLiteral(ႰႰႰ.Ⴐ.ႳႭႨ(863595185), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				}
			}
			TopLevelElement();
			ႣႭ(ႰႰႰ.Ⴍ.ႳႭႨ(863595184), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (ႥႥႨႰ.Ⴄ)o, Ⴗ: true, Ⴈ: false);
		}

		public void Write150_HtmlProcessor(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴗ.ႳႭႨ(863595186), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				case 1:
					TopLevelElement();
					ႨႼ(ႰႰႰ.Ⴄ.ႳႭႨ(863595191), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), (ႥႥႨႰ.Ⴈ)o, Ⴗ: true, Ⴈ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write151_FileUtils(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0061
			WriteStartDocument();
			if (o == null)
			{
				if (787 > 787 - 350)
				{
					WriteNullTagLiteral(ႰႰႰ.Ⴓ.ႳႭႨ(863595191), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				}
			}
			TopLevelElement();
			ႨႤ(ႰႰႰ.Ⴐ.ႳႭႨ(863595190), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (FileUtils)o, Ⴗ: true, Ⴈ: false);
		}

		public void Write152_ZlibCodec(object o)
		{
			//Discarded unreachable code: IL_005f
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
				ႨႠ(ႰႰႰ.Ⴗ.ႳႭႨ(863595187), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), (ႥႥႨႰ.Ⴍ)o, Ⴗ: true, Ⴈ: false);
			}
			else if (380 > 380 - 314)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴍ.ႳႭႨ(863595185), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
			}
		}

		public void Write153_EncryptionAlgorithm(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 2 : 0);
					break;
				case 0:
					WriteEmptyTag(ႰႰႰ.Ⴄ.ႳႭႨ(863595188), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 2:
					WriteElementString(ႰႰႰ.Ⴗ.ႳႭႨ(863595184), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), ႳႨႨ((ႥႥႨႰ.Ⴜ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write154_FlushType(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o == null)
			{
				if (false)
				{
				}
				WriteEmptyTag(ႰႰႰ.Ⴐ.ႳႭႨ(863595191), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
			}
			else
			{
				WriteElementString(ႰႰႰ.Ⴓ.ႳႭႨ(863595188), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), ႳႨႳ((ႥႥႨႨ.Ⴓ)o));
			}
		}

		public void Write155_ZIPUtils(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o == null)
			{
				if (630 >= 630 - 104)
				{
				}
				WriteNullTagLiteral(ႰႰႰ.Ⴗ.ႳႭႨ(863595185), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
			}
			else
			{
				TopLevelElement();
				ႨႰ(ႰႰႰ.Ⴄ.ႳႭႨ(863595189), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), (ႥႥႨႨ.Ⴅ)o, Ⴗ: true, Ⴈ: false);
			}
		}

		public void Write156_DynamicActivator(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴓ.ႳႭႨ(863595189), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				case 0:
					TopLevelElement();
					ႨႥ(ႰႰႰ.Ⴐ.ႳႭႨ(863595188), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (ႥႥႨႨ.Ⴈ)o, Ⴈ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write157_Zip64Option(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴍ.ႳႭႨ(863595190), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					return;
				case 0:
					WriteElementString(ႰႰႰ.Ⴐ.ႳႭႨ(863595189), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), ႳႨႭ((ႥႥႨႨ.Ⴀ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write158_URLUtils(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴄ.ႳႭႨ(863595194), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 0:
					TopLevelElement();
					ႨႷ(ႰႰႰ.Ⴓ.ႳႭႨ(863595194), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (ႥႥႨႳ.Ⴃ)o, Ⴈ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write159_Language(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴐ.ႳႭႨ(863595194), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				case 1:
					TopLevelElement();
					ႨႣ(ႰႰႰ.Ⴍ.ႳႭႨ(863595191), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (ႥႥႨႳ.Ⴈ)o, Ⴈ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write160_HTTPUtils(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0060
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
				ႨႨ(ႰႰႰ.Ⴄ.ႳႭႨ(863595195), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), (ႥႥႨႳ.Ⴀ)o, Ⴈ: true, Ⴗ: false);
			}
			else if ((743 + 743 * 743) % 2 == 0)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴗ.ႳႭႨ(863595190), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
			}
		}

		public void Write161_DefaultAudioDeviceController(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteNullTagLiteral(ႰႰႰ.Ⴓ.ႳႭႨ(863595195), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				case 0:
					TopLevelElement();
					ႨႳ(ႰႰႰ.Ⴐ.ႳႭႨ(863595195), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (global::ႳႨႭ.Ⴐ)o, Ⴈ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write162_ExtensionsHelper(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0060
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
				ႨႭ(ႰႰႰ.Ⴗ.ႳႭႨ(863595191), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), (ႥႥႨႷ.Ⴗ)o, Ⴈ: true, Ⴗ: false);
			}
			else if ((803 + 803 * 803) % 2 == 0)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴍ.ႳႭႨ(863595188), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
			}
		}

		public void Write163_ZipErrorAction(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴄ.ႳႭႨ(863595192), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 2:
					WriteElementString(ႰႰႰ.Ⴗ.ႳႭႨ(863595188), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), ႳႳႼ((ႥႥႨႷ.Ⴄ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write164_A(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o == null)
			{
				if (427 > 427 - 46)
				{
					WriteNullTagLiteral(ႰႰႰ.Ⴐ.ႳႭႨ(863595192), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				}
			}
			TopLevelElement();
			WriteSerializable((AuthorizeData)o, ႰႰႰ.Ⴄ.ႳႭႨ(863595193), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), isNullable: true, wrapped: true);
		}

		public void Write165_IconFlags(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o != null)
			{
				WriteElementString(ႰႰႰ.Ⴍ.ႳႭႨ(863595189), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), ႳႳႤ((ႥႥႨႷ.Ⴍ)o));
			}
			else if ((268 + 268 * 268) % 2 == 0)
			{
				WriteEmptyTag(ႰႰႰ.Ⴗ.ႳႭႨ(863595189), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
			}
		}

		public void Write166_ChatmanThread(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0060
			while (true)
			{
				WriteStartDocument();
				if (o != null)
				{
					break;
				}
				if ((650 + 650 * 650) % 2 == 0)
				{
					WriteNullTagLiteral(ႰႰႰ.Ⴓ.ႳႭႨ(863595192), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				}
			}
			TopLevelElement();
			ႳႼ(ႰႰႰ.Ⴐ.ႳႭႨ(863595193), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (ႥႥႨႥ.Ⴓ)o, Ⴗ: true, Ⴓ: false);
		}

		public void Write167_DesktopPoint(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴍ.ႳႭႨ(863595194), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					return;
				case 1:
					TopLevelElement();
					ႳႤ(ႰႰႰ.Ⴗ.ႳႭႨ(863595194), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), (ႥႥႨႥ.Ⴗ)o, Ⴗ: true, Ⴓ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write168_ChatmanMouseButtons(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o == null)
			{
				if ((813 + 813 * 813) % 2 == 0)
				{
					WriteEmptyTag(ႰႰႰ.Ⴄ.ႳႭႨ(863595198), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				}
			}
			WriteElementString(ႰႰႰ.Ⴗ.ႳႭႨ(863595195), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), ႳႳႰ((ႥႥႨႥ.Ⴄ)o));
		}

		public void Write169_ZipProgressEventType(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005c
			WriteStartDocument();
			if (o == null)
			{
				if (416 > 416 - 93)
				{
					WriteEmptyTag(ႰႰႰ.Ⴐ.ႳႭႨ(863595198), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				}
			}
			WriteElementString(ႰႰႰ.Ⴓ.ႳႭႨ(863595193), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), ႳႳႥ((ႥႥႨႥ.Ⴐ)o));
		}

		public void Write170_MailUtils(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteNullTagLiteral(ႰႰႰ.Ⴗ.ႳႭႨ(863595192), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				case 2:
					TopLevelElement();
					ႳႠ(ႰႰႰ.Ⴄ.ႳႭႨ(863595199), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), (ႥႥႨႠ.Ⴀ)o, Ⴗ: true, Ⴓ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write171_FilterCollection(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴓ.ႳႭႨ(863595198), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				case 0:
					TopLevelElement();
					ႳႰ(ႰႰႰ.Ⴐ.ႳႭႨ(863595199), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (ႥႥႨႠ.Ⴍ)o, Ⴗ: true, Ⴓ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write172_ChatmanEnvironment(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0060
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
			}
			else if ((216 + 216 * 216) % 2 == 0)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴍ.ႳႭႨ(863595195), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
				return;
			}
			ႳႥ(ႰႰႰ.Ⴗ.ႳႭႨ(863595193), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), (ႣႳ)o, Ⴗ: true, Ⴓ: false);
		}

		public void Write173_SecurityUtils(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 2 : 0);
					break;
				case 0:
					WriteNullTagLiteral(ႰႰႰ.Ⴄ.ႳႭႨ(863595196), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 2:
					TopLevelElement();
					ႳႷ(ႰႰႰ.Ⴓ.ႳႭႨ(863595199), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (ႥႥႨႣ.Ⴗ)o, Ⴗ: true, Ⴐ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write174_ElevationHelper(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 2 : 0);
					break;
				case 0:
					WriteNullTagLiteral(ႰႰႰ.Ⴐ.ႳႭႨ(863595196), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				case 2:
					TopLevelElement();
					ႳႣ(ႰႰႰ.Ⴍ.ႳႭႨ(863595192), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (ႥႥႨႣ.Ⴗ.ႣႠ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write175_TokenElevationType(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteEmptyTag(ႰႰႰ.Ⴗ.ႳႭႨ(863595198), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				case 1:
					WriteElementString(ႰႰႰ.Ⴍ.ႳႭႨ(863595193), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), ႳႳႷ((ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write176_RegistryAccessor(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴓ.ႳႭႨ(863595196), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				case 0:
					TopLevelElement();
					ႳႨ(ႰႰႰ.Ⴐ.ႳႭႨ(863595197), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (ႥႥႨႣ.Ⴄ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write177_RondyoUtilHelper(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005d
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
				ႳႳ(ႰႰႰ.Ⴗ.ႳႭႨ(863595199), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), (ႥႥႨႣ.Ⴅ)o, Ⴃ: true, Ⴗ: false);
			}
			else if ((71 + 71 * 71) % 2 == 0)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴍ.ႳႭႨ(863595198), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
			}
		}

		public void Write178_DateUtils(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteNullTagLiteral(ႰႰႰ.Ⴄ.ႳႭႨ(863595197), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 0:
					TopLevelElement();
					ႳႭ(ႰႰႰ.Ⴓ.ႳႭႨ(863595197), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (ႥႥႨႣ.Ⴈ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write179_SplashScreenMode(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴐ.ႳႭႨ(863595138), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				case 0:
					WriteElementString(ႰႰႰ.Ⴓ.ႳႭႨ(863595138), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), ႳႳႣ((ႥႥႨႣ.Ⴐ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write180_ZipEntrySource(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005f
			WriteStartDocument();
			while (o == null)
			{
				if (748 >= 748 - 464)
				{
					WriteEmptyTag(ႰႰႰ.Ⴗ.ႳႭႨ(863595196), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				}
			}
			WriteElementString(ႰႰႰ.Ⴍ.ႳႭႨ(863595199), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), ႳႳႨ((ႥႥႨႣ.Ⴜ)o));
		}

		public void Write181_WIN32API(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteNullTagLiteral(ႰႰႰ.Ⴓ.ႳႭႨ(863595139), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				case 2:
					TopLevelElement();
					Ⴜ(ႰႰႰ.Ⴐ.ႳႭႨ(863595139), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (ႥႥႨႭ.Ⴀ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write182_RECT(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteEmptyTag(ႰႰႰ.Ⴍ.ႳႭႨ(863595196), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					return;
				case 0:
					Ⴅ(ႰႰႰ.Ⴐ.ႳႭႨ(863595136), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (ႥႥႨႭ.Ⴀ.ႭႰ)o, Ⴃ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write183_WINDOWPLACEMENT(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005a
			WriteStartDocument();
			while (o == null)
			{
				if (262 > 262 - 152)
				{
					WriteEmptyTag(ႰႰႰ.Ⴄ.ႳႭႨ(863595138), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				}
			}
			Ⴃ(ႰႰႰ.Ⴗ.ႳႭႨ(863595197), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), (ႥႥႨႭ.Ⴀ.ႭႨ)o, Ⴃ: false);
		}

		public void Write184_MessageBoxUtils(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0060
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
				Ⴄ(ႰႰႰ.Ⴍ.ႳႭႨ(863595197), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (ႥႥႨႭ.Ⴗ)o, Ⴃ: true, Ⴗ: false);
			}
			else if ((964 + 964 * 964) % 2 == 0)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴐ.ႳႭႨ(863595137), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
			}
		}

		public void Write185_ChatManMessageBoxButtons(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 0);
					break;
				case 0:
					WriteEmptyTag(ႰႰႰ.Ⴗ.ႳႭႨ(863595138), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				case 1:
					WriteElementString(ႰႰႰ.Ⴍ.ႳႭႨ(863595138), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), ႳႳႳ((ႥႥႨႭ.Ⴍ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write186_ChatManDialogResult(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005f
			WriteStartDocument();
			while (o == null)
			{
				if (933 > 933 - 594)
				{
					WriteEmptyTag(ႰႰႰ.Ⴓ.ႳႭႨ(863595136), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					return;
				}
			}
			WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595139), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), ႳႳႭ((ႥႥႨႭ.Ⴃ)o));
		}

		public void Write187_TextEncodings(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o != null)
			{
				WriteElementString(ႰႰႰ.Ⴐ.ႳႭႨ(863595142), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), ႳႭႼ((ႥႥႨႤ.Ⴄ)o));
			}
			else if ((697 + 697 * 697) % 2 == 0)
			{
				WriteEmptyTag(ႰႰႰ.Ⴍ.ႳႭႨ(863595139), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
			}
		}

		public void Write188_FrameFlags(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteEmptyTag(ႰႰႰ.Ⴄ.ႳႭႨ(863595136), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 1:
					WriteElementString(ႰႰႰ.Ⴗ.ႳႭႨ(863595139), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), ႳႭႤ((ႥႥႨႤ.Ⴀ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write189_TimeStamps(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005f
			WriteStartDocument();
			while (o == null)
			{
				if (703 > 703 - 642)
				{
					WriteEmptyTag(ႰႰႰ.Ⴐ.ႳႭႨ(863595143), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				}
			}
			WriteElementString(ႰႰႰ.Ⴓ.ႳႭႨ(863595137), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), ႳႭႠ((ႥႥႨႤ.Ⴓ)o));
		}

		public void Write190_IncrementDecrement(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005f
			WriteStartDocument();
			if (o == null)
			{
				if (543 >= 543 - 370)
				{
				}
				WriteEmptyTag(ႰႰႰ.Ⴗ.ႳႭႨ(863595136), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
			}
			else
			{
				WriteElementString(ႰႰႰ.Ⴍ.ႳႭႨ(863595136), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), ႳႭႰ((ႥႥႨႤ.Ⴗ)o));
			}
		}

		public void Write191_ID3v2Flags(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005f
			WriteStartDocument();
			if (o != null)
			{
				WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595137), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), ႳႭႥ((ႥႥႨႤ.Ⴍ)o));
			}
			else if (758 > 758 - 717)
			{
				WriteEmptyTag(ႰႰႰ.Ⴓ.ႳႭႨ(863595142), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			}
		}

		public void Write192_FilterTypes(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005c
			WriteStartDocument();
			if (o != null)
			{
				WriteElementString(ႰႰႰ.Ⴐ.ႳႭႨ(863595140), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), ႳႭႷ((ႥႥႨႤ.Ⴃ)o));
			}
			else if (437 >= 437 - 56)
			{
				WriteEmptyTag(ႰႰႰ.Ⴍ.ႳႭႨ(863595137), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
			}
		}

		public void Write193_StreamUtils(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteNullTagLiteral(ႰႰႰ.Ⴄ.ႳႭႨ(863595142), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					return;
				case 2:
					TopLevelElement();
					Ⴅ(ႰႰႰ.Ⴓ.ႳႭႨ(863595143), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), (ႥႥႨႤ.Ⴜ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write194_Resources(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005b
			WriteStartDocument();
			if (o == null)
			{
				if (116 > 116 - 115)
				{
					WriteNullTagLiteral(ႰႰႰ.Ⴐ.ႳႭႨ(863595141), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				}
			}
			TopLevelElement();
			Ⴗ(ႰႰႰ.Ⴍ.ႳႭႨ(863595142), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (ႥႥႨႼ.Ⴐ)o, Ⴃ: true, Ⴗ: false);
		}

		public void Write195_ExtractExistingFileAction(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005c
			WriteStartDocument();
			if (o != null)
			{
				WriteElementString(ႰႰႰ.Ⴍ.ႳႭႨ(863595143), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), ႳႭႣ((ႥႥႨႼ.Ⴈ)o));
			}
			else if (175 >= 175 - 70)
			{
				WriteEmptyTag(ႰႰႰ.Ⴗ.ႳႭႨ(863595137), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
			}
		}

		public void Write196_ID3Error(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005e
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
				Ⴃ(ႰႰႰ.Ⴐ.ႳႭႨ(863595146), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), (ႥႥႨႼ.Ⴀ)o, Ⴃ: true, Ⴗ: false);
			}
			else if (927 > 927 - 108)
			{
				WriteNullTagLiteral(ႰႰႰ.Ⴓ.ႳႭႨ(863595140), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			}
		}

		public void Write197_ErrorCollection(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴍ.ႳႭႨ(863595140), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					return;
				case 0:
					TopLevelElement();
					Ⴈ(ႰႰႰ.Ⴗ.ႳႭႨ(863595142), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), (ႥႥႨႼ.Ⴓ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write198_ContentTypes(object o)
		{
			//Discarded unreachable code: IL_0002, IL_005f
			WriteStartDocument();
			if (o == null)
			{
				if (163 <= 163 - 135)
				{
				}
				WriteEmptyTag(ႰႰႰ.Ⴄ.ႳႭႨ(863595143), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
			}
			else
			{
				WriteElementString(ႰႰႰ.Ⴗ.ႳႭႨ(863595143), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), ႳႭႨ((ႥႥႨႼ.Ⴗ.ႭႷ)o));
			}
		}

		public void Write199_SingleProgramInstanceWin(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteNullTagLiteral(ႰႰႰ.Ⴐ.ႳႭႨ(863595147), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					return;
				case 0:
					TopLevelElement();
					Ⴓ(ႰႰႰ.Ⴍ.ႳႭႨ(863595141), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), (ႥႥႳႰ.Ⴅ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write200_ChatmanConfiguration(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 2 : 0);
					break;
				case 0:
					WriteNullTagLiteral(ႰႰႰ.Ⴗ.ႳႭႨ(863595140), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					return;
				case 2:
					TopLevelElement();
					Ⴍ(ႰႰႰ.Ⴄ.ႳႭႨ(863595140), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), (ႥႥႳႰ.Ⴍ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		private void Ⴍ(string Ⴍ, string Ⴓ, ႥႥႳႰ.Ⴍ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003e, IL_005e, IL_0075, IL_00a7, IL_00c1, IL_00dc, IL_00f9
			if (Ⴈ != null)
			{
				goto IL_0061;
			}
			if (false || !Ⴃ)
			{
				return;
			}
			if (false)
			{
				goto IL_0021;
			}
			goto IL_00a9;
			IL_000a:
			throw CreateUnknownTypeException(Ⴈ);
			IL_0021:
			Type type = default(Type);
			if ((object)type == typeof(ႥႥႳႰ.Ⴍ))
			{
				goto IL_0040;
			}
			if (329 >= 329 - 56)
			{
				goto IL_000a;
			}
			goto IL_00a9;
			IL_00a9:
			WriteNullTagLiteral(Ⴍ, Ⴓ);
			if (489 >= 489 - 447)
			{
				return;
			}
			goto IL_0061;
			IL_0061:
			if (!Ⴗ)
			{
				if (417 > 417 - 174)
				{
					type = Ⴈ.GetType();
					goto IL_0021;
				}
				goto IL_000a;
			}
			goto IL_0040;
			IL_0040:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			if (Ⴗ)
			{
				if (false)
				{
					goto IL_00a9;
				}
				WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595140), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
				if (1014 < 1014 - 184)
				{
					goto IL_000a;
				}
			}
			WriteEndElement(Ⴈ);
		}

		private void Ⴓ(string Ⴍ, string Ⴓ, ႥႥႳႰ.Ⴅ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003a, IL_0069, IL_0095, IL_00b1, IL_00c9, IL_00e1
			while (true)
			{
				if (Ⴈ == null)
				{
					if (545 <= 545 - 127)
					{
						goto IL_003c;
					}
					if (!Ⴃ)
					{
						return;
					}
					if (false)
					{
						goto IL_0047;
					}
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					if ((879 + 879 * 879) % 2 == 0)
					{
						return;
					}
				}
				while (!Ⴗ)
				{
					if (917 >= 917 - 239)
					{
						Type type = Ⴈ.GetType();
						if ((object)type == typeof(ႥႥႳႰ.Ⴅ))
						{
							break;
						}
						if ((941 + 941 * 941) % 2 == 0)
						{
							throw CreateUnknownTypeException(Ⴈ);
						}
						continue;
					}
					goto IL_0047;
				}
				goto IL_003c;
				IL_0047:
				if (!Ⴗ)
				{
					break;
				}
				if (98 <= 98 - 4)
				{
					goto IL_003c;
				}
				WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595141), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
				if (795 > 795 - 110)
				{
					break;
				}
				continue;
				IL_003c:
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				goto IL_0047;
			}
			WriteEndElement(Ⴈ);
		}

		private string ႳႭႨ(ႥႥႨႼ.Ⴗ.ႭႷ Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_0016, IL_0045, IL_0054, IL_0063, IL_0072, IL_0091, IL_0095, IL_00d0
			string text = null;
			switch (Ⴍ)
			{
			case ႥႥႨႼ.Ⴗ.ႭႷ.Ⴓ:
				return ႰႰႰ.Ⴐ.ႳႭႨ(863595144);
			case ႥႥႨႼ.Ⴗ.ႭႷ.Ⴅ:
				return ႰႰႰ.Ⴗ.ႳႭႨ(863595141);
			case ႥႥႨႼ.Ⴗ.ႭႷ.Ⴀ:
				return ႰႰႰ.Ⴄ.ႳႭႨ(863595147);
			case ႥႥႨႼ.Ⴗ.ႭႷ.Ⴃ:
				return ႰႰႰ.Ⴓ.ႳႭႨ(863595147);
			case ႥႥႨႼ.Ⴗ.ႭႷ.Ⴗ:
				return ႰႰႰ.Ⴍ.ႳႭႨ(863595146);
			case ႥႥႨႼ.Ⴗ.ႭႷ.Ⴐ:
				return ႰႰႰ.Ⴄ.ႳႭႨ(863595141);
			case ႥႥႨႼ.Ⴗ.ႭႷ.Ⴈ:
				return ႰႰႰ.Ⴓ.ႳႭႨ(863595146);
			default:
				if (304 > 304 - 134)
				{
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴗ.ႳႭႨ(863595146));
				}
				goto case ႥႥႨႼ.Ⴗ.ႭႷ.Ⴀ;
			}
		}

		private void Ⴈ(string Ⴍ, string Ⴓ, ႥႥႨႼ.Ⴓ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0038, IL_0059, IL_0070, IL_009c, IL_00c1, IL_00db
			if (Ⴈ != null)
			{
				if (!Ⴗ)
				{
					if (810 <= 810 - 808)
					{
						goto IL_000a;
					}
					goto IL_001a;
				}
				goto IL_003a;
			}
			if ((210 + 210 * 210) % 2 == 0)
			{
				if (!Ⴃ)
				{
					return;
				}
				if (592 > 592 - 101)
				{
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					if (14 > 14 - 12)
					{
					}
				}
				return;
			}
			goto IL_0012;
			IL_001a:
			Type type = Ⴈ.GetType();
			goto IL_0021;
			IL_0012:
			WriteEndElement(Ⴈ);
			return;
			IL_000a:
			throw CreateUnknownTypeException(Ⴈ);
			IL_0021:
			if ((object)type != typeof(ႥႥႨႼ.Ⴓ))
			{
				if (113 > 113 - 56)
				{
					goto IL_000a;
				}
				goto IL_001a;
			}
			goto IL_003a;
			IL_003a:
			while (true)
			{
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				if (!Ⴗ)
				{
					break;
				}
				if (569 >= 569 - 412)
				{
					WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595146), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					if (590 > 590 - 36)
					{
						break;
					}
					continue;
				}
				goto IL_0021;
			}
			goto IL_0012;
		}

		private void Ⴃ(string Ⴍ, string Ⴓ, ႥႥႨႼ.Ⴀ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 5;
			while (true)
			{
				switch (num)
				{
				case 9:
					return;
				default:
					num = ((Ⴈ != null) ? 2 : 4);
					continue;
				case 4:
					num = (Ⴃ ? 1 : 9);
					continue;
				case 1:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 2:
					num = (Ⴗ ? 8 : 0);
					continue;
				case 0:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(ႥႥႨႼ.Ⴀ)) ? 8 : 6);
					continue;
				}
				case 6:
					throw CreateUnknownTypeException(Ⴈ);
				case 8:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 7 : 3);
					continue;
				case 3:
					WriteXsiType(ႰႰႰ.Ⴐ.ႳႭႨ(863595146), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					break;
				case 7:
					break;
				}
				break;
			}
			WriteElementString(ႰႰႰ.Ⴗ.ႳႭႨ(863595147), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), Ⴈ.Ⴈ);
			WriteEndElement(Ⴈ);
		}

		private string ႳႭႣ(ႥႥႨႼ.Ⴈ Ⴍ)
		{
			int num = 7;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 0:
					num = 2;
					continue;
				case 5:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595145);
					num = 6;
					continue;
				case 1:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595147);
					num = 6;
					continue;
				case 4:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595144);
					num = 6;
					continue;
				case 3:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595144);
					num = 6;
					continue;
				case 2:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴍ.ႳႭႨ(863595144));
				case 6:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 0;
					break;
				case ႥႥႨႼ.Ⴈ.Ⴐ:
					num2 = 5;
					break;
				case ႥႥႨႼ.Ⴈ.Ⴈ:
					num2 = 1;
					break;
				case ႥႥႨႼ.Ⴈ.Ⴓ:
					num2 = 4;
					break;
				case ႥႥႨႼ.Ⴈ.Ⴗ:
					num2 = 3;
					break;
				}
				num = num2;
			}
		}

		private void Ⴗ(string Ⴍ, string Ⴓ, ႥႥႨႼ.Ⴐ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003b, IL_0059, IL_006f, IL_009d, IL_00b9, IL_00d4, IL_00ec
			Type type = default(Type);
			if (Ⴈ != null)
			{
				if (Ⴗ)
				{
					goto IL_003d;
				}
				if ((651 + 651 * 651) % 2 == 0)
				{
					type = Ⴈ.GetType();
					goto IL_001e;
				}
			}
			else if (151 >= 151 - 79)
			{
				goto IL_00be;
			}
			goto IL_0071;
			IL_000f:
			WriteEndElement(Ⴈ);
			return;
			IL_0071:
			WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595144), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			if ((271 + 271 * 271) % 2 == 0)
			{
				goto IL_000f;
			}
			goto IL_00be;
			IL_00be:
			if (!Ⴃ)
			{
				return;
			}
			if ((637 + 637 * 637) % 2 == 0)
			{
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if ((138 + 138 * 138) % 2 == 0)
				{
					return;
				}
				goto IL_001e;
			}
			goto IL_000f;
			IL_001e:
			if ((object)type != typeof(ႥႥႨႼ.Ⴐ))
			{
				if (479 > 479 - 439)
				{
					throw CreateUnknownTypeException(Ⴈ);
				}
				goto IL_000f;
			}
			goto IL_003d;
			IL_003d:
			while (true)
			{
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				if (!Ⴗ)
				{
					break;
				}
				if (889 <= 889 - 18)
				{
					continue;
				}
				goto IL_0071;
			}
			goto IL_000f;
		}

		private void Ⴅ(string Ⴍ, string Ⴓ, ႥႥႨႤ.Ⴜ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003b, IL_0059, IL_00ad, IL_00c6, IL_00de
			Type type = default(Type);
			while (true)
			{
				if (Ⴈ != null)
				{
					goto IL_005c;
				}
				if (960 <= 960 - 175)
				{
					goto IL_0048;
				}
				goto IL_00b2;
				IL_0048:
				if (Ⴗ)
				{
					if (378 < 378 - 34)
					{
						goto IL_005c;
					}
					WriteXsiType(ႰႰႰ.Ⴍ.ႳႭႨ(863595145), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					if (false)
					{
						continue;
					}
				}
				WriteEndElement(Ⴈ);
				return;
				IL_005c:
				if (!Ⴗ)
				{
					if ((435 + 435 * 435) % 2 == 0)
					{
						type = Ⴈ.GetType();
					}
					goto IL_001e;
				}
				goto IL_003d;
				IL_003d:
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				goto IL_0048;
				IL_00b2:
				if (!Ⴃ)
				{
					return;
				}
				if (229 > 229 - 58)
				{
					break;
				}
				goto IL_001e;
				IL_001e:
				if ((object)type == typeof(ႥႥႨႤ.Ⴜ))
				{
					goto IL_003d;
				}
				if (717 >= 717 - 64)
				{
					throw CreateUnknownTypeException(Ⴈ);
				}
				goto IL_00b2;
			}
			do
			{
				WriteNullTagLiteral(Ⴍ, Ⴓ);
			}
			while (22 < 22 - 13);
		}

		private string ႳႭႷ(ႥႥႨႤ.Ⴃ Ⴍ)
		{
			int num = 3;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 4:
					num = 0;
					continue;
				case 1:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595145);
					num = 2;
					continue;
				case 5:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595145);
					num = 2;
					continue;
				case 6:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595150);
					num = 2;
					continue;
				case 0:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴄ.ႳႭႨ(863595150));
				case 2:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 4;
					break;
				case ႥႥႨႤ.Ⴃ.Ⴐ:
					num2 = 1;
					break;
				case ႥႥႨႤ.Ⴃ.Ⴈ:
					num2 = 5;
					break;
				case ႥႥႨႤ.Ⴃ.Ⴓ:
					num2 = 6;
					break;
				}
				num = num2;
			}
		}

		private string ႳႭႥ(ႥႥႨႤ.Ⴍ Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_006f, IL_0081, IL_0090, IL_009f, IL_00b3, IL_00d0, IL_00ed
			string result;
			do
			{
				result = null;
				if (Ⴍ == ႥႥႨႤ.Ⴍ.Ⴓ)
				{
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595151);
				}
				else
				{
					if (620 <= 620 - 222)
					{
						break;
					}
					while (Ⴍ != ႥႥႨႤ.Ⴍ.Ⴈ)
					{
						if (766 <= 766 - 114)
						{
							continue;
						}
						goto IL_00b5;
					}
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595145);
				}
				break;
				IL_00b5:
				if (Ⴍ != ႥႥႨႤ.Ⴍ.Ⴐ)
				{
					result = XmlSerializationWriter.FromEnum((long)Ⴍ, new string[3]
					{
						ႰႰႰ.Ⴍ.ႳႭႨ(863595150),
						ႰႰႰ.Ⴗ.ႳႭႨ(863595145),
						ႰႰႰ.Ⴄ.ႳႭႨ(863595151)
					}, new long[3]
					{
						128L,
						64L,
						32L
					}, ႰႰႰ.Ⴍ.ႳႭႨ(863595151));
					continue;
				}
				if (451 > 451 - 207)
				{
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595150);
				}
				break;
			}
			while (297 <= 297 - 285);
			return result;
		}

		private string ႳႭႰ(ႥႥႨႤ.Ⴗ Ⴍ)
		{
			int num = 4;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 5:
					num = 3;
					continue;
				case 1:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595150);
					num = 2;
					continue;
				case 0:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595151);
					num = 2;
					continue;
				case 3:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴄ.ႳႭႨ(863595148));
				case 2:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 5;
					break;
				case ႥႥႨႤ.Ⴗ.Ⴐ:
					num2 = 1;
					break;
				case ႥႥႨႤ.Ⴗ.Ⴈ:
					num2 = 0;
					break;
				}
				num = num2;
			}
		}

		private string ႳႭႠ(ႥႥႨႤ.Ⴓ Ⴍ)
		{
			int num = 0;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 5:
					num = 2;
					continue;
				case 1:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595148);
					num = 3;
					continue;
				case 4:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595148);
					num = 3;
					continue;
				case 2:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴓ.ႳႭႨ(863595151));
				case 3:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 5;
					break;
				case ႥႥႨႤ.Ⴓ.Ⴐ:
					num2 = 1;
					break;
				case ႥႥႨႤ.Ⴓ.Ⴈ:
					num2 = 4;
					break;
				}
				num = num2;
			}
		}

		private string ႳႭႤ(ႥႥႨႤ.Ⴀ Ⴍ)
		{
			int num = 6;
			string result = default(string);
			ႥႥႨႤ.Ⴀ ⴀ = default(ႥႥႨႤ.Ⴀ);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					ⴀ = Ⴍ;
					num = ((ⴀ > ႥႥႨႤ.Ⴀ.Ⴗ) ? 4 : 9);
					break;
				case 9:
					num = ((ⴀ == ႥႥႨႤ.Ⴀ.Ⴀ) ? 7 : 2);
					break;
				case 2:
					num = ((ⴀ == ႥႥႨႤ.Ⴀ.Ⴅ) ? 12 : 5);
					break;
				case 5:
					num = ((ⴀ == ႥႥႨႤ.Ⴀ.Ⴗ) ? 15 : 13);
					break;
				case 13:
					num = 14;
					break;
				case 4:
					num = ((ⴀ != ႥႥႨႤ.Ⴀ.Ⴓ) ? 1 : 10);
					break;
				case 1:
					num = ((ⴀ == ႥႥႨႤ.Ⴀ.Ⴈ) ? 8 : 3);
					break;
				case 3:
					num = ((ⴀ != ႥႥႨႤ.Ⴀ.Ⴐ) ? 14 : 0);
					break;
				case 0:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595149);
					num = 11;
					break;
				case 8:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595149);
					num = 11;
					break;
				case 10:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595150);
					num = 11;
					break;
				case 15:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595149);
					num = 11;
					break;
				case 12:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595148);
					num = 11;
					break;
				case 7:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595154);
					num = 11;
					break;
				case 14:
					result = XmlSerializationWriter.FromEnum((long)Ⴍ, new string[6]
					{
						ႰႰႰ.Ⴄ.ႳႭႨ(863595155),
						ႰႰႰ.Ⴓ.ႳႭႨ(863595154),
						ႰႰႰ.Ⴐ.ႳႭႨ(863595155),
						ႰႰႰ.Ⴍ.ႳႭႨ(863595155),
						ႰႰႰ.Ⴗ.ႳႭႨ(863595149),
						ႰႰႰ.Ⴄ.ႳႭႨ(863595152)
					}, new long[6]
					{
						32768L,
						16384L,
						8192L,
						128L,
						64L,
						32L
					}, ႰႰႰ.Ⴍ.ႳႭႨ(863595153));
					num = 11;
					break;
				case 11:
					return result;
				}
			}
		}

		private string ႳႭႼ(ႥႥႨႤ.Ⴄ Ⴍ)
		{
			int num = 2;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 6:
					num = 7;
					continue;
				case 5:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595154);
					num = 3;
					continue;
				case 4:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595151);
					num = 3;
					continue;
				case 1:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595154);
					num = 3;
					continue;
				case 0:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595149);
					num = 3;
					continue;
				case 7:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴗ.ႳႭႨ(863595148));
				case 3:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 6;
					break;
				case ႥႥႨႤ.Ⴄ.Ⴐ:
					num2 = 5;
					break;
				case ႥႥႨႤ.Ⴄ.Ⴈ:
					num2 = 4;
					break;
				case ႥႥႨႤ.Ⴄ.Ⴓ:
					num2 = 1;
					break;
				case ႥႥႨႤ.Ⴄ.Ⴗ:
					num2 = 0;
					break;
				}
				num = num2;
			}
		}

		private string ႳႳႭ(ႥႥႨႭ.Ⴃ Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_0019, IL_0028, IL_0057, IL_0066, IL_0075, IL_0084, IL_0096, IL_00a8, IL_00b2, IL_00ed
			string result = null;
			switch (Ⴍ)
			{
			case ႥႥႨႭ.Ⴃ.Ⴅ:
				result = ႰႰႰ.Ⴓ.ႳႭႨ(863595155);
				goto IL_000a;
			case ႥႥႨႭ.Ⴃ.Ⴃ:
				result = ႰႰႰ.Ⴍ.ႳႭႨ(863595158);
				goto IL_000a;
			case ႥႥႨႭ.Ⴃ.Ⴀ:
				result = ႰႰႰ.Ⴐ.ႳႭႨ(863595153);
				goto IL_000a;
			case ႥႥႨႭ.Ⴃ.Ⴍ:
				result = ႰႰႰ.Ⴗ.ႳႭႨ(863595155);
				goto IL_000a;
			case ႥႥႨႭ.Ⴃ.Ⴓ:
				result = ႰႰႰ.Ⴗ.ႳႭႨ(863595154);
				goto IL_000a;
			case ႥႥႨႭ.Ⴃ.Ⴗ:
				result = ႰႰႰ.Ⴄ.ႳႭႨ(863595153);
				goto IL_000a;
			case ႥႥႨႭ.Ⴃ.Ⴐ:
				result = ႰႰႰ.Ⴐ.ႳႭႨ(863595152);
				goto IL_000a;
			case ႥႥႨႭ.Ⴃ.Ⴈ:
				result = ႰႰႰ.Ⴍ.ႳႭႨ(863595152);
				goto IL_000a;
			default:
				{
					if ((306 + 306 * 306) % 2 == 0)
					{
						throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴐ.ႳႭႨ(863595158));
					}
					goto IL_000a;
				}
				IL_000a:
				return result;
			}
		}

		private string ႳႳႳ(ႥႥႨႭ.Ⴍ Ⴍ)
		{
			int num = 1;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 3:
					num = 5;
					continue;
				case 7:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595152);
					num = 2;
					continue;
				case 9:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595152);
					num = 2;
					continue;
				case 4:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595158);
					num = 2;
					continue;
				case 8:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595153);
					num = 2;
					continue;
				case 0:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595159);
					num = 2;
					continue;
				case 6:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595159);
					num = 2;
					continue;
				case 5:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴓ.ႳႭႨ(863595158));
				case 2:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 3;
					break;
				case ႥႥႨႭ.Ⴍ.Ⴐ:
					num2 = 7;
					break;
				case ႥႥႨႭ.Ⴍ.Ⴈ:
					num2 = 9;
					break;
				case ႥႥႨႭ.Ⴍ.Ⴓ:
					num2 = 4;
					break;
				case ႥႥႨႭ.Ⴍ.Ⴗ:
					num2 = 8;
					break;
				case ႥႥႨႭ.Ⴍ.Ⴅ:
					num2 = 0;
					break;
				case ႥႥႨႭ.Ⴍ.Ⴀ:
					num2 = 6;
					break;
				}
				num = num2;
			}
		}

		private void Ⴄ(string Ⴍ, string Ⴓ, ႥႥႨႭ.Ⴗ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 8;
			while (true)
			{
				switch (num)
				{
				case 9:
					return;
				default:
					num = ((Ⴈ == null) ? 3 : 0);
					continue;
				case 3:
					num = ((!Ⴃ) ? 9 : 6);
					continue;
				case 6:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 0:
					num = ((!Ⴗ) ? 1 : 7);
					continue;
				case 1:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(ႥႥႨႭ.Ⴗ)) ? 7 : 5);
					continue;
				}
				case 5:
					throw CreateUnknownTypeException(Ⴈ);
				case 7:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 2 : 4);
					continue;
				case 4:
					WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595152), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					break;
				case 2:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private unsafe void Ⴃ(string Ⴍ, string Ⴓ, ႥႥႨႭ.Ⴀ.ႭႨ Ⴈ, bool Ⴃ)
		{
			//Discarded unreachable code: IL_0038, IL_006a, IL_0098, IL_019e
			if (!Ⴃ)
			{
				if ((642 + 642 * 642) % 2 == 0)
				{
					Type type = Ⴈ.GetType();
					if ((object)type == typeof(ႥႥႨႭ.Ⴀ.ႭႨ))
					{
						goto IL_0012;
					}
					if (316 <= 316 - 237)
					{
						goto IL_009d;
					}
				}
				throw CreateUnknownTypeException(Ⴈ);
			}
			goto IL_0012;
			IL_0012:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			if (Ⴃ)
			{
				if (false)
				{
					goto IL_010f;
				}
				WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595159), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
				if (804 < 804 - 138)
				{
					goto IL_0153;
				}
			}
			goto IL_009d;
			IL_0153:
			Ⴅ(ႰႰႰ.Ⴐ.ႳႭႨ(863595157), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), Ⴈ.Ⴐ, Ⴃ: false);
			WriteEndElement(Ⴈ);
			return;
			IL_009d:
			WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595156), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(*(int*)(&Ⴈ.Ⴐ)));
			WriteElementStringRaw(ႰႰႰ.Ⴗ.ႳႭႨ(863595153), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), XmlConvert.ToString(*(int*)(&Ⴈ.Ⴈ)));
			WriteElementStringRaw(ႰႰႰ.Ⴄ.ႳႭႨ(863595156), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴓ));
			goto IL_010f;
			IL_010f:
			Ⴄ(ႰႰႰ.Ⴓ.ႳႭႨ(863595157), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), *(Point*)(&Ⴈ.Ⴐ), Ⴃ: false);
			Ⴄ(ႰႰႰ.Ⴗ.ႳႭႨ(863595158), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), Ⴈ.Ⴈ, Ⴃ: false);
			goto IL_0153;
		}

		private void Ⴅ(string Ⴍ, string Ⴓ, ႥႥႨႭ.Ⴀ.ႭႰ Ⴈ, bool Ⴃ)
		{
			//Discarded unreachable code: IL_003c, IL_0096, IL_0154
			if (!Ⴃ)
			{
				if (335 < 335 - 19)
				{
					goto IL_010a;
				}
				Type type = Ⴈ.GetType();
				if ((object)type != typeof(ႥႥႨႭ.Ⴀ.ႭႰ))
				{
					if (428 >= 428 - 388)
					{
						throw CreateUnknownTypeException(Ⴈ);
					}
					goto IL_00be;
				}
			}
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			while (Ⴃ)
			{
				if (204 >= 204 - 170)
				{
					WriteXsiType(ႰႰႰ.Ⴍ.ႳႭႨ(863595196), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					if ((671 + 671 * 671) % 2 == 0)
					{
						break;
					}
					continue;
				}
				goto IL_010a;
			}
			WriteElementStringRaw(ႰႰႰ.Ⴄ.ႳႭႨ(863595159), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴅ));
			goto IL_00be;
			IL_010a:
			WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595157), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴄ));
			WriteEndElement(Ⴈ);
			return;
			IL_00be:
			WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595156), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴈ));
			WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595156), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴀ));
			goto IL_010a;
		}

		private void Ⴄ(string Ⴍ, string Ⴓ, Point Ⴈ, bool Ⴃ)
		{
			//Discarded unreachable code: IL_0039, IL_0068, IL_010c
			while (true)
			{
				if (!Ⴃ)
				{
					if (938 >= 938 - 518)
					{
						Type type = Ⴈ.GetType();
						if ((object)type != typeof(Point))
						{
							if (663 < 663 - 303)
							{
								break;
							}
							throw CreateUnknownTypeException(Ⴈ);
						}
					}
				}
				while (true)
				{
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					if (!Ⴃ)
					{
						break;
					}
					if (1004 < 1004 - 330)
					{
						continue;
					}
					goto IL_003b;
				}
				goto IL_0096;
				IL_0096:
				WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595162), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.X));
				WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595162), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Y));
				break;
				IL_003b:
				WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595157), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
				if (466 <= 466 - 341)
				{
					continue;
				}
				goto IL_0096;
			}
			WriteEndElement(Ⴈ);
		}

		private void Ⴜ(string Ⴍ, string Ⴓ, ႥႥႨႭ.Ⴀ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003e, IL_005e, IL_0072, IL_00a0, IL_00ba, IL_00cd, IL_00e2
			if (Ⴈ == null)
			{
				if (949 >= 949 - 467)
				{
				}
				if (!Ⴃ)
				{
					return;
				}
				if (250 >= 250 - 48)
				{
				}
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if (636 > 636 - 487)
				{
					return;
				}
				goto IL_0040;
			}
			goto IL_0061;
			IL_0061:
			while (!Ⴗ)
			{
				if (353 > 353 - 16)
				{
					Type type = Ⴈ.GetType();
					if ((object)type == typeof(ႥႥႨႭ.Ⴀ))
					{
						break;
					}
					if (880 > 880 - 581)
					{
						throw CreateUnknownTypeException(Ⴈ);
					}
					continue;
				}
				return;
			}
			goto IL_0040;
			IL_0040:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			if (Ⴗ)
			{
				if (false)
				{
					goto IL_0061;
				}
				WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595159), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
				if (false)
				{
					return;
				}
			}
			WriteEndElement(Ⴈ);
		}

		private string ႳႳႨ(ႥႥႨႣ.Ⴜ Ⴍ)
		{
			int num = 10;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 6:
					num = 3;
					continue;
				case 9:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595163);
					num = 2;
					continue;
				case 7:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595156);
					num = 2;
					continue;
				case 1:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595162);
					num = 2;
					continue;
				case 5:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595162);
					num = 2;
					continue;
				case 0:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595160);
					num = 2;
					continue;
				case 4:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595161);
					num = 2;
					continue;
				case 8:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595162);
					num = 2;
					continue;
				case 3:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴐ.ႳႭႨ(863595166));
				case 2:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 6;
					break;
				case ႥႥႨႣ.Ⴜ.Ⴅ:
					num2 = 9;
					break;
				case ႥႥႨႣ.Ⴜ.Ⴈ:
					num2 = 7;
					break;
				case ႥႥႨႣ.Ⴜ.Ⴀ:
					num2 = 1;
					break;
				case ႥႥႨႣ.Ⴜ.Ⴄ:
					num2 = 5;
					break;
				case ႥႥႨႣ.Ⴜ.Ⴐ:
					num2 = 0;
					break;
				case ႥႥႨႣ.Ⴜ.Ⴗ:
					num2 = 4;
					break;
				case ႥႥႨႣ.Ⴜ.Ⴍ:
					num2 = 8;
					break;
				}
				num = num2;
			}
		}

		private string ႳႳႣ(ႥႥႨႣ.Ⴐ Ⴍ)
		{
			int num = 9;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 4:
					num = 1;
					continue;
				case 7:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595163);
					num = 0;
					continue;
				case 6:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595160);
					num = 0;
					continue;
				case 8:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595157);
					num = 0;
					continue;
				case 3:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595163);
					num = 0;
					continue;
				case 5:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595163);
					num = 0;
					continue;
				case 2:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595161);
					num = 0;
					continue;
				case 1:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴄ.ႳႭႨ(863595160));
				case 0:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 4;
					break;
				case ႥႥႨႣ.Ⴐ.Ⴅ:
					num2 = 7;
					break;
				case ႥႥႨႣ.Ⴐ.Ⴈ:
					num2 = 6;
					break;
				case ႥႥႨႣ.Ⴐ.Ⴀ:
					num2 = 8;
					break;
				case ႥႥႨႣ.Ⴐ.Ⴄ:
					num2 = 3;
					break;
				case ႥႥႨႣ.Ⴐ.Ⴐ:
					num2 = 5;
					break;
				case ႥႥႨႣ.Ⴐ.Ⴗ:
					num2 = 2;
					break;
				}
				num = num2;
			}
		}

		private void ႳႭ(string Ⴍ, string Ⴓ, ႥႥႨႣ.Ⴈ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 6;
			while (true)
			{
				switch (num)
				{
				case 2:
					return;
				default:
					num = ((Ⴈ != null) ? 1 : 7);
					continue;
				case 7:
					num = ((!Ⴃ) ? 2 : 8);
					continue;
				case 8:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 1:
					num = (Ⴗ ? 9 : 4);
					continue;
				case 4:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(ႥႥႨႣ.Ⴈ)) ? 9 : 5);
					continue;
				}
				case 5:
					throw CreateUnknownTypeException(Ⴈ);
				case 9:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 3 : 0);
					continue;
				case 0:
					WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595197), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					break;
				case 3:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private void ႳႳ(string Ⴍ, string Ⴓ, ႥႥႨႣ.Ⴅ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003d, IL_005d, IL_0070, IL_00a2, IL_00bf, IL_00d5, IL_00ec
			if (Ⴈ != null)
			{
				goto IL_0060;
			}
			if (false)
			{
				return;
			}
			goto IL_00c4;
			IL_00c4:
			if (!Ⴃ)
			{
				return;
			}
			if (603 > 603 - 25)
			{
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if (353 > 353 - 272)
				{
					return;
				}
				goto IL_000a;
			}
			goto IL_0060;
			IL_0060:
			if (!Ⴗ)
			{
				if (false)
				{
					goto IL_00c4;
				}
				Type type = Ⴈ.GetType();
				if ((object)type != typeof(ႥႥႨႣ.Ⴅ))
				{
					if ((270 + 270 * 270) % 2 == 0)
					{
					}
					goto IL_000a;
				}
			}
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			while (true)
			{
				if (Ⴗ)
				{
					if (false)
					{
						continue;
					}
					WriteXsiType(ႰႰႰ.Ⴐ.ႳႭႨ(863595167), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					if (241 < 241 - 186)
					{
						break;
					}
				}
				WriteEndElement(Ⴈ);
				return;
			}
			goto IL_000a;
			IL_000a:
			throw CreateUnknownTypeException(Ⴈ);
		}

		private void ႳႨ(string Ⴍ, string Ⴓ, ႥႥႨႣ.Ⴄ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003b, IL_005f, IL_00a5, IL_00bc, IL_00d5, IL_00e6
			while (true)
			{
				if (Ⴈ != null)
				{
					if (!Ⴗ)
					{
						if (false)
						{
						}
						Type type = Ⴈ.GetType();
						if ((object)type != typeof(ႥႥႨႣ.Ⴄ))
						{
							if (465 >= 465 - 84)
							{
								goto IL_0007;
							}
							goto IL_00a7;
						}
					}
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					goto IL_0048;
				}
				if (36 >= 36 - 2)
				{
				}
				if (!Ⴃ)
				{
					return;
				}
				if (694 <= 694 - 382)
				{
					goto IL_0007;
				}
				goto IL_00a7;
				IL_00a7:
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if (136 >= 136 - 112)
				{
					return;
				}
				goto IL_0048;
				IL_0007:
				throw CreateUnknownTypeException(Ⴈ);
				IL_0048:
				if (!Ⴗ)
				{
					break;
				}
				if (556 <= 556 - 479)
				{
					continue;
				}
				WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595163), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
				if (942 > 942 - 353)
				{
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private string ႳႳႷ(ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ Ⴍ)
		{
			int num = 2;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 0:
					num = 4;
					continue;
				case 3:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595161);
					num = 6;
					continue;
				case 1:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595160);
					num = 6;
					continue;
				case 5:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595164);
					num = 6;
					continue;
				case 4:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴄ.ႳႭႨ(863595166));
				case 6:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 0;
					break;
				case ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ.Ⴀ:
					num2 = 3;
					break;
				case ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ.Ⴄ:
					num2 = 1;
					break;
				case ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ.Ⴐ:
					num2 = 5;
					break;
				}
				num = num2;
			}
		}

		private void ႳႣ(string Ⴍ, string Ⴓ, ႥႥႨႣ.Ⴗ.ႣႠ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0038, IL_0058, IL_006f, IL_00a1, IL_00bb, IL_00d7, IL_00eb
			while (true)
			{
				if (Ⴈ != null)
				{
					if (!Ⴗ)
					{
						if (881 < 881 - 208)
						{
							return;
						}
						goto IL_0017;
					}
					goto IL_003d;
				}
				if ((14 + 14 * 14) % 2 == 0)
				{
					break;
				}
				continue;
				IL_0007:
				throw CreateUnknownTypeException(Ⴈ);
				IL_0017:
				Type type = Ⴈ.GetType();
				if ((object)type != typeof(ႥႥႨႣ.Ⴗ.ႣႠ))
				{
					if (573 >= 573 - 104)
					{
						goto IL_0007;
					}
					goto IL_000f;
				}
				goto IL_003d;
				IL_000f:
				WriteEndElement(Ⴈ);
				return;
				IL_003d:
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				if (Ⴗ)
				{
					if (false)
					{
						goto IL_0017;
					}
					WriteXsiType(ႰႰႰ.Ⴍ.ႳႭႨ(863595192), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					if (488 <= 488 - 474)
					{
						goto IL_0007;
					}
				}
				goto IL_000f;
			}
			if (!Ⴃ)
			{
				return;
			}
			if (290 >= 290 - 252)
			{
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if (662 < 662 - 583)
				{
				}
			}
		}

		private void ႳႷ(string Ⴀ, string Ⴍ, ႥႥႨႣ.Ⴗ Ⴅ, bool Ⴗ, bool Ⴐ)
		{
			//Discarded unreachable code: IL_0005, IL_003d, IL_006f, IL_009a, IL_00b1, IL_00ca, IL_00e5
			if (Ⴅ != null)
			{
				if (!Ⴐ)
				{
					if (465 <= 465 - 98)
					{
					}
					Type type = Ⴅ.GetType();
					if ((object)type != typeof(ႥႥႨႣ.Ⴗ))
					{
						if ((851 + 851 * 851) % 2 == 0)
						{
							throw CreateUnknownTypeException(Ⴅ);
						}
						goto IL_00b3;
					}
				}
				WriteStartElement(Ⴀ, Ⴍ, Ⴅ, writePrefixed: false, null);
				if (Ⴐ)
				{
					if (false)
					{
						goto IL_009c;
					}
					WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595196), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					if (377 < 377 - 8)
					{
						return;
					}
				}
				goto IL_000f;
			}
			if (831 < 831 - 743)
			{
				return;
			}
			goto IL_00b3;
			IL_009c:
			WriteNullTagLiteral(Ⴀ, Ⴍ);
			if (94 > 94 - 19)
			{
			}
			return;
			IL_00b3:
			if (!Ⴗ)
			{
				return;
			}
			if (934 <= 934 - 292)
			{
				goto IL_000f;
			}
			goto IL_009c;
			IL_000f:
			WriteEndElement(Ⴅ);
		}

		private void ႳႥ(string Ⴍ, string Ⴄ, ႣႳ Ⴃ, bool Ⴗ, bool Ⴓ)
		{
			int num = 2;
			while (true)
			{
				switch (num)
				{
				case 0:
					return;
				default:
					num = ((Ⴃ != null) ? 6 : 7);
					continue;
				case 7:
					num = (Ⴗ ? 1 : 0);
					continue;
				case 1:
					WriteNullTagLiteral(Ⴍ, Ⴄ);
					return;
				case 6:
					num = (Ⴓ ? 3 : 9);
					continue;
				case 9:
				{
					Type type = Ⴃ.GetType();
					num = (((object)type == typeof(ႣႳ)) ? 3 : 4);
					continue;
				}
				case 4:
					throw CreateUnknownTypeException(Ⴃ);
				case 3:
					WriteStartElement(Ⴍ, Ⴄ, Ⴃ, writePrefixed: false, null);
					num = ((!Ⴓ) ? 5 : 8);
					continue;
				case 8:
					WriteXsiType(ႰႰႰ.Ⴐ.ႳႭႨ(863595165), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					break;
				case 5:
					break;
				}
				break;
			}
			WriteEndElement(Ⴃ);
		}

		private void ႳႰ(string Ⴍ, string Ⴄ, ႥႥႨႠ.Ⴍ Ⴃ, bool Ⴗ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_003b, IL_005f, IL_0075, IL_00a0, IL_00ba, IL_00d0, IL_00e8
			Type type = default(Type);
			if (Ⴃ != null)
			{
				if (Ⴓ)
				{
					goto IL_0040;
				}
				if ((585 + 585 * 585) % 2 == 0)
				{
					type = Ⴃ.GetType();
					goto IL_001e;
				}
			}
			else
			{
				if (783 <= 783 - 266)
				{
					goto IL_004b;
				}
				do
				{
					if (!Ⴗ)
					{
						return;
					}
				}
				while (573 <= 573 - 572);
			}
			WriteNullTagLiteral(Ⴍ, Ⴄ);
			if (119 >= 119 - 79)
			{
				return;
			}
			goto IL_001e;
			IL_0007:
			throw CreateUnknownTypeException(Ⴃ);
			IL_004b:
			if (Ⴓ)
			{
				if (810 < 810 - 536)
				{
					goto IL_001e;
				}
				WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595160), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
				if (72 < 72 - 6)
				{
					goto IL_0007;
				}
			}
			goto IL_000f;
			IL_000f:
			WriteEndElement(Ⴃ);
			return;
			IL_0040:
			WriteStartElement(Ⴍ, Ⴄ, Ⴃ, writePrefixed: false, null);
			goto IL_004b;
			IL_001e:
			if ((object)type != typeof(ႥႥႨႠ.Ⴍ))
			{
				if (708 >= 708 - 585)
				{
					goto IL_0007;
				}
				goto IL_000f;
			}
			goto IL_0040;
		}

		private void ႳႠ(string Ⴍ, string Ⴄ, ႥႥႨႠ.Ⴀ Ⴃ, bool Ⴗ, bool Ⴓ)
		{
			int num = 8;
			while (true)
			{
				switch (num)
				{
				case 6:
					return;
				default:
					num = ((Ⴃ != null) ? 9 : 2);
					continue;
				case 2:
					num = ((!Ⴗ) ? 6 : 7);
					continue;
				case 7:
					WriteNullTagLiteral(Ⴍ, Ⴄ);
					return;
				case 9:
					num = (Ⴓ ? 1 : 5);
					continue;
				case 5:
				{
					Type type = Ⴃ.GetType();
					num = (((object)type == typeof(ႥႥႨႠ.Ⴀ)) ? 1 : 3);
					continue;
				}
				case 3:
					throw CreateUnknownTypeException(Ⴃ);
				case 1:
					WriteStartElement(Ⴍ, Ⴄ, Ⴃ, writePrefixed: false, null);
					num = (Ⴓ ? 4 : 0);
					continue;
				case 4:
					WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595161), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					break;
				case 0:
					break;
				}
				break;
			}
			WriteEndElement(Ⴃ);
		}

		private string ႳႳႥ(ႥႥႨႥ.Ⴐ Ⴍ)
		{
			int num = 0;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 13:
					num = 5;
					continue;
				case 19:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595234);
					num = 4;
					continue;
				case 22:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595161);
					num = 4;
					continue;
				case 18:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595166);
					num = 4;
					continue;
				case 2:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595167);
					num = 4;
					continue;
				case 3:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595167);
					num = 4;
					continue;
				case 11:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595235);
					num = 4;
					continue;
				case 10:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595167);
					num = 4;
					continue;
				case 21:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595164);
					num = 4;
					continue;
				case 24:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595164);
					num = 4;
					continue;
				case 6:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595234);
					num = 4;
					continue;
				case 16:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595233);
					num = 4;
					continue;
				case 9:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595164);
					num = 4;
					continue;
				case 17:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595235);
					num = 4;
					continue;
				case 15:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595234);
					num = 4;
					continue;
				case 25:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595239);
					num = 4;
					continue;
				case 12:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595235);
					num = 4;
					continue;
				case 20:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595234);
					num = 4;
					continue;
				case 8:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595233);
					num = 4;
					continue;
				case 14:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595235);
					num = 4;
					continue;
				case 1:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595236);
					num = 4;
					continue;
				case 23:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595232);
					num = 4;
					continue;
				case 7:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595235);
					num = 4;
					continue;
				case 27:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595238);
					num = 4;
					continue;
				case 26:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595232);
					num = 4;
					continue;
				case 5:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴗ.ႳႭႨ(863595233));
				case 4:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 13;
					break;
				case ႥႥႨႥ.Ⴐ.Ⴐ:
					num2 = 19;
					break;
				case ႥႥႨႥ.Ⴐ.Ⴈ:
					num2 = 22;
					break;
				case ႥႥႨႥ.Ⴐ.Ⴓ:
					num2 = 18;
					break;
				case ႥႥႨႥ.Ⴐ.Ⴗ:
					num2 = 2;
					break;
				case ႥႥႨႥ.Ⴐ.Ⴅ:
					num2 = 3;
					break;
				case ႥႥႨႥ.Ⴐ.Ⴀ:
					num2 = 11;
					break;
				case ႥႥႨႥ.Ⴐ.Ⴃ:
					num2 = 10;
					break;
				case ႥႥႨႥ.Ⴐ.Ⴍ:
					num2 = 21;
					break;
				case ႥႥႨႥ.Ⴐ.Ⴄ:
					num2 = 24;
					break;
				case ႥႥႨႥ.Ⴐ.Ⴜ:
					num2 = 6;
					break;
				case ႥႥႨႥ.Ⴐ.ႨႰ:
					num2 = 16;
					break;
				case ႥႥႨႥ.Ⴐ.ႨႨ:
					num2 = 9;
					break;
				case ႥႥႨႥ.Ⴐ.ႨႳ:
					num2 = 17;
					break;
				case ႥႥႨႥ.Ⴐ.ႨႷ:
					num2 = 15;
					break;
				case ႥႥႨႥ.Ⴐ.ႨႥ:
					num2 = 25;
					break;
				case ႥႥႨႥ.Ⴐ.ႨႠ:
					num2 = 12;
					break;
				case ႥႥႨႥ.Ⴐ.ႨႣ:
					num2 = 20;
					break;
				case ႥႥႨႥ.Ⴐ.ႨႭ:
					num2 = 8;
					break;
				case ႥႥႨႥ.Ⴐ.ႨႤ:
					num2 = 14;
					break;
				case ႥႥႨႥ.Ⴐ.ႨႼ:
					num2 = 1;
					break;
				case ႥႥႨႥ.Ⴐ.ႳႰ:
					num2 = 23;
					break;
				case ႥႥႨႥ.Ⴐ.ႳႨ:
					num2 = 7;
					break;
				case ႥႥႨႥ.Ⴐ.ႳႳ:
					num2 = 27;
					break;
				case ႥႥႨႥ.Ⴐ.ႳႷ:
					num2 = 26;
					break;
				}
				num = num2;
			}
		}

		private string ႳႳႰ(ႥႥႨႥ.Ⴄ Ⴍ)
		{
			int num = 7;
			string result = default(string);
			ႥႥႨႥ.Ⴄ ⴄ = default(ႥႥႨႥ.Ⴄ);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					ⴄ = Ⴍ;
					num = ((ⴄ > ႥႥႨႥ.Ⴄ.Ⴓ) ? 16 : 14);
					break;
				case 14:
					num = ((ⴄ != 0) ? 6 : 0);
					break;
				case 6:
					num = ((ⴄ == ႥႥႨႥ.Ⴄ.Ⴈ) ? 11 : 8);
					break;
				case 8:
					num = ((ⴄ == ႥႥႨႥ.Ⴄ.Ⴓ) ? 4 : 13);
					break;
				case 13:
					num = 10;
					break;
				case 16:
					num = ((ⴄ == ႥႥႨႥ.Ⴄ.Ⴗ) ? 15 : 3);
					break;
				case 3:
					num = ((ⴄ == ႥႥႨႥ.Ⴄ.Ⴅ) ? 2 : 5);
					break;
				case 5:
					num = ((ⴄ == ႥႥႨႥ.Ⴄ.Ⴀ) ? 12 : 9);
					break;
				case 9:
					num = 10;
					break;
				case 0:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595152);
					num = 1;
					break;
				case 11:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595166);
					num = 1;
					break;
				case 4:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595166);
					num = 1;
					break;
				case 15:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595164);
					num = 1;
					break;
				case 2:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595167);
					num = 1;
					break;
				case 12:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595232);
					num = 1;
					break;
				case 10:
					result = XmlSerializationWriter.FromEnum((long)Ⴍ, new string[6]
					{
						ႰႰႰ.Ⴄ.ႳႭႨ(863595165),
						ႰႰႰ.Ⴓ.ႳႭႨ(863595165),
						ႰႰႰ.Ⴐ.ႳႭႨ(863595238),
						ႰႰႰ.Ⴍ.ႳႭႨ(863595165),
						ႰႰႰ.Ⴗ.ႳႭႨ(863595165),
						ႰႰႰ.Ⴄ.ႳႭႨ(863595232)
					}, new long[6]
					{
						0L,
						1048576L,
						2097152L,
						4194304L,
						8388608L,
						16777216L
					}, ႰႰႰ.Ⴍ.ႳႭႨ(863595234));
					num = 1;
					break;
				case 1:
					return result;
				}
			}
		}

		private void ႳႤ(string Ⴍ, string Ⴄ, ႥႥႨႥ.Ⴗ Ⴃ, bool Ⴗ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0088, IL_00c4, IL_00f5, IL_0115, IL_0130, IL_014e
			Type type = default(Type);
			if (Ⴃ != null)
			{
				if (Ⴓ)
				{
					goto IL_008a;
				}
				if (384 < 384 - 333)
				{
					goto IL_0007;
				}
				type = Ⴃ.GetType();
			}
			else if (840 > 840 - 508)
			{
				if (!Ⴗ)
				{
					return;
				}
				if ((628 + 628 * 628) % 2 == 0)
				{
					WriteNullTagLiteral(Ⴍ, Ⴄ);
					if (332 >= 332 - 133)
					{
						return;
					}
					goto IL_0034;
				}
			}
			if ((object)type != typeof(ႥႥႨႥ.Ⴗ))
			{
				if (736 < 736 - 661)
				{
				}
				goto IL_0007;
			}
			goto IL_008a;
			IL_008a:
			WriteStartElement(Ⴍ, Ⴄ, Ⴃ, writePrefixed: false, null);
			if (Ⴓ)
			{
				if (730 <= 730 - 437)
				{
					goto IL_0059;
				}
				WriteXsiType(ႰႰႰ.Ⴐ.ႳႭႨ(863595237), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
				if (false)
				{
					return;
				}
			}
			WriteElementStringRaw(ႰႰႰ.Ⴗ.ႳႭႨ(863595232), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴃ.Ⴐ));
			goto IL_0034;
			IL_0034:
			WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595233), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴃ.Ⴈ));
			goto IL_0059;
			IL_0059:
			WriteEndElement(Ⴃ);
			return;
			IL_0007:
			throw CreateUnknownTypeException(Ⴃ);
		}

		private void ႳႼ(string Ⴍ, string Ⴄ, ႥႥႨႥ.Ⴓ Ⴃ, bool Ⴗ, bool Ⴓ)
		{
			int num = 1;
			while (true)
			{
				switch (num)
				{
				case 0:
					return;
				default:
					num = ((Ⴃ != null) ? 9 : 3);
					continue;
				case 3:
					num = (Ⴗ ? 7 : 0);
					continue;
				case 7:
					WriteNullTagLiteral(Ⴍ, Ⴄ);
					return;
				case 9:
					num = (Ⴓ ? 5 : 8);
					continue;
				case 8:
				{
					Type type = Ⴃ.GetType();
					num = (((object)type == typeof(ႥႥႨႥ.Ⴓ)) ? 5 : 4);
					continue;
				}
				case 4:
					throw CreateUnknownTypeException(Ⴃ);
				case 5:
					WriteStartElement(Ⴍ, Ⴄ, Ⴃ, writePrefixed: false, null);
					num = ((!Ⴓ) ? 2 : 6);
					continue;
				case 6:
					WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595238), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					break;
				case 2:
					break;
				}
				break;
			}
			WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595233), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴃ.Ⴐ));
			WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595239), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), ႳႳႠ(Ⴃ.Ⴐ));
			WriteEndElement(Ⴃ);
		}

		private string ႳႳႠ(ThreadPriority Ⴀ)
		{
			//Discarded unreachable code: IL_0005, IL_0037, IL_0046, IL_0055, IL_0064, IL_0068, IL_0077, IL_00a9
			string result = null;
			switch (Ⴀ)
			{
			case ThreadPriority.Normal:
				result = ႰႰႰ.Ⴗ.ႳႭႨ(863595239);
				break;
			case ThreadPriority.AboveNormal:
				result = ႰႰႰ.Ⴄ.ႳႭႨ(863595236);
				break;
			case ThreadPriority.Highest:
				result = ႰႰႰ.Ⴓ.ႳႭႨ(863595238);
				break;
			case ThreadPriority.BelowNormal:
				result = ႰႰႰ.Ⴍ.ႳႭႨ(863595238);
				break;
			case ThreadPriority.Lowest:
				result = ႰႰႰ.Ⴐ.ႳႭႨ(863595242);
				break;
			default:
				if (906 >= 906 - 601)
				{
					throw CreateInvalidEnumValueException(((long)Ⴀ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴗ.ႳႭႨ(863595236));
				}
				break;
			}
			return result;
		}

		private string ႳႳႤ(ႥႥႨႷ.Ⴍ Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0017, IL_0036, IL_0067, IL_0076, IL_0085, IL_0094, IL_0098, IL_00b5, IL_00c7, IL_00d9, IL_00e0, IL_00fc, IL_012e, IL_014e
			string result = null;
			while (true)
			{
				if (Ⴓ > ႥႥႨႷ.Ⴍ.Ⴐ)
				{
					if (Ⴓ != ႥႥႨႷ.Ⴍ.Ⴈ)
					{
						if (false)
						{
							break;
						}
						if (Ⴓ == ႥႥႨႷ.Ⴍ.Ⴓ)
						{
							result = ႰႰႰ.Ⴗ.ႳႭႨ(863595237);
							break;
						}
						if (897 >= 897 - 655)
						{
							goto IL_0038;
						}
					}
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595239);
					break;
				}
				if ((190 + 190 * 190) % 2 == 0)
				{
					switch (Ⴓ)
					{
					case ႥႥႨႷ.Ⴍ.Ⴗ:
						break;
					case (ႥႥႨႷ.Ⴍ)3:
						goto IL_0038;
					case ႥႥႨႷ.Ⴍ.Ⴃ:
						goto IL_0069;
					case ႥႥႨႷ.Ⴍ.Ⴅ:
						goto IL_0078;
					case ႥႥႨႷ.Ⴍ.Ⴀ:
						goto IL_0087;
					default:
						goto IL_011b;
					}
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595237);
					break;
				}
				continue;
				IL_0087:
				result = ႰႰႰ.Ⴐ.ႳႭႨ(863595240);
				break;
				IL_0069:
				result = ႰႰႰ.Ⴍ.ႳႭႨ(863595237);
				break;
				IL_011b:
				if (569 <= 569 - 307)
				{
					break;
				}
				while (Ⴓ != ႥႥႨႷ.Ⴍ.Ⴐ)
				{
					if (false)
					{
						continue;
					}
					goto IL_0038;
				}
				result = ႰႰႰ.Ⴐ.ႳႭႨ(863595243);
				break;
				IL_0078:
				result = ႰႰႰ.Ⴓ.ႳႭႨ(863595239);
				break;
				IL_0038:
				throw CreateInvalidEnumValueException(((long)Ⴓ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴓ.ႳႭႨ(863595237));
			}
			return result;
		}

		private string ႳႳႼ(ႥႥႨႷ.Ⴄ Ⴓ)
		{
			int num = 3;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 5:
					num = 6;
					continue;
				case 7:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595236);
					num = 4;
					continue;
				case 1:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595242);
					num = 4;
					continue;
				case 2:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595242);
					num = 4;
					continue;
				case 0:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595236);
					num = 4;
					continue;
				case 6:
					throw CreateInvalidEnumValueException(((long)Ⴓ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴗ.ႳႭႨ(863595243));
				case 4:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴓ)
				{
				default:
					num2 = 5;
					break;
				case ႥႥႨႷ.Ⴄ.Ⴐ:
					num2 = 7;
					break;
				case ႥႥႨႷ.Ⴄ.Ⴈ:
					num2 = 1;
					break;
				case ႥႥႨႷ.Ⴄ.Ⴓ:
					num2 = 2;
					break;
				case ႥႥႨႷ.Ⴄ.Ⴗ:
					num2 = 0;
					break;
				}
				num = num2;
			}
		}

		private void ႨႭ(string Ⴓ, string Ⴅ, ႥႥႨႷ.Ⴗ Ⴐ, bool Ⴈ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003d, IL_005e, IL_0077, IL_00a8, IL_00c8, IL_00e1, IL_00f6
			if (Ⴐ != null)
			{
				if (!Ⴗ)
				{
					if (false)
					{
						return;
					}
					Type type = Ⴐ.GetType();
					if ((object)type != typeof(ႥႥႨႷ.Ⴗ))
					{
						if ((208 + 208 * 208) % 2 == 0)
						{
							goto IL_0007;
						}
						goto IL_00ad;
					}
				}
				WriteStartElement(Ⴓ, Ⴅ, Ⴐ, writePrefixed: false, null);
				if (Ⴗ)
				{
					if (317 < 317 - 295)
					{
						goto IL_00ad;
					}
					WriteXsiType(ႰႰႰ.Ⴐ.ႳႭႨ(863595241), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					if (false)
					{
						goto IL_0007;
					}
				}
				goto IL_000f;
			}
			if (800 <= 800 - 117)
			{
			}
			do
			{
				if (!Ⴈ)
				{
					return;
				}
			}
			while (716 <= 716 - 458);
			goto IL_00ad;
			IL_00ad:
			WriteNullTagLiteral(Ⴓ, Ⴅ);
			if (342 > 342 - 230)
			{
				return;
			}
			goto IL_000f;
			IL_0007:
			throw CreateUnknownTypeException(Ⴐ);
			IL_000f:
			WriteEndElement(Ⴐ);
		}

		private void ႨႳ(string Ⴓ, string Ⴅ, global::ႳႨႭ.Ⴐ Ⴐ, bool Ⴈ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003a, IL_005b, IL_0072, IL_00a1, IL_00b4, IL_00cd, IL_00e8
			if (Ⴐ == null)
			{
				if (962 >= 962 - 519)
				{
					if (!Ⴈ)
					{
						return;
					}
					if (630 < 630 - 172)
					{
						goto IL_003c;
					}
					WriteNullTagLiteral(Ⴓ, Ⴅ);
					if (38 > 38 - 3)
					{
						return;
					}
					goto IL_0047;
				}
			}
			if (!Ⴗ)
			{
				if (242 >= 242 - 79)
				{
					goto IL_0017;
				}
				goto IL_001e;
			}
			goto IL_003c;
			IL_0017:
			Type type = Ⴐ.GetType();
			goto IL_001e;
			IL_003c:
			WriteStartElement(Ⴓ, Ⴅ, Ⴐ, writePrefixed: false, null);
			goto IL_0047;
			IL_0047:
			if (Ⴗ)
			{
				if (409 <= 409 - 353)
				{
					goto IL_001e;
				}
				WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595240), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
				if (332 < 332 - 118)
				{
					goto IL_0017;
				}
			}
			WriteEndElement(Ⴐ);
			return;
			IL_001e:
			if ((object)type != typeof(global::ႳႨႭ.Ⴐ))
			{
				if ((815 + 815 * 815) % 2 == 0)
				{
					throw CreateUnknownTypeException(Ⴐ);
				}
				return;
			}
			goto IL_003c;
		}

		private void ႨႨ(string Ⴓ, string Ⴅ, ႥႥႨႳ.Ⴀ Ⴐ, bool Ⴈ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003b, IL_006d, IL_009e, IL_00cb, IL_00e0
			if (Ⴐ != null)
			{
				if (Ⴗ)
				{
					goto IL_003d;
				}
				if ((753 + 753 * 753) % 2 == 0)
				{
					goto IL_0017;
				}
				goto IL_0048;
			}
			if (37 >= 37 - 16)
			{
				while (true)
				{
					if (!Ⴈ)
					{
						return;
					}
					if ((778 + 778 * 778) % 2 == 0)
					{
						WriteNullTagLiteral(Ⴓ, Ⴅ);
						if (528 >= 528 - 56)
						{
							return;
						}
						continue;
					}
					break;
				}
			}
			goto IL_000f;
			IL_006f:
			WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595242), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			if ((1021 + 1021 * 1021) % 2 == 0)
			{
				goto IL_000f;
			}
			goto IL_0017;
			IL_0048:
			if (!Ⴗ)
			{
				goto IL_000f;
			}
			if (173 < 173 - 44)
			{
			}
			goto IL_006f;
			IL_000f:
			WriteEndElement(Ⴐ);
			return;
			IL_0017:
			Type type = Ⴐ.GetType();
			if ((object)type == typeof(ႥႥႨႳ.Ⴀ))
			{
				goto IL_003d;
			}
			if (881 > 881 - 722)
			{
				throw CreateUnknownTypeException(Ⴐ);
			}
			goto IL_006f;
			IL_003d:
			WriteStartElement(Ⴓ, Ⴅ, Ⴐ, writePrefixed: false, null);
			goto IL_0048;
		}

		private void ႨႣ(string Ⴓ, string Ⴅ, ႥႥႨႳ.Ⴈ Ⴐ, bool Ⴈ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0074, IL_0088, IL_00b6, IL_00d0, IL_00e9, IL_0100
			Type type = default(Type);
			if (Ⴐ != null)
			{
				if (!Ⴗ)
				{
					if (518 > 518 - 45)
					{
						type = Ⴐ.GetType();
						goto IL_003e;
					}
					return;
				}
				goto IL_0058;
			}
			if (false)
			{
				goto IL_000f;
			}
			goto IL_00d2;
			IL_00d2:
			if (!Ⴈ)
			{
				return;
			}
			if (416 <= 416 - 284)
			{
				goto IL_0007;
			}
			goto IL_00b8;
			IL_0007:
			throw CreateUnknownTypeException(Ⴐ);
			IL_000f:
			WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595243), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), Ⴐ.Ⴐ);
			WriteEndElement(Ⴐ);
			return;
			IL_00b8:
			WriteNullTagLiteral(Ⴓ, Ⴅ);
			if (303 > 303 - 61)
			{
				return;
			}
			goto IL_003e;
			IL_0058:
			WriteStartElement(Ⴓ, Ⴅ, Ⴐ, writePrefixed: false, null);
			if (Ⴗ)
			{
				if (158 <= 158 - 51)
				{
					goto IL_00d2;
				}
				WriteXsiType(ႰႰႰ.Ⴍ.ႳႭႨ(863595191), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
				if (false)
				{
					goto IL_00b8;
				}
			}
			goto IL_000f;
			IL_003e:
			if ((object)type != typeof(ႥႥႨႳ.Ⴈ))
			{
				if (534 >= 534 - 116)
				{
					goto IL_0007;
				}
				return;
			}
			goto IL_0058;
		}

		private void ႨႷ(string Ⴓ, string Ⴅ, ႥႥႨႳ.Ⴃ Ⴐ, bool Ⴈ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0038, IL_0059, IL_009a, IL_00b4, IL_00c7, IL_00de
			Type type = default(Type);
			while (true)
			{
				if (Ⴐ == null)
				{
					if (179 <= 179 - 8)
					{
						goto IL_001e;
					}
					if (!Ⴈ)
					{
						return;
					}
					if (255 <= 255 - 116)
					{
						return;
					}
					WriteNullTagLiteral(Ⴓ, Ⴅ);
					if (1008 >= 1008 - 378)
					{
						return;
					}
				}
				if (Ⴗ)
				{
					break;
				}
				if (883 < 883 - 103)
				{
					continue;
				}
				type = Ⴐ.GetType();
				goto IL_001e;
				IL_001e:
				if ((object)type == typeof(ႥႥႨႳ.Ⴃ))
				{
					break;
				}
				if (147 <= 147 - 101)
				{
				}
				throw CreateUnknownTypeException(Ⴐ);
			}
			do
			{
				WriteStartElement(Ⴓ, Ⴅ, Ⴐ, writePrefixed: false, null);
				if (!Ⴗ)
				{
					break;
				}
				if (497 <= 497 - 183)
				{
					return;
				}
				WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595194), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
			}
			while (520 < 520 - 345);
			WriteEndElement(Ⴐ);
		}

		private string ႳႨႭ(ႥႥႨႨ.Ⴀ Ⴓ)
		{
			int num = 5;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 0:
					num = 6;
					continue;
				case 2:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595246);
					num = 3;
					continue;
				case 1:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595242);
					num = 3;
					continue;
				case 4:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595246);
					num = 3;
					continue;
				case 6:
					throw CreateInvalidEnumValueException(((long)Ⴓ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴐ.ႳႭႨ(863595247));
				case 3:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴓ)
				{
				default:
					num2 = 0;
					break;
				case ႥႥႨႨ.Ⴀ.Ⴅ:
					num2 = 2;
					break;
				case ႥႥႨႨ.Ⴀ.Ⴀ:
					num2 = 1;
					break;
				case ႥႥႨႨ.Ⴀ.Ⴄ:
					num2 = 4;
					break;
				}
				num = num2;
			}
		}

		private void ႨႥ(string Ⴓ, string Ⴅ, ႥႥႨႨ.Ⴈ Ⴐ, bool Ⴈ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003d, IL_005b, IL_0071, IL_00a3, IL_00cb, IL_00e6
			if (Ⴐ == null)
			{
				if (880 > 880 - 384)
				{
					do
					{
						if (!Ⴈ)
						{
							return;
						}
					}
					while (false);
					WriteNullTagLiteral(Ⴓ, Ⴅ);
					if (3 >= 3 - 1)
					{
						return;
					}
					goto IL_0012;
				}
			}
			if (!Ⴗ)
			{
				if (false)
				{
					return;
				}
				goto IL_001a;
			}
			goto IL_003f;
			IL_001a:
			Type type = Ⴐ.GetType();
			if ((object)type != typeof(ႥႥႨႨ.Ⴈ))
			{
				if (false)
				{
					return;
				}
				goto IL_000a;
			}
			goto IL_003f;
			IL_003f:
			WriteStartElement(Ⴓ, Ⴅ, Ⴐ, writePrefixed: false, null);
			if (Ⴗ)
			{
				if (344 <= 344 - 49)
				{
					goto IL_001a;
				}
				WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595241), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
				if (1008 <= 1008 - 595)
				{
					goto IL_000a;
				}
			}
			goto IL_0012;
			IL_0012:
			WriteEndElement(Ⴐ);
			return;
			IL_000a:
			throw CreateUnknownTypeException(Ⴐ);
		}

		private void ႨႰ(string Ⴃ, string Ⴀ, ႥႥႨႨ.Ⴅ Ⴄ, bool Ⴗ, bool Ⴈ)
		{
			//Discarded unreachable code: IL_0005, IL_003e, IL_0062, IL_0079, IL_00a8, IL_00c4, IL_00da, IL_00f5
			if (Ⴄ == null)
			{
				if (291 < 291 - 183 || !Ⴗ)
				{
					return;
				}
				if (244 > 244 - 55)
				{
					WriteNullTagLiteral(Ⴃ, Ⴀ);
					if ((505 + 505 * 505) % 2 == 0)
					{
						return;
					}
					goto IL_0043;
				}
				goto IL_0021;
			}
			goto IL_0065;
			IL_0065:
			Type type = default(Type);
			if (!Ⴈ)
			{
				if (918 < 918 - 387)
				{
					goto IL_0012;
				}
				type = Ⴄ.GetType();
				goto IL_0021;
			}
			goto IL_0043;
			IL_0043:
			WriteStartElement(Ⴃ, Ⴀ, Ⴄ, writePrefixed: false, null);
			if (Ⴈ)
			{
				if (360 <= 360 - 172)
				{
				}
				WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595243), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
				if (990 <= 990 - 380)
				{
					return;
				}
			}
			goto IL_0012;
			IL_0012:
			WriteEndElement(Ⴄ);
			return;
			IL_0021:
			if ((object)type == typeof(ႥႥႨႨ.Ⴅ))
			{
				goto IL_0043;
			}
			if (966 > 966 - 921)
			{
				throw CreateUnknownTypeException(Ⴄ);
			}
			goto IL_0065;
		}

		private string ႳႨႳ(ႥႥႨႨ.Ⴓ Ⴃ)
		{
			int num = 5;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 0:
					num = 2;
					continue;
				case 3:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595247);
					num = 7;
					continue;
				case 4:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595240);
					num = 7;
					continue;
				case 1:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595240);
					num = 7;
					continue;
				case 6:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595244);
					num = 7;
					continue;
				case 8:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595243);
					num = 7;
					continue;
				case 2:
					throw CreateInvalidEnumValueException(((long)Ⴃ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴓ.ႳႭႨ(863595246));
				case 7:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴃ)
				{
				default:
					num2 = 0;
					break;
				case ႥႥႨႨ.Ⴓ.Ⴀ:
					num2 = 3;
					break;
				case ႥႥႨႨ.Ⴓ.Ⴄ:
					num2 = 4;
					break;
				case ႥႥႨႨ.Ⴓ.Ⴐ:
					num2 = 1;
					break;
				case ႥႥႨႨ.Ⴓ.Ⴓ:
					num2 = 6;
					break;
				case ႥႥႨႨ.Ⴓ.Ⴅ:
					num2 = 8;
					break;
				}
				num = num2;
			}
		}

		private string ႳႨႨ(ႥႥႨႰ.Ⴜ Ⴃ)
		{
			int num = 5;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 3:
					num = 1;
					continue;
				case 6:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595241);
					num = 2;
					continue;
				case 4:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595245);
					num = 2;
					continue;
				case 0:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595240);
					num = 2;
					continue;
				case 1:
					throw CreateInvalidEnumValueException(((long)Ⴃ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴓ.ႳႭႨ(863595247));
				case 2:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴃ)
				{
				default:
					num2 = 3;
					break;
				case ႥႥႨႰ.Ⴜ.Ⴀ:
					num2 = 6;
					break;
				case ႥႥႨႰ.Ⴜ.Ⴄ:
					num2 = 4;
					break;
				case (ႥႥႨႰ.Ⴜ)2:
					num2 = 1;
					break;
				case (ႥႥႨႰ.Ⴜ)3:
					num2 = 1;
					break;
				case ႥႥႨႰ.Ⴜ.Ⴐ:
					num2 = 0;
					break;
				}
				num = num2;
			}
		}

		private unsafe void ႨႠ(string Ⴃ, string Ⴀ, ႥႥႨႰ.Ⴍ Ⴄ, bool Ⴗ, bool Ⴈ)
		{
			int num = 9;
			while (true)
			{
				switch (num)
				{
				case 3:
					return;
				default:
					num = ((Ⴄ != null) ? 4 : 2);
					continue;
				case 2:
					num = ((!Ⴗ) ? 3 : 8);
					continue;
				case 8:
					WriteNullTagLiteral(Ⴃ, Ⴀ);
					return;
				case 4:
					num = (Ⴈ ? 7 : 0);
					continue;
				case 0:
				{
					Type type = Ⴄ.GetType();
					num = (((object)type == typeof(ႥႥႨႰ.Ⴍ)) ? 7 : 5);
					continue;
				}
				case 5:
					throw CreateUnknownTypeException(Ⴄ);
				case 7:
					WriteStartElement(Ⴃ, Ⴀ, Ⴄ, writePrefixed: false, null);
					num = (Ⴈ ? 1 : 6);
					continue;
				case 1:
					WriteXsiType(ႰႰႰ.Ⴐ.ႳႭႨ(863595250), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					break;
				case 6:
					break;
				}
				break;
			}
			WriteElementStringRaw(ႰႰႰ.Ⴗ.ႳႭႨ(863595245), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), XmlSerializationWriter.FromByteArrayBase64(*(byte[]*)(&Ⴄ.Ⴐ)));
			WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595241), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(*(int*)(&Ⴄ.Ⴀ)));
			WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595251), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(*(int*)(&Ⴄ.Ⴄ)));
			WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595245), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlConvert.ToString(*(long*)(&Ⴄ.Ⴀ)));
			WriteElementStringRaw(ႰႰႰ.Ⴄ.ႳႭႨ(863595247), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), XmlSerializationWriter.FromByteArrayBase64(Ⴄ.Ⴈ));
			WriteElementStringRaw(ႰႰႰ.Ⴗ.ႳႭႨ(863595248), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴄ.Ⴐ));
			WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595244), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴄ.Ⴓ));
			WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595249), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴄ.Ⴄ));
			WriteElementString(ႰႰႰ.Ⴓ.ႳႭႨ(863595248), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), Ⴄ.Ⴀ);
			WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595245), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), ႳႨႷ((ႥႥႼ.Ⴓ)Ⴄ.Ⴅ));
			WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595249), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴄ.Ⴅ));
			WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595250), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), ႳႨႣ((ႥႥႼ.Ⴐ)Ⴄ.Ⴅ));
			WriteEndElement(Ⴄ);
		}

		private string ႳႨႣ(ႥႥႼ.Ⴐ Ⴃ)
		{
			int num = 3;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 6:
					num = 5;
					continue;
				case 4:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595244);
					num = 0;
					continue;
				case 2:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595241);
					num = 0;
					continue;
				case 1:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595244);
					num = 0;
					continue;
				case 5:
					throw CreateInvalidEnumValueException(((long)Ⴃ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴗ.ႳႭႨ(863595250));
				case 0:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴃ)
				{
				default:
					num2 = 6;
					break;
				case ႥႥႼ.Ⴐ.Ⴐ:
					num2 = 4;
					break;
				case ႥႥႼ.Ⴐ.Ⴈ:
					num2 = 2;
					break;
				case ႥႥႼ.Ⴐ.Ⴓ:
					num2 = 1;
					break;
				}
				num = num2;
			}
		}

		private string ႳႨႷ(ႥႥႼ.Ⴓ Ⴃ)
		{
			//Discarded unreachable code: IL_0005, IL_0039, IL_0048, IL_0057, IL_0066, IL_0075, IL_0084, IL_0093, IL_00a2, IL_00b4, IL_00c6, IL_00cd, IL_0111
			string text = null;
			switch (Ⴃ)
			{
			case ႥႥႼ.Ⴓ.Ⴃ:
				return ႰႰႰ.Ⴓ.ႳႭႨ(863595250);
			case ႥႥႼ.Ⴓ.Ⴓ:
				return ႰႰႰ.Ⴍ.ႳႭႨ(863595246);
			case ႥႥႼ.Ⴓ.ႨႰ:
				return ႰႰႰ.Ⴗ.ႳႭႨ(863595249);
			case ႥႥႼ.Ⴓ.ႨႨ:
				return ႰႰႰ.Ⴄ.ႳႭႨ(863595244);
			case ႥႥႼ.Ⴓ.Ⴄ:
				return ႰႰႰ.Ⴍ.ႳႭႨ(863595247);
			case ႥႥႼ.Ⴓ.ႨႳ:
				return ႰႰႰ.Ⴓ.ႳႭႨ(863595251);
			case ႥႥႼ.Ⴓ.Ⴀ:
				return ႰႰႰ.Ⴄ.ႳႭႨ(863595246);
			case ႥႥႼ.Ⴓ.Ⴍ:
				return ႰႰႰ.Ⴐ.ႳႭႨ(863595248);
			case ႥႥႼ.Ⴓ.Ⴐ:
				return ႰႰႰ.Ⴐ.ႳႭႨ(863595152);
			case ႥႥႼ.Ⴓ.Ⴅ:
				return ႰႰႰ.Ⴗ.ႳႭႨ(863595251);
			default:
				if (876 >= 876 - 23)
				{
				}
				throw CreateInvalidEnumValueException(((long)Ⴃ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴗ.ႳႭႨ(863595254));
			}
		}

		private void ႨႤ(string Ⴃ, string Ⴀ, FileUtils Ⴄ, bool Ⴗ, bool Ⴈ)
		{
			//Discarded unreachable code: IL_0005, IL_0038, IL_0058, IL_006e, IL_009c, IL_00b5, IL_00ce, IL_00e6
			while (true)
			{
				if (Ⴄ != null)
				{
					if (!Ⴈ)
					{
						if (false)
						{
							return;
						}
						Type type = Ⴄ.GetType();
						if ((object)type != typeof(FileUtils))
						{
							if (447 > 447 - 82)
							{
								throw CreateUnknownTypeException(Ⴄ);
							}
							return;
						}
					}
					WriteStartElement(Ⴃ, Ⴀ, Ⴄ, writePrefixed: false, null);
				}
				else
				{
					if (439 <= 439 - 195)
					{
						break;
					}
					if (!Ⴗ)
					{
						return;
					}
					if (227 > 227 - 24)
					{
						break;
					}
				}
				if (Ⴈ)
				{
					if (false)
					{
						return;
					}
					WriteXsiType(ႰႰႰ.Ⴍ.ႳႭႨ(863595245), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					if (false)
					{
						continue;
					}
				}
				WriteEndElement(Ⴄ);
				return;
			}
			WriteNullTagLiteral(Ⴃ, Ⴀ);
			if ((566 + 566 * 566) % 2 == 0)
			{
			}
		}

		private void ႨႼ(string Ⴃ, string Ⴀ, ႥႥႨႰ.Ⴈ Ⴄ, bool Ⴗ, bool Ⴈ)
		{
			int num = 8;
			while (true)
			{
				switch (num)
				{
				case 5:
					return;
				default:
					num = ((Ⴄ != null) ? 9 : 3);
					continue;
				case 3:
					num = ((!Ⴗ) ? 5 : 6);
					continue;
				case 6:
					WriteNullTagLiteral(Ⴃ, Ⴀ);
					return;
				case 9:
					num = (Ⴈ ? 4 : 7);
					continue;
				case 7:
				{
					Type type = Ⴄ.GetType();
					num = (((object)type == typeof(ႥႥႨႰ.Ⴈ)) ? 4 : 0);
					continue;
				}
				case 0:
					throw CreateUnknownTypeException(Ⴄ);
				case 4:
					WriteStartElement(Ⴃ, Ⴀ, Ⴄ, writePrefixed: false, null);
					num = (Ⴈ ? 1 : 2);
					continue;
				case 1:
					WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595191), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					break;
				case 2:
					break;
				}
				break;
			}
			WriteEndElement(Ⴄ);
		}

		private void ႣႭ(string Ⴃ, string Ⴀ, ႥႥႨႰ.Ⴄ Ⴄ, bool Ⴗ, bool Ⴈ)
		{
			int num = 4;
			while (true)
			{
				switch (num)
				{
				case 8:
					return;
				default:
					num = ((Ⴄ != null) ? 5 : 3);
					continue;
				case 3:
					num = ((!Ⴗ) ? 8 : 9);
					continue;
				case 9:
					WriteNullTagLiteral(Ⴃ, Ⴀ);
					return;
				case 5:
					num = ((!Ⴈ) ? 1 : 6);
					continue;
				case 1:
				{
					Type type = Ⴄ.GetType();
					num = (((object)type == typeof(ႥႥႨႰ.Ⴄ)) ? 6 : 2);
					continue;
				}
				case 2:
					throw CreateUnknownTypeException(Ⴄ);
				case 6:
					WriteStartElement(Ⴃ, Ⴀ, Ⴄ, writePrefixed: false, null);
					num = (Ⴈ ? 7 : 0);
					continue;
				case 7:
					WriteXsiType(ႰႰႰ.Ⴐ.ႳႭႨ(863595185), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					break;
				case 0:
					break;
				}
				break;
			}
			WriteEndElement(Ⴄ);
		}

		private void ႣႳ(string Ⴃ, string Ⴀ, ႥႥႨႰ.Ⴗ Ⴄ, bool Ⴗ, bool Ⴈ)
		{
			//Discarded unreachable code: IL_0005, IL_003b, IL_0059, IL_006c, IL_009b, IL_00b7, IL_00d0, IL_00e7
			if (Ⴄ != null)
			{
				while (true)
				{
					if (!Ⴈ)
					{
						if ((110 + 110 * 110) % 2 == 0)
						{
							Type type = Ⴄ.GetType();
							if ((object)type == typeof(ႥႥႨႰ.Ⴗ))
							{
								goto IL_003d;
							}
							if (250 >= 250 - 165)
							{
								break;
							}
						}
						goto IL_000f;
					}
					goto IL_003d;
					IL_000f:
					WriteEndElement(Ⴄ);
					return;
					IL_003d:
					WriteStartElement(Ⴃ, Ⴀ, Ⴄ, writePrefixed: false, null);
					if (Ⴈ)
					{
						if (211 <= 211 - 44)
						{
							goto IL_00b9;
						}
						WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595255), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
						if (439 < 439 - 357)
						{
							continue;
						}
					}
					goto IL_000f;
				}
				goto IL_0007;
			}
			if ((668 + 668 * 668) % 2 == 0)
			{
			}
			goto IL_00b9;
			IL_0007:
			throw CreateUnknownTypeException(Ⴄ);
			IL_00b9:
			if (!Ⴗ)
			{
				return;
			}
			if (1011 >= 1011 - 720)
			{
				WriteNullTagLiteral(Ⴃ, Ⴀ);
				if ((694 + 694 * 694) % 2 == 0)
				{
				}
				return;
			}
			goto IL_0007;
		}

		private string ႳႨႥ(ႥႥႼ.Ⴀ Ⴃ)
		{
			int num = 4;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 1:
					num = 0;
					continue;
				case 3:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595250);
					num = 5;
					continue;
				case 2:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595252);
					num = 5;
					continue;
				case 0:
					throw CreateInvalidEnumValueException(((long)Ⴃ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴐ.ႳႭႨ(863595254));
				case 5:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴃ)
				{
				default:
					num2 = 1;
					break;
				case ႥႥႼ.Ⴀ.Ⴐ:
					num2 = 3;
					break;
				case ႥႥႼ.Ⴀ.Ⴈ:
					num2 = 2;
					break;
				}
				num = num2;
			}
		}

		private string ႳႨႰ(ႥႥႼ.Ⴈ Ⴃ)
		{
			int num = 5;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 4:
					num = 8;
					continue;
				case 3:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595253);
					num = 0;
					continue;
				case 2:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595251);
					num = 0;
					continue;
				case 6:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595254);
					num = 0;
					continue;
				case 9:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595255);
					num = 0;
					continue;
				case 1:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595251);
					num = 0;
					continue;
				case 7:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595258);
					num = 0;
					continue;
				case 8:
					throw CreateInvalidEnumValueException(((long)Ⴃ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴐ.ႳႭႨ(863595253));
				case 0:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴃ)
				{
				default:
					num2 = 4;
					break;
				case ႥႥႼ.Ⴈ.Ⴓ:
					num2 = 6;
					break;
				case ႥႥႼ.Ⴈ.Ⴐ:
					num2 = 3;
					break;
				case ႥႥႼ.Ⴈ.Ⴈ:
					num2 = 2;
					break;
				case (ႥႥႼ.Ⴈ)515:
					num2 = 8;
					break;
				case ႥႥႼ.Ⴈ.Ⴅ:
					num2 = 1;
					break;
				case ႥႥႼ.Ⴈ.Ⴀ:
					num2 = 7;
					break;
				case (ႥႥႼ.Ⴈ)518:
					num2 = 8;
					break;
				case (ႥႥႼ.Ⴈ)519:
					num2 = 8;
					break;
				case (ႥႥႼ.Ⴈ)520:
					num2 = 8;
					break;
				case (ႥႥႼ.Ⴈ)521:
					num2 = 8;
					break;
				case ႥႥႼ.Ⴈ.Ⴗ:
					num2 = 9;
					break;
				}
				num = num2;
			}
		}

		private string ႳႨႠ(ႥႥႤ.Ⴗ.ႥႤ Ⴃ)
		{
			int num = 12;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 13:
					num = 8;
					continue;
				case 3:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595255);
					num = 0;
					continue;
				case 5:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595252);
					num = 0;
					continue;
				case 9:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595248);
					num = 0;
					continue;
				case 10:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595259);
					num = 0;
					continue;
				case 4:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595248);
					num = 0;
					continue;
				case 1:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595252);
					num = 0;
					continue;
				case 2:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595258);
					num = 0;
					continue;
				case 6:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595249);
					num = 0;
					continue;
				case 11:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595257);
					num = 0;
					continue;
				case 7:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595249);
					num = 0;
					continue;
				case 8:
					throw CreateInvalidEnumValueException(((long)Ⴃ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴍ.ႳႭႨ(863595255));
				case 0:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴃ)
				{
				default:
					num2 = 13;
					break;
				case ႥႥႤ.Ⴗ.ႥႤ.Ⴐ:
					num2 = 3;
					break;
				case ႥႥႤ.Ⴗ.ႥႤ.Ⴈ:
					num2 = 5;
					break;
				case ႥႥႤ.Ⴗ.ႥႤ.Ⴓ:
					num2 = 9;
					break;
				case ႥႥႤ.Ⴗ.ႥႤ.Ⴗ:
					num2 = 10;
					break;
				case ႥႥႤ.Ⴗ.ႥႤ.Ⴅ:
					num2 = 4;
					break;
				case ႥႥႤ.Ⴗ.ႥႤ.Ⴀ:
					num2 = 1;
					break;
				case ႥႥႤ.Ⴗ.ႥႤ.Ⴃ:
					num2 = 2;
					break;
				case ႥႥႤ.Ⴗ.ႥႤ.Ⴍ:
					num2 = 6;
					break;
				case ႥႥႤ.Ⴗ.ႥႤ.Ⴄ:
					num2 = 11;
					break;
				case ႥႥႤ.Ⴗ.ႥႤ.Ⴜ:
					num2 = 7;
					break;
				}
				num = num2;
			}
		}

		private string ႳႨႤ(ႥႥႤ.Ⴅ.ႥႭ Ⴃ)
		{
			int num = 24;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 11:
					num = 5;
					continue;
				case 14:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595259);
					num = 9;
					continue;
				case 6:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595256);
					num = 9;
					continue;
				case 21:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595253);
					num = 9;
					continue;
				case 3:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595254);
					num = 9;
					continue;
				case 4:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595254);
					num = 9;
					continue;
				case 10:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595256);
					num = 9;
					continue;
				case 12:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595262);
					num = 9;
					continue;
				case 2:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595258);
					num = 9;
					continue;
				case 20:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595252);
					num = 9;
					continue;
				case 15:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595263);
					num = 9;
					continue;
				case 23:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595255);
					num = 9;
					continue;
				case 13:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595256);
					num = 9;
					continue;
				case 18:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595257);
					num = 9;
					continue;
				case 0:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595253);
					num = 9;
					continue;
				case 8:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595260);
					num = 9;
					continue;
				case 19:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595252);
					num = 9;
					continue;
				case 1:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595257);
					num = 9;
					continue;
				case 17:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595262);
					num = 9;
					continue;
				case 16:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595258);
					num = 9;
					continue;
				case 22:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595261);
					num = 9;
					continue;
				case 7:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595253);
					num = 9;
					continue;
				case 5:
					throw CreateInvalidEnumValueException(((long)Ⴃ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴍ.ႳႭႨ(863595259));
				case 9:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴃ)
				{
				default:
					num2 = 11;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.Ⴐ:
					num2 = 14;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.Ⴈ:
					num2 = 6;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.Ⴓ:
					num2 = 21;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.Ⴗ:
					num2 = 3;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.Ⴅ:
					num2 = 4;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.Ⴀ:
					num2 = 10;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.Ⴃ:
					num2 = 12;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.Ⴍ:
					num2 = 2;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.Ⴄ:
					num2 = 20;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.Ⴜ:
					num2 = 15;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.ႨႰ:
					num2 = 23;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.ႨႨ:
					num2 = 13;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.ႨႳ:
					num2 = 18;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.ႨႷ:
					num2 = 0;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.ႨႥ:
					num2 = 8;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.ႨႠ:
					num2 = 19;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.ႨႣ:
					num2 = 1;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.ႨႭ:
					num2 = 17;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.ႨႤ:
					num2 = 16;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.ႨႼ:
					num2 = 22;
					break;
				case ႥႥႤ.Ⴅ.ႥႭ.ႳႰ:
					num2 = 7;
					break;
				}
				num = num2;
			}
		}

		private void ႣႨ(string Ⴃ, string Ⴀ, ႥႭႤ.Ⴃ Ⴄ, bool Ⴗ, bool Ⴈ)
		{
			//Discarded unreachable code: IL_0005, IL_0025, IL_004b, IL_0074, IL_0084
			if (Ⴄ != null)
			{
				if (Ⴈ)
				{
					return;
				}
				if (false)
				{
					return;
				}
				Type type = Ⴄ.GetType();
				if ((object)type != typeof(ႥႭႤ.Ⴃ))
				{
					goto IL_0007;
				}
				if (668 > 668 - 239)
				{
					return;
				}
			}
			else if (97 <= 97 - 33)
			{
				goto IL_0007;
			}
			while (Ⴗ)
			{
				if (169 < 169 - 23)
				{
					break;
				}
				WriteNullTagLiteral(Ⴃ, Ⴀ);
				if ((13 + 13 * 13) % 2 == 0)
				{
					break;
				}
			}
			return;
			IL_0007:
			throw CreateUnknownTypeException(Ⴄ);
		}

		private void ႣႣ(string Ⴅ, string Ⴃ, ႥႥႣ.Ⴜ Ⴐ, bool Ⴍ, bool Ⴄ)
		{
			//Discarded unreachable code: IL_0005, IL_003d, IL_005e, IL_006f, IL_009b, IL_00b8, IL_00ce, IL_00e9
			Type type = default(Type);
			if (Ⴐ != null)
			{
				if (!Ⴄ)
				{
					if (119 >= 119 - 116)
					{
						type = Ⴐ.GetType();
						goto IL_0021;
					}
					goto IL_0071;
				}
			}
			else if (534 > 534 - 293)
			{
				do
				{
					if (!Ⴍ)
					{
						return;
					}
				}
				while (430 <= 430 - 346);
				WriteNullTagLiteral(Ⴅ, Ⴃ);
				if (390 >= 390 - 265)
				{
					return;
				}
			}
			goto IL_003f;
			IL_0021:
			if ((object)type == typeof(ႥႥႣ.Ⴜ))
			{
				goto IL_003f;
			}
			if ((1019 + 1019 * 1019) % 2 == 0)
			{
				throw CreateUnknownTypeException(Ⴐ);
			}
			goto IL_0071;
			IL_0071:
			WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595259), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
			if (1005 >= 1005 - 43)
			{
				goto IL_0012;
			}
			goto IL_0021;
			IL_0012:
			WriteEndElement(Ⴐ);
			return;
			IL_003f:
			WriteStartElement(Ⴅ, Ⴃ, Ⴐ, writePrefixed: false, null);
			if (!Ⴄ)
			{
				goto IL_0012;
			}
			if (581 <= 581 - 334)
			{
				goto IL_0021;
			}
			goto IL_0071;
		}

		private void ႣႷ(string Ⴐ, string Ⴗ, global::ႳႨႭ.Ⴓ Ⴓ, bool Ⴍ, bool Ⴄ)
		{
			int num = 0;
			while (true)
			{
				switch (num)
				{
				case 9:
					return;
				default:
					num = ((Ⴓ != null) ? 6 : 4);
					continue;
				case 4:
					num = ((!Ⴍ) ? 9 : 3);
					continue;
				case 3:
					WriteNullTagLiteral(Ⴐ, Ⴗ);
					return;
				case 6:
					num = (Ⴄ ? 5 : 2);
					continue;
				case 2:
				{
					Type type = Ⴓ.GetType();
					num = (((object)type == typeof(global::ႳႨႭ.Ⴓ)) ? 5 : 8);
					continue;
				}
				case 8:
					throw CreateUnknownTypeException(Ⴓ);
				case 5:
					WriteStartElement(Ⴐ, Ⴗ, Ⴓ, writePrefixed: false, null);
					num = (Ⴄ ? 1 : 7);
					continue;
				case 1:
					WriteXsiType(ႰႰႰ.Ⴍ.ႳႭႨ(863595180), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
					break;
				case 7:
					break;
				}
				break;
			}
			WriteEndElement(Ⴓ);
		}

		private void ႣႥ(string Ⴐ, string Ⴗ, ႥႥႣ.Ⴗ Ⴓ, bool Ⴍ, bool Ⴄ)
		{
			int num = 7;
			while (true)
			{
				switch (num)
				{
				case 8:
					return;
				default:
					num = ((Ⴓ != null) ? 2 : 5);
					continue;
				case 5:
					num = ((!Ⴍ) ? 8 : 3);
					continue;
				case 3:
					WriteNullTagLiteral(Ⴐ, Ⴗ);
					return;
				case 2:
					num = (Ⴄ ? 9 : 4);
					continue;
				case 4:
				{
					Type type = Ⴓ.GetType();
					num = (((object)type != typeof(ႥႥႣ.Ⴗ)) ? 1 : 9);
					continue;
				}
				case 1:
					throw CreateUnknownTypeException(Ⴓ);
				case 9:
					WriteStartElement(Ⴐ, Ⴗ, Ⴓ, writePrefixed: false, null);
					num = ((!Ⴄ) ? 6 : 0);
					continue;
				case 0:
					WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595186), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					break;
				case 6:
					break;
				}
				break;
			}
			WriteEndElement(Ⴓ);
		}

		private void ႣႰ(string Ⴐ, string Ⴓ, ႥႥႠ.Ⴐ Ⴀ, bool Ⴄ, bool Ⴍ)
		{
			int num = 6;
			while (true)
			{
				switch (num)
				{
				case 0:
					return;
				case 2:
					return;
				case 8:
					return;
				default:
					num = ((Ⴀ != null) ? 1 : 5);
					break;
				case 5:
					num = ((!Ⴄ) ? 8 : 3);
					break;
				case 3:
					WriteNullTagLiteral(Ⴐ, Ⴓ);
					return;
				case 1:
					num = ((!Ⴍ) ? 4 : 0);
					break;
				case 4:
				{
					Type type = Ⴀ.GetType();
					num = (((object)type != typeof(ႥႥႠ.Ⴐ)) ? 7 : 2);
					break;
				}
				case 7:
					throw CreateUnknownTypeException(Ⴀ);
				}
			}
		}

		private void ႣႠ(string Ⴀ, string Ⴍ, ႥႥႠ.Ⴗ Ⴄ, bool Ⴓ, bool Ⴗ)
		{
			int num = 8;
			while (true)
			{
				switch (num)
				{
				case 7:
					return;
				default:
					num = ((Ⴄ != null) ? 2 : 0);
					continue;
				case 0:
					num = ((!Ⴓ) ? 7 : 5);
					continue;
				case 5:
					WriteNullTagLiteral(Ⴀ, Ⴍ);
					return;
				case 2:
					num = (Ⴗ ? 6 : 3);
					continue;
				case 3:
				{
					Type type = Ⴄ.GetType();
					num = (((object)type == typeof(ႥႥႠ.Ⴗ)) ? 6 : 9);
					continue;
				}
				case 9:
					throw CreateUnknownTypeException(Ⴄ);
				case 6:
					WriteStartElement(Ⴀ, Ⴍ, Ⴄ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 1 : 4);
					continue;
				case 4:
					WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595202), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					break;
				case 1:
					break;
				}
				break;
			}
			WriteEndElement(Ⴄ);
		}

		private void Ⴜ(string Ⴀ, string Ⴍ, ႥႥႠ.Ⴅ.ႥႳ Ⴄ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_003b, IL_0067, IL_0092, IL_00d7
			while (true)
			{
				if (!Ⴓ)
				{
					if (467 < 467 - 14)
					{
						continue;
					}
					Type type = Ⴄ.GetType();
					if ((object)type != typeof(ႥႥႠ.Ⴅ.ႥႳ))
					{
						if (96 > 96 - 67)
						{
						}
						goto IL_000a;
					}
				}
				WriteStartElement(Ⴀ, Ⴍ, Ⴄ, writePrefixed: false, null);
				if (!Ⴓ)
				{
					break;
				}
				if (411 >= 411 - 126)
				{
					WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595177), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					if (386 > 386 - 360)
					{
						break;
					}
					goto IL_000a;
				}
				return;
				IL_000a:
				throw CreateUnknownTypeException(Ⴄ);
			}
			ႳႭ(ႰႰႰ.Ⴓ.ႳႭႨ(863595262), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), Ⴄ.Ⴀ, Ⴓ: false);
			WriteEndElement(Ⴄ);
		}

		private unsafe void ႳႭ(string Ⴀ, string Ⴍ, ႥႥႠ.Ⴅ.ႥႨ Ⴄ, bool Ⴓ)
		{
			int num = 2;
			while (true)
			{
				switch (num)
				{
				default:
					num = ((!Ⴓ) ? 4 : 0);
					continue;
				case 4:
				{
					Type type = Ⴄ.GetType();
					num = (((object)type != typeof(ႥႥႠ.Ⴅ.ႥႨ)) ? 1 : 0);
					continue;
				}
				case 1:
					throw CreateUnknownTypeException(Ⴄ);
				case 0:
					WriteStartElement(Ⴀ, Ⴍ, Ⴄ, writePrefixed: false, null);
					num = ((!Ⴓ) ? 3 : 5);
					continue;
				case 5:
					WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595180), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					break;
				case 3:
					break;
				}
				break;
			}
			WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595256), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(*(ushort*)(&Ⴄ.Ⴀ)));
			WriteElementStringRaw(ႰႰႰ.Ⴗ.ႳႭႨ(863595203), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), XmlSerializationWriter.FromByteArrayBase64(Ⴄ.Ⴀ));
			WriteEndElement(Ⴄ);
		}

		private void ႣႤ(string Ⴀ, string Ⴍ, ႥႥႠ.Ⴅ Ⴄ, bool Ⴓ, bool Ⴗ)
		{
			int num = 4;
			while (true)
			{
				switch (num)
				{
				case 9:
					return;
				default:
					num = ((Ⴄ != null) ? 2 : 6);
					continue;
				case 6:
					num = ((!Ⴓ) ? 9 : 8);
					continue;
				case 8:
					WriteNullTagLiteral(Ⴀ, Ⴍ);
					return;
				case 2:
					num = ((!Ⴗ) ? 3 : 0);
					continue;
				case 3:
				{
					Type type = Ⴄ.GetType();
					num = (((object)type != typeof(ႥႥႠ.Ⴅ)) ? 5 : 0);
					continue;
				}
				case 5:
					throw CreateUnknownTypeException(Ⴄ);
				case 0:
					WriteStartElement(Ⴀ, Ⴍ, Ⴄ, writePrefixed: false, null);
					num = (Ⴗ ? 1 : 7);
					continue;
				case 1:
					WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595181), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					break;
				case 7:
					break;
				}
				break;
			}
			WriteEndElement(Ⴄ);
		}

		private string ႳႨႼ(ႥႥႠ.Ⴍ.ႥႰ Ⴀ)
		{
			//Discarded unreachable code: IL_0002, IL_0011, IL_0042, IL_0065
			do
			{
				string text = null;
				switch (Ⴀ)
				{
				case ႥႥႠ.Ⴍ.ႥႰ.Ⴓ:
					return ႰႰႰ.Ⴗ.ႳႭႨ(863595200);
				case ႥႥႠ.Ⴍ.ႥႰ.Ⴃ:
					return ႰႰႰ.Ⴄ.ႳႭႨ(863595258);
				}
			}
			while (205 <= 205 - 33);
			throw CreateInvalidEnumValueException(((long)Ⴀ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴍ.ႳႭႨ(863595257));
		}

		private string ႳႣႭ(ႥႥႠ.Ⴍ.ႷႼ Ⴀ)
		{
			int num = 1;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 4:
					num = 3;
					continue;
				case 5:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595263);
					num = 0;
					continue;
				case 2:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595263);
					num = 0;
					continue;
				case 3:
					throw CreateInvalidEnumValueException(((long)Ⴀ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴄ.ႳႭႨ(863595259));
				case 0:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴀ)
				{
				default:
					num2 = 4;
					break;
				case ႥႥႠ.Ⴍ.ႷႼ.Ⴃ:
					num2 = 5;
					break;
				case ႥႥႠ.Ⴍ.ႷႼ.Ⴓ:
					num2 = 2;
					break;
				}
				num = num2;
			}
		}

		private void ႣႼ(string Ⴀ, string Ⴍ, ႥႥႠ.Ⴍ Ⴄ, bool Ⴓ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003d, IL_0061, IL_0075, IL_00a6, IL_00c2, IL_00dd, IL_00f8
			while (true)
			{
				if (Ⴄ == null)
				{
					if (349 >= 349 - 328)
					{
						goto IL_00c7;
					}
				}
				if (Ⴗ)
				{
					break;
				}
				if (538 >= 538 - 99)
				{
					Type type = Ⴄ.GetType();
					if ((object)type == typeof(ႥႥႠ.Ⴍ))
					{
						break;
					}
					if ((852 + 852 * 852) % 2 == 0)
					{
						throw CreateUnknownTypeException(Ⴄ);
					}
					goto IL_00c7;
				}
				return;
				IL_00c7:
				if (!Ⴓ)
				{
					return;
				}
				if ((983 + 983 * 983) % 2 == 0)
				{
					WriteNullTagLiteral(Ⴀ, Ⴍ);
					if ((233 + 233 * 233) % 2 == 0)
					{
						return;
					}
					continue;
				}
				break;
			}
			WriteStartElement(Ⴀ, Ⴍ, Ⴄ, writePrefixed: false, null);
			if (Ⴗ)
			{
				if (915 < 915 - 891)
				{
					return;
				}
				WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595260), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
				if (false)
				{
					return;
				}
			}
			WriteEndElement(Ⴄ);
		}

		private string ႳႣႳ(FileFormats Ⴀ)
		{
			int num = 4;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 0:
					num = 2;
					continue;
				case 5:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595256);
					num = 3;
					continue;
				case 1:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595261);
					num = 3;
					continue;
				case 2:
					throw CreateInvalidEnumValueException(((long)Ⴀ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴗ.ႳႭႨ(863595201));
				case 3:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴀ)
				{
				default:
					num2 = 0;
					break;
				case FileFormats.Binary:
					num2 = 5;
					break;
				case FileFormats.Xml:
					num2 = 1;
					break;
				}
				num = num2;
			}
		}

		private void ႷႭ(string Ⴀ, string Ⴍ, ႥႥႥ.Ⴗ Ⴄ, bool Ⴓ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0059, IL_006d, IL_009b, IL_00b8, IL_00d0, IL_00e5
			while (true)
			{
				if (Ⴄ == null)
				{
					if (543 >= 543 - 26)
					{
						if (!Ⴓ)
						{
							return;
						}
						if (false)
						{
							goto IL_0046;
						}
					}
					WriteNullTagLiteral(Ⴀ, Ⴍ);
					if (657 > 657 - 481)
					{
						return;
					}
					goto IL_000f;
				}
				goto IL_005c;
				IL_005c:
				if (!Ⴗ)
				{
					if (337 >= 337 - 60)
					{
						Type type = Ⴄ.GetType();
						if ((object)type != typeof(ႥႥႥ.Ⴗ))
						{
							break;
						}
					}
				}
				WriteStartElement(Ⴀ, Ⴍ, Ⴄ, writePrefixed: false, null);
				goto IL_0046;
				IL_0046:
				if (Ⴗ)
				{
					if (false)
					{
						goto IL_005c;
					}
					WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595182), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					if (false)
					{
						continue;
					}
				}
				goto IL_000f;
				IL_000f:
				WriteEndElement(Ⴄ);
				return;
			}
			if (953 >= 953 - 896)
			{
				throw CreateUnknownTypeException(Ⴄ);
			}
		}

		private void ႷႳ(string Ⴀ, string Ⴍ, ႥႥႥ.Ⴅ Ⴄ, bool Ⴓ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0038, IL_005c, IL_0073, IL_00a1, IL_00bd, IL_00d6, IL_00eb
			while (Ⴄ == null)
			{
				if (420 < 420 - 75 || !Ⴓ)
				{
					return;
				}
				if (676 < 676 - 491)
				{
					return;
				}
				WriteNullTagLiteral(Ⴀ, Ⴍ);
				if ((149 + 149 * 149) % 2 == 0)
				{
					return;
				}
			}
			while (true)
			{
				if (!Ⴗ)
				{
					if (692 <= 692 - 591)
					{
						goto IL_0048;
					}
					Type type = Ⴄ.GetType();
					if ((object)type != typeof(ႥႥႥ.Ⴅ))
					{
						if (414 > 414 - 24)
						{
							throw CreateUnknownTypeException(Ⴄ);
						}
						continue;
					}
				}
				goto IL_003d;
				IL_003d:
				WriteStartElement(Ⴀ, Ⴍ, Ⴄ, writePrefixed: false, null);
				goto IL_0048;
				IL_0048:
				if (!Ⴗ)
				{
					break;
				}
				if (559 < 559 - 243)
				{
					return;
				}
				WriteXsiType(ႰႰႰ.Ⴐ.ႳႭႨ(863595260), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
				if ((784 + 784 * 784) % 2 == 0)
				{
					break;
				}
				goto IL_003d;
			}
			WriteEndElement(Ⴄ);
		}

		private string ႳႣႨ(ႥႥႷ.Ⴐ Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_002a, IL_0149, IL_016b, IL_0192, IL_019c, IL_01bf, IL_01e1, IL_01fe, IL_0213, IL_021a, IL_022f, IL_0241, IL_0248, IL_025d, IL_027f, IL_029f, IL_02a9, IL_02bb, IL_02d0, IL_02df, IL_02ee, IL_0311, IL_0323, IL_0349, IL_035a, IL_036c, IL_037e, IL_0390, IL_03a2, IL_03c5, IL_03d7, IL_03ec, IL_040f, IL_042b, IL_0450, IL_0495
			string result = null;
			while (true)
			{
				if (Ⴗ <= ႥႥႷ.Ⴐ.Ⴄ)
				{
					if (672 <= 672 - 518)
					{
						goto IL_000a;
					}
					if (Ⴗ > ႥႥႷ.Ⴐ.Ⴅ)
					{
						if (Ⴗ == ႥႥႷ.Ⴐ.Ⴈ)
						{
							result = ႰႰႰ.Ⴗ.ႳႭႨ(863595206);
							break;
						}
						if ((988 + 988 * 988) % 2 == 0)
						{
							if (Ⴗ == ႥႥႷ.Ⴐ.Ⴀ)
							{
								result = ႰႰႰ.Ⴓ.ႳႭႨ(863595203);
								break;
							}
							if (false)
							{
								continue;
							}
							if (Ⴗ == ႥႥႷ.Ⴐ.Ⴄ)
							{
								result = ႰႰႰ.Ⴍ.ႳႭႨ(863595263);
								break;
							}
							if (665 > 665 - 258)
							{
							}
						}
					}
					else if (530 >= 530 - 502)
					{
						goto IL_0455;
					}
					goto IL_002f;
				}
				goto IL_0328;
				IL_0328:
				if (Ⴗ > ႥႥႷ.Ⴐ.Ⴍ)
				{
					if (Ⴗ != ႥႥႷ.Ⴐ.Ⴃ)
					{
						if (79 < 79 - 50)
						{
							break;
						}
						if (Ⴗ == ႥႥႷ.Ⴐ.Ⴓ)
						{
							result = ႰႰႰ.Ⴍ.ႳႭႨ(863595260);
							break;
						}
						if (935 <= 935 - 527)
						{
							break;
						}
						goto IL_000a;
					}
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595206);
					break;
				}
				if (478 >= 478 - 392)
				{
					if (Ⴗ == ႥႥႷ.Ⴐ.Ⴐ)
					{
						result = ႰႰႰ.Ⴄ.ႳႭႨ(863595257);
						break;
					}
					if ((88 + 88 * 88) % 2 == 0)
					{
						if (Ⴗ == ႥႥႷ.Ⴐ.Ⴗ)
						{
							result = ႰႰႰ.Ⴐ.ႳႭႨ(863595202);
							break;
						}
						if (false)
						{
							goto IL_0231;
						}
						if (Ⴗ == ႥႥႷ.Ⴐ.Ⴍ)
						{
							result = ႰႰႰ.Ⴗ.ႳႭႨ(863595207);
							break;
						}
						if (562 < 562 - 414)
						{
							break;
						}
					}
					goto IL_002f;
				}
				goto IL_0455;
				IL_047f:
				if (756 >= 756 - 226)
				{
					while (Ⴗ != ႥႥႷ.Ⴐ.ႨႷ)
					{
						if (751 > 751 - 343)
						{
							if (Ⴗ == ႥႥႷ.Ⴐ.Ⴅ)
							{
								goto IL_0316;
							}
							if (false)
							{
								continue;
							}
						}
						goto IL_002f;
					}
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595206);
					break;
				}
				goto IL_0328;
				IL_0316:
				result = ႰႰႰ.Ⴐ.ႳႭႨ(863595243);
				break;
				IL_002f:
				do
				{
					result = XmlSerializationWriter.FromEnum((long)Ⴗ, new string[16]
					{
						ႰႰႰ.Ⴍ.ႳႭႨ(863595202),
						ႰႰႰ.Ⴗ.ႳႭႨ(863595206),
						ႰႰႰ.Ⴄ.ႳႭႨ(863595203),
						ႰႰႰ.Ⴓ.ႳႭႨ(863595210),
						ႰႰႰ.Ⴐ.ႳႭႨ(863595207),
						ႰႰႰ.Ⴍ.ႳႭႨ(863595201),
						ႰႰႰ.Ⴗ.ႳႭႨ(863595207),
						ႰႰႰ.Ⴄ.ႳႭႨ(863595201),
						ႰႰႰ.Ⴓ.ႳႭႨ(863595211),
						ႰႰႰ.Ⴗ.ႳႭႨ(863595208),
						ႰႰႰ.Ⴐ.ႳႭႨ(863595200),
						ႰႰႰ.Ⴄ.ႳႭႨ(863595204),
						ႰႰႰ.Ⴍ.ႳႭႨ(863595206),
						ႰႰႰ.Ⴓ.ႳႭႨ(863595208),
						ႰႰႰ.Ⴗ.ႳႭႨ(863595214),
						ႰႰႰ.Ⴐ.ႳႭႨ(863595206)
					}, new long[16]
					{
						256L,
						512L,
						1024L,
						2048L,
						4096L,
						8192L,
						16384L,
						32768L,
						65536L,
						131072L,
						0L,
						1L,
						2L,
						4L,
						8L,
						16L
					}, ႰႰႰ.Ⴐ.ႳႭႨ(863595205));
				}
				while (312 <= 312 - 307);
				break;
				IL_02d2:
				result = ႰႰႰ.Ⴗ.ႳႭႨ(863595205);
				break;
				IL_0203:
				result = ႰႰႰ.Ⴐ.ႳႭႨ(863595200);
				break;
				IL_0231:
				result = ႰႰႰ.Ⴄ.ႳႭႨ(863595263);
				break;
				IL_021f:
				result = ႰႰႰ.Ⴄ.ႳႭႨ(863595261);
				break;
				IL_02e1:
				result = ႰႰႰ.Ⴍ.ႳႭႨ(863595237);
				break;
				IL_0455:
				switch (Ⴗ)
				{
				case ႥႥႷ.Ⴐ.ႨႨ | ႥႥႷ.Ⴐ.ႨႠ:
				case ႥႥႷ.Ⴐ.ႨႨ | ႥႥႷ.Ⴐ.ႨႤ:
				case ႥႥႷ.Ⴐ.ႨႠ | ႥႥႷ.Ⴐ.ႨႤ:
				case ႥႥႷ.Ⴐ.ႨႨ | ႥႥႷ.Ⴐ.ႨႠ | ႥႥႷ.Ⴐ.ႨႤ:
					break;
				case ႥႥႷ.Ⴐ.ႨႥ:
					goto IL_0203;
				case ႥႥႷ.Ⴐ.ႨႰ:
					goto IL_021f;
				case ႥႥႷ.Ⴐ.ႨႠ:
					goto IL_02c0;
				case ႥႥႷ.Ⴐ.ႨႨ:
					goto IL_02d2;
				case ႥႥႷ.Ⴐ.ႨႤ:
					goto IL_02e1;
				default:
					goto IL_047f;
				}
				goto IL_002f;
				IL_000a:
				if (Ⴗ != ႥႥႷ.Ⴐ.Ⴜ)
				{
					if ((788 + 788 * 788) % 2 == 0)
					{
					}
					goto IL_002f;
				}
				goto IL_0231;
				IL_02c0:
				result = ႰႰႰ.Ⴓ.ႳႭႨ(863595204);
				break;
			}
			return result;
		}

		private string ႳႣႣ(ႥႥႷ.Ⴃ Ⴓ)
		{
			//Discarded unreachable code: IL_0002, IL_0031, IL_0040, IL_004f, IL_0053, IL_007c
			do
			{
				string text = null;
				switch (Ⴓ)
				{
				case ႥႥႷ.Ⴃ.Ⴈ:
					return ႰႰႰ.Ⴐ.ႳႭႨ(863595261);
				case ႥႥႷ.Ⴃ.Ⴅ:
					return ႰႰႰ.Ⴓ.ႳႭႨ(863595202);
				case ႥႥႷ.Ⴃ.Ⴀ:
					return ႰႰႰ.Ⴍ.ႳႭႨ(863595262);
				}
			}
			while (false);
			throw CreateInvalidEnumValueException(((long)Ⴓ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴓ.ႳႭႨ(863595200));
		}

		private string ႳႣႷ(ႥႥႷ.Ⴈ Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0011, IL_0020, IL_0044, IL_0069
			string text = null;
			switch (Ⴍ)
			{
			case ႥႥႷ.Ⴈ.Ⴅ:
				return ႰႰႰ.Ⴄ.ႳႭႨ(863595262);
			case ႥႥႷ.Ⴈ.Ⴈ:
				return ႰႰႰ.Ⴓ.ႳႭႨ(863595201);
			default:
				if ((773 + 773 * 773) % 2 == 0)
				{
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴗ.ႳႭႨ(863595204));
				}
				goto case ႥႥႷ.Ⴈ.Ⴈ;
			}
		}

		private string ႳႣႥ(ႥႥႷ.Ⴀ Ⴍ)
		{
			int num = 4;
			string result = default(string);
			ႥႥႷ.Ⴀ ⴀ = default(ႥႥႷ.Ⴀ);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					ⴀ = Ⴍ;
					num = ((ⴀ == ႥႥႷ.Ⴀ.Ⴈ) ? 5 : 2);
					break;
				case 2:
					num = ((ⴀ != ႥႥႷ.Ⴀ.Ⴅ) ? 1 : 3);
					break;
				case 1:
					num = 6;
					break;
				case 5:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595203);
					num = 0;
					break;
				case 3:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595261);
					num = 0;
					break;
				case 6:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴓ.ႳႭႨ(863595207));
				case 0:
					return result;
				}
			}
		}

		private string ႳႣႰ(ႥႥႷ.Ⴅ Ⴍ)
		{
			int num = 0;
			ႥႥႷ.Ⴅ ⴅ = default(ႥႥႷ.Ⴅ);
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 1:
					num = ((ⴅ == ႥႥႷ.Ⴅ.Ⴀ) ? 5 : 9);
					continue;
				case 9:
					num = ((ⴅ == ႥႥႷ.Ⴅ.Ⴃ) ? 2 : 3);
					continue;
				case 3:
					num = 6;
					continue;
				case 8:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595210);
					num = 4;
					continue;
				case 7:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595260);
					num = 4;
					continue;
				case 5:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595205);
					num = 4;
					continue;
				case 2:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595201);
					num = 4;
					continue;
				case 6:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴄ.ႳႭႨ(863595202));
				case 4:
					return result;
				}
				result = null;
				ⴅ = Ⴍ;
				int num2;
				switch (ⴅ)
				{
				default:
					num2 = 1;
					break;
				case ႥႥႷ.Ⴅ.Ⴗ:
					num2 = 8;
					break;
				case (ႥႥႷ.Ⴅ)1:
					num2 = 6;
					break;
				case ႥႥႷ.Ⴅ.Ⴍ:
					num2 = 7;
					break;
				}
				num = num2;
			}
		}

		private string ႳႣႠ(ႥႥႷ.Ⴄ Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_006b, IL_007a, IL_0089, IL_0098, IL_00ad, IL_00b4, IL_00db
			while (true)
			{
				string text = null;
				while (true)
				{
					switch (Ⴍ)
					{
					case ႥႥႷ.Ⴄ.Ⴀ:
						text = ႰႰႰ.Ⴍ.ႳႭႨ(863595203);
						break;
					case ႥႥႷ.Ⴄ.Ⴄ:
						text = ႰႰႰ.Ⴗ.ႳႭႨ(863595211);
						break;
					default:
						if (false || Ⴍ == ႥႥႷ.Ⴄ.Ⴐ)
						{
							text = ႰႰႰ.Ⴄ.ႳႭႨ(863595200);
							break;
						}
						goto IL_009e;
					}
					goto IL_00b6;
					IL_009e:
					if ((321 + 321 * 321) % 2 == 0)
					{
						text = XmlSerializationWriter.FromEnum((long)Ⴍ, new string[3]
						{
							ႰႰႰ.Ⴍ.ႳႭႨ(863595203),
							ႰႰႰ.Ⴗ.ႳႭႨ(863595211),
							ႰႰႰ.Ⴄ.ႳႭႨ(863595200)
						}, new long[3]
						{
							1L,
							2L,
							8L
						}, ႰႰႰ.Ⴍ.ႳႭႨ(863595200));
						if (false)
						{
							continue;
						}
						goto IL_00b6;
					}
					break;
					IL_00b6:
					return text;
				}
			}
		}

		private void ႷႨ(string Ⴍ, string Ⴓ, ႥႥႳ.Ⴅ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0053, IL_0079, IL_0093, IL_00b2, IL_00ea, IL_0107, IL_0123, IL_013b
			Type type;
			while (true)
			{
				if (Ⴈ != null)
				{
					if (Ⴗ)
					{
						return;
					}
					if (730 < 730 - 683)
					{
						return;
					}
				}
				else
				{
					if (416 <= 416 - 378 || !Ⴃ)
					{
						return;
					}
					if (474 >= 474 - 209)
					{
						WriteNullTagLiteral(Ⴍ, Ⴓ);
						if (159 < 159 - 147)
						{
						}
						return;
					}
				}
				type = Ⴈ.GetType();
				if ((object)type != typeof(ႥႥႳ.Ⴅ))
				{
					break;
				}
				if (114 >= 114 - 59)
				{
					return;
				}
			}
			if ((object)type == typeof(ႥႥႭ.Ⴀ))
			{
				if (379 > 379 - 331)
				{
					ႷႣ(Ⴍ, Ⴓ, (ႥႥႭ.Ⴀ)Ⴈ, Ⴃ, Ⴗ: true);
					return;
				}
			}
			while ((object)type == typeof(ႥႭႤ.Ⴃ))
			{
				if (39 > 39 - 19)
				{
					ႣႨ(Ⴍ, Ⴓ, (ႥႭႤ.Ⴃ)Ⴈ, Ⴃ, Ⴈ: true);
					return;
				}
			}
			if ((object)type != typeof(ႥႥႠ.Ⴐ))
			{
				throw CreateUnknownTypeException(Ⴈ);
			}
			if ((1016 + 1016 * 1016) % 2 == 0)
			{
				ႣႰ(Ⴍ, Ⴓ, (ႥႥႠ.Ⴐ)Ⴈ, Ⴃ, Ⴍ: true);
			}
		}

		private void ႷႣ(string Ⴍ, string Ⴓ, ႥႥႭ.Ⴀ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0153, IL_018c, IL_01c1, IL_01da, IL_0205, IL_0224, IL_0240, IL_025e
			if (Ⴈ == null)
			{
				if (341 > 341 - 186)
				{
					if (!Ⴃ)
					{
						return;
					}
					if ((204 + 204 * 204) % 2 == 0)
					{
						WriteNullTagLiteral(Ⴍ, Ⴓ);
						if (false)
						{
							goto IL_000a;
						}
						return;
					}
					goto IL_0155;
				}
			}
			if (!Ⴗ)
			{
				Type type = default(Type);
				if (257 > 257 - 16)
				{
					type = Ⴈ.GetType();
					if ((object)type == typeof(ႥႥႭ.Ⴀ))
					{
						goto IL_01a0;
					}
					if (false)
					{
						goto IL_002f;
					}
				}
				if ((object)type != typeof(ႥႭႤ.Ⴃ))
				{
					goto IL_0155;
				}
				if ((668 + 668 * 668) % 2 == 0)
				{
					ႣႨ(Ⴍ, Ⴓ, (ႥႭႤ.Ⴃ)Ⴈ, Ⴃ, Ⴈ: true);
					return;
				}
			}
			goto IL_01a0;
			IL_002f:
			WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595148), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴀ));
			WriteElementStringRaw(ႰႰႰ.Ⴄ.ႳႭႨ(863595207), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴃ));
			WriteElementStringRaw(ႰႰႰ.Ⴗ.ႳႭႨ(863595209), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴄ));
			WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595207), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴐ));
			WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595204), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(((ႥႥႳ.Ⴅ)Ⴈ).Ⴓ));
			WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595209), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴅ));
			ႷႷ(ႰႰႰ.Ⴄ.ႳႭႨ(863595205), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), Ⴈ.Ⴓ, Ⴃ: false, Ⴗ: false);
			WriteEndElement(Ⴈ);
			return;
			IL_0155:
			throw CreateUnknownTypeException(Ⴈ);
			IL_01a0:
			while (true)
			{
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				if (!Ⴗ)
				{
					break;
				}
				if ((972 + 972 * 972) % 2 == 0)
				{
					WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595206), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					if ((941 + 941 * 941) % 2 == 0)
					{
					}
					break;
				}
			}
			goto IL_000a;
			IL_000a:
			WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595155), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴍ));
			goto IL_002f;
		}

		private void ႷႷ(string Ⴍ, string Ⴓ, MemoryStream Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_00d4, IL_00fd, IL_0117, IL_0146, IL_0166, IL_017f, IL_019a
			if (Ⴈ != null)
			{
				if (!Ⴗ)
				{
					if (332 < 332 - 227)
					{
						return;
					}
					Type type = Ⴈ.GetType();
					if ((object)type != typeof(MemoryStream))
					{
						if ((260 + 260 * 260) % 2 == 0)
						{
							goto IL_0007;
						}
						goto IL_016b;
					}
				}
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				if (Ⴗ)
				{
					if (false)
					{
						goto IL_0007;
					}
					WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595210), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					if (388 < 388 - 378)
					{
						return;
					}
				}
				WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595210), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Position));
				goto IL_0034;
			}
			if (711 < 711 - 294)
			{
				goto IL_0059;
			}
			goto IL_016b;
			IL_016b:
			if (!Ⴃ)
			{
				return;
			}
			if (967 > 967 - 53)
			{
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if (774 >= 774 - 673)
				{
					return;
				}
				goto IL_00a3;
			}
			goto IL_0034;
			IL_0059:
			WriteElementStringRaw(ႰႰႰ.Ⴄ.ႳႭႨ(863595211), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.WriteTimeout));
			WriteElementStringRaw(ႰႰႰ.Ⴗ.ႳႭႨ(863595212), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Capacity));
			goto IL_00a3;
			IL_00a3:
			WriteEndElement(Ⴈ);
			return;
			IL_0034:
			WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595214), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.ReadTimeout));
			goto IL_0059;
			IL_0007:
			throw CreateUnknownTypeException(Ⴈ);
		}

		private void ႷႥ(string Ⴍ, string Ⴓ, ႥႥႳ.Ⴐ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003b, IL_005c, IL_0072, IL_00a0, IL_00b9, IL_00e7
			Type type = default(Type);
			while (true)
			{
				if (Ⴈ != null)
				{
					if (Ⴗ)
					{
						goto IL_003d;
					}
					if (false)
					{
						goto IL_001e;
					}
				}
				else if ((893 + 893 * 893) % 2 == 0)
				{
					if (!Ⴃ)
					{
						return;
					}
					if (722 < 722 - 322)
					{
						break;
					}
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					if ((710 + 710 * 710) % 2 == 0)
					{
						return;
					}
					continue;
				}
				type = Ⴈ.GetType();
				goto IL_001e;
				IL_003d:
				while (true)
				{
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					if (!Ⴗ)
					{
						break;
					}
					if (914 <= 914 - 634)
					{
						goto IL_0007;
					}
					WriteXsiType(ႰႰႰ.Ⴐ.ႳႭႨ(863595173), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					if ((953 + 953 * 953) % 2 == 0)
					{
						break;
					}
				}
				break;
				IL_0007:
				throw CreateUnknownTypeException(Ⴈ);
				IL_001e:
				if ((object)type != typeof(ႥႥႳ.Ⴐ))
				{
					if (1001 > 1001 - 861)
					{
					}
					goto IL_0007;
				}
				goto IL_003d;
			}
			WriteEndElement(Ⴈ);
		}

		private void ႷႰ(string Ⴍ, string Ⴓ, ႥႥႨ.Ⴜ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 2;
			while (true)
			{
				switch (num)
				{
				case 6:
					return;
				default:
					num = ((Ⴈ != null) ? 1 : 4);
					continue;
				case 4:
					num = ((!Ⴃ) ? 6 : 0);
					continue;
				case 0:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 1:
					num = (Ⴗ ? 8 : 7);
					continue;
				case 7:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(ႥႥႨ.Ⴜ)) ? 8 : 9);
					continue;
				}
				case 9:
					throw CreateUnknownTypeException(Ⴈ);
				case 8:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 5 : 3);
					continue;
				case 3:
					WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595215), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					break;
				case 5:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private void ႷႠ(string Ⴍ, string Ⴓ, ႥႥႨ.Ⴅ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_005a, IL_0071, IL_00a3, IL_00c0, IL_00d8, IL_00f3
			Type type = default(Type);
			while (true)
			{
				if (Ⴈ != null)
				{
					if (!Ⴗ)
					{
						if (488 < 488 - 353)
						{
							goto IL_000a;
						}
						type = Ⴈ.GetType();
						goto IL_0021;
					}
					goto IL_003e;
				}
				if (723 >= 723 - 604)
				{
					if (!Ⴃ)
					{
						return;
					}
					if (false)
					{
						goto IL_003e;
					}
				}
				goto IL_00a5;
				IL_000a:
				throw CreateUnknownTypeException(Ⴈ);
				IL_003e:
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				if (!Ⴗ)
				{
					break;
				}
				if (450 >= 450 - 45)
				{
					WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595215), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
					if (288 > 288 - 255)
					{
						break;
					}
					goto IL_0021;
				}
				goto IL_00a5;
				IL_00a5:
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if (577 > 577 - 576)
				{
					return;
				}
				break;
				IL_0021:
				if ((object)type != typeof(ႥႥႨ.Ⴅ))
				{
					if (279 <= 279 - 67)
					{
						continue;
					}
					goto IL_000a;
				}
				goto IL_003e;
			}
			WriteEndElement(Ⴈ);
		}

		private void ႷႤ(string Ⴍ, string Ⴓ, ChatmanCentralConfiguration Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_010d, IL_0137, IL_0150, IL_017f, IL_019b, IL_01b7, IL_01ce
			if (Ⴈ != null)
			{
				while (!Ⴗ)
				{
					if ((935 + 935 * 935) % 2 == 0)
					{
						Type type = Ⴈ.GetType();
						if ((object)type == typeof(ChatmanCentralConfiguration))
						{
							break;
						}
						if (648 <= 648 - 198)
						{
							continue;
						}
						goto IL_0007;
					}
					goto IL_0152;
				}
				goto IL_0112;
			}
			if (11 >= 11 - 6)
			{
				while (true)
				{
					if (!Ⴃ)
					{
						return;
					}
					if (353 < 353 - 233)
					{
						break;
					}
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					if ((874 + 874 * 874) % 2 == 0)
					{
						return;
					}
				}
				goto IL_0007;
			}
			goto IL_004f;
			IL_004f:
			WriteElementString(ႰႰႰ.Ⴍ.ႳႭႨ(863595205), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), Ⴈ.DW);
			goto IL_006f;
			IL_0007:
			throw CreateUnknownTypeException(Ⴈ);
			IL_0152:
			WriteXsiType(ႰႰႰ.Ⴍ.ႳႭႨ(863595204), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
			if (222 >= 222 - 197)
			{
				goto IL_000f;
			}
			goto IL_0112;
			IL_0112:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			if (!Ⴗ)
			{
				goto IL_000f;
			}
			if (903 < 903 - 661)
			{
				goto IL_006f;
			}
			goto IL_0152;
			IL_000f:
			WriteElementString(ႰႰႰ.Ⴄ.ႳႭႨ(863595208), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), Ⴈ.PAP);
			WriteElementString(ႰႰႰ.Ⴗ.ႳႭႨ(863595213), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), Ⴈ.PAC);
			goto IL_004f;
			IL_006f:
			WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595211), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlSerializationWriter.FromDateTime(Ⴈ.NextUpdateCheck));
			WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595212), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlSerializationWriter.FromDateTime(Ⴈ.LastUpdateCheck));
			WriteElementStringRaw(ႰႰႰ.Ⴄ.ႳႭႨ(863595209), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.DisplayedMessageCounter));
			WriteEndElement(Ⴈ);
		}

		private void ႷႼ(string Ⴍ, string Ⴓ, ႥႥႨ.Ⴗ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0057, IL_0066, IL_0094, IL_00ae, IL_00c6, IL_00e1
			if (Ⴈ != null)
			{
				if (!Ⴗ)
				{
					if (7 < 7 - 3)
					{
						goto IL_0007;
					}
					goto IL_0017;
				}
			}
			else
			{
				if (971 <= 971 - 372)
				{
					goto IL_0017;
				}
				if (!Ⴃ)
				{
					return;
				}
				if ((966 + 966 * 966) % 2 == 0)
				{
					goto IL_0096;
				}
			}
			goto IL_003b;
			IL_0017:
			Type type = Ⴈ.GetType();
			if ((object)type == typeof(ႥႥႨ.Ⴗ))
			{
				goto IL_003b;
			}
			if (581 >= 581 - 522)
			{
				goto IL_0007;
			}
			goto IL_0046;
			IL_0007:
			throw CreateUnknownTypeException(Ⴈ);
			IL_003b:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			goto IL_0046;
			IL_0096:
			WriteNullTagLiteral(Ⴍ, Ⴓ);
			if (915 >= 915 - 713)
			{
				return;
			}
			goto IL_003b;
			IL_0046:
			if (Ⴗ)
			{
				if (222 < 222 - 113)
				{
					goto IL_0096;
				}
				do
				{
					WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595172), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
				}
				while (false);
			}
			WriteEndElement(Ⴈ);
		}

		private void ႥႭ(string Ⴍ, string Ⴓ, UrlConfiguration Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 6;
			while (true)
			{
				switch (num)
				{
				case 8:
					return;
				default:
					num = ((Ⴈ != null) ? 3 : 4);
					continue;
				case 4:
					num = ((!Ⴃ) ? 8 : 0);
					continue;
				case 0:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 3:
					num = (Ⴗ ? 7 : 2);
					continue;
				case 2:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type != typeof(UrlConfiguration)) ? 1 : 7);
					continue;
				}
				case 1:
					throw CreateUnknownTypeException(Ⴈ);
				case 7:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 5 : 9);
					continue;
				case 9:
					WriteXsiType(ႰႰႰ.Ⴐ.ႳႭႨ(863595175), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					break;
				case 5:
					break;
				}
				break;
			}
			WriteAttribute(ႰႰႰ.Ⴗ.ႳႭႨ(863595218), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), Ⴈ.Key);
			WriteAttribute(ႰႰႰ.Ⴍ.ႳႭႨ(863595210), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), Ⴈ.Url);
			WriteEndElement(Ⴈ);
		}

		private void ႥႳ(string Ⴍ, string Ⴓ, UrlConfigurationContainer Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0022, IL_004a, IL_007e, IL_00b7, IL_00e0, IL_00ff, IL_0123, IL_0144, IL_0173, IL_0190, IL_01ba
			if (Ⴈ != null)
			{
				if (!Ⴗ)
				{
					if (649 < 649 - 454)
					{
						goto IL_00a3;
					}
					Type type = Ⴈ.GetType();
					if ((object)type != typeof(UrlConfigurationContainer))
					{
						if (493 >= 493 - 400)
						{
							throw CreateUnknownTypeException(Ⴈ);
						}
						goto IL_0080;
					}
				}
				goto IL_014e;
			}
			if (false)
			{
				goto IL_0054;
			}
			goto IL_0192;
			IL_0101:
			List<UrlConfiguration> urls = Ⴈ.Urls;
			if (urls == null)
			{
				goto IL_004c;
			}
			if (false)
			{
			}
			WriteStartElement(ႰႰႰ.Ⴓ.ႳႭႨ(863595213), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), null, writePrefixed: false);
			int num = 0;
			goto IL_0125;
			IL_004c:
			WriteEndElement(Ⴈ);
			return;
			IL_000a:
			WriteEndElement();
			if ((130 + 130 * 130) % 2 == 0)
			{
				goto IL_004c;
			}
			goto IL_014e;
			IL_0125:
			if (num < ((ICollection)urls).Count)
			{
				goto IL_0080;
			}
			if (787 > 787 - 479)
			{
				goto IL_000a;
			}
			goto IL_0192;
			IL_0080:
			ႥႭ(ႰႰႰ.Ⴄ.ႳႭႨ(863595214), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), urls[num], Ⴃ: true, Ⴗ: false);
			goto IL_00a3;
			IL_0192:
			if (!Ⴃ)
			{
				return;
			}
			if (109 >= 109 - 5)
			{
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if (false)
				{
					goto IL_000a;
				}
				return;
			}
			goto IL_0080;
			IL_014e:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			if (Ⴗ)
			{
				if (677 < 677 - 351)
				{
				}
				goto IL_0054;
			}
			goto IL_0101;
			IL_00a3:
			num++;
			if (119 > 119 - 90)
			{
			}
			goto IL_0125;
			IL_0054:
			WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595219), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
			if (31 > 31 - 28)
			{
				goto IL_0101;
			}
			goto IL_0192;
		}

		private unsafe void ႳႳ(string Ⴍ, string Ⴓ, ႥႥႨ.Ⴓ Ⴈ, bool Ⴃ)
		{
			int num = 1;
			while (true)
			{
				switch (num)
				{
				default:
					num = ((!Ⴃ) ? 3 : 0);
					continue;
				case 3:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type != typeof(ႥႥႨ.Ⴓ)) ? 4 : 0);
					continue;
				}
				case 4:
					throw CreateUnknownTypeException(Ⴈ);
				case 0:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴃ) ? 2 : 5);
					continue;
				case 5:
					WriteXsiType(ႰႰႰ.Ⴗ.ႳႭႨ(863595216), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
					break;
				case 2:
					break;
				}
				break;
			}
			WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595218), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlConvert.ToString(*(byte*)(&Ⴈ.Ⴐ)));
			WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595208), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(*(byte*)(&Ⴈ.Ⴈ)));
			WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595211), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(*(byte*)(&Ⴈ.Ⴓ)));
			WriteElementStringRaw(ႰႰႰ.Ⴗ.ႳႭႨ(863595217), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴗ));
			WriteElementStringRaw(ႰႰႰ.Ⴄ.ႳႭႨ(863595215), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), XmlConvert.ToString(*(short*)(&Ⴈ.Ⴐ)));
			WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595219), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴈ));
			WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595209), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴐ));
			WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595209), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴓ));
			WriteEndElement(Ⴈ);
		}

		private void ႳႨ(string Ⴍ, string Ⴓ, ႥႥႨ.Ⴈ Ⴈ, bool Ⴃ)
		{
			//Discarded unreachable code: IL_0005, IL_003d, IL_0069, IL_0097, IL_0132
			if (Ⴃ)
			{
				goto IL_0017;
			}
			if (839 >= 839 - 743)
			{
				goto IL_006b;
			}
			goto IL_00bf;
			IL_00bf:
			WriteElementStringRaw(ႰႰႰ.Ⴗ.ႳႭႨ(863595222), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴈ));
			WriteElementStringRaw(ႰႰႰ.Ⴄ.ႳႭႨ(863595212), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴓ));
			WriteEndElement(Ⴈ);
			return;
			IL_0017:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			if (Ⴃ)
			{
				if (false)
				{
					goto IL_000a;
				}
				WriteXsiType(ႰႰႰ.Ⴓ.ႳႭႨ(863595169), ႰႰႰ.Ⴓ.ႳႭႨ(863595171));
				if (253 < 253 - 112)
				{
					goto IL_0077;
				}
			}
			WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595208), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴐ));
			goto IL_00bf;
			IL_000a:
			throw CreateUnknownTypeException(Ⴈ);
			IL_006b:
			Type type = Ⴈ.GetType();
			goto IL_0077;
			IL_0077:
			if ((object)type == typeof(ႥႥႨ.Ⴈ))
			{
				goto IL_0017;
			}
			if (596 > 596 - 207)
			{
				goto IL_000a;
			}
			goto IL_006b;
		}

		private unsafe void ႳႣ(string Ⴍ, string Ⴓ, ႥႥႨ.Ⴐ Ⴈ, bool Ⴃ)
		{
			//Discarded unreachable code: IL_0002, IL_0033, IL_004b, IL_007c, IL_00a5
			while (true)
			{
				if (!Ⴃ)
				{
					if (false)
					{
						goto IL_0007;
					}
					Type type = Ⴈ.GetType();
					if ((object)type != typeof(ႥႥႨ.Ⴐ))
					{
						if (577 < 577 - 128)
						{
							break;
						}
						throw CreateUnknownTypeException(Ⴈ);
					}
				}
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				if (Ⴃ)
				{
					if (139 >= 139 - 54)
					{
						goto IL_0007;
					}
				}
				goto IL_00b7;
				IL_0007:
				WriteXsiType(ႰႰႰ.Ⴍ.ႳႭႨ(863595169), ႰႰႰ.Ⴍ.ႳႭႨ(863595171));
				if (false)
				{
					continue;
				}
				goto IL_00b7;
				IL_00b7:
				WriteElementStringRaw(ႰႰႰ.Ⴄ.ႳႭႨ(863595213), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), XmlConvert.ToString(*(byte*)(&Ⴈ.Ⴐ)));
				WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595216), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlConvert.ToString(*(byte*)(&Ⴈ.Ⴈ)));
				WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595214), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴓ));
				WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595208), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴗ));
				WriteElementStringRaw(ႰႰႰ.Ⴗ.ႳႭႨ(863595223), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), XmlConvert.ToString(*(short*)(&Ⴈ.Ⴐ)));
				break;
			}
			WriteElementStringRaw(ႰႰႰ.Ⴄ.ႳႭႨ(863595219), ႰႰႰ.Ⴄ.ႳႭႨ(863595171), XmlConvert.ToString(*(short*)(&Ⴈ.Ⴈ)));
			WriteElementStringRaw(ႰႰႰ.Ⴓ.ႳႭႨ(863595217), ႰႰႰ.Ⴓ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴐ));
			WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595212), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴈ));
			WriteEndElement(Ⴈ);
		}

		private void ႳႷ(string Ⴍ, string Ⴓ, ႥႥႰ.Ⴜ Ⴈ, bool Ⴃ)
		{
			int num = 4;
			while (true)
			{
				switch (num)
				{
				default:
					num = ((!Ⴃ) ? 2 : 0);
					continue;
				case 2:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type != typeof(ႥႥႰ.Ⴜ)) ? 1 : 0);
					continue;
				}
				case 1:
					throw CreateUnknownTypeException(Ⴈ);
				case 0:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴃ) ? 3 : 5);
					continue;
				case 5:
					WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595218), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
					break;
				case 3:
					break;
				}
				break;
			}
			WriteElementStringRaw(ႰႰႰ.Ⴐ.ႳႭႨ(863595215), ႰႰႰ.Ⴐ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴐ));
			WriteElementStringRaw(ႰႰႰ.Ⴍ.ႳႭႨ(863595214), ႰႰႰ.Ⴍ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴈ));
			WriteElementStringRaw(ႰႰႰ.Ⴗ.ႳႭႨ(863595220), ႰႰႰ.Ⴗ.ႳႭႨ(863595171), XmlConvert.ToString(Ⴈ.Ⴓ));
			WriteEndElement(Ⴈ);
		}

		private string ႳႣႤ(ႥႥႰ.Ⴄ Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0019, IL_001d, IL_0052, IL_0061, IL_0070
			string text = null;
			if (Ⴍ != 0)
			{
				if (283 >= 283 - 29)
				{
					while (Ⴍ != ႥႥႰ.Ⴄ.Ⴈ)
					{
						if ((706 + 706 * 706) % 2 == 0)
						{
							throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴍ.ႳႭႨ(863595215));
						}
					}
					return ႰႰႰ.Ⴄ.ႳႭႨ(863595216);
				}
			}
			return ႰႰႰ.Ⴗ.ႳႭႨ(863595247);
		}

		private string ႳႣႼ(ႥႥႰ.Ⴍ Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_000c, IL_008f, IL_00d4, IL_00e3, IL_00f2, IL_0101, IL_0110, IL_011f
			string text = null;
			do
			{
				switch (Ⴍ)
				{
				case ႥႥႰ.Ⴍ.Ⴈ | ႥႥႰ.Ⴍ.Ⴓ:
				case ႥႥႰ.Ⴍ.Ⴈ | ႥႥႰ.Ⴍ.Ⴗ:
				case ႥႥႰ.Ⴍ.Ⴓ | ႥႥႰ.Ⴍ.Ⴗ:
				case ႥႥႰ.Ⴍ.Ⴈ | ႥႥႰ.Ⴍ.Ⴓ | ႥႥႰ.Ⴍ.Ⴗ:
					goto IL_0011;
				default:
					if ((203 + 203 * 203) % 2 == 0)
					{
						goto IL_0011;
					}
					goto case ႥႥႰ.Ⴍ.Ⴈ;
				case ႥႥႰ.Ⴍ.Ⴈ:
					text = ႰႰႰ.Ⴄ.ႳႭႨ(863595217);
					break;
				case ႥႥႰ.Ⴍ.Ⴅ:
					text = ႰႰႰ.Ⴍ.ႳႭႨ(863595212);
					break;
				case ႥႥႰ.Ⴍ.Ⴐ:
					text = ႰႰႰ.Ⴗ.ႳႭႨ(863595247);
					break;
				case ႥႥႰ.Ⴍ.Ⴗ:
					text = ႰႰႰ.Ⴐ.ႳႭႨ(863595213);
					break;
				case ႥႥႰ.Ⴍ.Ⴓ:
					text = ႰႰႰ.Ⴓ.ႳႭႨ(863595222);
					break;
				}
				break;
				IL_0011:
				text = XmlSerializationWriter.FromEnum((long)Ⴍ, new string[5]
				{
					ႰႰႰ.Ⴓ.ႳႭႨ(863595241),
					ႰႰႰ.Ⴐ.ႳႭႨ(863595219),
					ႰႰႰ.Ⴍ.ႳႭႨ(863595218),
					ႰႰႰ.Ⴗ.ႳႭႨ(863595226),
					ႰႰႰ.Ⴄ.ႳႭႨ(863595223)
				}, new long[5]
				{
					0L,
					1L,
					2L,
					4L,
					8L
				}, ႰႰႰ.Ⴍ.ႳႭႨ(863595219));
			}
			while (false);
			return text;
		}

		private string ႳႷႭ(ႥႥႰ.Ⴃ Ⴍ)
		{
			int num = 2;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 6:
					num = 3;
					continue;
				case 0:
					result = ႰႰႰ.Ⴗ.ႳႭႨ(863595221);
					num = 4;
					continue;
				case 8:
					result = ႰႰႰ.Ⴄ.ႳႭႨ(863595222);
					num = 4;
					continue;
				case 5:
					result = ႰႰႰ.Ⴓ.ႳႭႨ(863595223);
					num = 4;
					continue;
				case 7:
					result = ႰႰႰ.Ⴐ.ႳႭႨ(863595218);
					num = 4;
					continue;
				case 1:
					result = ႰႰႰ.Ⴍ.ႳႭႨ(863595213);
					num = 4;
					continue;
				case 3:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႰႰႰ.Ⴓ.ႳႭႨ(863595220));
				case 4:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 6;
					break;
				case ႥႥႰ.Ⴃ.Ⴐ:
					num2 = 0;
					break;
				case ႥႥႰ.Ⴃ.Ⴈ:
					num2 = 8;
					break;
				case ႥႥႰ.Ⴃ.Ⴓ:
					num2 = 5;
					break;
				case ႥႥႰ.Ⴃ.Ⴗ:
					num2 = 7;
					break;
				case ႥႥႰ.Ⴃ.Ⴅ:
					num2 = 1;
					break;
				}
				num = num2;
			}
		}

		private void ႥႨ(string Ⴍ, string Ⴓ, ႥႥႰ.Ⴓ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0002, IL_0024, IL_004c, IL_0069, IL_0084, IL_00b5, IL_00e6
			while (true)
			{
				if (Ⴈ == null)
				{
					if (450 <= 450 - 179)
					{
					}
					if (!Ⴃ)
					{
						return;
					}
					if (685 <= 685 - 604)
					{
						goto IL_00ba;
					}
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					if (361 <= 361 - 45)
					{
						break;
					}
					return;
				}
				if (!Ⴗ)
				{
					if (100 < 100 - 34)
					{
						goto IL_0076;
					}
					Type type = Ⴈ.GetType();
					if ((object)type != typeof(ႥႥႰ.Ⴓ))
					{
						if ((192 + 192 * 192) % 2 == 0)
						{
							break;
						}
						return;
					}
				}
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				goto IL_0076;
				IL_00ba:
				WriteXsiType(ႰႰႰ.Ⴄ.ႳႭႨ(863595170), ႰႰႰ.Ⴄ.ႳႭႨ(863595171));
				if (false)
				{
					continue;
				}
				goto IL_004e;
				IL_0076:
				if (Ⴗ)
				{
					if (45 > 45 - 14)
					{
						goto IL_00ba;
					}
				}
				goto IL_004e;
				IL_004e:
				WriteEndElement(Ⴈ);
				return;
			}
			throw CreateUnknownTypeException(Ⴈ);
		}

		private void ႥႣ(string Ⴍ, string Ⴓ, ႥႥႰ.Ⴈ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 3;
			while (true)
			{
				switch (num)
				{
				case 0:
					return;
				default:
					num = ((Ⴈ != null) ? 8 : 6);
					continue;
				case 6:
					num = (Ⴃ ? 7 : 0);
					continue;
				case 7:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 8:
					num = ((!Ⴗ) ? 1 : 5);
					continue;
				case 1:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(ႥႥႰ.Ⴈ)) ? 5 : 4);
					continue;
				}
				case 4:
					throw CreateUnknownTypeException(Ⴈ);
				case 5:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 2 : 9);
					continue;
				case 9:
					WriteXsiType(ႰႰႰ.Ⴐ.ႳႭႨ(863595170), ႰႰႰ.Ⴐ.ႳႭႨ(863595171));
					break;
				case 2:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		protected override void InitCallbacks()
		{
		}
	}
	public abstract class XmlSerializer1 : XmlSerializer
	{
		protected override XmlSerializationReader CreateReader()
		{
			return new XmlSerializationReader1();
		}

		protected override XmlSerializationWriter CreateWriter()
		{
			return new XmlSerializationWriter1();
		}
	}
	public class XmlSerializerContract : XmlSerializerImplementation
	{
		private Hashtable Ⴃ;

		private Hashtable Ⴀ;

		private Hashtable Ⴄ;

		public override XmlSerializationReader Reader => new XmlSerializationReader1();

		public override XmlSerializationWriter Writer => new XmlSerializationWriter1();

		public override Hashtable ReadMethods
		{
			get
			{
				//Discarded unreachable code: IL_0002, IL_0028, IL_0048, IL_0a4d
				if (Ⴃ != null)
				{
					goto IL_0007;
				}
				if (154 <= 154 - 132)
				{
					goto IL_088d;
				}
				Hashtable hashtable = new Hashtable();
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595036)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595037);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595090)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595091);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595111)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595108);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595111)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595108);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595115)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595112);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595104)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595105);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595094)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595095);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595112)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595113);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595112)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595113);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595116)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595122);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595108)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595109);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595099)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595096);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595116)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595117);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595116)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595117);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595126)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595127);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595112)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595113);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595100)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595101);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595120)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595126);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595121)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595126);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595131)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595128);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595116)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595117);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595424)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595425);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595130)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595131);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595130)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595131);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595132)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595133);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595121)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595127);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595429)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595434);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595134)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595135);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595135)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595132);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595073)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595078);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595131)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595128);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595433)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595439);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595075)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595072);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595072)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595073);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595077)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595082);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595135)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595132);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595442)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595443);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595077)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595082);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595076)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595077);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595086)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595087);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595072)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595073);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595446)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595447);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595081)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595086);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595081)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595086);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595090)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595091);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595076)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595077);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595450)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595451);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595090)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595091);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595090)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595091);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595094)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595095);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595081)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595086);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595454)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595455);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595095)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595092);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595095)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595092);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595099)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595096);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595090)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595091);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595394)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595395);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595099)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595096);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595099)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595097);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595100)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595101);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595093)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595099);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595399)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595396);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595101)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595427);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595427)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595424);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595431)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595428);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595100)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595426);
				goto IL_0707;
				IL_088d:
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595403)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595491);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595451)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595448);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595450)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595451);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595437)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595455);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595447)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595444);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595489)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595494);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595454)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595455);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595454)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595455);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595394)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595395);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595451)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595448);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595492)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595493);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595453)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595394);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595394)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595395);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595448)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595398);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595455)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595452);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595496)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595497);
				if (Ⴃ == null)
				{
					if (false)
					{
						goto IL_0707;
					}
					Ⴃ = hashtable;
					if (874 < 874 - 836)
					{
						goto IL_0755;
					}
				}
				goto IL_0007;
				IL_0007:
				return Ⴃ;
				IL_0707:
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595407)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595405);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595429)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595435);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595434)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595435);
				goto IL_0755;
				IL_0755:
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595438)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595439);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595427)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595430);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595415)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595412);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595437)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595442);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595432)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595436);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595441)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595446);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595432)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595438);
				hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595422)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595423);
				hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595438)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595446);
				hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595441)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595446);
				hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595440)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595449);
				hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595443)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595440);
				goto IL_088d;
			}
		}

		public override Hashtable WriteMethods
		{
			get
			{
				int num = 2;
				Hashtable hashtable = default(Hashtable);
				while (true)
				{
					switch (num)
					{
					default:
						num = ((Ⴀ != null) ? 1 : 3);
						break;
					case 3:
						hashtable = new Hashtable();
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595084)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595085);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595105)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595110);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595105)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595110);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595109)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595114);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595106)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595107);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595088)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595089);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595114)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595115);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595114)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595115);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595118)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595119);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595110)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595111);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595092)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595098);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595118)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595119);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595118)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595119);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595123)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595120);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595114)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595115);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595102)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595103);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595122)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595123);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595123)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595120);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595124)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595130);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595118)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595119);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595426)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595427);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595127)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595124);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595124)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595125);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595134)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595135);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595123)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595120);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595431)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595428);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595128)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595129);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595129)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595134);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595075)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595072);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595125)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595130);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595435)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595432);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595133)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595074);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595074)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595075);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595079)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595076);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595129)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595134);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595436)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595437);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595078)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595076);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595078)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595079);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595080)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595081);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595133)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595075);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595440)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595441);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595083)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595080);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595083)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595080);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595084)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595085);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595078)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595079);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595444)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595445);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595084)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595085);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595087)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595085);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595088)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595089);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595083)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595080);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595448)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595449);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595088)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595089);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595089)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595094);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595093)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595098);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595084)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595085);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595452)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595453);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595093)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595098);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595093)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595098);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595097)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595102);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595094)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595095);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595393)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595398);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595103)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595100);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595100)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595101);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595424)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595425);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595097)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595103);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595400)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595406);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595430)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595428);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595428)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595429);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595435)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595432);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595424)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595425);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595408)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595414);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595424)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595439);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595438)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595439);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595442)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595443);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595429)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595435);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595416)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595417);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595432)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595440);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595443)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595440);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595450)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595451);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595437)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595442);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595421)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595490);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595445)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595450);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595444)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595445);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595444)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595454);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595441)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595446);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595419)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595488);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595436)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595449);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595448)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595449);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595452)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595453);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595445)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595450);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595418)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595495);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595097)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595452);
						hashtable[ႰႰႰ.Ⴍ.ႳႭႨ(863595452)] = ႰႰႰ.Ⴍ.ႳႭႨ(863595453);
						hashtable[ႰႰႰ.Ⴄ.ႳႭႨ(863595392)] = ႰႰႰ.Ⴄ.ႳႭႨ(863595393);
						hashtable[ႰႰႰ.Ⴐ.ႳႭႨ(863595449)] = ႰႰႰ.Ⴐ.ႳႭႨ(863595454);
						hashtable[ႰႰႰ.Ⴗ.ႳႭႨ(863595498)] = ႰႰႰ.Ⴗ.ႳႭႨ(863595499);
						hashtable[ႰႰႰ.Ⴓ.ႳႭႨ(863595444)] = ႰႰႰ.Ⴓ.ႳႭႨ(863595395);
						num = ((Ⴀ != null) ? 1 : 0);
						break;
					case 0:
						Ⴀ = hashtable;
						num = 1;
						break;
					case 1:
						return Ⴀ;
					}
				}
			}
		}

		public override Hashtable TypedSerializers
		{
			get
			{
				//Discarded unreachable code: IL_0002, IL_0022, IL_003c, IL_085d
				if (Ⴄ == null)
				{
					Hashtable hashtable = default(Hashtable);
					if (123 >= 123 - 53)
					{
						hashtable = new Hashtable();
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595111), new NotifyCollectionChangedActionSerializer());
						hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595099), new ExtensionsHelperSerializer());
						hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595123), new SimpleOpenFileDialogSerializer());
						hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595088), new HtmlProcessorSerializer());
						hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595392), new FolderTypeSerializer());
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595120), new LoadLibraryExFlagsSerializer());
						hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595096), new ZipProgressEventTypeSerializer());
						hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595103), new User32Serializer());
						hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595089), new DesktopPointSerializer());
						hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595429), new SimpleIconExtractorSerializer());
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595097), new ExtractExistingFileActionSerializer());
						hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595102), new CompressionLevelSerializer());
						hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595115), new CompressionMethodSerializer());
						hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595092), new ErrorCollectionSerializer());
						hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595088), new IconDirSerializer());
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595102), new UrlConfigurationContainerSerializer());
						hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595103), new RecievedAsEnumSerializer());
						hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595426), new ZIPUtilsSerializer());
						hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595098), new DefaultAudioDeviceControllerSerializer());
						hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595397), new IconUtilsSerializer());
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595426), new StreamUtilsSerializer());
					}
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595426), new IconFlagsSerializer());
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595427), new ShellUtilsSerializer());
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595096), new HashUtilsSerializer());
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595402), new ZipEntryTimestampSerializer());
					hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595424), new TokenElevationTypeSerializer());
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595425), new SplashScreenModeSerializer());
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595430), new FrameSerializer());
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595102), new RECTSerializer());
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595403), new ChatManMessageBoxButtonsSerializer());
					hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595118), new LoggerSerializer());
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595129), new IconSizeSerializer());
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595429), new SHITEMIDSerializer());
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595101), new CompressionStrategySerializer());
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595401), new ID3ErrorSerializer());
					hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595425), new ResourceUtilsSerializer());
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595430), new NumericUtilsSerializer());
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595099), new URLUtilsSerializer());
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595094), new ZipErrorActionSerializer());
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595404), new BaseFileFrameSerializer());
					hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595431), new LookupIconIdFromDirectoryExFlagsSerializer());
					hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595431), new AuthorizeDataSerializer());
					hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595434), new VersionUtilsSerializer());
					hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595427), new ElevationHelperSerializer());
					hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595410), new RegistryAccessorSerializer());
					do
					{
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595434), new TextUtilsSerializer());
						hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595428), new FilterCollectionSerializer());
						hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595118), new GroupIconDirEntrySerializer());
						hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595135), new DeviceClassControllerSerializer());
						hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595411), new ChatmanCentralConfigurationSerializer());
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595432), new ZipEntrySourceSerializer());
						hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595432), new RondyoUtilHelperSerializer());
						hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595433), new ID3v2FlagsSerializer());
						hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595078), new CRC32Serializer());
						hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595424), new LoadImageTypesSerializer());
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595433), new DLLUtilsSerializer());
						hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595095), new Zip64OptionSerializer());
						hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595094), new EncryptionAlgorithmSerializer());
						hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595125), new Shell32Serializer());
						hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595409), new ChatmanMouseButtonsSerializer());
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595438), new WIN32APISerializer());
						hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595433), new SingleProgramInstanceWinSerializer());
						hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595436), new FlushTypeSerializer());
						hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595431), new ChatManDialogResultSerializer());
						hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595413), new ZlibCodecSerializer());
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595436), new IncrementDecrementSerializer());
						hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595121), new GetLastErrorResultSerializer());
						hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595437), new FrameFlagsSerializer());
						hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595428), new TextOnlyFrameSerializer());
						hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595418), new ResourcesSerializer());
						hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595090), new FileUtilsSerializer());
						hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595437), new MessageBoxUtilsSerializer());
						while (true)
						{
							hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595440), new WINDOWPLACEMENTSerializer());
							hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595434), new MailUtilsSerializer());
							hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595419), new TimeStampsSerializer());
							hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595443), new ChatmanEnvironmentSerializer());
							hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595089), new DynamicActivatorSerializer());
							hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595447), new BrowserExtensionsInstallerSerializer());
							hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595433), new CompressionModeSerializer());
							hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595440), new MouseActionSerializer());
							hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595114), new IconDirEntrySerializer());
							hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595442), new UrlConfigurationSerializer());
							hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595444), new TextEncodingsSerializer());
							hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595439), new ChatmanThreadSerializer());
							hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595394), new HTTPUtilsSerializer());
							hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595441), new FilterTypesSerializer());
							hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595124), new SHGetFileInfoFlagsSerializer());
							hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595445), new LanguageSerializer());
							hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595436), new ITEMIDLISTSerializer());
							hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595420), new PictureTypesSerializer());
							hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595447), new SecurityUtilsSerializer());
							hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595114), new GroupIconDirSerializer());
							hashtable.Add(ႰႰႰ.Ⴄ.ႳႭႨ(863595448), new ContentTypesSerializer());
							hashtable.Add(ႰႰႰ.Ⴐ.ႳႭႨ(863595429), new DateUtilsSerializer());
							hashtable.Add(ႰႰႰ.Ⴗ.ႳႭႨ(863595431), new FileFormatsSerializer());
							hashtable.Add(ႰႰႰ.Ⴓ.ႳႭႨ(863595444), new ChatmanConfigurationSerializer());
							hashtable.Add(ႰႰႰ.Ⴍ.ႳႭႨ(863595447), new ResourceTypesSerializer());
							if (Ⴄ != null)
							{
								break;
							}
							if (593 <= 593 - 398)
							{
								continue;
							}
							goto IL_000e;
						}
						break;
						IL_000e:
						Ⴄ = hashtable;
					}
					while (45 < 45 - 28);
				}
				return Ⴄ;
			}
		}

		public override bool CanSerialize(Type type)
		{
			//Discarded unreachable code: IL_0005, IL_0031, IL_0061, IL_0083, IL_00ab, IL_00d6, IL_00fb, IL_0122, IL_0158, IL_0185, IL_01ae, IL_01d9, IL_0200, IL_0225, IL_024d, IL_0278, IL_029c, IL_02c5, IL_02ed, IL_0318, IL_0341, IL_0369, IL_0398, IL_03bf, IL_03ea, IL_0415, IL_0442, IL_0469, IL_0494, IL_04c6, IL_04eb, IL_0517, IL_0538, IL_0563, IL_058a, IL_05b7, IL_05de, IL_0606, IL_062d, IL_0658, IL_0688, IL_06b0, IL_06dc, IL_0704, IL_0728, IL_0757, IL_0781, IL_07a9, IL_07d6, IL_07ff, IL_0829, IL_085d, IL_0888, IL_08af, IL_08da, IL_08ff, IL_0927, IL_0951, IL_0979, IL_09a9, IL_09d7, IL_09fe, IL_0a2b, IL_0a55, IL_0a80, IL_0aaa, IL_0ad5, IL_0b02, IL_0b2d, IL_0b58, IL_0b82, IL_0ba7, IL_0bd1, IL_0bff, IL_0c2b, IL_0c5b, IL_0c87, IL_0cb2, IL_0cda, IL_0d0c, IL_0d3a, IL_0d62, IL_0d90, IL_0dc1, IL_0de8, IL_0e18, IL_0e3f, IL_0e67, IL_0e92, IL_0ebf, IL_0eeb, IL_0f15, IL_0f41, IL_0f69, IL_0fa2, IL_0fce, IL_0ff9, IL_1021
			while (true)
			{
				if ((object)type == typeof(ႥႥႰ.Ⴈ))
				{
					if (394 <= 394 - 378)
					{
						goto IL_04a1;
					}
					return true;
				}
				if ((object)type == typeof(ႥႥႰ.Ⴓ))
				{
					if (1005 > 1005 - 356)
					{
						return true;
					}
					goto IL_0c04;
				}
				while (true)
				{
					if ((object)type == typeof(ႥႥႰ.Ⴃ))
					{
						if (354 <= 354 - 197)
						{
							goto IL_00d8;
						}
						return true;
					}
					goto IL_0135;
					IL_0e99:
					if ((object)type == typeof(ႥႥႠ.Ⴍ.ႥႰ))
					{
						if (781 <= 781 - 266)
						{
							continue;
						}
						goto IL_075c;
					}
					goto IL_0804;
					IL_04f4:
					if ((object)type != typeof(ႥႥႨႭ.Ⴀ.ႭႰ))
					{
						goto IL_01b3;
					}
					if (652 > 652 - 607)
					{
						goto IL_0499;
					}
					goto IL_0f72;
					IL_0135:
					if ((object)type != typeof(ႥႥႰ.Ⴍ))
					{
						goto IL_003c;
					}
					if (231 >= 231 - 66)
					{
						return true;
					}
					goto IL_0d17;
					IL_0804:
					if ((object)type == typeof(ႥႥႠ.Ⴅ))
					{
						if (false)
						{
							goto IL_04f2;
						}
						return true;
					}
					if ((object)type == typeof(ႥႥႠ.Ⴅ.ႥႨ))
					{
						if (false)
						{
							goto IL_0a5a;
						}
						return true;
					}
					goto IL_0a85;
					IL_0a5a:
					if ((object)type != typeof(ႥႥႨႨ.Ⴀ))
					{
						goto IL_018c;
					}
					if (997 > 997 - 151)
					{
						return true;
					}
					goto IL_0499;
					IL_003c:
					if ((object)type == typeof(ႥႥႰ.Ⴄ))
					{
						if (false)
						{
							goto IL_0c32;
						}
						return true;
					}
					if ((object)type == typeof(ႥႥႰ.Ⴜ))
					{
						if (20 <= 20 - 17)
						{
							goto IL_0c62;
						}
						return true;
					}
					if ((object)type == typeof(ႥႥႨ.Ⴐ))
					{
						if ((767 + 767 * 767) % 2 == 0)
						{
							return true;
						}
						goto IL_08b4;
					}
					if ((object)type != typeof(ႥႥႨ.Ⴈ))
					{
						if ((object)type == typeof(ႥႥႨ.Ⴓ))
						{
							if (884 <= 884 - 768)
							{
								goto IL_03c4;
							}
							return true;
						}
						if ((object)type != typeof(UrlConfigurationContainer))
						{
							goto IL_02f2;
						}
						if (179 < 179 - 12)
						{
							goto IL_0adc;
						}
					}
					else if (922 >= 922 - 559)
					{
						return true;
					}
					return true;
					IL_0499:
					return true;
					IL_018c:
					if ((object)type == typeof(ႥႥႨႳ.Ⴃ))
					{
						if (false)
						{
							goto IL_003a;
						}
						goto IL_04cd;
					}
					if ((object)type == typeof(ႥႥႨႳ.Ⴈ))
					{
						if (false)
						{
							goto IL_01b3;
						}
						return true;
					}
					goto IL_0b07;
					IL_09ae:
					return true;
					IL_0e97:
					return true;
					IL_003a:
					return true;
					IL_0a85:
					if ((object)type == typeof(ႥႥႠ.Ⴅ.ႥႳ))
					{
						if (false)
						{
							goto IL_058f;
						}
						goto IL_0ec4;
					}
					if ((object)type == typeof(ႥႥႠ.Ⴗ))
					{
						if (602 < 602 - 118)
						{
							goto IL_04a3;
						}
						goto IL_09ae;
					}
					if ((object)type != typeof(ႥႥႠ.Ⴐ))
					{
						goto IL_0956;
					}
					if ((765 + 765 * 765) % 2 == 0)
					{
						goto IL_0ded;
					}
					goto IL_0e97;
					IL_01b3:
					if ((object)type != typeof(ႥႥႨႭ.Ⴀ.ႭႨ))
					{
						goto IL_03c4;
					}
					if (482 >= 482 - 385)
					{
						goto IL_0c32;
					}
					goto IL_0ec4;
					IL_0e6c:
					while ((object)type != typeof(ႥႥႨႤ.Ⴗ))
					{
						if ((object)type == typeof(ႥႥႨႤ.Ⴍ))
						{
							goto IL_07c0;
						}
						if ((object)type == typeof(ႥႥႨႤ.Ⴃ))
						{
							if (17 > 17 - 9)
							{
								return true;
							}
							continue;
						}
						goto IL_0cb4;
					}
					if (292 < 292 - 272)
					{
						goto IL_0370;
					}
					goto IL_097d;
					IL_0c32:
					return true;
					IL_0956:
					if ((object)type != typeof(ႥႥႣ.Ⴗ))
					{
						while ((object)type != typeof(ႳႨႭ.Ⴓ))
						{
							if ((object)type == typeof(ႥႥႣ.Ⴜ))
							{
								if (130 <= 130 - 92)
								{
									continue;
								}
								goto IL_0127;
							}
							goto IL_0691;
						}
						if (235 > 235 - 201)
						{
							goto IL_012f;
						}
						goto IL_0b07;
					}
					if (292 < 292 - 70)
					{
						goto IL_00b0;
					}
					goto IL_0d15;
					IL_03c4:
					if ((object)type == typeof(ႥႥႨႭ.Ⴗ))
					{
						if (355 < 355 - 279)
						{
							goto IL_0d15;
						}
						goto IL_0f6e;
					}
					if ((object)type != typeof(ႥႥႨႭ.Ⴍ))
					{
						goto IL_09d9;
					}
					if (false)
					{
						goto IL_02ca;
					}
					goto IL_0f7a;
					IL_0ec4:
					return true;
					IL_018a:
					return true;
					IL_0f6e:
					return true;
					IL_0691:
					if ((object)type != typeof(ႥႭႤ.Ⴃ))
					{
						if ((object)type != typeof(ႥႥႤ.Ⴅ.ႥႭ))
						{
							if ((object)type != typeof(ႥႥႤ.Ⴗ.ႥႤ))
							{
								if ((object)type != typeof(ႥႥႼ.Ⴈ))
								{
									goto IL_02ca;
								}
								if (false)
								{
									goto IL_02a3;
								}
								goto IL_0adc;
							}
							if ((32 + 32 * 32) % 2 == 0)
							{
								goto IL_003a;
							}
							goto IL_02a5;
						}
						if (165 <= 165 - 157)
						{
							goto IL_022a;
						}
						goto IL_072d;
					}
					if ((178 + 178 * 178) % 2 == 0)
					{
						return true;
					}
					goto IL_0ae0;
					IL_0ae0:
					return true;
					IL_0b07:
					if ((object)type != typeof(ႥႥႨႳ.Ⴀ))
					{
						if ((object)type == typeof(ႳႨႭ.Ⴐ))
						{
							if (647 >= 647 - 68)
							{
								return true;
							}
							goto IL_0135;
						}
						if ((object)type == typeof(ႥႥႨႷ.Ⴗ))
						{
							if (869 >= 869 - 466)
							{
								return true;
							}
						}
						else
						{
							if ((object)type != typeof(ႥႥႨႷ.Ⴄ))
							{
								goto IL_00d8;
							}
							if (616 >= 616 - 197)
							{
								return true;
							}
						}
						goto IL_0c62;
					}
					if (949 > 949 - 638)
					{
						return true;
					}
					goto IL_0e99;
					IL_02f2:
					if ((object)type == typeof(UrlConfiguration))
					{
						if (580 <= 580 - 395)
						{
							goto IL_04cf;
						}
						return true;
					}
					goto IL_0663;
					IL_0d15:
					return true;
					IL_088d:
					return true;
					IL_0663:
					if ((object)type == typeof(ႥႥႨ.Ⴗ))
					{
						if ((675 + 675 * 675) % 2 == 0)
						{
							return true;
						}
						goto IL_097d;
					}
					if ((object)type == typeof(ChatmanCentralConfiguration))
					{
						if (117 <= 117 - 1)
						{
							goto IL_02f2;
						}
						return true;
					}
					if ((object)type != typeof(ႥႥႨ.Ⴅ))
					{
						goto IL_0b5d;
					}
					if (531 > 531 - 127)
					{
						return true;
					}
					goto IL_0ef0;
					IL_0ef0:
					if ((object)type != typeof(ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ))
					{
						if ((object)type == typeof(ႥႥႨႣ.Ⴄ))
						{
							if (764 < 764 - 144)
							{
								goto IL_0956;
							}
							goto IL_0ce3;
						}
						if ((object)type == typeof(ႥႥႨႣ.Ⴅ))
						{
							if ((120 + 120 * 120) % 2 == 0)
							{
								return true;
							}
							goto IL_003c;
						}
						if ((object)type == typeof(ႥႥႨႣ.Ⴈ))
						{
							if (395 >= 395 - 209)
							{
								return true;
							}
							goto IL_02ca;
						}
						if ((object)type == typeof(ႥႥႨႣ.Ⴐ))
						{
							if (811 <= 811 - 199)
							{
								goto IL_0836;
							}
							return true;
						}
						while ((object)type != typeof(ႥႥႨႣ.Ⴜ))
						{
							if ((object)type == typeof(ႥႥႨႭ.Ⴀ))
							{
								if (439 <= 439 - 310)
								{
									continue;
								}
								return true;
							}
							goto IL_04f4;
						}
						if (false)
						{
							goto IL_036e;
						}
					}
					else if ((369 + 369 * 369) % 2 == 0)
					{
						return true;
					}
					return true;
					IL_09d9:
					if ((object)type == typeof(ႥႥႨႭ.Ⴃ))
					{
						if ((1022 + 1022 * 1022) % 2 == 0)
						{
							return true;
						}
						goto IL_0c60;
					}
					if ((object)type != typeof(ႥႥႨႤ.Ⴄ))
					{
						goto IL_0321;
					}
					if ((601 + 601 * 601) % 2 == 0)
					{
						return true;
					}
					goto IL_0d17;
					IL_072d:
					return true;
					IL_0370:
					return true;
					IL_07c0:
					if (421 > 421 - 233)
					{
						goto IL_0f72;
					}
					goto IL_0fa9;
					IL_0f7a:
					return true;
					IL_0adc:
					return true;
					IL_02ca:
					if ((object)type == typeof(ႥႥႼ.Ⴓ))
					{
						if (418 > 418 - 116)
						{
							return true;
						}
					}
					else
					{
						if ((object)type == typeof(ႥႥႼ.Ⴐ))
						{
							if (false)
							{
								goto IL_0836;
							}
							return true;
						}
						if ((object)type == typeof(ႥႥႼ.Ⴀ))
						{
							if (389 >= 389 - 292)
							{
								return true;
							}
							goto IL_018c;
						}
					}
					if ((object)type == typeof(ႥႥႨႰ.Ⴗ))
					{
						if (11 <= 11 - 4)
						{
							goto IL_0f7a;
						}
						return true;
					}
					if ((object)type != typeof(ႥႥႨႰ.Ⴄ))
					{
						if ((object)type == typeof(ႥႥႨႰ.Ⴈ))
						{
							if ((574 + 574 * 574) % 2 == 0)
							{
								goto IL_0c62;
							}
							goto IL_0f6e;
						}
						goto IL_0fa9;
					}
					if (false)
					{
						goto IL_03c4;
					}
					goto IL_0c04;
					IL_0b5d:
					if ((object)type == typeof(ႥႥႨ.Ⴜ))
					{
						if ((359 + 359 * 359) % 2 == 0)
						{
							goto IL_02a3;
						}
						goto IL_072d;
					}
					goto IL_0e1f;
					IL_00d8:
					if ((object)type != typeof(AuthorizeData))
					{
						goto IL_05be;
					}
					if (176 >= 176 - 115)
					{
						return true;
					}
					goto IL_0a5a;
					IL_0e1f:
					if ((object)type != typeof(ႥႥႳ.Ⴐ))
					{
						if ((object)type != typeof(ႥႥႳ.Ⴅ))
						{
							goto IL_0372;
						}
						if ((465 + 465 * 465) % 2 == 0)
						{
							goto IL_018a;
						}
						goto IL_0a85;
					}
					if (125 > 125 - 15)
					{
						break;
					}
					goto IL_0a5a;
					IL_0cb4:
					if ((object)type != typeof(ႥႥႨႤ.Ⴜ))
					{
						if ((object)type != typeof(ႥႥႨႼ.Ⴐ))
						{
							goto IL_04a3;
						}
						if (false)
						{
							goto IL_0804;
						}
						return true;
					}
					goto IL_0cc4;
					IL_0ce3:
					return true;
					IL_05be:
					while ((object)type == typeof(ႥႥႨႷ.Ⴍ))
					{
						if (596 <= 596 - 98)
						{
							continue;
						}
						return true;
					}
					if ((object)type == typeof(ႥႥႨႥ.Ⴓ))
					{
						if (121 <= 121 - 107)
						{
							goto IL_018a;
						}
						goto IL_036e;
					}
					if ((object)type != typeof(ႥႥႨႥ.Ⴗ))
					{
						goto IL_00b0;
					}
					if (false)
					{
						goto IL_0834;
					}
					goto IL_0d99;
					IL_0372:
					if ((object)type == typeof(ႥႥႷ.Ⴄ))
					{
						if (867 <= 867 - 602)
						{
							goto IL_0e6c;
						}
						return true;
					}
					if ((object)type != typeof(ႥႥႷ.Ⴅ))
					{
						if ((object)type == typeof(ႥႥႷ.Ⴀ))
						{
							if (979 < 979 - 467)
							{
								goto IL_003c;
							}
							goto IL_0370;
						}
						if ((object)type == typeof(ႥႥႷ.Ⴈ))
						{
							if (false)
							{
								goto IL_0aaf;
							}
							return true;
						}
					}
					else if ((88 + 88 * 88) % 2 == 0)
					{
						goto IL_058f;
					}
					goto IL_02a5;
					IL_04cf:
					if ((object)type != typeof(ႥႥႨႼ.Ⴀ))
					{
						if ((object)type == typeof(ႥႥႨႼ.Ⴓ))
						{
							if (654 <= 654 - 455)
							{
								goto IL_04cd;
							}
							goto IL_04f2;
						}
						if ((object)type == typeof(ႥႥႨႼ.Ⴗ.ႭႷ))
						{
							if (false)
							{
								goto IL_003c;
							}
							goto IL_015d;
						}
						goto IL_088f;
					}
					if (124 > 124 - 7)
					{
						return true;
					}
					goto IL_05be;
					IL_0836:
					return true;
					IL_0f72:
					return true;
					IL_0321:
					if ((object)type == typeof(ႥႥႨႤ.Ⴀ))
					{
						if (73 < 73 - 22)
						{
							goto IL_075c;
						}
						goto IL_0c60;
					}
					if ((object)type != typeof(ႥႥႨႤ.Ⴓ))
					{
						goto IL_0e6c;
					}
					if (529 <= 529 - 448)
					{
						goto IL_0127;
					}
					goto IL_0e97;
					IL_0c62:
					return true;
					IL_0834:
					return true;
					IL_00b0:
					if ((object)type == typeof(ႥႥႨႥ.Ⴄ))
					{
						if (533 <= 533 - 462)
						{
							goto IL_0b5d;
						}
						return true;
					}
					if ((object)type == typeof(ႥႥႨႥ.Ⴐ))
					{
						if (153 >= 153 - 66)
						{
							return true;
						}
						goto IL_02a3;
					}
					goto IL_0d17;
					IL_0d99:
					return true;
					IL_0c60:
					return true;
					IL_02a5:
					if ((object)type == typeof(ႥႥႷ.Ⴃ))
					{
						goto IL_02b5;
					}
					goto IL_08b4;
					IL_08b4:
					if ((object)type != typeof(ႥႥႷ.Ⴐ))
					{
						if ((object)type == typeof(ႥႥႥ.Ⴅ))
						{
							if (512 >= 512 - 496)
							{
								return true;
							}
							goto IL_0663;
						}
						if ((object)type != typeof(ႥႥႥ.Ⴗ))
						{
							goto IL_0983;
						}
						if (565 > 565 - 535)
						{
							goto IL_0ae0;
						}
						goto IL_0d99;
					}
					if (869 >= 869 - 220)
					{
						return true;
					}
					goto IL_0321;
					IL_075c:
					return true;
					IL_0fa9:
					if ((object)type != typeof(FileUtils))
					{
						if ((object)type != typeof(ႥႥႨႰ.Ⴍ))
						{
							goto IL_022a;
						}
						goto IL_0af2;
					}
					if ((752 + 752 * 752) % 2 == 0)
					{
						goto IL_088d;
					}
					goto IL_0983;
					IL_015d:
					return true;
					IL_04cd:
					return true;
					IL_022a:
					if ((object)type == typeof(ႥႥႨႰ.Ⴜ))
					{
						if (544 >= 544 - 117)
						{
							return true;
						}
						goto IL_015d;
					}
					if ((object)type != typeof(ႥႥႨႨ.Ⴓ))
					{
						if ((object)type == typeof(ႥႥႨႨ.Ⴅ))
						{
							goto IL_08ef;
						}
						if ((object)type == typeof(ႥႥႨႨ.Ⴈ))
						{
							if (10 >= 10 - 5)
							{
								goto IL_0834;
							}
							goto IL_09d9;
						}
						goto IL_0a5a;
					}
					if (419 < 419 - 16)
					{
						goto IL_012f;
					}
					goto IL_0ade;
					IL_04a3:
					if ((object)type != typeof(ႥႥႨႼ.Ⴈ))
					{
						goto IL_04cf;
					}
					if (235 <= 235 - 159)
					{
						goto IL_018a;
					}
					goto IL_0836;
					IL_02a3:
					return true;
					IL_0983:
					if ((object)type != typeof(FileFormats))
					{
						if ((object)type == typeof(ႥႥႠ.Ⴍ))
						{
							if (833 >= 833 - 718)
							{
								return true;
							}
							goto IL_0372;
						}
						goto IL_0aaf;
					}
					if (710 >= 710 - 162)
					{
						goto IL_04a1;
					}
					goto IL_05be;
					IL_0127:
					return true;
					IL_0d17:
					if ((object)type != typeof(ႥႥႨႠ.Ⴀ))
					{
						if ((object)type == typeof(ႥႥႨႠ.Ⴍ))
						{
							if ((906 + 906 * 906) % 2 == 0)
							{
								return true;
							}
							goto IL_09ae;
						}
						if ((object)type != typeof(ႣႳ))
						{
							if ((object)type == typeof(ႥႥႨႣ.Ⴗ))
							{
								if (false)
								{
									goto IL_0ce3;
								}
								return true;
							}
							if ((object)type == typeof(ႥႥႨႣ.Ⴗ.ႣႠ))
							{
								if (738 >= 738 - 21)
								{
									return true;
								}
								goto IL_088d;
							}
							goto IL_0ef0;
						}
						if ((563 + 563 * 563) % 2 == 0)
						{
							return true;
						}
						goto IL_018c;
					}
					if (411 >= 411 - 68)
					{
						return true;
					}
					goto IL_058f;
					IL_097d:
					return true;
					IL_012f:
					return true;
					IL_0aaf:
					if ((object)type == typeof(ႥႥႠ.Ⴍ.ႷႼ))
					{
						if (943 >= 943 - 885)
						{
							return true;
						}
						goto IL_0e1f;
					}
					goto IL_0e99;
					IL_058f:
					return true;
					IL_036e:
					return true;
				}
				goto IL_0a03;
				IL_0d67:
				return true;
				IL_0ded:
				return true;
				IL_0cc4:
				if (216 > 216 - 187)
				{
					break;
				}
				goto IL_0ded;
				IL_04f2:
				return true;
				IL_0ade:
				return true;
				IL_088f:
				if ((object)type == typeof(ႥႥႳႰ.Ⴅ))
				{
					if (65 < 65 - 55)
					{
						goto IL_0a03;
					}
					goto IL_0d67;
				}
				if ((object)type != typeof(ႥႥႳႰ.Ⴍ))
				{
					return false;
				}
				if (993 < 993 - 654)
				{
					goto IL_0ade;
				}
				goto IL_0d13;
				IL_02b5:
				if (294 >= 294 - 64)
				{
					return true;
				}
				continue;
				IL_0d13:
				return true;
				IL_04a1:
				return true;
				IL_0c04:
				return true;
				IL_0af2:
				if (39 >= 39 - 20)
				{
					return true;
				}
				goto IL_0d67;
				IL_0a03:
				return true;
				IL_08ef:
				if (66 > 66 - 50)
				{
					return true;
				}
				goto IL_0d13;
			}
			return true;
		}

		public override XmlSerializer GetSerializer(Type type)
		{
			//Discarded unreachable code: IL_0005, IL_0035, IL_0072, IL_009c, IL_00c7, IL_00f2, IL_011c, IL_0140, IL_0195, IL_01c6, IL_01f4, IL_021f, IL_0246, IL_0271, IL_0299, IL_02c3, IL_02eb, IL_031b, IL_0342, IL_036d, IL_03a3, IL_03ce, IL_0401, IL_042c, IL_0456, IL_047b, IL_04a6, IL_04c8, IL_04f2, IL_0535, IL_0568, IL_059e, IL_05c9, IL_05f3, IL_061e, IL_064f, IL_0680, IL_06aa, IL_06d4, IL_06fe, IL_073b, IL_076e, IL_079f, IL_07c3, IL_07ee, IL_0822, IL_085e, IL_0882, IL_08af, IL_08df, IL_0909, IL_0951, IL_0979, IL_09aa, IL_09d5, IL_09ff, IL_0a29, IL_0a57, IL_0a82, IL_0ac4, IL_0afa, IL_0b1f, IL_0b50, IL_0b7a, IL_0ba2, IL_0bcd, IL_0bf8, IL_0c38, IL_0c60, IL_0c88, IL_0cb0, IL_0cd8, IL_0d02, IL_0d39, IL_0d6a, IL_0da7, IL_0dd8, IL_0e03, IL_0e2a, IL_0e6c, IL_0ea8, IL_0ecf, IL_0f03, IL_0f3d, IL_0f67, IL_0fa9, IL_0fd7, IL_1002, IL_102d, IL_105e, IL_1089, IL_10b3, IL_10e1, IL_110c, IL_115d, IL_118b, IL_11b3, IL_11de
			while (true)
			{
				if ((object)type == typeof(ႥႥႰ.Ⴈ))
				{
					if (false)
					{
						goto IL_04fd;
					}
					goto IL_0e2f;
				}
				if ((object)type == typeof(ႥႥႰ.Ⴓ))
				{
					if (510 < 510 - 146)
					{
						goto IL_0715;
					}
					goto IL_0773;
				}
				if ((object)type != typeof(ႥႥႰ.Ⴃ))
				{
					goto IL_016f;
				}
				if (628 <= 628 - 494)
				{
					goto IL_0d7b;
				}
				return new NotifyCollectionChangedActionSerializer();
				IL_1069:
				if ((object)type != typeof(ႥႥႨႣ.Ⴜ))
				{
					if ((object)type != typeof(ႥႥႨႭ.Ⴀ))
					{
						if ((object)type != typeof(ႥႥႨႭ.Ⴀ.ႭႰ))
						{
							if ((object)type == typeof(ႥႥႨႭ.Ⴀ.ႭႨ))
							{
								if (675 > 675 - 448)
								{
									goto IL_0d75;
								}
								goto IL_1032;
							}
							if ((object)type == typeof(ႥႥႨႭ.Ⴗ))
							{
								if (false)
								{
									goto IL_0c03;
								}
								goto IL_110e;
							}
							if ((object)type != typeof(ႥႥႨႭ.Ⴍ))
							{
								if ((object)type == typeof(ႥႥႨႭ.Ⴃ))
								{
									if (110 > 110 - 78)
									{
										goto IL_000a;
									}
									goto IL_02fc;
								}
								if ((object)type != typeof(ႥႥႨႤ.Ⴄ))
								{
									goto IL_037e;
								}
								if (863 >= 863 - 835)
								{
									return new TextEncodingsSerializer();
								}
								goto IL_0f72;
							}
							if (266 < 266 - 178)
							{
								goto IL_0077;
							}
							goto IL_1132;
						}
						if ((229 + 229 * 229) % 2 == 0)
						{
						}
						goto IL_04f7;
					}
					if (444 >= 444 - 374)
					{
						goto IL_1126;
					}
					goto IL_1168;
				}
				if (505 > 505 - 81)
				{
					return new ZipEntrySourceSerializer();
				}
				goto IL_1038;
				IL_0c09:
				return new FlushTypeSerializer();
				IL_03d9:
				return new ResourceTypesSerializer();
				IL_04f7:
				return new RECTSerializer();
				IL_0010:
				if ((object)type == typeof(ႥႥႨႣ.Ⴗ))
				{
					if (false)
					{
						goto IL_0ddd;
					}
					return new SecurityUtilsSerializer();
				}
				if ((object)type == typeof(ႥႥႨႣ.Ⴗ.ႣႠ))
				{
					if ((779 + 779 * 779) % 2 == 0)
					{
						goto IL_07f9;
					}
					goto IL_0acf;
				}
				goto IL_108e;
				IL_1126:
				return new WIN32APISerializer();
				IL_016f:
				if ((object)type != typeof(ႥႥႰ.Ⴍ))
				{
					goto IL_004c;
				}
				if (510 <= 510 - 169)
				{
					goto IL_0d75;
				}
				goto IL_0f72;
				IL_10b8:
				return new IconDirSerializer();
				IL_004c:
				if ((object)type != typeof(ႥႥႰ.Ⴄ))
				{
					goto IL_024b;
				}
				if (418 > 418 - 162)
				{
					goto IL_0914;
				}
				goto IL_1132;
				IL_0b7f:
				if ((object)type != typeof(ႥႥႨႨ.Ⴀ))
				{
					goto IL_01d1;
				}
				if (580 > 580 - 81)
				{
					goto IL_0503;
				}
				goto IL_0c3d;
				IL_024b:
				if ((object)type == typeof(ႥႥႰ.Ⴜ))
				{
					if (615 >= 615 - 447)
					{
						goto IL_10b8;
					}
					goto IL_10be;
				}
				if ((object)type == typeof(ႥႥႨ.Ⴐ))
				{
					if ((937 + 937 * 937) % 2 == 0)
					{
						return new IconDirEntrySerializer();
					}
					goto IL_0914;
				}
				goto IL_0ddd;
				IL_0d75:
				return new WINDOWPLACEMENTSerializer();
				IL_1032:
				return new TimeStampsSerializer();
				IL_01d1:
				if ((object)type != typeof(ႥႥႨႳ.Ⴃ))
				{
					goto IL_0224;
				}
				if (771 <= 771 - 466)
				{
					goto IL_0ad5;
				}
				return new URLUtilsSerializer();
				IL_0914:
				return new CompressionMethodSerializer();
				IL_10be:
				if ((object)type != typeof(ႥႥႠ.Ⴐ))
				{
					if ((object)type != typeof(ႥႥႣ.Ⴗ))
					{
						goto IL_05ce;
					}
					if (373 <= 373 - 185)
					{
						goto IL_0c15;
					}
					goto IL_0e7d;
				}
				if (901 >= 901 - 92)
				{
					return new TextOnlyFrameSerializer();
				}
				goto IL_0515;
				IL_0ddd:
				if ((object)type != typeof(ႥႥႨ.Ⴈ))
				{
					if ((object)type != typeof(ႥႥႨ.Ⴓ))
					{
						if ((object)type != typeof(UrlConfigurationContainer))
						{
							if ((object)type != typeof(UrlConfiguration))
							{
								goto IL_0715;
							}
							if (385 < 385 - 152)
							{
								goto IL_04f7;
							}
							goto IL_0f0e;
						}
						if (854 > 854 - 695)
						{
							return new UrlConfigurationContainerSerializer();
						}
						goto IL_0c09;
					}
					if (25 <= 25 - 8)
					{
						goto IL_0d0d;
					}
					goto IL_1120;
				}
				if (1000 > 1000 - 495)
				{
					break;
				}
				goto IL_110e;
				IL_0e77:
				return new ChatmanConfigurationSerializer();
				IL_0224:
				if ((object)type == typeof(ႥႥႨႳ.Ⴈ))
				{
					if (false)
					{
						goto IL_05ce;
					}
					goto IL_08b4;
				}
				goto IL_0c3d;
				IL_07f9:
				return new ElevationHelperSerializer();
				IL_108e:
				if ((object)type != typeof(ႥႥႨႣ.Ⴗ.ႣႠ.ႣႥ))
				{
					if ((object)type == typeof(ႥႥႨႣ.Ⴄ))
					{
						if (416 <= 416 - 51)
						{
							goto IL_000a;
						}
						goto IL_0e3b;
					}
					if ((object)type != typeof(ႥႥႨႣ.Ⴅ))
					{
						if ((object)type == typeof(ႥႥႨႣ.Ⴈ))
						{
							if (612 > 612 - 595)
							{
								return new DateUtilsSerializer();
							}
							goto IL_0ed1;
						}
						if ((object)type == typeof(ႥႥႨႣ.Ⴐ))
						{
							if (false)
							{
								goto IL_0d6f;
							}
							return new SplashScreenModeSerializer();
						}
						goto IL_1069;
					}
					if (false)
					{
						goto IL_0503;
					}
					goto IL_0e71;
				}
				if ((632 + 632 * 632) % 2 == 0)
				{
					return new TokenElevationTypeSerializer();
				}
				goto IL_050f;
				IL_0e7d:
				return new DLLUtilsSerializer();
				IL_0c3d:
				if ((object)type != typeof(ႥႥႨႳ.Ⴀ))
				{
					if ((object)type != typeof(ႳႨႭ.Ⴐ))
					{
						goto IL_0956;
					}
					if (968 > 968 - 411)
					{
						goto IL_02f0;
					}
					goto IL_0f72;
				}
				if (213 > 213 - 174)
				{
					return new HTTPUtilsSerializer();
				}
				goto IL_0c8a;
				IL_05ce:
				if ((object)type == typeof(ႳႨႭ.Ⴓ))
				{
					if ((751 + 751 * 751) % 2 == 0)
					{
						return new DeviceClassControllerSerializer();
					}
					goto IL_00cc;
				}
				if ((object)type == typeof(ႥႥႣ.Ⴜ))
				{
					if ((501 + 501 * 501) % 2 == 0)
					{
						goto IL_0145;
					}
					goto IL_0779;
				}
				if ((object)type != typeof(ႥႭႤ.Ⴃ))
				{
					if ((object)type != typeof(ႥႥႤ.Ⴅ.ႥႭ))
					{
						if ((object)type != typeof(ႥႥႤ.Ⴗ.ႥႤ))
						{
							if ((object)type == typeof(ႥႥႼ.Ⴈ))
							{
								if (294 >= 294 - 283)
								{
									goto IL_0c03;
								}
							}
							else
							{
								if ((object)type != typeof(ႥႥႼ.Ⴓ))
								{
									if ((object)type == typeof(ႥႥႼ.Ⴐ))
									{
										if (140 >= 140 - 43)
										{
											return new CompressionStrategySerializer();
										}
									}
									if ((object)type == typeof(ႥႥႼ.Ⴀ))
									{
										if (96 <= 96 - 50)
										{
											goto IL_004c;
										}
										return new CompressionModeSerializer();
									}
									if ((object)type == typeof(ႥႥႨႰ.Ⴗ))
									{
										if (384 <= 384 - 188)
										{
											goto IL_082d;
										}
										return new CRC32Serializer();
									}
									if ((object)type == typeof(ႥႥႨႰ.Ⴄ))
									{
										if (247 < 247 - 148)
										{
											break;
										}
										return new VersionUtilsSerializer();
									}
									goto IL_0779;
								}
								if (false)
								{
									goto IL_07f3;
								}
							}
							return new CompressionLevelSerializer();
						}
						if (1014 > 1014 - 762)
						{
							return new RecievedAsEnumSerializer();
						}
						goto IL_0773;
					}
					if (false)
					{
						goto IL_0480;
					}
					goto IL_07f3;
				}
				if ((551 + 551 * 551) % 2 == 0)
				{
					return new BaseFileFrameSerializer();
				}
				goto IL_0e83;
				IL_110e:
				return new MessageBoxUtilsSerializer();
				IL_0715:
				if ((object)type == typeof(ႥႥႨ.Ⴗ))
				{
					if (344 < 344 - 323)
					{
						goto IL_00f7;
					}
					goto IL_0480;
				}
				goto IL_0839;
				IL_08b4:
				return new LanguageSerializer();
				IL_0839:
				if ((object)type == typeof(ChatmanCentralConfiguration))
				{
					if (false)
					{
						goto IL_0c15;
					}
					return new ChatmanCentralConfigurationSerializer();
				}
				goto IL_0fdc;
				IL_050f:
				return new FileFormatsSerializer();
				IL_0145:
				return new BrowserExtensionsInstallerSerializer();
				IL_0fdc:
				if ((object)type == typeof(ႥႥႨ.Ⴅ))
				{
					if (879 >= 879 - 139)
					{
						return new SimpleOpenFileDialogSerializer();
					}
					goto IL_02f0;
				}
				goto IL_0c8a;
				IL_0c03:
				return new MouseActionSerializer();
				IL_02f0:
				return new DefaultAudioDeviceControllerSerializer();
				IL_0c8a:
				if ((object)type == typeof(ႥႥႨ.Ⴜ))
				{
					if (895 > 895 - 189)
					{
						return new TextUtilsSerializer();
					}
					goto IL_0e83;
				}
				if ((object)type != typeof(ႥႥႳ.Ⴐ))
				{
					if ((object)type == typeof(ႥႥႳ.Ⴅ))
					{
						if (93 >= 93 - 3)
						{
							return new FrameSerializer();
						}
						goto IL_0956;
					}
					if ((object)type == typeof(ႥႥႷ.Ⴄ))
					{
						if (false)
						{
							goto IL_0145;
						}
						goto IL_0654;
					}
					goto IL_06af;
				}
				if (184 >= 184 - 96)
				{
					return new NumericUtilsSerializer();
				}
				goto IL_07f9;
				IL_0887:
				return null;
				IL_082d:
				return new ExtensionsHelperSerializer();
				IL_0956:
				if ((object)type == typeof(ႥႥႨႷ.Ⴗ))
				{
					if (856 >= 856 - 51)
					{
						goto IL_082d;
					}
					goto IL_0d6f;
				}
				if ((object)type != typeof(ႥႥႨႷ.Ⴄ))
				{
					goto IL_00f7;
				}
				if (986 >= 986 - 386)
				{
					goto IL_1114;
				}
				goto IL_1120;
				IL_0480:
				return new LoggerSerializer();
				IL_0889:
				if ((object)type == typeof(ႥႥႨႤ.Ⴍ))
				{
					if (575 <= 575 - 516)
					{
						goto IL_0f72;
					}
					return new ID3v2FlagsSerializer();
				}
				if ((object)type == typeof(ႥႥႨႤ.Ⴃ))
				{
					if (311 < 311 - 19)
					{
						goto IL_0715;
					}
					goto IL_0acf;
				}
				if ((object)type == typeof(ႥႥႨႤ.Ⴜ))
				{
					if (false)
					{
						goto IL_08b4;
					}
					return new StreamUtilsSerializer();
				}
				goto IL_08ba;
				IL_0e3b:
				return new RegistryAccessorSerializer();
				IL_0773:
				return new HashUtilsSerializer();
				IL_1120:
				return new GroupIconDirEntrySerializer();
				IL_00f7:
				if ((object)type != typeof(AuthorizeData))
				{
					goto IL_065a;
				}
				if (false)
				{
					goto IL_06af;
				}
				goto IL_0a99;
				IL_0a99:
				return new AuthorizeDataSerializer();
				IL_06af:
				if ((object)type == typeof(ႥႥႷ.Ⴅ))
				{
					if ((778 + 778 * 778) % 2 == 0)
					{
						return new GetLastErrorResultSerializer();
					}
					goto IL_0a99;
				}
				if ((object)type != typeof(ႥႥႷ.Ⴀ))
				{
					if ((object)type != typeof(ႥႥႷ.Ⴈ))
					{
						goto IL_02fc;
					}
					if (488 >= 488 - 408)
					{
						return new LookupIconIdFromDirectoryExFlagsSerializer();
					}
					goto IL_0f0e;
				}
				if (174 <= 174 - 37)
				{
					goto IL_03d3;
				}
				goto IL_03d9;
				IL_065a:
				if ((object)type != typeof(ႥႥႨႷ.Ⴍ))
				{
					goto IL_0077;
				}
				if (318 <= 318 - 256)
				{
					goto IL_07f3;
				}
				goto IL_0d0d;
				IL_1132:
				return new ChatManMessageBoxButtonsSerializer();
				IL_0503:
				return new Zip64OptionSerializer();
				IL_07f3:
				return new PictureTypesSerializer();
				IL_0077:
				if ((object)type != typeof(ႥႥႨႥ.Ⴓ))
				{
					goto IL_0ad5;
				}
				if ((507 + 507 * 507) % 2 == 0)
				{
					goto IL_03d3;
				}
				goto IL_0e71;
				IL_0e71:
				return new RondyoUtilHelperSerializer();
				IL_0d0d:
				return new IconFlagsSerializer();
				IL_0f0e:
				return new UrlConfigurationSerializer();
				IL_02fc:
				if ((object)type == typeof(ႥႥႷ.Ⴃ))
				{
					if (31 > 31 - 6)
					{
						goto IL_04fd;
					}
					goto IL_0503;
				}
				if ((object)type != typeof(ႥႥႷ.Ⴐ))
				{
					if ((object)type != typeof(ႥႥႥ.Ⴅ))
					{
						if ((object)type == typeof(ႥႥႥ.Ⴗ))
						{
							if (830 <= 830 - 468)
							{
								goto IL_082d;
							}
							return new ResourceUtilsSerializer();
						}
						if ((object)type != typeof(FileFormats))
						{
							if ((object)type == typeof(ႥႥႠ.Ⴍ))
							{
								if (39 >= 39 - 9)
								{
									return new SimpleIconExtractorSerializer();
								}
								goto IL_0b7f;
							}
							if ((object)type == typeof(ႥႥႠ.Ⴍ.ႷႼ))
							{
								if (718 >= 718 - 351)
								{
									return new IconSizeSerializer();
								}
								goto IL_037e;
							}
							goto IL_1038;
						}
						if ((323 + 323 * 323) % 2 == 0)
						{
							goto IL_050f;
						}
						goto IL_0e77;
					}
					if (false)
					{
						goto IL_108e;
					}
					return new IconUtilsSerializer();
				}
				if (748 > 748 - 247)
				{
					return new SHGetFileInfoFlagsSerializer();
				}
				goto IL_065a;
				IL_03d3:
				return new ChatmanThreadSerializer();
				IL_04fd:
				return new LoadImageTypesSerializer();
				IL_08ba:
				if ((object)type != typeof(ႥႥႨႼ.Ⴐ))
				{
					goto IL_0515;
				}
				if (false)
				{
					goto IL_0e2f;
				}
				return new ResourcesSerializer();
				IL_0ad5:
				if ((object)type == typeof(ႥႥႨႥ.Ⴗ))
				{
					if (false)
					{
						goto IL_0010;
					}
					return new DesktopPointSerializer();
				}
				goto IL_00cc;
				IL_0e2f:
				return new ShellUtilsSerializer();
				IL_0f72:
				return new ZipEntryTimestampSerializer();
				IL_00cc:
				if ((object)type == typeof(ႥႥႨႥ.Ⴄ))
				{
					if (883 <= 883 - 484)
					{
						goto IL_1114;
					}
					return new ChatmanMouseButtonsSerializer();
				}
				if ((object)type == typeof(ႥႥႨႥ.Ⴐ))
				{
					if (308 < 308 - 223)
					{
						goto IL_08ba;
					}
					goto IL_0d6f;
				}
				goto IL_0e83;
				IL_0d6f:
				return new ZipProgressEventTypeSerializer();
				IL_1114:
				return new ZipErrorActionSerializer();
				IL_0779:
				if ((object)type == typeof(ႥႥႨႰ.Ⴈ))
				{
					if (798 >= 798 - 603)
					{
						goto IL_0db2;
					}
					goto IL_0e3b;
				}
				goto IL_1168;
				IL_1168:
				if ((object)type != typeof(FileUtils))
				{
					goto IL_0c15;
				}
				if (239 > 239 - 15)
				{
					return new FileUtilsSerializer();
				}
				goto IL_0db2;
				IL_000a:
				return new ChatManDialogResultSerializer();
				IL_0ed1:
				return new SingleProgramInstanceWinSerializer();
				IL_0db2:
				return new HtmlProcessorSerializer();
				IL_0e83:
				if ((object)type != typeof(ႥႥႨႠ.Ⴀ))
				{
					if ((object)type == typeof(ႥႥႨႠ.Ⴍ))
					{
						if ((477 + 477 * 477) % 2 == 0)
						{
							return new FilterCollectionSerializer();
						}
						goto IL_0dac;
					}
					if ((object)type != typeof(ႣႳ))
					{
						goto IL_0010;
					}
					if ((486 + 486 * 486) % 2 == 0)
					{
						return new ChatmanEnvironmentSerializer();
					}
					goto IL_03d9;
				}
				if ((648 + 648 * 648) % 2 == 0)
				{
					return new MailUtilsSerializer();
				}
				goto IL_0fdc;
				IL_0654:
				return new LoadLibraryExFlagsSerializer();
				IL_0c15:
				if ((object)type != typeof(ႥႥႨႰ.Ⴍ))
				{
					if ((object)type == typeof(ႥႥႨႰ.Ⴜ))
					{
						if (410 >= 410 - 290)
						{
							return new EncryptionAlgorithmSerializer();
						}
						goto IL_00f7;
					}
					if ((object)type == typeof(ႥႥႨႨ.Ⴓ))
					{
						if (false)
						{
							goto IL_0224;
						}
						goto IL_0c09;
					}
				}
				else if (133 >= 133 - 15)
				{
					goto IL_0d7b;
				}
				if ((object)type != typeof(ႥႥႨႨ.Ⴅ))
				{
					if ((object)type != typeof(ႥႥႨႨ.Ⴈ))
					{
						goto IL_0b7f;
					}
					if (458 <= 458 - 376)
					{
						goto IL_0c03;
					}
					return new DynamicActivatorSerializer();
				}
				if ((184 + 184 * 184) % 2 == 0)
				{
					return new ZIPUtilsSerializer();
				}
				goto IL_016f;
				IL_0d7b:
				return new ZlibCodecSerializer();
				IL_037e:
				if ((object)type != typeof(ႥႥႨႤ.Ⴀ))
				{
					goto IL_07ff;
				}
				if (false)
				{
					goto IL_0654;
				}
				goto IL_0dac;
				IL_1038:
				if ((object)type != typeof(ႥႥႠ.Ⴍ.ႥႰ))
				{
					if ((object)type == typeof(ႥႥႠ.Ⴅ))
					{
						if (false)
						{
							goto IL_0887;
						}
						return new Shell32Serializer();
					}
					if ((object)type != typeof(ႥႥႠ.Ⴅ.ႥႨ))
					{
						if ((object)type == typeof(ႥႥႠ.Ⴅ.ႥႳ))
						{
							if (735 <= 735 - 216)
							{
								goto IL_10b8;
							}
							return new ITEMIDLISTSerializer();
						}
						if ((object)type == typeof(ႥႥႠ.Ⴗ))
						{
							if (230 > 230 - 1)
							{
								return new User32Serializer();
							}
							goto IL_1069;
						}
						goto IL_10be;
					}
					if (587 >= 587 - 289)
					{
						return new SHITEMIDSerializer();
					}
					goto IL_0889;
				}
				if (1012 >= 1012 - 504)
				{
					return new FolderTypeSerializer();
				}
				goto IL_0e7d;
				IL_0acf:
				return new FilterTypesSerializer();
				IL_07ff:
				if ((object)type == typeof(ႥႥႨႤ.Ⴓ))
				{
					if (382 > 382 - 116)
					{
						goto IL_1032;
					}
					goto IL_1126;
				}
				if ((object)type == typeof(ႥႥႨႤ.Ⴗ))
				{
					if (748 > 748 - 139)
					{
						return new IncrementDecrementSerializer();
					}
					goto IL_024b;
				}
				goto IL_0889;
				IL_0dac:
				return new FrameFlagsSerializer();
				IL_0515:
				if ((object)type == typeof(ႥႥႨႼ.Ⴈ))
				{
					if (154 <= 154 - 9)
					{
						goto IL_07ff;
					}
					return new ExtractExistingFileActionSerializer();
				}
				if ((object)type != typeof(ႥႥႨႼ.Ⴀ))
				{
					if ((object)type == typeof(ႥႥႨႼ.Ⴓ))
					{
						if (880 >= 880 - 228)
						{
							return new ErrorCollectionSerializer();
						}
						goto IL_0d6f;
					}
					if ((object)type != typeof(ႥႥႨႼ.Ⴗ.ႭႷ))
					{
						if ((object)type == typeof(ႥႥႳႰ.Ⴅ))
						{
							if (306 < 306 - 282)
							{
								goto IL_0839;
							}
							goto IL_0ed1;
						}
						if ((object)type != typeof(ႥႥႳႰ.Ⴍ))
						{
							goto IL_0887;
						}
						if (false)
						{
							goto IL_01d1;
						}
						goto IL_0e77;
					}
					if ((1019 + 1019 * 1019) % 2 == 0)
					{
						return new ContentTypesSerializer();
					}
					goto IL_0c3d;
				}
				if ((200 + 200 * 200) % 2 == 0)
				{
					return new ID3ErrorSerializer();
				}
			}
			return new GroupIconDirSerializer();
		}
	}
	public sealed class Zip64OptionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595129), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write157_Zip64Option(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read157_Zip64Option();
		}
	}
	public sealed class ZipEntrySourceSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595196), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write180_ZipEntrySource(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read180_ZipEntrySource();
		}
	}
	public sealed class ZipEntryTimestampSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595035), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write107_ZipEntryTimestamp(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read107_ZipEntryTimestamp();
		}
	}
	public sealed class ZipErrorActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595188), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write163_ZipErrorAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read163_ZipErrorAction();
		}
	}
	public sealed class ZipProgressEventTypeSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595133), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write169_ZipProgressEventType(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read169_ZipProgressEventType();
		}
	}
	public sealed class ZIPUtilsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595185), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write155_ZIPUtils(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read155_ZIPUtils();
		}
	}
	public sealed class ZlibCodecSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႰႰႰ.Ⴗ.ႳႭႨ(863595187), ႰႰႰ.Ⴗ.ႳႭႨ(863595171));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write152_ZlibCodec(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read152_ZlibCodec();
		}
	}
}
namespace ႰႰႰ
{
	internal sealed class Ⴄ
	{
		private static readonly char[] Ⴃ;

		private static readonly string[] Ⴃ;

		internal static string ႳႭႨ(int Ⴓ)
		{
			int num = Ⴓ ^ 0x33796AA2;
			string result;
			if ((result = Ⴃ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "\u0dcdब\u05abռफ\u05f9\u0cfcగ\u0df6";
				break;
			case 1:
				obj = "";
				break;
			case 2:
				obj = "\u0cdbఔ\u0df1त־խऽע\u0cf9గ\u0de0म\u05acսऑף\u0cd6ఓ\u0de4ण\u05bfձच\u05cc\u0cf6ఏ෬ढ\u05b6";
				break;
			case 3:
				obj = "స෪ठ\u05a8զछ\u05fe೦ఒ෪ण\u0595ձऊץ\u0cfaట";
				break;
			case 4:
				obj = "ह\u05ff\u0cfaఎ\u0df5ऄ\u05bbջऐ\u05c9\u0cfcఉ";
				break;
			case 5:
				obj = "ט೧గෆढ\u05b6ղगתೠఉ\u0de4ह\u05b1ջऐ\u05ce\u0cfaక\u0df1ब\u05b1պछ\u05ff";
				break;
			case 6:
				obj = "\u0594ջङת\u0cf0ఉ";
				break;
			case 7:
				obj = "Հछ\u05f5ೡమ\u0df1त\u05b4է";
				break;
			case 8:
				obj = "ස\u093f\u05b9չछ";
				break;
			case 9:
				obj = "\u0901\u05b7յच\u05c1\u0cfcఙ\u0df7ब\u05aaխ\u093b\u05f5\u0cd3గ\u0de4प\u05ab";
				break;
			case 10:
				obj = "\u0cc7ఞ\u0df6ढ\u05adզझר\u0cc1\u0c02\u0df5न\u05ab";
				break;
			case 11:
				obj = "న\u0dcdऊ\u05bdՠसפ\u0cf9ఞ\u0dccण־ջसס\u0cf4జ\u0df6";
				break;
			case 12:
				obj = "बר೦ఔ\u0df0\u093f\u05bbձफ\u05f9\u0cfcగ\u0df6";
				break;
			case 13:
				obj = "מ\u0cfcఖ\u0df5ड\u05bd՝झע\u0cfb\u0c3e\u0dfdह\u05aaյझ\u05f9\u0cfaఉ";
				break;
			case 14:
				obj = "\u0591շऑף\u0cc6ఒ\u0dffन";
				break;
			case 15:
				obj = "Շखר\u0cf9గබॿ";
				break;
			case 16:
				obj = "ශ\u0901\u0594Ձऊפ\u0cf9ఈ";
				break;
			case 17:
				obj = "ए\u05aaջउ\u05fe\u0cf0ఉවव\u05acձऐ\u05fe\u0cfcఔ෫\u093e\u0591պऍ\u05f9\u0cf4గ෩न\u05aa";
				break;
			case 18:
				obj = "\u0cc7ఞ෦त\u05bdբछש\u0cd4ఈවण\u05adչ";
				break;
			case 19:
				obj = "స෪ठ\u05a8զछ\u05fe೦ఒ෪ण\u058bՠऌ\u05ecೡఞ\u0de2ऴ";
				break;
			case 20:
				obj = "ऽן\u0cd6\u0c48භ";
				break;
			case 21:
				obj = "\u05c5ೡఖ෩झ\u05aaջझר೦ఈ෪\u093f";
				break;
			case 22:
				obj = "\u059dպझ\u05ff೬ఋ\u0df1त\u05b7պ\u093fסೲఔ\u0df7त\u05acռओ";
				break;
			case 23:
				obj = "Վषם\u0cc0ఏ෬ड\u05ab";
				break;
			case 24:
				obj = "\u0dd0ट\u0594Ձऊפ\u0cf9ఈ";
				break;
			case 25:
				obj = "अ\u058cՀमטೡఒ෩\u093e";
				break;
			case 26:
				obj = "\u0ccfఒ\u0df5ई\u05aaզऑ\u05ff\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 27:
				obj = "\u0c3a";
				break;
			case 28:
				obj = "ऽץ\u0cf4ఏ෨ब\u05b6\u0559ऑ\u05f8೦ఞ\u0dc7स\u05acՠऑף೦";
				break;
			case 29:
				obj = "׀\u0cf4ఒ෩घ\u05acսऒ\u05fe";
				break;
			case 30:
				obj = "\u058bձझ\u05f8೧ఒ\u0df1ऴ֍ՠगס೦";
				break;
			case 31:
				obj = "Րट\u05f9\u0cf0మ\u0df1त\u05b4է";
				break;
			case 32:
				obj = "\u0dd2ऄ\u0596Րऱך\u0cc5షහऎ\u059d\u0559\u093b׃\u0cc1";
				break;
			case 33:
				obj = "ऎ\u05b0յऊ׀\u0cf4కශत\u05b9ոऑת\u0cc7ఞ\u0df6स\u05b4ՠ";
				break;
			case 34:
				obj = "\u0cd3ఉ\u0de4ठ\u05bdՒऒ\u05ecೲఈ";
				break;
			case 35:
				obj = "లශॾ\u05aeԦसס\u0cf4జ\u0df6";
				break;
			case 36:
				obj = "भ\u05f9೧ఞ\u0de4ठ֍ՠगס೦";
				break;
			case 37:
				obj = "\u05ce\u0cfaక\u0df1न\u05b6ՠप״\u0ce5ఞ\u0df6";
				break;
			case 38:
				obj = "\u059bռट\u05f9\u0cf8చ෫ऎ\u05b7պघפೲఎ\u0df7ब\u05acսऑף";
				break;
			case 39:
				obj = "՛ऊץ\u0cf0ఉ";
				break;
			case 40:
				obj = "ව\u093f\u05aaջऌ\u05ce\u0cfaగ෩न\u05bbՠगע\u0cfb";
				break;
			case 41:
				obj = "ऎ\u05b0ջऌש";
				break;
			case 42:
				obj = "\u0cdcక\u0df3ढ\u05b3ձ\u093b\u05f5ೡఉ\u0de4म\u05acՄऌעೲఉ\u0de0\u093e\u05abՑईר\u0cfbఏ";
				break;
			case 43:
				obj = "వ෪ऋ\u05b1ոऊר೧";
				break;
			case 44:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6՝\u093a־\u0cbbఽ෬ड\u05acձऌי೬ఋ\u0de0\u093e";
				break;
			case 45:
				obj = "\u05c8೭ఋ\u0df7न\u05b5ձऐ\u05f9\u0cfcచ෩";
				break;
			case 46:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05c4\u0cfbఘ\u0df7न\u05b5ձऐ\u05f9\u0cd1ఞ෦\u093f\u05bdչछףೡ";
				break;
			case 47:
				obj = "\u0557ऑנ\u0ce5ఉ\u0de0\u093e\u05abսऑף";
				break;
			case 48:
				obj = "\u0dd0ङ\u059eՋ\u094f\u05bb\u0cd7\u0c3e";
				break;
			case 49:
				obj = "ङ\u05b9ճ\u093fסೡఞ\u0df7झ\u05aaձऍר೧\u0c0d\u0de4ह\u05b1ջऐ";
				break;
			case 50:
				obj = "\u0cd2ఉ෪स\u05a8սऐת\u0cdcట\u0de0ण\u05acսऊ״";
				break;
			case 51:
				obj = "\u0c3a෧ढ\u05aaՠ";
				break;
			case 52:
				obj = "\u093fׯ\u0cfaఉ\u0df1ट\u05bdՠऌ״\u0cdcజ෫ढ\u05aaձ";
				break;
			case 53:
				obj = "ס\u0cf0ఝ\u0df1";
				break;
			case 54:
				obj = "\u05abռऑ\u05fa\u0cd6ఖ\u0de1";
				break;
			case 55:
				obj = "Մऑפ\u0cfbఏ";
				break;
			case 56:
				obj = "\u0dd6ह\u05aaձटנ";
				break;
			case 57:
				obj = "अ\u05b1հचר\u0cfb";
				break;
			case 58:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbన\u0df5ड\u05b9էखמ\u0cf6ఉ\u0de0न\u05b6\u0559ऑש\u0cf0";
				break;
			case 59:
				obj = "య෪द\u05bdպ\u093bס\u0cf0\u0c0d\u0de4ह\u05b1ջऐי೬ఋ\u0de0उ\u05bdղट\u05f8\u0cf9ఏ";
				break;
			case 60:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6Շछ\u05eeೠఉ෬ह\u05a1Ձऊפ\u0cf9ఈණई\u05b4ձई\u05ecೡఒ෪ण\u0590ձऒ\u05fd\u0cf0ఉණङ\u05b7տछף\u0cd0గ\u0de0\u093b\u05b9ՠगע\u0cfbయ\u0dfcऽ\u05bd";
				break;
			case 61:
				obj = "ן\u0cf0చ\u0de1त\u05b6ճड\u05cf\u0cf0ఝ෪\u093f\u05bdՆछ\u05ecೱ\u0c3e෫ह\u05aaխ";
				break;
			case 62:
				obj = "\u0595սचש\u0cf9ఞ";
				break;
			case 63:
				obj = "՚ऑף\u0cf0";
				break;
			case 64:
				obj = "\u0dd6ब\u05aeսऐת\u0ccaహ\u0de0फ\u05b7զछך೧ఒ\u0df1न\u059dպऊ\u05ff೬";
				break;
			case 65:
				obj = "ञ\u05b9բगףೲతහफ\u05acձऌמ\u0cf4\u0c0d\u0de0ङ\u05bdչऎ\u05cc೧ఘ෭त\u05aeձ";
				break;
			case 66:
				obj = "\u0ccdహ\u0df0ह\u05acջऐ\u05bf";
				break;
			case 67:
				obj = "\u0c3e\u0dfdह\u05aaյझ\u05f9\u0cfcక\u0de2ऒ\u059aձघע೧ఞවव\u05acզट\u05eeೡ\u0c3e෫ह\u05aaխ";
				break;
			case 68:
				obj = "\u093b\u05f5ೡఉ\u0de4म\u05acսऐת\u0cca\u0c3a\u0de3ह\u05bdզ\u093b\u05f5ೡఉ\u0de4म\u05acՕऒס";
				break;
			case 69:
				obj = "ם೧ఒ෪\u093f\u05b1ՠइ";
				break;
			case 70:
				obj = "\u0599նऑ\u05fb\u0cf0వ෪\u093f\u05b5յऒ";
				break;
			case 71:
				obj = "\u0558ट\u05ffೲఞ\u0dccम\u05b7պ";
				break;
			case 72:
				obj = "\u0dd7न\u05acզइ";
				break;
			case 73:
				obj = "\u0901\u05b9պङ\u05f8\u0cf4జ\u0de0ऄ\u059c";
				break;
			case 74:
				obj = "\u0cc5చ\u0df7ह\u05b1յऒ";
				break;
			case 75:
				obj = "ఽ෬ड\u05acձऌרೱ";
				break;
			case 76:
				obj = "लר\u0ce3ఞ෩ॾ";
				break;
			case 77:
				obj = "\u05c2ೠఏ\u0df5स\u05acՖऋ\u05eb\u0cf3ఞ\u0df7";
				break;
			case 78:
				obj = "\u0594ձईר\u0cf9\u0c43";
				break;
			case 79:
				obj = "\u0557ऑנ\u0ce5ఉ\u0de0\u093e\u05ab\u0558छ\u05fb\u0cf0గ";
				break;
			case 80:
				obj = "\u0dd6ह\u05aaյऊרೲ\u0c02";
				break;
			case 81:
				obj = "च\u0595Ջल\u05cf\u0cc0య\u0dd1\u0902\u0596Ձम";
				break;
			case 82:
				obj = "\u0cc6ఏ\u0df7न\u05b9չऱ\u05fb\u0cf0ఉ\u0dccण\u05acձऌף\u0cf0ఏ";
				break;
			case 83:
				obj = "మ෫द\u05b6ջउף";
				break;
			case 84:
				obj = "ऽע\u0ce3ఞ\u0df7ऒ\u059aյझצ";
				break;
			case 85:
				obj = "\u05cf\u0cf4క\u0de1";
				break;
			case 86:
				obj = "\u059cաऌפ\u0cfbజ\u0dd5न\u05aaղऑ\u05ff\u0cf8చ෫म\u05bd";
				break;
			case 87:
				obj = "Մऋׯ\u0cf9ఒ\u0df6थ\u05bdզलעೲఔ";
				break;
			case 88:
				obj = "ෆड\u05b7էछש";
				break;
			case 89:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u0591շऑף\u0cd0\u0c03\u0df1\u093f\u05b9շऊע೧\u0c55\u0dd6त\u05b5դऒר\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aaԺष\u05ee\u0cfaక\u0dd6त\u05a2ձ";
				break;
			case 90:
				obj = "\u0cd7ఒ෫ब\u05aaխ";
				break;
			case 91:
				obj = "ల෦ढ\u05b6\u0558ऑ\u05ee\u0cf4ఏ෬ढ\u05b6";
				break;
			case 92:
				obj = "लן\u0cca\u0c3fවऋ\u0599Ձलי\u0cd6ఴ\u0dc9\u0902֊";
				break;
			case 93:
				obj = "\u05ccೡఏ\u0df7ञ\u05a8ձझפ\u0cf3ఒ\u0de0ऩ";
				break;
			case 94:
				obj = "\u059dՆब\u05c2\u0cc7తසऄ\u0594Ցड׃\u0cdaయ\u0ddaऋ\u0597Ձर\u05c9";
				break;
			case 95:
				obj = "Մष\u05c9\u0cd9";
				break;
			case 96:
				obj = "\u0dc8त\u05bbզऑ\u05fe\u0cfaఝ\u0df1\u0963\u0599Մष\u05a3\u0cd2ఞ\u0df1\u0901\u05b9էऊ\u05c8೧ఉ෪\u093f֊ձऍ\u05f8\u0cf9ఏ";
				break;
			case 97:
				obj = "ङ\u05a1դछ׃\u0cf4ఖ\u0de0";
				break;
			case 98:
				obj = "\u0cd9ఴහउևՃषי\u0cddతහ\u0901\u058cՑब\u05c8\u0cd1త\u0dd6ई\u0599Նऽ\u05c5\u0ccaఫහङ\u0590";
				break;
			case 99:
				obj = "ష෬ण\u05b3՛ईר೧గ\u0de4ऴ";
				break;
			case 100:
				obj = "\u093cפ\u0cfbచ\u0df7ऴ\u059eզटנ\u0cf0";
				break;
			case 101:
				obj = "\u05ca೧ఔ\u0df0ऽ\u0591հछףೡఒ\u0df1ऴ";
				break;
			case 102:
				obj = "\u058bչटס\u0cf9ల෦ढ\u05b6";
				break;
			case 103:
				obj = "Րट\u05f9\u0cf4";
				break;
			case 104:
				obj = "\u0dc8न\u05b5ջऌ״\u0cc6ఏ\u0df7न\u05b9չ";
				break;
			case 105:
				obj = "च\u05aaսऊר\u0cc1ఒ෨न\u05b7աऊ";
				break;
			case 106:
				obj = "\u0cc5\u0c3a\u0dd5";
				break;
			case 107:
				obj = "\u0c3f෬\u093e\u05a8ոट״\u0cf0ట\u0dc8न\u05abէटת\u0cf0స෪स\u05b6ՠछ\u05ff";
				break;
			case 108:
				obj = "फן\u0cd9";
				break;
			case 109:
				obj = "ם\u0cf9చ෫न\u05ab";
				break;
			case 110:
				obj = "\u059bջऋףೡ";
				break;
			case 111:
				obj = "Ճगשೡఓ";
				break;
			case 112:
				obj = "\u0dccम\u05b7պ\u093aפ೧";
				break;
			case 113:
				obj = "ए\u05b1ՠऽעೠక\u0df1";
				break;
			case 114:
				obj = "\u0cd1ఞ\u0de3ड\u05b9ՠछ";
				break;
			case 115:
				obj = "\u0c3f\u0dcaञ";
				break;
			case 116:
				obj = "बר\u0cf8ఔ\u0df3न";
				break;
			case 117:
				obj = "\u05c4\u0cfbఝ෪ग\u05b1դ\u094f";
				break;
			case 118:
				obj = "ע\u0557ऑנ\u0ce5ఉ\u0de0\u093e\u05abսऑף\u0cd8ఞ\u0df1थ\u05b7հ";
				break;
			case 119:
				obj = "Ԯभפ\u0cf8ఋ෩न\u0597դछף\u0cd3ఒ෩न\u059cսटס\u0cfaజ";
				break;
			case 120:
				obj = "\u0dbfट\u05bdէऑ\u05f8೧ఘ\u0de0ङ\u05a1դछ\u05fe";
				break;
			case 121:
				obj = "ॷ\u0591շऑף\u0cc0ఏ෬ड\u05ab";
				break;
			case 122:
				obj = "ಯయ\u0de0व\u05ac՛ऐס೬ఽ\u0df7ब\u05b5ձ";
				break;
			case 123:
				obj = "\u0c41\u0dd7न\u05bbսछ\u05fb\u0cf0టහ\u093e\u059dպऋנ";
				break;
			case 124:
				obj = "\u0944ח\u0cf9ఒ෧ऎ\u05b7հछ\u05ee";
				break;
			case 125:
				obj = "\u05b7\u0cd0క෦\u093f\u05a1դऊפ\u0cfaకහड\u05bfջऌפೡఓ෨";
				break;
			case 126:
				obj = "עՑआ\u05f9\u0cf0క\u0df6त\u05b7պऍ\u05c5\u0cf0గ\u0df5न\u05aa";
				break;
			case 127:
				obj = "Ԯतפ\u0ce5\u0c3e\u0df7\u093f\u05b7զ\u093f\u05eeೡఒ෪ण";
				break;
			case 128:
				obj = "\u0dbfऌ";
				break;
			case 129:
				obj = "ॷ\u059cձऍצೡఔ\u0df5झ\u05b7սऐ\u05f9";
				break;
			case 130:
				obj = "ಯస෭ब\u05acչटף\u0cd8ఔ\u0df0\u093e\u05bdՖऋ\u05f9ೡఔ෫\u093e";
				break;
			case 131:
				obj = "\u0c41ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c3e෫\u093b\u05b1զऑף\u0cf8ఞ෫ह";
				break;
			case 132:
				obj = "\u0944ן\u0cfaక\u0de1ऴ\u05b7Ձऊפ\u0cf9ళ\u0de0ड\u05a8ձऌ";
				break;
			case 133:
				obj = "\u05b7\u0cc2ల\u0dcbउ\u0597Ճम\u05c1\u0cd4సව\u0900\u059d՚प";
				break;
			case 134:
				obj = "עՒऌ\u05ec\u0cf8ఞසड\u05b9ճऍ";
				break;
			case 135:
				obj = "Ԯ\u093b\u05ff೧ఔ\u0df7ऎ\u05b7ոऒר\u0cf6ఏ෬ढ\u05b6";
				break;
			case 136:
				obj = "\u0dbfऎ\u05b7պऊר\u0cfbఏ\u0dd1ऴ\u05a8ձऍ";
				break;
			case 137:
				obj = "\u0900\u05b7բछנ\u0cf0క\u0df1\u0902\u05aaՄट\u05ffೡవ\u0de4ठ\u05bd";
				break;
			case 138:
				obj = "\u0cd1ఔ\u0dcbढ\u05ac՛ईר೧ఌ\u0df7त\u05acձ";
				break;
			case 139:
				obj = "జ෩ढ\u05baյऒ\u05b7ಯ\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd5\u093f\u05b7դछ\u05ffೡఒ\u0de0\u093e\u05f6Նछ\u05fe\u0cfaఎ\u0df7म\u05bdէ";
				break;
			case 140:
				obj = "लע\u0cf4టසत\u05b4ՠछ\u05ff೦ఴ෫ड\u05a1";
				break;
			case 141:
				obj = "ת\u0cf9ఔ෧ब\u05b4Ԯ\u0944ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺष\u05c9ದ\u0c55\u0dccउ\u05ebբ\u094c\u05cb\u0cf9చ\u0de2\u093e";
				break;
			case 142:
				obj = "\u059cշऌר\u0cf8ఞ෫ह";
				break;
			case 143:
				obj = "՛व";
				break;
			case 144:
				obj = "\u0ddcन\u05ab՚ऑ\u05ce\u0cf4క෦न\u05b4";
				break;
			case 145:
				obj = "औ\u05bdէ";
				break;
			case 146:
				obj = "ಯగ\u0de0ण\u05bfՠख\u05a1ವ\u0c41\u0de3ड\u05b9ճऍ\u05a1ವ\u0c41\u0df6थ\u05b7գऽנೱ\u0c57ඥॷ\u05a8ՠळפ\u0cfbఫ෪\u093e\u05b1ՠगע\u0cfb\u0c57ඥॷ\u05a8ՠळ\u05ec೭ఫ෪\u093e\u05b1ՠगע\u0cfb\u0c57ඥॷ\u05aaշरע೧ఖ\u0de4डֈջऍפೡఒ෪ण";
				break;
			case 147:
				obj = "జ෩ढ\u05baյऒ\u05b7ಯ\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cc2ల\u0dcbॾתՕम\u05c4\u0cbb\u0c29වऎ\u058c";
				break;
			case 148:
				obj = "ऴפೡన\u0df1\u093f\u05bdյओ";
				break;
			case 149:
				obj = "\u05c1\u0cfaచ\u0de1त\u05b6ճसפ೧ఈ\u0df1ङ\u05b1չछ";
				break;
			case 150:
				obj = "\u058cջकר\u0cfb\u0c3e෩न\u05aeյऊפ\u0cfaక\u0dd1ऴ\u05a8ձस\u05f8\u0cf9గ";
				break;
			case 151:
				obj = "Օचש\u0cfcక\u0de2ऒ\u058bՠट\u05ffೡఞ\u0de1";
				break;
			case 152:
				obj = "\u0dd7न\u05b9հगףೲతහफ\u05acձऌן\u0cf0చ\u0de1ई\u05b6ՠऌ״";
				break;
			case 153:
				obj = "ॷ\u05a0Ըफ़\u05b7೬";
				break;
			case 154:
				obj = "\u0ccdహ\u0df0ह\u05acջऐ\u05bc";
				break;
			case 155:
				obj = "న\u0de4\u093b\u05b1պङג\u0cd7ఞ\u0de3ढ\u05aaձबר\u0cfbచ෨न\u058cձओ\u05fd\u0cd4ఉ෦थ\u05b1բछ";
				break;
			case 156:
				obj = "ङס\u0cfaఙ\u0de4डעԮबע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պपץ೧ఞ\u0de4ऩ\u05b1պङ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐי\u0cfdఉ\u0de0ब\u05bc";
				break;
			case 157:
				obj = "\u05c5\u0cfcజ෭न\u05abՠ";
				break;
			case 158:
				obj = "\u059dլऊ\u05ff\u0cf4ఘ\u0df1त\u05b6ճड\u05cc\u0cf3ఏ\u0de0\u093f\u059dլऊ\u05ff\u0cf4ఘ\u0df1ई\u05b6ՠऌ״";
				break;
			case 159:
				obj = "Հख\u05ff\u0cfaఌ";
				break;
			case 160:
				obj = "ව\u093f\u05aaջऌג\u0cc6చ\u0df3त\u05b6ճ";
				break;
			case 161:
				obj = "ऌ\u05b4գट״೦";
				break;
			case 162:
				obj = "\u0cc6\u0c02෫म";
				break;
			case 163:
				obj = "\u0c41\u0dccण\u05a8աऊ\u05cfೠఝ\u0de3न\u05aaԸफ़\u05b7\u0cdbఞ\u0dfdह\u0591պ\u0952\u05adಯ\u0c3a\u0df3ब\u05b1ոटׯ\u0cf9ఞ\u0dc7ऴ\u05acձऍ\u05c4\u0cfb\u0c57ඥॷ\u058cջऊ\u05ec\u0cf9హ\u0dfcह\u05bdէषףಹ\u0c5b\u0dbf\u0902\u05adՠऎ\u05f8ೡహ\u0df0फ־ձऌ\u05a1ವ\u0c41\u0dcbन\u05a0ՠऱ\u05f8ೡ\u0c57ඥॷ\u0599բटפ\u0cf9చ෧ड\u05bdՖइ\u05f9\u0cf0ఈ\u0dcaस\u05acԸफ़\u05b7\u0cc1ఔ\u0df1ब\u05b4Ֆइ\u05f9\u0cf0ఈ\u0dcaस\u05acԸफ़\u05b7\u0cd8ఞ\u0df6\u093e\u05b9ճछ\u05a1ವ\u0c41ෆढ\u05b5դऌר೦ఈ\u0dc9न\u05aeձऒ\u05a1ವ\u0c41\u0dd2त\u05b6հऑ\u05fa\u0cd7ఒ\u0df1\u093e״Դ\u0944מೡఉ\u0de4ह\u05bdճइ";
				break;
			case 164:
				obj = "लר\u0ce3ఞ෩ॴ";
				break;
			case 165:
				obj = "ך\u0cd8త\u0dd7ए֍Հप\u05c2\u0cdb\u0c3f\u0dcaच\u0596";
				break;
			case 166:
				obj = "\u059eսऒר\u0cdcఘ෪ण";
				break;
			case 167:
				obj = "Ֆट\u05fe\u0cf0ఽ෬ड\u05bdՒऌ\u05ec\u0cf8ఞ";
				break;
			case 168:
				obj = "\u0dc8न\u05bcսट";
				break;
			case 169:
				obj = "\u0901\u05a1զग\u05ee\u0cfcఈ\u0df1ऒ\u058cձआ\u05f9\u0cc2ఉ෬ह\u05bdզ";
				break;
			case 170:
				obj = "\u0cd4హ\u0df7त\u05bfռऊ\u05ce\u0cfaగ෪स\u05aaձच\u05cb\u0cfcఈ෭";
				break;
			case 171:
				obj = "జ෩ढ\u05baյऒ\u05b7ಯ\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dccम\u05b7պ\u093b\u05f5ೡఉ\u0de4म\u05acջऌ\u05a3\u0cc6ఓ\u0de0ड\u05b4ԧ\u094c\u05a3\u0cc6ళ\u0dccङ\u059d\u0559ष\u05c9";
				break;
			case 172:
				obj = "भנ\u0cf4గ෩";
				break;
			case 173:
				obj = "\u05ccೡఏ\u0df7त\u05baաऊר೦";
				break;
			case 174:
				obj = "\u0591\u0559\u093f\u05ca\u0cd0తෆघ֊Շऱן";
				break;
			case 175:
				obj = "Շछס\u0cf0ఘ\u0df1न\u05bc";
				break;
			case 176:
				obj = "\u0de2ड\u05b7նटסಯ\u0c41\u0dc8त\u05bbզऑ\u05fe\u0cfaఝ\u0df1\u0963\u0599Մष\u05a3\u0cd9ఔ\u0de4ऩ\u0594սज\u05ff\u0cf4ఉ\u0dfcई\u05a0Ւऒ\u05ecೲఈ";
				break;
			case 177:
				obj = "\u0901\u0597Օ\u093aג\u0cd9ల\u0dc7ट\u0599Նधג\u0cd4న\u0ddaउ\u0599Հ\u093f\u05cb\u0cdcషව";
				break;
			case 178:
				obj = "\u0cdaఋ\u0de0ण\u0591շऑף";
				break;
			case 179:
				obj = "\u0c41\u0dd5ऌֈԸफ़\u05b7\u0cc5\u0c3aෆॡ\u05f8Ԯ\u093aךಹ\u0c5b\u0dbf\u0903\u05bdլऊט\u0ce5ట\u0de4ह\u05bd\u0557खר\u0cf6ఐඩ७ע\u0558ट\u05feೡమ\u0df5ऩ\u05b9ՠछ\u05ce\u0cfdఞ෦द״Դ\u0944\u05c9\u0cfcఈ\u0df5ड\u05b9խछש\u0cd8ఞ\u0df6\u093e\u05b9ճछ\u05ce\u0cfaఎ෫ह\u05bdզ";
				break;
			case 180:
				obj = "\u0944ט\u0cc7ష";
				break;
			case 181:
				obj = "ת\u0cf9ఔ෧ब\u05b4Ԯ\u0944ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aaԺष\u05ee\u0cfaకශत\u05aaՑऐ\u05f9೧\u0c02";
				break;
			case 182:
				obj = "עՆछ\u05fe\u0cf0ఉ\u0df3न\u05bcԸफ़\u05b7\u0cc1\u0c02\u0df5न״Դ\u0944\u05ce\u0cfaఎ෫ह";
				break;
			case 183:
				obj = "Ԯऩפೱఏ෭ॡ\u05f8Ԯशר\u0cfcజ෭ह״Դ\u0944\u05ce\u0cfaగ෪\u093f\u059bջऋףೡ\u0c57ඥॷ֊ձऍר೧\u0c0d\u0de0ऩ״Դ\u0944ם\u0cf9చ෫न\u05abԸफ़\u05b7\u0cd7ఒ\u0df1ऎ\u05b7աऐ\u05f9ಹ\u0c5b\u0dbfए\u05a1ՠछ\u05fe\u0cdcక\u0dd7न\u05abԸफ़\u05b7\u0cdcఖ\u0de4प\u05bd՛घ\u05eb೦ఞ\u0df1";
				break;
			case 184:
				obj = "\u0dd2त\u05b6հऑ\u05fa೦";
				break;
			case 185:
				obj = "ई\u05b6շऌ״\u0ce5ఏ෬ढ\u05b6";
				break;
			case 186:
				obj = "\u0cd3ఒ෩ह\u05bdզऽע\u0cf9గ\u0de0म\u05acսऑף";
				break;
			case 187:
				obj = "ఽ෬ड\u05bdՁऊפ\u0cf9ఈ";
				break;
			case 188:
				obj = "बר೦ఞ\u0df7\u093b\u05bdհ";
				break;
			case 189:
				obj = "\u05cb\u0cfcగ\u0de0ऋ\u05b7զओ\u05ecೡఈ";
				break;
			case 190:
				obj = "\u059aխऊר೦ల෫ट\u05bdէ";
				break;
			case 191:
				obj = "՝ऍ\u05c1\u0cfcక෮न\u05bc";
				break;
			case 192:
				obj = "\u0dc8न\u05abէटת\u0cf0హ෪व֍ՠगס೦";
				break;
			case 193:
				obj = "ऽ\u05ac\u0559गף\u0cc5ఔ\u0df6त\u05acսऑף";
				break;
			case 194:
				obj = "\u0cc1ఞ\u0dfdह\u059dպझעೱఒ෫प\u05ab";
				break;
			case 195:
				obj = "ఖ෮त\u05bc";
				break;
			case 196:
				obj = "षנ\u0cf4జ\u0de0\u0902־ղऍרೡ";
				break;
			case 197:
				obj = "ך\u0cdcవබॿ\u0599Մष";
				break;
			case 198:
				obj = "\u0591է\u093c\u05ec\u0cf6ఐ\u0de2\u093f\u05b7աऐש";
				break;
			case 199:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժतפ\u0ce5\u0c55\u0ddfत\u05a8Ցऐ\u05f9೧\u0c02\u0dd1त\u05b5ձऍ\u05f9\u0cf4ఖ\u0df5ॷע";
				break;
			case 200:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcಥ\u0c4c\u0ddaग\u05b1դ\u093bףೡఉ\u0dfcङ\u05b1չछ\u05feೡచ෨ऽ";
				break;
			case 201:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963ւսऎ\u05a3\u0cd6ఔ෨ऽ\u05aaձऍ\u05fe\u0cfcఔ෫\u0900\u05bdՠखעೱ\u0c41\u0dbf";
				break;
			case 202:
				obj = "\u0cc7ఞ\u0de4ऩשԤ\u0946ג\u0cd6ఔ෨ऽ\u05aaձऍ\u05fe\u0cfcఔ෫\u0900\u05bdՠखעೱ";
				break;
			case 203:
				obj = "స෪ठ\u05a8զछ\u05fe೦ఒ෪ण\u0594ձईר\u0cf9";
				break;
			case 204:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐ\u05c4\u0cf6ఔ෫ई\u05a0ՠऌ\u05ec\u0cf6ఏ෪\u093f\u05f6Փऌעೠఋ\u0dccम\u05b7պ\u093aפ೧\u0c3e෫ह\u05aaխ\u0944\u05b7";
				break;
			case 205:
				obj = "ך೧ఒ\u0df1नשԥ\u094cג\u0cd2ఉ෪स\u05a8՝झע\u0cfb\u0c3f෬\u093f\u059dպऊ\u05ff೬";
				break;
			case 206:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձब\u05c1\u0cd6ఔ෫फ\u05b1ճऋ\u05ff\u0cf4ఏ෬ढ\u05b6Ժफ\u05ff\u0cf9స෪ण־սङ\u05f8೧చ\u0df1त\u05b7պऽע\u0cfbఏ\u0de4त\u05b6ձऌ\u05b7ಯమ\u0df7ड\u059bջऐ\u05eb\u0cfcజ\u0df0\u093f\u05b9ՠगע\u0cfbస෪ण\u05acյगף\u0cf0ఉ\u0dbfङ\u05aaաछ\u05b7";
				break;
			case 207:
				obj = "՚छ\u05f5ೡల෫";
				break;
			case 208:
				obj = "\u0dd7न\u05b9հ\u094f\u05bcದత\u0dd0\u093f\u05b4\u0557ऑף\u0cf3ఒ\u0de2स\u05aaյऊפ\u0cfaకෆढ\u05b6ՠटפ\u0cfbఞ\u0df7";
				break;
			case 209:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u0597դछף\u0cd3ఒ෩न\u059cսटס\u0cfaజණञ\u05b1չऎס\u0cf0ఴ\u0df5न\u05b6Ւगס\u0cf0\u0c3f෬ब\u05b4ջङ\u05b7ಯ";
				break;
			case 210:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u094f\u05ba\u0ccaన෬ठ\u05a8ոछ\u05c2\u0ce5ఞ෫ऋ\u05b1ոछ\u05c9\u0cfcచ෩ढ\u05bf";
				break;
			case 211:
				obj = "\u0c3f\u0dd2";
				break;
			case 212:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6Հछ\u05f5ೡమ\u0df1त\u05b4է\u0944\u05b7";
				break;
			case 213:
				obj = "ן\u0cf0చ\u0de1ॼשԬडי\u0cf0\u0c03\u0df1घ\u05acսऒ\u05fe";
				break;
			case 214:
				obj = "\u0595սझ\u05ff\u0cfaఈ෪फ\u05acԺ\u093fם\u0cdc\u0c55ෂन\u05ac\u0558ट\u05feೡ\u0c3e\u0df7\u093f\u05b7զबר೦ఎ෩हעԮ";
				break;
			case 215:
				obj = "\u0557ऑס\u0cfaఉෆढ\u05adպऊ";
				break;
			case 216:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcಧ\u0c49\u0ddaऊ\u05bdՠल\u05ec೦ఏව\u093f\u05aaջऌן\u0cf0ఈ\u0df0ड\u05ac";
				break;
			case 217:
				obj = "\u0900\u05b1շऌע೦ఔ\u0de3ह\u05f6Օम\u05c4\u0cbb\u0c29\u0de0\u093e\u05b7աऌ\u05ee\u0cf0య\u0dfcऽ\u05bdէ\u0944\u05b7";
				break;
			case 218:
				obj = "\u0cc7ఞ\u0de4ऩשԦ\u094dג\u0cc7ఞ\u0df6ढ\u05adզझר\u0cc1\u0c02\u0df5न\u05ab";
				break;
			case 219:
				obj = "ఫ෪\u093e\u05b1ՠगע\u0cfb";
				break;
			case 220:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6՝झע\u0cfbమ\u0df1त\u05b4է\u0944\u05b7";
				break;
			case 221:
				obj = "ך೧ఒ\u0df1नשԦ\u0949ג\u0cdcఘ෪ण֍ՠगס೦";
				break;
			case 222:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණट\u05bdէऑ\u05f8೧ఘ\u0de0घ\u05acսऒ\u05feಯ\u0c41";
				break;
			case 223:
				obj = "Նछ\u05ecೱ\u0c4aභॵևՆछ\u05fe\u0cfaఎ\u0df7म\u05bdՁऊפ\u0cf9ఈ";
				break;
			case 224:
				obj = "ෆथ\u05b9ՠळ\u05ec\u0cfbశ\u0de0\u093e\u05abյङר\u0cd7ఔ\u0dfdए\u05adՠऊע\u0cfbఈ";
				break;
			case 225:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u0591շऑף\u0cd0\u0c03\u0df1\u093f\u05b9շऊע೧\u0c55\u0dd6त\u05b5դऒר\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aaԿसע\u0cf9ట\u0de0\u093f\u058cխऎרಯ\u0c41";
				break;
			case 226:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u094d\u05bf\u0ccaఽ෪ड\u05bcձऌי೬ఋ\u0de0";
				break;
			case 227:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dccम\u05b7պ\u093b\u05f5ೡఉ\u0de4म\u05acջऌ\u05a3\u0cc6ఓ\u0de0ड\u05b4ԧ\u094c\u05b7ಯ";
				break;
			case 228:
				obj = "बר\u0cf4టපॾ\u05ebՋभץ\u0cf0గ෩ॾת";
				break;
			case 229:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺष\u05c9ದ\u0c55\u0dccउ\u05ebբ\u094c\u05cb೧చ෨न\u05abԺपר೭ఏස\u093f\u05b9չछ\u05fe\u0cbbయ\u0de0व\u05ac՛ऐס೬ఽ\u0df7ब\u05b5ձ\u0944\u05b7";
				break;
			case 230:
				obj = "֏զग\u05f9\u0cf0\u0c4aබॺևՀछ\u05f5ೡఴ෫ड\u05a1Ւऌ\u05ec\u0cf8ఞ";
				break;
			case 231:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u059c\u0558लטೡఒ෩\u093eעԮ";
				break;
			case 232:
				obj = "\u0dd7न\u05b9հ\u094f־ಭతශ\u0901\u0594Ձऊפ\u0cf9ఈ";
				break;
			case 233:
				obj = "क";
				break;
			case 234:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐ\u05c4\u0cd1\u0c48ණऄ\u059cԧई\u05bf\u0cd3ఉ\u0de4ठ\u05bdէॐ\u05cf\u0cfcక\u0de4\u093f\u05a1Ւऌ\u05ec\u0cf8ఞ\u0df6\u0963\u0599ՠऊ\u05ec\u0cf6ఓ\u0de0ऩֈսझ\u05f9ೠఉ\u0de0ऋ\u05aaյओר\u0cbeఫ෬म\u05acաऌר\u0cc1\u0c02\u0df5न\u05abԮ\u0944";
				break;
			case 235:
				obj = "బ\u0df7त\u05acձ\u094f\u05b9ಧత\u0dd5त\u05bbՠऋ\u05ff\u0cf0య\u0dfcऽ\u05bdէ";
				break;
			case 236:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6՝\u093a־\u0cbbలශॾ\u05aeԦस\u05ff\u0cf4ఖ\u0de0\u093e\u05f6Ֆगף\u0cf4ఉ\u0dfcऋ\u05aaյओר೦\u0c55ෆढ\u05b5չछ\u05ff\u0cf6ఒ\u0de4ड\u059eզटנ\u0cf0\u0c50\u0dd7न\u05bbսछ\u05fb\u0cf0టහ\u093e\u059dպऋנಯ\u0c41";
				break;
			case 237:
				obj = "ן\u0cf0చ\u0de1ॼ\u05ecԧडן\u0cf0ఘ෬न\u05aeձच\u05cc೦\u0c3e෫स\u05b5";
				break;
			case 238:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Վग\u05fd\u0cbbస෪ठ\u05a8զछ\u05fe೦ఒ෪ण\u0595ջचרಯ\u0c41";
				break;
			case 239:
				obj = "ՃऌפೡఞපॹׯՋऽע\u0cf8ఋ\u0df7न\u05abէगע\u0cfbశ෪ऩ\u05bd";
				break;
			case 240:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණग\u05b1դॐ\u05ce\u0cc7సබॿעԮ";
				break;
			case 241:
				obj = "ट\u05bdյच\u05bcಡ\u0c43\u0ddaऎ֊\u0557\u094d\u05bf";
				break;
			case 242:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbడ෬ऽ\u05f6Վऒפ\u0cf7స෪ऩ\u05bdշ\u0944\u05b7";
				break;
			case 243:
				obj = "బ\u0df7त\u05acձ\u094f\u05b8ಧత\u0ddfड\u05b1նऽעೱఞ෦";
				break;
			case 244:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐח\u0cfcఋණई\u05b6շऌ״\u0ce5ఏ෬ढ\u05b6Օऒת\u0cfaఉ෬ह\u05b0չ\u0944\u05b7";
				break;
			case 245:
				obj = "ן\u0cf0చ\u0de1ॼ\u05edԧड\u05c8\u0cfbఘ\u0df7ऴ\u05a8ՠगע\u0cfb\u0c3a෩प\u05b7զग\u05f9\u0cfdఖ";
				break;
			case 246:
				obj = "\u059bռट\u05f9\u0cf8చ෫ङ\u05b0զछ\u05ecೱ";
				break;
			case 247:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժतפ\u0ce5\u0c55\u0ddfत\u05a8Ԣ\u094a\u05c2\u0ce5ఏ෬ढ\u05b6Ԯ\u0944";
				break;
			case 248:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcಠ\u0c4c\u0ddaग\u05b1դ\u0948\u05b9\u0cdaఋ\u0df1त\u05b7պ";
				break;
			case 249:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963֍ՠगס೦\u0c55\u0dd0ट\u0594Ձऊפ\u0cf9ఈ\u0dbfॷ";
				break;
			case 250:
				obj = "\u0cc7ఞ\u0de4ऩשԡ\u0946ג\u0cc0\u0c29\u0dc9घ\u05acսऒ\u05fe";
				break;
			case 251:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55වव\u05acձऐ\u05fe\u0cfcఔ෫\u093e\u0590ձऒ\u05fd\u0cf0ఉ\u0dbfॷ";
				break;
			case 252:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼ\u05eeԦड\u05c8೭ఏ\u0de0ण\u05abսऑף೦ళ\u0de0ड\u05a8ձऌ";
				break;
			case 253:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aaԺफ\u05fe\u0cf0ఉබॿעԮ";
				break;
			case 254:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Վग\u05fd\u0cbbడ෬ऽ\u059dզऌע೧\u0c3a෦ह\u05b1ջऐ\u05b7ಯ";
				break;
			case 255:
				obj = "Նछ\u05ecೱ\u0c4aඳॾևՎग\u05fd\u0cd0ఉ\u0df7ढ\u05aaՕझ\u05f9\u0cfcఔ෫";
				break;
			case 256:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbడ\u0dccझ֍ՠगס೦\u0c41\u0dbf";
				break;
			case 257:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963֍ՠगס೦\u0c55\u0dd6थ\u05bdոऒטೡఒ෩\u093eעԮ";
				break;
			case 258:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbశ෪स\u05abձऩ\u05ecೡఘ෭न\u05aaԺ\u093aר೦ఐ\u0df1ढ\u05a8Մऑפ\u0cfbఏ\u0dbfॷ";
				break;
			case 259:
				obj = "బ\u0df7त\u05acձ\u094f\u05bbಢతශन\u05abտऊע\u0ce5ఫ෪त\u05b6ՠ";
				break;
			case 260:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6՝\u093a־\u0cbbఽ\u0df7ब\u05b5ձ\u0944\u05b7";
				break;
			case 261:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cd8ఔ\u0df0\u093e\u05bdՃट\u05f9\u0cf6ఓ\u0de0\u093f\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u0595ջऋ\u05fe\u0cf0హ\u0df0ह\u05acջऐ\u05feಯ\u0c41";
				break;
			case 262:
				obj = "֊ձटשತ\u0c4dලऒ\u059bռट\u05f9\u0cf8చ෫\u0900\u05b7աऍר\u0cd7ఎ\u0df1ह\u05b7պऍ";
				break;
			case 263:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժष\u05ee\u0cfaకවव\u05acզट\u05eeೡఔ\u0df7\u0963\u058bռछס\u0cf9\u0c48භ०\u058b՜षי\u0cd0శ\u0dccउעԮ";
				break;
			case 264:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbభ\u0de0\u093f\u05abսऑף\u0cc0ఏ෬ड\u05abԮ\u0944";
				break;
			case 265:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u059bռट\u05f9\u0cf8చ෫ई\u05b6բग\u05ff\u0cfaక෨न\u05b6ՠ\u0944\u05b7";
				break;
			case 266:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u0949\u05bf\u0ccaస෭ब\u05acչटף\u0cd0క\u0df3त\u05aaջऐנ\u0cf0క\u0df1";
				break;
			case 267:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cdc\u0c3fබ\u0963\u0591Ր\u094d\u05fbಧఽ෩ब\u05bfէ\u0944\u05b7";
				break;
			case 268:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6Շछ\u05eeೠఉ෬ह\u05a1Ձऊפ\u0cf9ఈ\u0dbfॷ";
				break;
			case 269:
				obj = "ן\u0cf0చ\u0de1ॼׯԧडמ\u0cf0ఘ\u0df0\u093f\u05b1ՠइטೡఒ෩\u093e";
				break;
			case 270:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Վग\u05fd\u0cbbఽ෩स\u05abռप״\u0ce5ఞ\u0dbfॷ";
				break;
			case 271:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0591Ր\u094d\u05a3\u0cd3ఉ\u0de4ठ\u05bdՒऒ\u05ecೲఈ\u0dbfॷ";
				break;
			case 272:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbb\u0c29෪ण\u05bcխऑטೡఒ෩अ\u05bdոऎר೧\u0c41\u0dbf";
				break;
			case 273:
				obj = "च\u05aaսऊרತ\u0c4c\u0db2ऒ֊ջऐש೬ఔ\u0dd0ह\u05b1ոशר\u0cf9ఋ\u0de0\u093f";
				break;
			case 274:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐך\u0cdcవබॿ\u0599Մष\u05a6\u0cc2ల\u0dcbउ\u0597Ճम\u05c1\u0cd4సව\u0900\u059d՚प\u05b7ಯ";
				break;
			case 275:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cd1చ\u0df1न֍ՠगס೦\u0c41\u0dbf";
				break;
			case 276:
				obj = "बר\u0cf4టපॺנՋ\u093a\u05ecೡఞ\u0dd0ह\u05b1ոऍ";
				break;
			case 277:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cd7ఉ෪\u093a\u05abձऌ\u05c8೭ఏ\u0de0ण\u05abսऑף೦\u0c55\u0dc7\u093f\u05b7գऍר೧\u0c3e\u0dfdह\u05bdպऍפ\u0cfaక\u0df6ऄ\u05b6էऊ\u05ec\u0cf9గ\u0de0\u093fעԮ";
				break;
			case 278:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐי\u0cf0\u0c03\u0df1ई\u05b6շऑש\u0cfcక\u0de2\u093eעԮ";
				break;
			case 279:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0591Ր\u094d\u05a3\u0cdc\u0c3fබ\u093bתՒऌ\u05ec\u0cf8ఞ\u0df6\u0963\u0594յऐתೠచ\u0de2नעԮ";
				break;
			case 280:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbబ\u0dcc\u0903\u05ebԦ\u093fם\u0cdc\u0c50\u0dd7ई\u059bՀ\u0944\u05b7";
				break;
			case 281:
				obj = "च\u05aaսऊרತ\u0c43භऒ֊Ցऽי";
				break;
			case 282:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐ\u05c4\u0cd1\u0c48ණऄ\u059cԧई\u05bf\u0cd3ఉ\u0de4ठ\u05bdէॐ\u05cc೧ఉ\u0de4ऴ\u059eզटנ\u0cf0ఈණञ\u05a1պझץ೧ఔ෫त\u05abձचי\u0cf0\u0c03\u0df1०\u059bջऐ\u05f9\u0cf0క\u0df1ङ\u05a1դछ\u05feಯ\u0c41";
				break;
			case 283:
				obj = "\u0c29\u0de0ब\u05bcԥ\u0946־\u0ccaబ\u0dcc\u0903\u059c՛ऩם\u0cd9\u0c3aෆई\u0595Ցरי";
				break;
			case 284:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼנԣडי\u0cf0\u0c03\u0df1ई\u05b6շऑש\u0cfcక\u0de2\u093e";
				break;
			case 285:
				obj = "ן\u0cf0చ\u0de1ॼנԬड\u05cb೧చ෨न\u059eոटת೦";
				break;
			case 286:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05cb\u0cfcగ\u0df1न\u05aaՀइ\u05fd\u0cf0ఈ\u0dbfॷ";
				break;
			case 287:
				obj = "ՃऌפೡఞපॴתՋसפ\u0cf9ఏ\u0de0\u093f\u058cխऎר೦";
				break;
			case 288:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbన\u0df1\u093f\u05bdյओטೡఒ෩\u093eעԮ";
				break;
			case 289:
				obj = "ट\u05bdյच\u05bcಬ\u0c48\u0ddaञ\u05acզछ\u05ec\u0cf8మ\u0df1त\u05b4է";
				break;
			case 290:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐ\u05c4\u0cd1\u0c48ණई\u05aaզऑ\u05ff\u0cd6ఔ෩ड\u05bdշऊפ\u0cfaక\u0dbfॷ";
				break;
			case 291:
				obj = "బ\u0df7त\u05acձ\u094f\u05b4ಢతව\u093f\u05aaջऌ\u05ce\u0cfaగ෩न\u05bbՠगע\u0cfb";
				break;
			case 292:
				obj = "बר\u0cf4టපॴנՋऽע\u0cfbఏ\u0de0ण\u05acՀइ\u05fd\u0cf0ఈ";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴃ = (char[])(object)Ⴄ.Ⴃ;
			int num2 = ⴃ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴃ[(num3 + Ⴓ) % num2]);
			}
			result = new string(array);
			Ⴃ[num] = result;
			return result;
		}

		static Ⴄ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴄ.Ⴃ = (string[])(object)array;
			Ⴃ = new string[293];
		}
	}
	internal sealed class Ⴍ
	{
		private static readonly char[] Ⴃ;

		private static readonly string[] Ⴃ;

		internal static string ႳႭႨ(int Ⴗ)
		{
			int num = Ⴗ ^ 0x33796AA2;
			string result;
			if ((result = Ⴃ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "\u0dd6थ\u05bdոऒטೡఒ෩\u093e";
				break;
			case 1:
				obj = "";
				break;
			case 2:
				obj = "\u0ccfఒ\u0df5ई\u05b6ՠऌ״\u0cc1ఒ෨न\u05abՠटנ\u0ce5";
				break;
			case 3:
				obj = "ల෦ढ\u05b6Րग\u05ff\u0cd0క\u0df1\u093f\u05a1";
				break;
			case 4:
				obj = "ह\u05ff\u0cfaఎ\u0df5ऄ\u05bbջऐ\u05c9\u0cfcఉවण\u05acզइ";
				break;
			case 5:
				obj = "ט೧గෆढ\u05b6ղगתೠఉ\u0de4ह\u05b1ջऐ";
				break;
			case 6:
				obj = "\u058bսओ\u05fd\u0cf9ఞ\u0dcaऽ\u05bdպसפ\u0cf9ఞශत\u05b9ոऑת";
				break;
			case 7:
				obj = "՚ऋנ\u0cf0ఉ෬म֍ՠगס೦";
				break;
			case 8:
				obj = "ෂन\u05ac\u0558ट\u05feೡ\u0c3e\u0df7\u093f\u05b7զबר೦ఎ෩ह";
				break;
			case 9:
				obj = "\u0901\u05b7յच\u05c4\u0cf8చ\u0de2न\u058cխऎר೦";
				break;
			case 10:
				obj = "\u0cdcఘ෪ण֍ՠगס೦";
				break;
			case 11:
				obj = "ఽ෪ड\u05bcձऌי೬ఋ\u0de0";
				break;
			case 12:
				obj = "षי\u0cd0శ\u0dccउ\u0594՝भי";
				break;
			case 13:
				obj = "י\u0cf0\u0c03\u0df1\u0902\u05b6ոइ\u05cb೧చ෨न";
				break;
			case 14:
				obj = "\u059cձईפ\u0cf6ఞෆड\u05b9էऍ\u05ce\u0cfaక\u0df1\u093f\u05b7ոऒר೧";
				break;
			case 15:
				obj = "Մग\u05eeೡఎ\u0df7न\u058cխऎר೦";
				break;
			case 16:
				obj = "ෆढ\u05b5դऌר೦ఈ෬ढ\u05b6\u0558छ\u05fb\u0cf0గ";
				break;
			case 17:
				obj = "ऎ\u05b7չऎ\u05ff\u0cf0ఈ\u0df6त\u05b7պळעೱఞ";
				break;
			case 18:
				obj = "\u0cc3ఞ\u0df7\u093e\u05b1ջऐטೡఒ෩\u093e";
				break;
			case 19:
				obj = "డ෩त\u05ba\u0557ऑש\u0cf0ఘ";
				break;
			case 20:
				obj = "तפ\u0ce5\u0c4dන\u0902\u05a8ՠगע\u0cfb";
				break;
			case 21:
				obj = "\u05c1\u0cf4క\u0de2स\u05b9ճछ";
				break;
			case 22:
				obj = "\u059dլऊר\u0cfbఈ෬ढ\u05b6էशר\u0cf9ఋ\u0de0\u093f";
				break;
			case 23:
				obj = "՝झע\u0cfbఽ෩ब\u05bfէ";
				break;
			case 24:
				obj = "ශन\u05abտऊע\u0ce5ఫ෪त\u05b6ՠ";
				break;
			case 25:
				obj = "ऎ\u05b0յऊנ\u0cf4కවण\u05aeսऌע\u0cfbఖ\u0de0ण\u05ac";
				break;
			case 26:
				obj = "\u0cd0గ\u0de0\u093b\u05b9ՠगע\u0cfbళ\u0de0ड\u05a8ձऌ";
				break;
			case 27:
				obj = "య෪द\u05bdպ\u093bס\u0cf0\u0c0d\u0de4ह\u05b1ջऐי೬ఋ\u0de0";
				break;
			case 28:
				obj = "बע\u0cfbట\u0dfcढ֍ՠगס\u0cddఞ෩ऽ\u05bdզ";
				break;
			case 29:
				obj = "ח\u0cfcఋවण\u05acզइמ\u0cfaఎ\u0df7म\u05bd";
				break;
			case 30:
				obj = "֊Ցऽי";
				break;
			case 31:
				obj = "\u0559छ\u05fe೦చ\u0de2न\u059aջआטೡఒ෩\u093e";
				break;
			case 32:
				obj = "ෆथ\u05b9ՠळ\u05ec\u0cfbశ\u0de0\u093e\u05abյङר\u0cd7ఔ\u0dfdए\u05adՠऊע\u0cfbఈ";
				break;
			case 33:
				obj = "ङ\u05bdլऊ\u05c8\u0cfbఘ෪ऩ\u05b1պङ\u05fe";
				break;
			case 34:
				obj = "\u0cdcక෦\u093f\u05bdչछףೡ\u0c3f\u0de0म\u05aaձओר\u0cfbఏ";
				break;
			case 35:
				obj = "ఽ෬ड\u05acձऌי೬ఋ\u0de0\u093e";
				break;
			case 36:
				obj = "बר೦ఔ\u0df0\u093f\u05bbձऍ";
				break;
			case 37:
				obj = "\u05c8೭ఏ\u0df7ब\u05bbՠ\u093b\u05f5\u0cfcఈ\u0df1त\u05b6ճसפ\u0cf9ఞහम\u05acսऑף";
				break;
			case 38:
				obj = "\u059dզऌע೧స෪ड\u05b4ձझ\u05f9\u0cfcఔ෫";
				break;
			case 39:
				obj = "Շगףೲగ\u0de0झ\u05aaջङ\u05ff\u0cf4ఖ\u0dccण\u05abՠटף\u0cf6ఞ\u0dd2त\u05b6";
				break;
			case 40:
				obj = "\u0dc8ढ\u05aeձओר\u0cfbఏ\u0dca\u093fֈյऌ\u05f9\u0cdbచ෨न";
				break;
			case 41:
				obj = "\u0902\u05aeձऌ\u05fa೧ఒ\u0df1न\u058bսऒר\u0cfbఏ෩ऴ";
				break;
			case 42:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbడ෬ऽ\u05f6Ցआ\u05f9೧చ෦ह\u059dլग\u05feೡఒ෫प\u059eսऒר\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 43:
				obj = "న\u0df1\u093f\u05bdյओטೡఒ෩\u093e";
				break;
			case 44:
				obj = "फף೦\u0c02෫म\u05b0զऑף\u0cfcఈ\u0de4ह\u05b1ջऐ";
				break;
			case 45:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺष\u05c9ದ\u0c55\u0dccउ\u05ebբ\u094c\u05cb\u0cf9చ\u0de2\u093e";
				break;
			case 46:
				obj = "\u0595սऒס\u0cfcఈ\u0de0म\u05b7պच\u05fe";
				break;
			case 47:
				obj = "Ւगס\u0cf0\u0c3a෩ह\u05bdզम\u05ff\u0cf0ఈ\u0de0\u093f\u05aeյऊפ\u0cfaక";
				break;
			case 48:
				obj = "හ\u093e\u05bbսग";
				break;
			case 49:
				obj = "ऎ\u05b7չऎ\u05ff\u0cf0ఈ\u0df6त\u05b7պ";
				break;
			case 50:
				obj = "\u0cdaర";
				break;
			case 51:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cdc\u0c3fබ\u0963\u059eզटנ\u0cf0ఽ෩ब\u05bfէ";
				break;
			case 52:
				obj = "धר೦";
				break;
			case 53:
				obj = "ן\u0cf0ఏ\u0df7ऴ\u059bյऐ\u05ee\u0cf0గ";
				break;
			case 54:
				obj = "\u05b4ձऐתೡఓ";
				break;
			case 55:
				obj = "նऑ\u05f9ೡఔ෨";
				break;
			case 56:
				obj = "\u0ddc";
				break;
			case 57:
				obj = "\u0903\u05b7պछ";
				break;
			case 58:
				obj = "\u0cd9ఔ\u0de4ऩ\u05b1պङ";
				break;
			case 59:
				obj = "ఱ෬ह\u058bՠऌר\u0cf4ఖ";
				break;
			case 60:
				obj = "लר\u0cf3ఏ";
				break;
			case 61:
				obj = "ן\u0cf0చ\u0de1त\u05b6ճडמೡచ\u0df7ह\u05bdհ";
				break;
			case 62:
				obj = "\u058bյईפ\u0cfbజ\u0ddaञ\u05acյऌ\u05f9\u0cf0ట";
				break;
			case 63:
				obj = "\u0559गשೱగ\u0de0";
				break;
			case 64:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණ\u0900\u05b7աऍר\u0cc2చ\u0df1म\u05b0ձऌ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ׀\u0cfaఎ\u0df6न\u059aաऊ\u05f9\u0cfaక\u0df6";
				break;
			case 65:
				obj = "ञ\u05b9բगףೲతහफ\u05acձऌ\u05ce\u0cfaఖ\u0df5त\u05b4ձभר\u0cf9ఝවव\u05acզट\u05eeೡఔ\u0df7";
				break;
			case 66:
				obj = "\u0cd0\u0c03\u0df1\u093f\u05b9շऊפ\u0cfbజ\u0ddaई\u05b6ՠऌ״\u0cd7\u0c02\u0df1न\u05abՃऌפೡఏ\u0de0ण";
				break;
			case 67:
				obj = "\u0c02";
				break;
			case 68:
				obj = "\u093cר\u0cf9ఔ\u0df2\u0903\u05b7զओ\u05ec\u0cf9";
				break;
			case 69:
				obj = "\u05c1\u0cfcక෮\u0902\u05aeձऌס\u0cf4\u0c02";
				break;
			case 70:
				obj = "\u058cռऌע\u0ce2";
				break;
			case 71:
				obj = "Շखר\u0cf9గ\u0dccम\u05b7պभפ೯ఞ";
				break;
			case 72:
				obj = "හ\u093e\u0596ձझר೦ఈ\u0de4\u093f\u05a1";
				break;
			case 73:
				obj = "ऋ\u05b1պग\u05fe\u0cfd";
				break;
			case 74:
				obj = "\u0cc0క\u0df6स\u05a8դऑ\u05ffೡఞ\u0de1";
				break;
			case 75:
				obj = "వ\u0de0व\u05ac՝ऐ";
				break;
			case 76:
				obj = "\u093cר೦ఏ\u0dd6ऽ\u05bdձच";
				break;
			case 77:
				obj = "\u05c9\u0cf0ఝ\u0de4स\u05b4ՠ";
				break;
			case 78:
				obj = "\u0599բटפ\u0cf9చ෧ड\u05bdՖइ\u05f9\u0cf0ఈ\u0dcaस\u05ac";
				break;
			case 79:
				obj = "Ւगס\u0cf0మ\u0df1त\u05b4է";
				break;
			case 80:
				obj = "ෆढ\u05b5դऌר೦ఈ";
				break;
			case 81:
				obj = "च\u0595Ջब\u05cf\u0cc0య\u0dd1\u0902\u0596Րऱך\u0cdb";
				break;
			case 82:
				obj = "\u0cd6ఔ෨ऽ\u05aaձऍ\u05fe\u0cf0టහस\u05bcսऑ";
				break;
			case 83:
				obj = "శ\u0df0\u093e\u05b1շऱף\u0cdaఏ෭न\u05aa\u0559छש\u0cfcచ";
				break;
			case 84:
				obj = "ऽע\u0ce3ఞ\u0df7ऒ\u059eզऑףೡ";
				break;
			case 85:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺष\u05c9ದ\u0c55\u0dccउ\u05ebբ\u094c\u05cb೧చ෨न\u05abԺ\u093cפ\u0cfbచ\u0df7ऴ\u059eզटנ\u0cf0ఈණऎ\u05b7չओר೧ఘ෬ब\u05b4Ւऌ\u05ec\u0cf8ఞණट\u05bdշगר\u0ce3ఞ\u0de1ऌ\u05abՑऐ\u05f8\u0cf8";
				break;
			case 86:
				obj = "\u0599զऊפ೦ఏ";
				break;
			case 87:
				obj = "Նछ\u05ee\u0cfaఉ\u0de1त\u05b6ճलע\u0cf6చ\u0df1त\u05b7պ";
				break;
			case 88:
				obj = "\u0dccड\u05b4աऍ\u05f9೧చ\u0df1त\u05b7պ";
				break;
			case 89:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963֍ՠगס೦\u0c55\u0dccउ\u05ebԺष\u05c9ದ\u0c0dභऋ\u05aaյओר೦\u0c55\u0dc7त\u05b6յऌ״\u0cd3ఉ\u0de4ठ\u05bdէॐ\u05ccೡఏ\u0de4म\u05b0ձचם\u0cfcఘ\u0df1स\u05aaձस\u05ff\u0cf4ఖ\u0de0\u0963ֈսझ\u05f9ೠఉ\u0de0ङ\u05a1դछ\u05fe";
				break;
			case 90:
				obj = "\u0cf6ఙ";
				break;
			case 91:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dccम\u05b7պ\u093b\u05f5ೡఉ\u0de4म\u05acջऌ\u05a3\u0cc6ఒ෨ऽ\u05b4ձष\u05ee\u0cfaకවव\u05acզट\u05eeೡఔ\u0df7\u0963\u059eջऒש\u0cf0ఉ\u0dd1ऴ\u05a8ձ";
				break;
			case 92:
				obj = "ष׀\u0cd4\u0c3cවऒ\u059bՁबמ\u0cda\u0c29";
				break;
			case 93:
				obj = "\u05ccೡఏ\u0df7त\u05baաऊר೦";
				break;
			case 94:
				obj = "\u058bձऒר\u0cf6ఏ\u0de0ऩ";
				break;
			case 95:
				obj = "Նपג\u0cd2\u0c29\u0dcaघֈՋष\u05ce\u0cdaవ";
				break;
			case 96:
				obj = "\u0dccम\u05b7պ";
				break;
			case 97:
				obj = "उ\u0597՚पג\u0cc7\u0c3e\u0dd6\u0902\u0594Ղ\u093bג\u0cd1ష\u0dc9ऒ֊Ցस\u05c8\u0cc7\u0c3e\u0dcbऎ\u059dՇ";
				break;
			case 98:
				obj = "\u0cd8ఒ෦\u093f\u05b7էऑ\u05ebೡ\u0c55හझ\u0591Ժलע\u0cf4ట\u0dc9त\u05baզट\u05ff೬\u0c3e\u0dfdऋ\u05b4յङ\u05fe";
				break;
			case 99:
				obj = "\u0c3e\u0dfdन\u058cխऎר";
				break;
			case 100:
				obj = "ऱ\u05fd\u0cf0క\u0dccम\u05b7պ";
				break;
			case 101:
				obj = "י\u0cf4జහड\u05acձऌם೧ఞ\u0df6न\u05aaբट\u05f9\u0cfcఔ෫";
				break;
			case 102:
				obj = "\u059bռट\u05f9\u0cf8చ෫ऎ\u05bdպऊ\u05ff\u0cf4గෆढ\u05b6ղगתೠఉ\u0de4ह\u05b1ջऐ";
				break;
			case 103:
				obj = "Րऩ";
				break;
			case 104:
				obj = "\u0dd0\u093f\u05b4";
				break;
			case 105:
				obj = "ऎ\u05b7ոऑ\u05ff\u0cd6ఔ\u0df0ण\u05ac";
				break;
			case 106:
				obj = "\u0cc7ఞ\u0df6न\u05aaբछש";
				break;
			case 107:
				obj = "లශ";
				break;
			case 108:
				obj = "प״\u0ce5ఞ";
				break;
			case 109:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0ccfఒ\u0df5\u0963\u059bջओ\u05fd೧ఞ\u0df6\u093e\u05b1ջऐ׀\u0cf0ఏ෭ढ\u05bc";
				break;
			case 110:
				obj = "\u0591պघע\u0ccfఒ\u0df5ॼ";
				break;
			case 111:
				obj = "Նछ\u05fe\u0cf0ఏ";
				break;
			case 112:
				obj = "\u0dd2त\u05b6հऑ\u05fa೦";
				break;
			case 113:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963ւսऎ\u05a3\u0ccfఒ\u0df5ई\u05b6ՠऌ״\u0cc1ఒ෨न\u05abՠटנ\u0ce5";
				break;
			case 114:
				obj = "ಯడ෬ऽ\u059dպऊ\u05ff೬య෬ठ\u05bdէऊ\u05ec\u0cf8ఋ";
				break;
			case 115:
				obj = "\u0c41ෂ\u093f\u05b7աऎ\u05c4\u0cf6ఔ෫उ\u05b1զ\u093bףೡఉ\u0dfc";
				break;
			case 116:
				obj = "\u0944\u05ce\u0cfdచ\u0df1ठ\u05b9պऽר\u0cfbఏ\u0df7ब\u05b4\u0557ऑף\u0cf3ఒ\u0de2स\u05aaյऊפ\u0cfaక";
				break;
			case 117:
				obj = "\u05b7\u0cd2ఞ\u0df1\u0901\u05b9էऊ\u05c8೧ఉ෪\u093f֊ձऍ\u05f8\u0cf9ఏ";
				break;
			case 118:
				obj = "עՒऑסೱఞ\u0df7ङ\u05a1դछ";
				break;
			case 119:
				obj = "Ԯफ\u05fe\u0cf0ఉබॿ";
				break;
			case 120:
				obj = "\u0dbfए\u05b9էछ\u05cb\u0cfcగ\u0de0ऋ\u05aaյओר";
				break;
			case 121:
				obj = "ॷֈսझ\u05f9ೠఉ\u0de0ङ\u05a1դछ\u05fe";
				break;
			case 122:
				obj = "ಯస෪ठ\u05a8զछ\u05fe೦ఒ෪ण\u0595ջचר";
				break;
			case 123:
				obj = "\u0c41සत\u05b4ձफ\u05f9\u0cfcగ\u0df6";
				break;
			case 124:
				obj = "\u0944\u05c9೬క\u0de4ठ\u05b1շ\u093f\u05eeೡఒ\u0df3ब\u05acջऌ";
				break;
			case 125:
				obj = "\u05b7\u0ccfఒ\u0df5ॻ\u05ec՛ऎ\u05f9\u0cfcఔ෫";
				break;
			case 126:
				obj = "עՐछ\u05eb\u0cf4ఎ෩ह\u0599աचפ\u0cfa\u0c3f\u0de0\u093b\u05b1շछ\u05ce\u0cfaక\u0df1\u093f\u05b7ոऒר೧";
				break;
			case 127:
				obj = "Ԯऽץ\u0cf4ఏ෨ब\u05b6Հख\u05ff\u0cf0చ\u0de1";
				break;
			case 128:
				obj = "\u0dbfऋ\u05b1ոऊר೧స෪ड\u05b4ձझ\u05f9\u0cfcఔ෫";
				break;
			case 129:
				obj = "ॷ֊ձङפ೦ఏ\u0df7ऴ\u0599շझר೦ఈ෪\u093f";
				break;
			case 130:
				obj = "ಯబ\u0dcc\u0903\u05ebԦ\u093fם\u0cdc";
				break;
			case 131:
				obj = "\u0c41\u0dd7ई\u059bՀ";
				break;
			case 132:
				obj = "\u0944י\u0cf0\u0c03\u0df1ई\u05b6շऑש\u0cfcక\u0de2\u093e";
				break;
			case 133:
				obj = "\u05b7\u0cd3ఒ෩ह\u05bdզप״\u0ce5ఞ\u0df6";
				break;
			case 134:
				obj = "ע՝\u093a־\u0cd0ఉ\u0df7ढ\u05aa";
				break;
			case 135:
				obj = "՛ऊץ\u0cf0ఉ";
				break;
			case 136:
				obj = "ෆथ\u05b7զच";
				break;
			case 137:
				obj = "ॷ\u059eզटנ\u0cf0లශ";
				break;
			case 138:
				obj = "\u0cd0\u0c03\u0df1न\u05b6հछש\u0cddఞ\u0de4ऩ\u05bdզ";
				break;
			case 139:
				obj = "జ෩ढ\u05baյऒ\u05b7ಯ\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cdc\u0c3fබ\u0963\u059eզटנ\u0cf0ఽ෩ब\u05bfէ";
				break;
			case 140:
				obj = "\u093fׯ\u0cfaఉ\u0df1";
				break;
			case 141:
				obj = "ת\u0cf9ఔ෧ब\u05b4Ԯ\u0944ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺऩ\u05c4\u0cdb\u0c48භऌֈ՝ॐך\u0cdcవශ\u0902֏Մल\u05cc\u0cd6\u0c3e\u0dc8ई\u0596Հ";
				break;
			case 142:
				obj = "עոछףೲఏ෭ॡ\u05f8Ԯघס\u0cf4జ\u0df6ॡ\u05f8Ԯऍץ\u0cfaఌෆठ\u05bcԸफ़\u05b7\u0ce5ఏ\u0dc8त\u05b6Մऑ\u05fe\u0cfcఏ෬ढ\u05b6Ըफ़\u05b7\u0ce5ఏ\u0dc8ब\u05a0Մऑ\u05fe\u0cfcఏ෬ढ\u05b6Ըफ़\u05b7೧ఘ\u0dcbढ\u05aaչटס\u0cc5ఔ\u0df6त\u05acսऑף";
				break;
			case 143:
				obj = "Ԯद\u05a1ವ\u0c41\u0ddc";
				break;
			case 144:
				obj = "\u0dd6ह\u05aaձटנ";
				break;
			case 145:
				obj = "उ\u05b1էटׯ\u0cf9ఞ\u0de1";
				break;
			case 146:
				obj = "ೲగ෪य\u05b9ո\u0944\u05b7\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐ\u05c4\u0cd1\u0c48ණऄ\u059cԧई\u05bf\u0cd3ఉ\u0de4ठ\u05bdէॐ\u05cb\u0cfcగ\u0df1न\u05aa\u0557ऑס\u0cf9ఞ෦ह\u05b1ջऐ";
				break;
			case 147:
				obj = "\u0c3a\u0de1ऩ\u05b1պङג\u0cd6ఔ෨ऽ\u05b4ձऊרೱ";
				break;
			case 148:
				obj = "बר\u0cf4ట෬ण\u05bfՋ\u093f\u05ff\u0cf6ఓ෬\u093b\u05bdՖइ\u05f9\u0cf0ఈ\u0dd7न\u05b9հ";
				break;
			case 149:
				obj = "\u05b7೭\u0c57ඥॷ\u05a1";
				break;
			case 150:
				obj = "\u058bյईפ\u0cfbజ\u0ddaऎ\u05b7չऎס\u0cf0ఏ\u0de0ऩ";
				break;
			case 151:
				obj = "՚ऑ\u05ff\u0cf8చ෩";
				break;
			case 152:
				obj = "\u0dd6ब\u05aeսऐת\u0cca\u0c3e෫ह\u05aaխ\u093c״ೡఞ\u0df6ट\u05bdյच";
				break;
			case 153:
				obj = "ई\u05a0ՠऌ\u05ec\u0cf6ఏ෬ण\u05bfՋ\u093cר\u0cf3ఔ\u0df7न\u059dլऊ\u05ff\u0cf4ఘ\u0df1ऌ\u05b4ո";
				break;
			case 154:
				obj = "\u0cdcక\u0df3ढ\u05b3ձ\u093b\u05ff೧ఔ\u0df7ई\u05aeձऐ\u05f9";
				break;
			case 155:
				obj = "\u0c41\u0dc9ब\u05b6ճऋ\u05ecೲఞ\u0dccउ";
				break;
			case 156:
				obj = "रר\u0ce3ఞ\u0df7";
				break;
			case 157:
				obj = "\u05c1\u0cf0\u0c0d\u0de0ड\u05ed";
				break;
			case 158:
				obj = "\u0594ձईר\u0cf9\u0c43";
				break;
			case 159:
				obj = "Ճळג\u0cd9హ\u0dd0ङ\u058c՛रט\u0cc5";
				break;
			case 160:
				obj = "\u0dd6ह\u05b9պच\u05ec೧టෆऩ\u0599ոज\u05f8\u0cf8";
				break;
			case 161:
				obj = "ऌ\u05ab՚ऑ\u05f9\u0cf0న෭न\u05bdՠषף\u0cd7ఔ෪द";
				break;
			case 162:
				obj = "\u0cd7చ෫ऩ";
				break;
			case 163:
				obj = "\u0c3f\u0df0\u093f\u05b1պङם\u0cf0ఉ\u0de3ढ\u05aaչटף\u0cf6ఞ";
				break;
			case 164:
				obj = "म\u05f8\u0cf7గ෬\u093e\u05b0ձऌ\u05c1\u0cfaజ෪";
				break;
			case 165:
				obj = "ת\u0cf9ఔ෧ब\u05b4Ԯ\u0944ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aaԺभץ\u0cf0గ෩ॾתԺषי\u0cd0శ\u0dccउ\u0594՝भי";
				break;
			case 166:
				obj = "עշज\u05a1ವ\u0c41\u0de4य\u0591Ր";
				break;
			case 167:
				obj = "\u0557ऒע೦ఞ\u0de1";
				break;
			case 168:
				obj = "\u0dc7त\u05b6յऌ״";
				break;
			case 169:
				obj = "प\u05b4ջज\u05ec\u0cf9\u0c41\u0dbf\u0900\u05b1շऌע೦ఔ\u0de3ह\u05f6Օम\u05c4\u0cbbన\u0dcdऊ\u05bdՠसפ\u0cf9ఞ\u0dccण־ջसס\u0cf4జ\u0df6";
				break;
			case 170:
				obj = "\u0cdcశහऊ\u059dՋ\u093c\u05c4\u0cc1శහझ";
				break;
			case 171:
				obj = "ష\u0de4\u093f\u05bfձष\u05ee\u0cfaక";
				break;
			case 172:
				obj = "\u0944ם\u0cfaఈ෬ह\u05b1ջऐ\u05a1ವ\u0c41\u0dd7न\u05b9հपפ\u0cf8ఞ෪स\u05acԸफ़\u05b7\u0cc2ఉ෬ह\u05bdՀगנ\u0cf0ఔ\u0df0ह״Դ\u0944\u05ce\u0cf4ఋ\u0de4म\u05b1ՠइ";
				break;
			case 173:
				obj = "ט೦ఞසत\u05b4ձ\u093f\u05f9ೡఉ෬य\u05adՠछ\u05fe";
				break;
			case 174:
				obj = "עՆछ\u05ecೱఴ෫ड\u05a1Ըफ़\u05b7\u0cd0క෦\u093f\u05a1դऊפ\u0cfaకඩ७עՓऌעೠఋ\u0dccऩ\u05bdպऊפೡ\u0c02ඩ७ע\u0557ऑנ\u0ce5ఉ\u0de0\u093e\u05abսऑףಹ\u0c5b\u0dbfङ\u05b9ճ\u093fסೡఞ\u0df7झ\u05aaձऍר೧\u0c0d\u0de4ह\u05b1ջऐ\u05a1ವ\u0c41සत\u05b4ձ\u093fסೡఞ\u0df7झ\u05aaձऍר೧\u0c0d\u0de4ह\u05b1ջऐ\u05a1ವ\u0c41\u0dcc\u093e\u0594սऐצ\u0cf0టඩ७עՐट\u05f9\u0cf4";
				break;
			case 175:
				obj = "Ԯफן\u0cd9";
				break;
			case 176:
				obj = "\u0de2ड\u05b7նटסಯ\u0c41\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණऄ\u05bbջऐ\u05c8೭ఏ\u0df7ब\u05bbՠऑ\u05ff\u0cbb\u0c3c\u0df7ढ\u05adդष\u05ee\u0cfaకශत\u05aa";
				break;
			case 177:
				obj = "ॷ֏սच\u05f9\u0cfd\u0c57ඥॷ\u0590ձगת\u0cfdఏඩ७ע\u0557ऑס\u0cfaఉෆढ\u05adպऊ\u05a1ವ\u0c41\u0dd7न\u05abձऌ\u05fb\u0cf0టඩ७עՄऒ\u05ec\u0cfbఞ\u0df6ॡ\u05f8Ԯ\u093cפೡస෪स\u05b6ՠ\u0952\u05adಯహ\u0dfcह\u05bdէषף\u0cc7ఞ\u0df6ॡ\u05f8Ԯष\u05c9";
				break;
			case 178:
				obj = "ಯ\u0c29\u0de0\u093e\u05bdզईרೱ\u0c57ඥॷ\u058cխऎרಹ\u0c5b\u0dbfऎ\u05b7աऐ\u05f9";
				break;
			case 179:
				obj = "జ෩ढ\u05baյऒ\u05b7ಯ\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dccम\u05b7պ\u093b\u05f5ೡఉ\u0de4म\u05acջऌ\u05a3\u0cdcఘ෪ण\u059cսऌ";
				break;
			case 180:
				obj = "ळר೦ఈ\u0de4प\u05bd";
				break;
			case 181:
				obj = "\u05cb೧చ෨न";
				break;
			case 182:
				obj = "֊ձझפ\u0cf0\u0c0d\u0de0ऩ\u0599է\u093bףೠఖ";
				break;
			case 183:
				obj = "՝\u093a־\u0cd0ఉ\u0df7ढ\u05aa";
				break;
			case 184:
				obj = "ශब\u05acձफ\u05f9\u0cfcగ\u0df6";
				break;
			case 185:
				obj = "ऎ\u05b7չऎ\u05ff\u0cf0ఈ\u0df6\u0901\u05bdբछס";
				break;
			case 186:
				obj = "\u0cc1ఔ\u0df1ब\u05b4Ֆइ\u05f9\u0cf0ఈ\u0dccण";
				break;
			case 187:
				obj = "య෬ठ\u05bdՇऊ\u05ec\u0cf8ఋ\u0df6";
				break;
			case 188:
				obj = "टׯ\u0cdc\u0c3f";
				break;
			case 189:
				obj = "׀\u0cf0ఖ෪\u093f\u05a1Շऊ\u05ff\u0cf0చ෨";
				break;
			case 190:
				obj = "\u059eզटנ\u0cf0లශ";
				break;
			case 191:
				obj = "Ֆऌע\u0ce2ఈ\u0de0\u093f\u059dլऊר\u0cfbఈ෬ढ\u05b6էषף೦ఏ\u0de4ड\u05b4ձऌ";
				break;
			case 192:
				obj = "\u0dd6अ\u0591Հ\u093b׀\u0cdc\u0c3f";
				break;
			case 193:
				obj = "ट\u05bdէऑ\u05f8೧ఘ\u0de0घ\u05acսऒ\u05fe";
				break;
			case 194:
				obj = "\u0cd2ఉ෪स\u05a8՝झע\u0cfb\u0c3f෬\u093f";
				break;
			case 195:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dcbढ\u05acսघ״\u0cd6ఔ෩ड\u05bdշऊפ\u0cfaకෆथ\u05b9պङרೱ\u0c3a෦ह\u05b1ջऐ\u05b7ಯ";
				break;
			case 196:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼרԢड׃\u0cfaఏ෬फ\u05a1\u0557ऑס\u0cf9ఞ෦ह\u05b1ջऐ\u05ce\u0cfdచ෫प\u05bdհ\u093f\u05eeೡఒ෪ण";
				break;
			case 197:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0ccfఒ\u0df5\u0963ւսऎ\u05c8\u0cfbఏ\u0df7ऴ\u058cսओר೦ఏ\u0de4ठ\u05a8Ԯ\u0944";
				break;
			case 198:
				obj = "֊ձटשತ\u0c4b\u0db2ऒւսऎ\u05c8\u0cfbఏ\u0df7ऴ\u058cսओר೦ఏ\u0de4ठ\u05a8";
				break;
			case 199:
				obj = "Ձऌס\u0cd6ఔ෫फ\u05b1ճऋ\u05ff\u0cf4ఏ෬ढ\u05b6\u0557ऑףೡచ෬ण\u05bdզ";
				break;
			case 200:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණऄ\u05bbջऐ\u05c8೭ఏ\u0df7ब\u05bbՠऑ\u05ff\u0cbb\u0c3c\u0df7ढ\u05adդष\u05ee\u0cfaకශत\u05aaԮ\u0944";
				break;
			case 201:
				obj = "च\u05aaսऊרತ\u0c4aපऒ\u059fզऑ\u05f8\u0ce5ల෦ढ\u05b6Րग\u05ff";
				break;
			case 202:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbల෦ढ\u05b6Ցआ\u05f9೧చ෦ह\u05b7զॐ\u05ca೧ఔ\u0df0ऽ\u0591շऑף\u0cd1ఒ\u0df7ई\u05b6ՠऌ״ಯ\u0c41";
				break;
			case 203:
				obj = "\u0c29\u0de0ब\u05bcԥ\u094f\u05bf\u0cca\u0c3c\u0df7ढ\u05adդष\u05ee\u0cfaకශत\u05aaՑऐ\u05f9೧\u0c02";
				break;
			case 204:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐ\u05ce\u0cfaక\u0de3त\u05bfաऌ\u05ecೡఒ෪ण\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u059bձऐ\u05f9೧చ෩ऎ\u05b7պघפೲఎ\u0df7ब\u05acսऑףಯ\u0c41ෆथ\u05b9ՠओ\u05ec\u0cfbస\u0de0ण\u05acզटס\u0cd6ఔ෫फ\u05b1ճऋ\u05ff\u0cf4ఏ෬ढ\u05b6Ԯप\u05ffೠఞ\u0dbf";
				break;
			case 205:
				obj = "ך೧ఒ\u0df1नשԥ\u0948ג\u0cd6ఓ\u0de4ह\u05b5յऐ\u05ce\u0cf0క\u0df1\u093f\u05b9ոऽע\u0cfbఝ෬प\u05adզट\u05f9\u0cfcఔ෫";
				break;
			case 206:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6՛ऎר\u0cfbఽ෬ड\u05bdՐग\u05ec\u0cf9ఔ\u0de2\u0963\u058bսओ\u05fd\u0cf9ఞ\u0dcaऽ\u05bdպसפ\u0cf9ఞශत\u05b9ոऑתಯ\u0c41";
				break;
			case 207:
				obj = "Նछ\u05ecೱ\u0c4aපॺևՇगנ\u0ce5గ\u0de0\u0902\u05a8ձऐ\u05cb\u0cfcగ\u0de0उ\u05b1յऒעೲ";
				break;
			case 208:
				obj = "ෆब\u05a8յझפೡ\u0c02";
				break;
			case 209:
				obj = "\u0900\u05b1շऌע೦ఔ\u0de3ह\u05f6Օम\u05c4\u0cbbష෪ब\u05bc\u0558गׯ೧చ\u0df7ऴ\u059dլसס\u0cf4జ\u0df6ॷע";
				break;
			case 210:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u094c\u05bc\u0ccaష෪ब\u05bc\u0558गׯ೧చ\u0df7ऴ\u059dլसס\u0cf4జ\u0df6";
				break;
			case 211:
				obj = "శ෬म\u05aaջऍע\u0cf3ఏණऌֈ՝ॐ\u05ca\u0cf0ఏ\u0dc9ब\u05abՠ\u093b\u05ff೧ఔ\u0df7ट\u05bdէऋסೡ\u0c41\u0dbf";
				break;
			case 212:
				obj = "बר\u0cf4టපॿתՋहרೡష\u0de4\u093e\u05acՑऌ\u05ff\u0cfaఉ\u0dd7न\u05abաऒ\u05f9";
				break;
			case 213:
				obj = "ך\u0cdcవශ\u0902֏Մल\u05cc\u0cd6\u0c3e\u0dc8ई\u0596Հ";
				break;
			case 214:
				obj = "\u0595սझ\u05ff\u0cfaఈ෪फ\u05acԺ\u093fם\u0cdc\u0c55\u0dd6अ\u059fձऊ\u05cb\u0cfcగ\u0de0ऄ\u05b6ղऑ\u05cb\u0cf9చ\u0de2\u093eעԮ";
				break;
			case 215:
				obj = "Ճऌפೡఞපॿ\u05eeՋभ\u05c5\u0cd2ఞ\u0df1ऋ\u05b1ոछ\u05c4\u0cfbఝ෪ऋ\u05b4յङ\u05fe";
				break;
			case 216:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbల෦ढ\u05b6Ձऊפ\u0cf9ఈ\u0dbfॷ";
				break;
			case 217:
				obj = "ट\u05bdյच\u05bcಧ\u0c4c\u0ddaऄ\u05bbջऐטೡఒ෩\u093e";
				break;
			case 218:
				obj = "\u0cc7ఞ\u0de4ऩ\u0597պऒ״";
				break;
			case 219:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dccम\u05b7պ\u093b\u05f5ೡఉ\u0de4म\u05acջऌ\u05a3\u0cc6ఒ෨ऽ\u05b4ձष\u05ee\u0cfaకවव\u05acզट\u05eeೡఔ\u0df7०\u0591շऑף\u0cc6ఒ\u0dffनעԮ";
				break;
			case 220:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼ\u05ebԥड\u05c4\u0cf6ఔ෫ञ\u05b1ծछ";
				break;
			case 221:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aaԺभפ\u0cf8ఋ෩न\u0591շऑף\u0cd0\u0c03\u0df1\u093f\u05b9շऊע೧\u0c50සढ\u05b4հछ\u05ff\u0cc1\u0c02\u0df5नעԮ";
				break;
			case 222:
				obj = "֊ձटשತ\u0c48භऒ\u059eջऒש\u0cf0ఉ\u0dd1ऴ\u05a8ձ";
				break;
			case 223:
				obj = "Ճगףೱఔ\u0df2ए\u05b1ՠऍ";
				break;
			case 224:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණऄ\u05bbջऐ\u05c8೭ఏ\u0df7ब\u05bbՠऑ\u05ff\u0cbbమ\u0df6न\u05aaԧ\u094c\u05b7ಯ";
				break;
			case 225:
				obj = "च\u05aaսऊרತ\u0c48ඳऒ֍էछ\u05ffದ\u0c49";
				break;
			case 226:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐ\u05c4\u0cd1\u0c48ණऄ\u059cԧई\u05bf\u0cd3ఉ\u0de4ठ\u05bdէॐי\u0cf0\u0c03\u0df1ऋ\u05aaյओר೦\u0c55\u0dd1न\u05a0ՠऱף\u0cf9\u0c02ස\u093f\u05b9չछ\u05b7ಯ";
				break;
			case 227:
				obj = "\u0c29\u0de0ब\u05bcԥ\u094d\u05ba\u0ccaయ\u0de0व\u05ac՛ऐס೬ఽ\u0df7ब\u05b5ձ";
				break;
			case 228:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6՝\u093a־\u0cbbలශॾ\u05aeԦस\u05ff\u0cf4ఖ\u0de0\u093e\u05f6Ֆगף\u0cf4ఉ\u0dfcऋ\u05aaյओר೦\u0c55\u0dc7ब\u05abձसפ\u0cf9ఞස\u093f\u05b9չछ\u05b7ಯ";
				break;
			case 229:
				obj = "ך೧ఒ\u0df1नשԠ\u094fג\u0cd7చ\u0df6न\u059eսऒר\u0cd3ఉ\u0de4ठ\u05bd";
				break;
			case 230:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05c4\u0cd1\u0c48\u0df3ॿ\u059eզटנ\u0cf0ఈණए\u05b1պट\u05ff೬ఽ\u0df7ब\u05b5ձऍ\u05a3\u0cd4ఏ\u0df1ब\u05bbռछש\u0cc5ఒ෦ह\u05adզछ\u05cb೧చ෨न׳Մग\u05eeೡఎ\u0df7न\u058cխऎר೦\u0c41\u0dbf";
				break;
			case 231:
				obj = "Նछ\u05ecೱ\u0c4aනॿևՄग\u05eeೡఎ\u0df7न\u058cխऎר೦";
				break;
			case 232:
				obj = "සड\u05adէखי೬ఋ\u0de0";
				break;
			case 233:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963ւսऎ\u05a3\u0cd6ఔ෨ऽ\u05aaձऍ\u05fe\u0cfcఔ෫ञ\u05acզट\u05f9\u0cf0జ\u0dfcॷע";
				break;
			case 234:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u094a\u05bb\u0ccaస෪ठ\u05a8զछ\u05fe೦ఒ෪ण\u058bՠऌ\u05ecೡఞ\u0de2ऴ";
				break;
			case 235:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0ddfत\u05a8Ժऽע\u0cf8ఋ\u0df7न\u05abէगע\u0cfbశ෪ऩ\u05bdԮ\u0944";
				break;
			case 236:
				obj = "बר\u0cf4టපॹׯՋऽע\u0cf8ఋ\u0df7न\u05abէगע\u0cfbశ෪ऩ\u05bd";
				break;
			case 237:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺसפ\u0cf9ఞ\u0dd0ह\u05b1ոऍ\u05b7ಯ";
				break;
			case 238:
				obj = "\u0599";
				break;
			case 239:
				obj = "ՃऌפೡఞපॸשՋसפ\u0cf9ఞ\u0dd0ह\u05b1ոऍ";
				break;
			case 240:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණग\u05b1դॐח\u0cf9ఒ෧ऎ\u05b7հछ\u05eeಯ\u0c41";
				break;
			case 241:
				obj = "ट\u05bdյच\u05bcಠ\u0c49\u0ddaग\u05b4սज\u05ce\u0cfaట\u0de0म";
				break;
			case 242:
				obj = "\u0ccfల\u0dd5घ\u05acսऒ\u05fe";
				break;
			case 243:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55ශऴ\u05b6յओפ\u0cf6\u0c3a෦ह\u05b1բट\u05f9\u0cfaఉ\u0dbfॷ";
				break;
			case 244:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼ\u05edԢड\u05c9೬క\u0de4ठ\u05b1շ\u093f\u05eeೡఒ\u0df3ब\u05acջऌ";
				break;
			case 245:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0ccfఒ\u0df5\u0963ւսऎ\u05bbಡఴ\u0df5ह\u05b1ջऐ\u05b7ಯ";
				break;
			case 246:
				obj = "֊ձटשತ\u0c4e\u0db2ऒւսऎ\u05bbಡఴ\u0df5ह\u05b1ջऐ";
				break;
			case 247:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժ\u093aר\u0cf3చ\u0df0ड\u05acՕऋש\u0cfcఔශन\u05aeսझר\u0cd6ఔ෫ह\u05aaջऒס\u0cf0ఉ\u0dbfॷ";
				break;
			case 248:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcಣ\u0c4a\u0ddaउ\u05bdղट\u05f8\u0cf9ఏහस\u05bcսऑ\u05c9\u0cf0\u0c0d෬म\u05bd\u0557ऑףೡఉ෪ड\u05b4ձऌ";
				break;
			case 249:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u059dլऊר\u0cfbఈ෬ढ\u05b6էशר\u0cf9ఋ\u0de0\u093fעԮ";
				break;
			case 250:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbడ෬ऽ\u05f6Վग\u05fd\u0cc5ఉ෪प\u05aaձऍ\u05fe\u0cd0\u0c0d\u0de0ण\u05acՀइ\u05fd\u0cf0\u0c41\u0dbf";
				break;
			case 251:
				obj = "\u0c29\u0de0ब\u05bcԥ\u0948\u05bf\u0cca\u0c3e\u0dfdह\u05bdպऍפ\u0cfaక\u0df6अ\u05bdոऎר೧";
				break;
			case 252:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐח\u0cfcఋණऎ\u05b7չऎ\u05ff\u0cf0ఈ\u0df6त\u05b7պलר\u0ce3ఞ෩ॷע";
				break;
			case 253:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺष\u05c9ದ\u0c55\u0dccउ\u05ebբ\u094c\u05cb೧చ෨न\u05abԺ\u093cפ\u0cfbచ\u0df7ऴ\u059eզटנ\u0cf0ఈණऎ\u05b7չओר೧ఘ෬ब\u05b4Ւऌ\u05ec\u0cf8ఞථट\u05bdշगר\u0ce3ఞ\u0de1ऌ\u05abՑऐ\u05f8\u0cf8\u0c41\u0dbf";
				break;
			case 254:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u058cռऌר\u0cf4ట෬ण\u05bfԺऽץ\u0cf4ఏ෨ब\u05b6Հख\u05ff\u0cf0చ\u0de1ॷע";
				break;
			case 255:
				obj = "Ճऌפೡఞපॻ\u05eeՋऽץ\u0cf4ఏ෨ब\u05b6Հख\u05ff\u0cf0చ\u0de1";
				break;
			case 256:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණऄ\u05bbջऐ\u05c8೭ఏ\u0df7ब\u05bbՠऑ\u05ff\u0cbbల෦ढ\u05b6Ւऒ\u05ecೲఈ\u0dbfॷ";
				break;
			case 257:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u0595ջऋ\u05fe\u0cf0బ\u0de4ह\u05bbռछ\u05ff\u0cbb\u0c3f\u0de0\u093e\u05b3ՠऑ\u05fd\u0cc5ఔ෬ण\u05acԮ\u0944";
				break;
			case 258:
				obj = "\u0cc7ఞ\u0de4ऩשԢ\u0949ג\u0cd1ఞ\u0df6द\u05acջऎם\u0cfaఒ෫ह";
				break;
			case 259:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd6ऽ\u05b4յऍץ\u0cc6ఘ\u0df7न\u05bdպळעೱఞ\u0dbfॷ";
				break;
			case 260:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6՚ऋנ\u0cf0ఉ෬म֍ՠगס೦\u0c41\u0dbf";
				break;
			case 261:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cd4ఎ\u0df1थ\u05b7զग\u05f7\u0cf0\u0c3f\u0de4ह\u05b9Ԯ\u0944\u05ccಯయ\u0df7स\u05bdԮ";
				break;
			case 262:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05c4\u0cd1\u0c48\u0df3ॿ\u059eզटנ\u0cf0ఈණऋ\u05b1ոऊר೧స෪ड\u05b4ձझ\u05f9\u0cfcఔ෫ॷע";
				break;
			case 263:
				obj = "ՃऌפೡఞපॺשՋसפ\u0cf9ఏ\u0de0\u093f\u059bջऒס\u0cf0ఘ\u0df1त\u05b7պ";
				break;
			case 264:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණऎ\u05b0յऊנ\u0cf4కවण\u05aeսऌע\u0cfbఖ\u0de0ण\u05acԮ\u0944";
				break;
			case 265:
				obj = "ट\u05bdյच\u05bcಢ\u0c49\u0ddaऎ\u05b0յऊנ\u0cf4కවण\u05aeսऌע\u0cfbఖ\u0de0ण\u05ac";
				break;
			case 266:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐן\u0cfaక\u0de1ऴ\u05b7Ձऊפ\u0cf9ళ\u0de0ड\u05a8ձऌ\u05b7ಯ";
				break;
			case 267:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd6त\u05b6ճऒר\u0cc5ఉ෪प\u05aaյओ\u05c4\u0cfbఈ\u0df1ब\u05b6շछך\u0cfcక\u0dbfॷ";
				break;
			case 268:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6Նछת\u0cfcఈ\u0df1\u093f\u05a1Օझ\u05ee\u0cf0ఈ\u0df6ढ\u05aaԮ\u0944";
				break;
			case 269:
				obj = "ך೧ఒ\u0df1नשԣ\u0948ג\u0cc7ఞ\u0de2त\u05abՠऌ״\u0cd4ఘ෦न\u05abէऑ\u05ff";
				break;
			case 270:
				obj = "֊ձटשತ\u0c4c\u0db2ऒ֊ջऐש೬ఔ\u0dd0ह\u05b1ոशר\u0cf9ఋ\u0de0\u093f";
				break;
			case 271:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0595ձऍ\u05fe\u0cf4జ\u0de0ए\u05b7լफ\u05f9\u0cfcగ\u0df6ॷע";
				break;
			case 272:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ֊\u0558ऽע\u0cfbఝ෬प\u05adզट\u05f9\u0cfcఔ෫\u0963֍զऒ\u05ce\u0cfaక\u0de3त\u05bfաऌ\u05ecೡఒ෪णעԮ";
				break;
			case 273:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963֍ՠगס೦\u0c55\u0dd2ऄ\u0596ԧ\u094c\u05cc\u0cc5ల\u0dbfॷ";
				break;
			case 274:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u0946\u05bc\u0ccaబ\u0dcc\u0903\u05ebԦ\u093fם\u0cdc";
				break;
			case 275:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cc2ల\u0dcbॾתՕम\u05c4\u0cbe\u0c29වऎ\u058cԮ\u0944";
				break;
			case 276:
				obj = "बר\u0cf4టපॵתՋब\u05c8\u0cd6య";
				break;
			case 277:
				obj = "׀\u0cfcఘ\u0df7ढ\u05abջघ\u05f9\u0cbb\u0c3a\u0dd5ऄ\u05f6Նछ\u05fe\u0cfaఎ\u0df7म\u05bdՀइ\u05fd\u0cf0ఈ\u0dbfॷ";
				break;
			case 278:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऎ\u05b0յऊ׀\u0cf4కශत\u05b9ոऑת\u0cc7ఞ\u0df6स\u05b4ՠ\u0944\u05b7";
				break;
			case 279:
				obj = "Ճऌפೡఞපॵ\u05eeՋऽץ\u0cf4ఏ\u0dc8ब\u05b6Րग\u05ec\u0cf9ఔ\u0de2ट\u05bdէऋסೡ";
				break;
			case 280:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbలශॾ\u05f6Հछ\u05f5ೡ\u0c3e෫म\u05b7հगףೲఈ\u0dbfॷ";
				break;
			case 281:
				obj = "ट\u05bdյच\u05bcಭ\u0c4c\u0ddaङ\u05bdլऊ\u05c8\u0cfbఘ෪ऩ\u05b1պङ\u05fe";
				break;
			case 282:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐ\u05c4\u0cd1\u0c48ණऄ\u059cԧई\u05bf\u0cd3గ\u0de4प\u05abԮ\u0944";
				break;
			case 283:
				obj = "బ\u0df7त\u05acձ\u094f\u05b4ತత\u0dccउ\u05ebբ\u094c\u05cb\u0cf9చ\u0de2\u093e";
				break;
			case 284:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6՝\u093a־\u0cbbఽ෬ड\u05acձऌי೬ఋ\u0de0\u093eעԮ";
				break;
			case 285:
				obj = "ן\u0cf0చ\u0de1ॼסԦड\u05cb\u0cfcగ\u0df1न\u05aaՀइ\u05fd\u0cf0ఈ";
				break;
			case 286:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05c4\u0cd1\u0c48ව\u093f\u05aaջऌ\u05b7ಯ";
				break;
			case 287:
				obj = "Ճऌפೡఞපॴ\u05eeՋष\u05c9ದ\u0c3e\u0df7\u093f\u05b7զ";
				break;
			case 288:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbలශॾ\u05f6Ցऌ\u05ff\u0cfaఉෆढ\u05b4ոछ\u05eeೡఒ෪णעԮ";
				break;
			case 289:
				obj = "ट\u05bdյच\u05bcಬ\u0c4c\u0ddaई\u05aaզऑ\u05ff\u0cd6ఔ෩ड\u05bdշऊפ\u0cfaక";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴃ = (char[])(object)Ⴍ.Ⴃ;
			int num2 = ⴃ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴃ[(num3 + Ⴗ) % num2]);
			}
			result = new string(array);
			Ⴃ[num] = result;
			return result;
		}

		static Ⴍ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴍ.Ⴃ = (string[])(object)array;
			Ⴃ = new string[290];
		}
	}
	internal sealed class Ⴐ
	{
		private static readonly char[] Ⴃ;

		private static readonly string[] Ⴃ;

		internal static string ႳႭႨ(int Ⴀ)
		{
			int num = Ⴀ ^ 0x33796AA2;
			string result;
			if ((result = Ⴃ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "\u0dd6थ\u05bdոऒטೡఒ෩\u093e";
				break;
			case 1:
				obj = "";
				break;
			case 2:
				obj = "\u0ccfఒ\u0df5ई\u05b6ՠऌ״\u0cc1ఒ෨न\u05abՠटנ\u0ce5";
				break;
			case 3:
				obj = "ల෦ढ\u05b6Րग\u05ff";
				break;
			case 4:
				obj = "ह\u05ff\u0cfaఎ\u0df5ऄ\u05bbջऐ\u05c9\u0cfcఉවण\u05acզइ";
				break;
			case 5:
				obj = "ט೧గෆढ\u05b6ղगתೠఉ\u0de4ह\u05b1ջऐ";
				break;
			case 6:
				obj = "\u059bռट\u05f9\u0cf8చ෫ऎ\u05bdպऊ\u05ff\u0cf4గෆढ\u05b6ղगתೠఉ\u0de4ह\u05b1ջऐ";
				break;
			case 7:
				obj = "՚ऋנ\u0cf0ఉ෬म֍ՠगס೦";
				break;
			case 8:
				obj = "ෂन\u05ac\u0558ट\u05feೡ\u0c3e\u0df7\u093f\u05b7զबר೦ఎ෩ह";
				break;
			case 9:
				obj = "\u0901\u05b7ջक\u05f8\u0ce5ల෦ढ\u05b6՝च\u05cb೧ఔ෨उ\u05b1զछ\u05eeೡఔ\u0df7ऴ\u059dլसס\u0cf4జ\u0df6";
				break;
			case 10:
				obj = "\u0cd3ఒ෩न\u059eջऌנ\u0cf4ఏ\u0df6";
				break;
			case 11:
				obj = "ఽ෪ड\u05bcձऌי೬ఋ\u0de0";
				break;
			case 12:
				obj = "भ\u05c5\u0cdcయව\u0900\u0591Ր";
				break;
			case 13:
				obj = "ט೦ఞ\u0df7ॾת";
				break;
			case 14:
				obj = "\u059cձईפ\u0cf6ఞෆड\u05b9էऍ\u05ce\u0cfaక\u0df1\u093f\u05b7ոऒר೧";
				break;
			case 15:
				obj = "Ֆट\u05fe\u0cf0ఽ෬ड\u05bdՒऌ\u05ec\u0cf8ఞ";
				break;
			case 16:
				obj = "\u0dd5त\u05bbՠऋ\u05ff\u0cf0య\u0dfcऽ\u05bdէ";
				break;
			case 17:
				obj = "\u0900\u05b7աऍר\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 18:
				obj = "\u0cd6ఔ෨ऽ\u05aaձऍ\u05fe\u0cfcఔ෫\u0900\u05b7հछ";
				break;
			case 19:
				obj = "భ\u0de0\u093f\u05abսऑף\u0cc0ఏ෬ड\u05ab";
				break;
			case 20:
				obj = "सפ\u0cf9ఞ\u0dd0ह\u05b1ոऍ";
				break;
			case 21:
				obj = "\u05cb\u0cf9ఎ\u0df6थ\u058cխऎר";
				break;
			case 22:
				obj = "\u059cխऐ\u05ec\u0cf8ఒ෦ऌ\u05bbՠग\u05fb\u0cf4ఏ෪\u093f";
				break;
			case 23:
				obj = "Վग\u05fdಣ\u0c4f\u0dcaऽ\u05acսऑף";
				break;
			case 24:
				obj = "\u0dc9ब\u05b6ճऋ\u05ecೲఞ";
				break;
			case 25:
				obj = "उ\u05bdղट\u05f8\u0cf9ఏහस\u05bcսऑ\u05c9\u0cf0\u0c0d෬म\u05bd\u0557ऑףೡఉ෪ड\u05b4ձऌ";
				break;
			case 26:
				obj = "\u0cd4";
				break;
			case 27:
				obj = "స෭ब\u05acչटף\u0cc1ఓ\u0df7न\u05b9հ";
				break;
			case 28:
				obj = "तפ\u0ce5ఫ\u0df7ढ\u05bfզछ\u05fe೦\u0c3e\u0df3न\u05b6ՠप״\u0ce5ఞ";
				break;
			case 29:
				obj = "\u05cb\u0cfcగ\u0df1न\u05aa\u0557ऑס\u0cf9ఞ෦ह\u05b1ջऐ";
				break;
			case 30:
				obj = "\u059dոछ\u05fb\u0cf4ఏ෬ढ\u05b6՜छס\u0ce5ఞ\u0df7";
				break;
			case 31:
				obj = "Նछת\u0cfcఈ\u0df1\u093f\u05a1Օझ\u05ee\u0cf0ఈ\u0df6ढ\u05aa";
				break;
			case 32:
				obj = "\u0dd6ऽ\u05b4յऍץ\u0cc6ఘ\u0df7न\u05bdպळעೱఞ";
				break;
			case 33:
				obj = "च\u0591՚\u094d\u05bf\u0cd4ఫ\u0dcc";
				break;
			case 34:
				obj = "\u0cc7\u0c3eෆङ";
				break;
			case 35:
				obj = "శ\u0de0\u093e\u05abյङר\u0cd7ఔ\u0dfdघ\u05acսऒ\u05fe";
				break;
			case 36:
				obj = "पר೭ఏවण\u05bbջचפ\u0cfbజ\u0df6";
				break;
			case 37:
				obj = "י\u0cfcఖ\u0de0ञ\u05acյओ\u05fd೦";
				break;
			case 38:
				obj = "\u059eսऒ\u05f9\u0cf0ఉ\u0dd1ऴ\u05a8ձऍ";
				break;
			case 39:
				obj = "Նछ\u05fe\u0cfaఎ\u0df7म\u05bdէ";
				break;
			case 40:
				obj = "\u0dccउ\u05ebՑऌ\u05ff\u0cfaఉ";
				break;
			case 41:
				obj = "ञ\u05b1պङס\u0cf0ఫ\u0df7ढ\u05bfզटנ\u0cdcక\u0df6ह\u05b9պझר\u0cc2ఒ෫";
				break;
			case 42:
				obj = "\u0cc1ఞ\u0dfdह\u058cզटף೦ఘ\u0df7त\u05a8ՠगע\u0cfb";
				break;
			case 43:
				obj = "య෭\u093f\u05b7գ";
				break;
			case 44:
				obj = "रעೡష෪ब\u05bcՒगסೡఞ\u0df7\u093e";
				break;
			case 45:
				obj = "\u05c4\u0cfbఘ\u0df7न\u05b5ձऐ\u05f9";
				break;
			case 46:
				obj = "\u0595դछת\u0cd3ఉ\u0de4ठ\u05bd";
				break;
			case 47:
				obj = "Հटת\u0cd4గ\u0df1न\u05aaՄऌר೦ఞ\u0df7\u093b\u05b9ՠगע\u0cfb";
				break;
			case 48:
				obj = "ෂ\u093f\u05b7աऎפ\u0cfbజ\u0dccऩ\u05bdպऊפೡ\u0c02";
				break;
			case 49:
				obj = "ट\u05bdյच\u05c2\u0cfbగ\u0dfc";
				break;
			case 50:
				obj = "\u0cdbఔ෫न";
				break;
			case 51:
				obj = "ల\u0de2ण\u05b7զछ";
				break;
			case 52:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6\u0557ख\u05ecೡశ\u0de4ण\u059cսटס\u0cfaజ\u0dd7न\u05abաऒ\u05f9";
				break;
			case 53:
				obj = "ה\u0cf0ఈ\u0dcbढ";
				break;
			case 54:
				obj = "\u05aaսङץೡ";
				break;
			case 55:
				obj = "զझ׃\u0cfaఉ෨ब\u05b4Մऑ\u05fe\u0cfcఏ෬ढ\u05b6";
				break;
			case 56:
				obj = "\u0ddd";
				break;
			case 57:
				obj = "\u0903\u05b7ՠलע\u0cf4ట\u0de0ऩ";
				break;
			case 58:
				obj = "\u0cc2ఉ෬ह\u05bdՐछס\u0cf0జ\u0de4ह\u05bd";
				break;
			case 59:
				obj = "\u0c3e෫ब\u05baոछש";
				break;
			case 60:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐח\u0cfcఋණग\u05b1դ\u093bףೡఉ\u0dfcञ\u05b7աऌ\u05ee\u0cf0";
				break;
			case 61:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ձऊפ\u0cf9ళ\u0de0ड\u05a8ձऌ";
				break;
			case 62:
				obj = "\u058cջकר\u0cfb\u0c3e෩न\u05aeյऊפ\u0cfaక\u0dd1ऴ\u05a8ձलפ\u0cf8ఒ\u0df1न\u05bc";
				break;
			case 63:
				obj = "\u0557ख\u05ecೡఖ\u0de4ण\u059dպईפ೧ఔ෫ठ\u05bdպऊ";
				break;
			case 64:
				obj = "හऩ\u05bcսऐת\u0ccaన\u0df1ब\u05aaՠछש";
				break;
			case 65:
				obj = "ट\u05bdյचפ\u0cfbజ\u0ddaऌ־ՠछ\u05ff\u0cc7ఞ\u0de4ऩ\u059dպऊ\u05ff೬";
				break;
			case 66:
				obj = "\u0ccdహ\u0df0ह\u05acջऐ\u05bf";
				break;
			case 67:
				obj = "న\u0de4\u093b\u05b1պङג\u0cd4ఝ\u0df1न\u05aaՃऌפೡఞවण\u05acզइ";
				break;
			case 68:
				obj = "बפೲఓ\u0df1";
				break;
			case 69:
				obj = "מ\u0cf4\u0c0d෬ण\u05bfՋ\u093f\u05ebೡఞ\u0df7ट\u05bdպटנ\u0cf0య\u0de0ठ\u05a8Օऌ\u05ee\u0cfdఒ\u0df3न";
				break;
			case 70:
				obj = "\u059dլऊ\u05ff\u0cf4ఘ\u0df1त\u05b6ճड\u05c8೭ఏ\u0df7ब\u05bbՠ\u093bףೡఉ\u0dfcच\u05b7աऒש\u0cda\u0c0d\u0de0\u093f\u05afզग\u05f9\u0cf0";
				break;
			case 71:
				obj = "Րछ\u05fe\u0cfeఏ෪ऽֈջगףೡ";
				break;
			case 72:
				obj = "\u0dc9ढ\u05afձऍ\u05f9";
				break;
			case 73:
				obj = "ऄ\u05bbջऐ";
				break;
			case 74:
				obj = "\u0cdaఋ\u0de0ण\u0591շऑף";
				break;
			case 75:
				obj = "\u0c3e\u0dfdह\u05bdպऍפ\u0cfaక\u0df6अ\u05bdոऎר೧";
				break;
			case 76:
				obj = "\u093aר\u0cf3చ\u0df0ड\u05ac";
				break;
			case 77:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0ccfఒ\u0df5\u0963ւսऎ\u05bbಡఴ\u0df5ह\u05b1ջऐ";
				break;
			case 78:
				obj = "\u059eաऒס";
				break;
			case 79:
				obj = "Մक\u05f7\u0cfcఋ\u0dd2न\u05b9տ";
				break;
			case 80:
				obj = "\u0ddfड\u05b1նऽעೱఞ෦";
				break;
			case 81:
				obj = "ऌ\u05aeյगס\u0cf4ఙ෩न\u059aխऊר೦ల෫";
				break;
			case 82:
				obj = "\u0cd9ఞ\u0df3न\u05b4ԡ";
				break;
			case 83:
				obj = "య෪ह\u05b9ո\u093c״ೡఞ\u0df6\u0902\u05adՠ";
				break;
			case 84:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐח\u0cfcఋණऎ\u05b7չऎ\u05ff\u0cf0ఈ\u0df6त\u05b7պळעೱఞ";
				break;
			case 85:
				obj = "ך\u0cd8త\u0dc8\u0902֍Շ\u093bך\u0cdd\u0c3eව\u0901";
				break;
			case 86:
				obj = "\u058bՠटףೱచ\u0df7ऩ\u059bհ\u093fס\u0cf7ఎ෨";
				break;
			case 87:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժळעೠఈ\u0de0च\u05b9ՠझץ\u0cf0ఉණ\u0900\u05b7աऍר\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 88:
				obj = "හ\u093e\u0596ջऊר\u0cc6ఓ\u0de0न\u05ac՝ऐ\u05cf\u0cfaఔ෮";
				break;
			case 89:
				obj = "\u0902\u05acռछ\u05ff";
				break;
			case 90:
				obj = "\u0cd9ఞ\u0de4फ\u05b4ձऊם\u0cf4జ\u0de0";
				break;
			case 91:
				obj = "ష\u0dfc\u093f\u05b1շग\u05feೡత\u0dd1न\u05a0ՠऩ\u05ff\u0cfcఏ\u0de0\u093f";
				break;
			case 92:
				obj = "\u093f\u05cf೧ఒ\u0de2थ\u05ac\u0557ऑס\u0cfaఎ\u0df7न\u05bcՒग\u05fe\u0cfd";
				break;
			case 93:
				obj = "מ\u0cf8చ෩ड";
				break;
			case 94:
				obj = "\u0591շऑף\u0cc0ఏ෬ड\u05ab";
				break;
			case 95:
				obj = "՝ळ\u05cc\u0cd2\u0c3e\u0ddaऄ\u059b՛र";
				break;
			case 96:
				obj = "වव\u05bdՀइ\u05fd\u0cf0";
				break;
			case 97:
				obj = "ट\u058cՋष\u05ce\u0cdaవ";
				break;
			case 98:
				obj = "\u0cd9చ\u0df7प\u05bd՝झע\u0cfb";
				break;
			case 99:
				obj = "\u0c3e\u0dd7ट\u0597Նडן\u0cd0న\u0dcaघ֊\u0557\u093bג\u0cc1ఢ\u0dd5ईև՚ऱי\u0ccaఽ\u0dcaघ\u0596Ր";
				break;
			case 100:
				obj = "फ\u05fe\u0cf0ఽ෬ड\u05bdՕऊ\u05f9೧ఒ෧स\u05acձऍ";
				break;
			case 101:
				obj = "\u05c4\u0cf6ఔ෫\u0901\u05b7շट\u05f9\u0cfcఔ෫";
				break;
			case 102:
				obj = "\u059eսऒר\u0cd4గ\u0df1न\u05aaՄऌר೦ఞ\u0df7\u093b\u05b9ՠगע\u0cfb";
				break;
			case 103:
				obj = "\u0559ग\u05ee೧ఔ\u0df6ढ־ՠॐ\u05cc\u0cc5లණञ\u0590Փछ\u05f9\u0cd3ఒ෩न\u0591պघע\u0cd3గ\u0de4प\u05ab";
				break;
			case 104:
				obj = "\u0dd5ढ\u05abսऊפ\u0cfaక";
				break;
			case 105:
				obj = "\u0903\u05bdլऊט\u0ce5ట\u0de4ह\u05bd\u0557खר\u0cf6ఐ";
				break;
			case 106:
				obj = "\u0cddఞ෬प\u05b0ՠ";
				break;
			case 107:
				obj = "హ\u0dfcह\u05bdէषף\u0cc7ఞ\u0df6";
				break;
			case 108:
				obj = "ऽע\u0cf9ఔ\u0df7ऎ\u05b7աऐ\u05f9";
				break;
			case 109:
				obj = "ן\u0cf0ఈ\u0de0\u093f\u05aeձच";
				break;
			case 110:
				obj = "\u0591չटת\u0cf0ఴ\u0de3फ\u05abձऊ";
				break;
			case 111:
				obj = "Ձऐפ೭";
				break;
			case 112:
				obj = "\u0dc8ढ\u05aeձ";
				break;
			case 113:
				obj = "उ\u0597Շ";
				break;
			case 114:
				obj = "ಯల෦ढ\u05b6Րग\u05ff";
				break;
			case 115:
				obj = "\u0c41\u0dd0\u093f\u05b4\u0557ऑף\u0cf3ఒ\u0de2स\u05aaյऊפ\u0cfaకෆढ\u05b6ՠटפ\u0cfbఞ\u0df7";
				break;
			case 116:
				obj = "\u0944י\u0cf0\u0c03\u0df1घ\u05acսऒ\u05fe";
				break;
			case 117:
				obj = "\u05b7\u0cd9ఔ෪द\u05adդष\u05ee\u0cfaక\u0dccऩ\u059eզऑנ\u0cd1ఒ\u0df7न\u05bbՠऑ\u05ff೬\u0c3e\u0dfdऋ\u05b4յङ\u05fe";
				break;
			case 118:
				obj = "עՆछ\u05fe\u0cfaఎ\u0df7म\u05bdՁऊפ\u0cf9ఈ";
				break;
			case 119:
				obj = "Ԯसפ\u0cf9ఞසढ\u05aaչट\u05f9೦";
				break;
			case 120:
				obj = "\u0dbfञ\u05b0ձऒסದ\u0c49";
				break;
			case 121:
				obj = "ॷ\u058b՜षי\u0cd0శ\u0dccउ";
				break;
			case 122:
				obj = "ಯ\u0c3f\u0dc9\u0901֍ՠगס೦";
				break;
			case 123:
				obj = "\u0c41\u0dc8ढ\u05adէछ\u05cc\u0cf6ఏ෬ढ\u05b6";
				break;
			case 124:
				obj = "\u0944\u05ce\u0cc7సබॿ";
				break;
			case 125:
				obj = "\u05b7\u0cd3గ\u0df0\u093e\u05b0Հइ\u05fd\u0cf0";
				break;
			case 126:
				obj = "עՁब\u05c1\u0cc0ఏ෬ड\u05ab";
				break;
			case 127:
				obj = "Ԯतפ\u0ce5ఫ\u0df7ढ\u05bfզछ\u05fe೦\u0c3e\u0df3न\u05b6ՠप״\u0ce5ఞ";
				break;
			case 128:
				obj = "\u0dbfञ\u05bdշऋ\u05ff\u0cfcఏ\u0dfcघ\u05acսऒ\u05fe";
				break;
			case 129:
				obj = "ॷ\u059cյऊר\u0cc0ఏ෬ड\u05ab";
				break;
			case 130:
				obj = "ಯన\u0df5ड\u05b9էखמ\u0cf6ఉ\u0de0न\u05b6\u0559ऑש\u0cf0";
				break;
			case 131:
				obj = "\u0c41\u0dd1त\u05b5ձभ\u05f9\u0cf4ఖ\u0df5\u093e";
				break;
			case 132:
				obj = "\u0944מೡఉ\u0de0ब\u05b5Ձऊפ\u0cf9ఈ";
				break;
			case 133:
				obj = "\u05c1೬ఉ෬म";
				break;
			case 134:
				obj = "\u058cզग\u05fb\u0cfcచ\u0ddaझ\u05b7դऋ\u05fd\u0cdcక\u0de3ढ";
				break;
			case 135:
				obj = "ճऒע\u0cf7చ෩ॷעՆऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0591Ր\u094d\u05a3\u0cdc\u0c3fබई\u05aaզऑ\u05ff";
				break;
			case 136:
				obj = "\u0dcaआ\u059bյऐ\u05ee\u0cf0గ";
				break;
			case 137:
				obj = "ट\u05bdՠऌ״";
				break;
			case 138:
				obj = "ೲగ෪य\u05b9ո\u0944\u05b7\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐך\u0cdcవබॿ\u0599Մष\u05a3\u0cc2ల\u0dcbउ\u0597Ճम\u05c1\u0cd4సව\u0900\u059d՚प";
				break;
			case 139:
				obj = "జ෩ढ\u05baյऒ\u05b7ಯన\u0dfc\u093e\u05acձओ\u05a3\u0cd1ఉ\u0de4\u093a\u05b1պङ\u05a3\u0cc5ఔ෬ण\u05ac";
				break;
			case 140:
				obj = "तפ\u0ce5ఽ෬ड\u05bd";
				break;
			case 141:
				obj = "ת\u0cf9ఔ෧ब\u05b4Ԯ\u0944ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺष\u05c9ದ\u0c55\u0dccउ\u05ebբ\u094c\u05cb೧చ෨न\u05abԺसפ\u0cf9ఏ\u0de0\u093f\u059bջऒס\u0cf0ఘ\u0df1त\u05b7պ";
				break;
			case 142:
				obj = "֊ձटש\u0cfcక\u0de2ऒ\u058bՠट\u05ffೡఞ\u0de1";
				break;
			case 143:
				obj = "ճऒע\u0cf7చ෩ॷעՆऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժळעೠఈ\u0de0च\u05b9ՠझץ\u0cf0ఉණऎ\u05b0յऊנ\u0cf4క\u0dc8ढ\u05adէछ\u05cfೠఏ\u0df1ढ\u05b6է";
				break;
			case 144:
				obj = "\u0dd6ब\u05aeսऐת\u0ccaన\u0df1ब\u05aaՠछש";
				break;
			case 145:
				obj = "ए\u05bdոऑ\u05fa\u0cdbఔ\u0df7ठ\u05b9ո";
				break;
			case 146:
				obj = "\u0cc6చ\u0df3त\u05b6ճड\u05cc\u0cf3ఏ\u0de0\u093f\u059bջओ\u05fd\u0cfcగ\u0de0ञ\u05bdոघ\u05c8೭ఏ\u0df7ब\u05bbՠऑ\u05ff";
				break;
			case 147:
				obj = "న\u0de0ड\u05bdշऊרೱ";
				break;
			case 148:
				obj = "\u093b\u05f5ೡఉ\u0de4म\u05acսऐת\u0cca\u0c3e෫ह\u05aaխ\u093c״ೡఞ\u0df6च\u05aaսऊ\u05f9\u0cf0క";
				break;
			case 149:
				obj = "ט\u0cfbఈ\u0df0ऽ\u05a8ջऌ\u05f9\u0cf0ట";
				break;
			case 150:
				obj = "\u059eսऐפ೦ఓ";
				break;
			case 151:
				obj = "Ԯषף\u0ce5ఎ\u0df1ए\u05adղघר೧\u0c57ඥॷ\u0596ձआ\u05f9\u0cdcకඩ७עՕई\u05ec\u0cfcగ\u0de4य\u05b4ձ\u093c״ೡఞ\u0df6ऄ\u05b6Ըफ़\u05b7\u0cc1ఔ\u0df1ब\u05b4Ֆइ\u05f9\u0cf0ఈ\u0dccण״Դ\u0944\u05c2ೠఏ\u0df5स\u05acՖऋ\u05eb\u0cf3ఞ\u0df7ॡ\u05f8Ԯरר೭ఏ\u0dcaस\u05acԸफ़\u05b7\u0cd4\u0c0d\u0de4त\u05b4յजס\u0cf0హ\u0dfcह\u05bdէऱ\u05f8ೡ\u0c57ඥॷ\u058cջऊ\u05ec\u0cf9హ\u0dfcह\u05bdէऱ\u05f8ೡ\u0c57ඥॷ\u0595ձऍ\u05fe\u0cf4జ\u0de0ॡ\u05f8Ԯऽע\u0cf8ఋ\u0df7न\u05abէलר\u0ce3ఞ෩ॡ\u05f8Ԯऩפ\u0cfbట෪\u093a\u059aսऊ\u05feಹ\u0c5b\u0dbfञ\u05acզट\u05f9\u0cf0జ\u0dfc";
				break;
			case 152:
				obj = "\u0dc9न\u05aeձऒ\u05bc";
				break;
			case 153:
				obj = "\u0901\u05bdբछסಢ";
				break;
			case 154:
				obj = "\u0cd1ఞ෦ढ\u05b5դऌר೦ఈ";
				break;
			case 155:
				obj = "బ\u0dc8ऒ\u0595՛फמ\u0cd0శ\u0dcaछ\u059d";
				break;
			case 156:
				obj = "ऽע\u0cf8ఋ\u0df7न\u05abէछש\u0cd4ఎ\u0de1त\u05b7";
				break;
			case 157:
				obj = "\u05ce\u0cfa\u0c0d\u0de0\u093fևՖट\u05ee\u0cfe";
				break;
			case 158:
				obj = "\u0595աऍפ\u0cf6ఴ෫\u0902\u05acռछ\u05ff\u0cd8ఞ\u0de1त\u05b9";
				break;
			case 159:
				obj = "\u0557ऑףೱఎ෦ह\u05b7զ";
				break;
			case 160:
				obj = "ශस\u05aaսऐת\u0cc7ఞ෦ढ\u05aaհगףೲ";
				break;
			case 161:
				obj = "ए\u05b9պच\u05c1\u0cfaజ෪";
				break;
			case 162:
				obj = "ೲగ෪य\u05b9ո\u0944\u05b7\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbల෦ढ\u05b6Ցआ\u05f9೧చ෦ह\u05b7զॐמ\u0cfdఞ෩ड\u05ebԦॐ\u05c4\u0cc1\u0c3e\u0dc8ऄ\u059c\u0558षמ\u0cc1";
				break;
			case 163:
				obj = "ఴ\u0df5न\u05b6";
				break;
			case 164:
				obj = "\u093aפ೦ఋ෩ब\u05a1՚टנ\u0cf0";
				break;
			case 165:
				obj = "מ೬ఈ\u0dccम\u05b7պषףೱఞ\u0dfd";
				break;
			case 166:
				obj = "ֈ՝\u093a\u05c1";
				break;
			case 167:
				obj = "ճऒע\u0cf7చ෩ॷעՆऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0591Ր\u094d\u05a3\u0cdc\u0c3fබ\u093bתՒऌ\u05ec\u0cf8ఞ\u0df6\u0963\u059aսऐ\u05ec೧\u0c02ස\u093f\u05b9չछ\u05fe\u0cbbహ෬ण\u05b9զइ\u05cb೧చ෨न";
				break;
			case 168:
				obj = "\u0dbfझ\u0599Մ\u0952\u05adಯఫහऎ״Դ\u0944\u05c9\u0cc2\u0c57ඥॷ\u0596ձआ\u05f9\u0cc0ఋ\u0de1ब\u05acձऽץ\u0cf0ఘ෮ॡ\u05f8Ԯल\u05ec೦ఏ\u0dd0ऽ\u05bcյऊר\u0cd6ఓ\u0de0म\u05b3Ըफ़\u05b7\u0cd1ఒ\u0df6ऽ\u05b4յइרೱశ\u0de0\u093e\u05abյङר\u0cd6ఔ\u0df0ण\u05acձऌ";
				break;
			case 169:
				obj = "ॷ\u0593ձइ\u05a1ವ\u0c41\u0dd0\u093f\u05b4";
				break;
			case 170:
				obj = "ಯమ\u0dd7\u0901\u058b";
				break;
			case 171:
				obj = "జ෩ढ\u05baյऒ\u05b7ಯ\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dccम\u05b7պ\u093b\u05f5ೡఉ\u0de4म\u05acջऌ\u05a3\u0cd2ఉ෪स\u05a8՝झע\u0cfb\u0c3f෬\u093f\u059dպऊ\u05ff೬";
				break;
			case 172:
				obj = "\u0944ך\u0cfcట\u0df1थ״Դ\u0944\u05c5\u0cf0ఒ\u0de2थ\u05acԸफ़\u05b7\u0cd6ఔ෩ढ\u05aa\u0557ऑ\u05f8\u0cfbఏඩ७עՆछ\u05fe\u0cf0ఉ\u0df3न\u05bcԸफ़\u05b7\u0cc5గ\u0de4ण\u05bdէ\u0952\u05adಯహ෬ह\u059bջऋףೡ\u0c57ඥॷ\u059aխऊר೦ల෫ट\u05bdէ\u0952\u05adಯల෨ब\u05bfձऱ\u05eb\u0cf3ఈ\u0de0ह";
				break;
			case 173:
				obj = "ת\u0cf9ఔ෧ब\u05b4Ԯ\u0944ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aaԺष\u05ee\u0cfaకශत\u05aa";
				break;
			case 174:
				obj = "עՆछ\u05fe\u0cf0ఉ\u0df3न\u05bcԸफ़\u05b7\u0cc1\u0c02\u0df5न״Դ\u0944\u05ce\u0cfaఎ෫ह";
				break;
			case 175:
				obj = "՝ऐ\u05eb\u0cfaడ෬ऽש";
				break;
			case 176:
				obj = "\u0dd6अ\u059fձऊ\u05cb\u0cfcగ\u0de0ऄ\u05b6ղऑ\u05cb\u0cf9చ\u0de2\u093e";
				break;
			case 177:
				obj = "ऄ\u059cԧई\u05bf\u0cd3గ\u0de4प\u05ab";
				break;
			case 178:
				obj = "\u0cd9చ\u0df6ह֍դच\u05ecೡఞෆथ\u05bdշक";
				break;
			case 179:
				obj = "డ෬ऽ\u059dպऊ\u05ff೬న෪स\u05aaշछ";
				break;
			case 180:
				obj = "ष\u05ee\u0cfaక\u0dd6त\u05a2ձ";
				break;
			case 181:
				obj = "ם\u0cfaఒ෫ह";
				break;
			case 182:
				obj = "\u0590ՠओס\u0cc5ఉ෪म\u05bdէऍע೧";
				break;
			case 183:
				obj = "՝\u093a";
				break;
			case 184:
				obj = "ව\u093f\u05aaջऌ\u05ce\u0cfaగ෩न\u05bbՠगע\u0cfb";
				break;
			case 185:
				obj = "ह\u05b7դ";
				break;
			case 186:
				obj = "\u0cd1చ\u0df1ब";
				break;
			case 187:
				obj = "ర\u0de0ऴ";
				break;
			case 188:
				obj = "घס\u0cf4జ\u0df6";
				break;
			case 189:
				obj = "׀\u0cf4ఒ෩घ\u05acսऒ\u05fe";
				break;
			case 190:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණञ\u05b0ձऒס\u0cc0ఏ෬ड\u05abԮ\u0944";
				break;
			case 191:
				obj = "Նछ\u05ecೱ\u0c4aඵॹևՇखר\u0cf9గ\u0dd0ह\u05b1ոऍ";
				break;
			case 192:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණग\u05b1դॐ\u05ce\u0cfaఖ\u0df5\u093f\u05bdէऍפ\u0cfaక\u0dc8न\u05acռऑשಯ\u0c41";
				break;
			case 193:
				obj = "च\u05aaսऊרತ\u0c4bලऒ\u059bջओ\u05fd೧ఞ\u0df6\u093e\u05b1ջऐ׀\u0cf0ఏ෭ढ\u05bc";
				break;
			case 194:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbల෦ढ\u05b6Ցआ\u05f9೧చ෦ह\u05b7զॐ\u05c4\u0cf6ఔ෫उ\u05b1զ\u0944\u05b7";
				break;
			case 195:
				obj = "\u0c29\u0de0ब\u05bcԥ\u094e\u05b4\u0ccaల෦ढ\u05b6Րग\u05ff";
				break;
			case 196:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐט\u0cc7షෆढ\u05b6ղगתೠఉ\u0de4ह\u05b1ջऐ\u05a3\u0cc0ఉ෩ऎ\u05b7պघפೲఎ\u0df7ब\u05acսऑף\u0cd6ఔ෫ह\u05b9սऐר೧\u0c41\u0dbfघ\u05aaոऽע\u0cfbఝ෬प\u05adզट\u05f9\u0cfcఔ෫ऎ\u05b7պऊ\u05ec\u0cfcక\u0de0\u093fעՀऌ\u05f8\u0cf0\u0c41";
				break;
			case 197:
				obj = "ך೧ఒ\u0df1नשԥ\u094dג\u0cc0ఉ෩ऎ\u05b7պघפೲఎ\u0df7ब\u05acսऑף\u0cd6ఔ෫ह\u05b9սऐר೧";
				break;
			case 198:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձब\u05c1\u0cd6ఔ෫फ\u05b1ճऋ\u05ff\u0cf4ఏ෬ढ\u05b6Ժफ\u05ff\u0cf9స෪ण־սङ\u05f8೧చ\u0df1त\u05b7պ\u0944\u05b7";
				break;
			case 199:
				obj = "Նछ\u05ecೱ\u0c4aපॹևՁऌס\u0cd6ఔ෫फ\u05b1ճऋ\u05ff\u0cf4ఏ෬ढ\u05b6";
				break;
			case 200:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbయ\u0de0व\u05acՁऊפ\u0cf9ఈ\u0dbfॷ";
				break;
			case 201:
				obj = "च\u05aaսऊרತ\u0c4aලऒ\u058cձआ\u05f9\u0cc0ఏ෬ड\u05ab";
				break;
			case 202:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐ׃ೠఖ\u0de0\u093f\u05b1շफ\u05f9\u0cfcగ\u0df6ॷע";
				break;
			case 203:
				obj = "\u0c29\u0de0ब\u05bcԥ\u094f\u05b4\u0ccaవ\u0df0ठ\u05bdզग\u05ee\u0cc0ఏ෬ड\u05ab";
				break;
			case 204:
				obj = "ळפ\u0cf6ఉ෪\u093e\u05b7ղऊ\u05a3\u0cd4ఫ\u0dcc\u0963֊ձऍעೠఉ෦न\u058cխऎר೦\u0c41\u0dbf";
				break;
			case 205:
				obj = "ך೧ఒ\u0df1नשԦ\u094dג\u0cc7ఞ\u0df6ढ\u05adզझר\u0cc1\u0c02\u0df5न\u05ab";
				break;
			case 206:
				obj = "\u0595սझ\u05ff\u0cfaఈ෪फ\u05acԺ\u093fם\u0cdc\u0c55\u0dc9ढ\u05b7տऋ\u05fd\u0cdcఘ෪ण\u0591հस\u05ff\u0cfaఖශत\u05aaձझ\u05f9\u0cfaఉ\u0dfcई\u05a0Ւऒ\u05ecೲఈ\u0dbfॷ";
				break;
			case 207:
				obj = "Նछ\u05ecೱ\u0c4aභॹև՝ऊר\u0cf8";
				break;
			case 208:
				obj = "\u0dd6ह\u05aaյऊרೲ\u0c02";
				break;
			case 209:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963֍ՠगס೦\u0c55\u0dd7न\u05abջऋ\u05ff\u0cf6ఞ\u0dd0ह\u05b1ոऍ\u05b7ಯ";
				break;
			case 210:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u094c\u05b5\u0cca\u0c29\u0de0\u093e\u05b7աऌ\u05ee\u0cf0మ\u0df1त\u05b4է";
				break;
			case 211:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55සत\u05b4ձसע೧ఖ\u0de4ह\u05abԮ\u0944";
				break;
			case 212:
				obj = "ऽע\u0cf8ఋ\u0df7न\u05abէगע\u0cfb";
				break;
			case 213:
				obj = "ן\u0cf0చ\u0de1ॼתԭड\u05cb\u0cfcగ\u0de0ऋ\u05b7զओ\u05ecೡఈ";
				break;
			case 214:
				obj = "\u058bռछס\u0cf9\u0c48භ";
				break;
			case 215:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժष\u05ee\u0cfaకවव\u05acզट\u05eeೡఔ\u0df7\u0963\u058bռछס\u0cf9\u0c48භॷע";
				break;
			case 216:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcದ\u0c48\u0ddaञ\u05b0ձऒסದ\u0c49";
				break;
			case 217:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u0591շऑף\u0cd0\u0c03\u0df1\u093f\u05b9շऊע೧\u0c55\u0dd6थ\u05bdոऒ־ಧ\u0c50\u0dd6अ\u0591Հ\u093b׀\u0cdc\u0c3f\u0dbfॷ";
				break;
			case 218:
				obj = "\u0cc7ఞ\u0de4ऩשԧ\u094aג\u0cc6ళ\u0dccङ\u059d\u0559ष\u05c9";
				break;
			case 219:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cd1ష\u0dc9घ\u05acսऒ\u05feಯ\u0c41";
				break;
			case 220:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼ\u05ebԬड\u05c9\u0cd9ష\u0dd0ह\u05b1ոऍ";
				break;
			case 221:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cd1ఞ\u0df3त\u05bbձऽס\u0cf4ఈ\u0df6ऎ\u05b7պऊ\u05ff\u0cfaగ෩न\u05aaԮ\u0944";
				break;
			case 222:
				obj = "֊ձटשತ\u0c48\u0dbcऒ\u059cձईפ\u0cf6ఞෆड\u05b9էऍ\u05ce\u0cfaక\u0df1\u093f\u05b7ոऒר೧";
				break;
			case 223:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0591Ր\u094d\u05a3\u0cdc\u0c3fබ\u093bתՒऌ\u05ec\u0cf8ఞ\u0df6\u0963\u059aսऐ\u05ec೧\u0c02ස\u093f\u05b9չछ\u05fe\u0cbbస෪ठ\u05b5ձऌ\u05ee\u0cfcచ෩ऋ\u05aaյओר\u0cbe\u0c29\u0de0म\u05b1ձईרೱ\u0c3a\u0df6ई\u05b6աओ\u05b7ಯ";
				break;
			case 224:
				obj = "\u0df5ह\u0595յआם\u0cfaఈ෬ह\u05b1ջऐ";
				break;
			case 225:
				obj = "च\u05aaսऊרತ\u0c4fබऒ֊ձझפ\u0cf0\u0c0d\u0de0ऩ\u0599է\u093bףೠఖ";
				break;
			case 226:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbశ෪स\u05abձऩ\u05ecೡఘ෭न\u05aaԺळעೠఈ\u0de0ऌ\u05bbՠगע\u0cfb\u0c41\u0dbf";
				break;
			case 227:
				obj = "\u0c29\u0de0ब\u05bcԥ\u094a\u05b9\u0ccaశ෪स\u05abձ\u093f\u05eeೡఒ෪ण";
				break;
			case 228:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐח\u0cfcఋණऎ֊\u0557\u094d\u05bfಯ\u0c41";
				break;
			case 229:
				obj = "ך೧ఒ\u0df1नשԠ\u0946ג\u0cd6\u0c29ෆॾת";
				break;
			case 230:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණछ\u05bdզऍפ\u0cfaక\u0dd0ह\u05b1ոऍ\u05b7ಯ";
				break;
			case 231:
				obj = "Նछ\u05ecೱ\u0c4aනॴևՂछ\u05ff೦ఒ෪ण֍ՠगס೦";
				break;
			case 232:
				obj = "\u0ddfत\u05a8Ցऌ\u05ff\u0cfaఉහम\u05acսऑף";
				break;
			case 233:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963ւսऎ\u05a3\u0cd0క෦\u093f\u05a1դऊפ\u0cfaకහड\u05bfջऌפೡఓ෨ॷע";
				break;
			case 234:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u094b־\u0cca\u0c3e෫म\u05aaխऎ\u05f9\u0cfcఔ෫ऌ\u05b4ճऑ\u05ff\u0cfcఏ෭ठ";
				break;
			case 235:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0ddfत\u05a8Ժसסೠఈ෭ङ\u05a1դछ\u05b7ಯ";
				break;
			case 236:
				obj = "बר\u0cf4టපॸ\u05ecՋसסೠఈ෭ङ\u05a1դछ";
				break;
			case 237:
				obj = "\u05ce\u0cfdచ\u0df1ठ\u05b9պळעೠఈ\u0de0ए\u05adՠऊע\u0cfbఈ";
				break;
			case 238:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණघ֊\u0558फ\u05f9\u0cfcగ\u0df6ॷע";
				break;
			case 239:
				obj = "ՃऌפೡఞපॸנՋफן\u0cd9మ\u0df1त\u05b4է";
				break;
			case 240:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbలශॾ\u05f6՝\u093a־\u0ce3\u0c49ස\u093f\u05b9չछ\u05fe\u0cbbష\u0de4ण\u05bfաटת\u0cf0\u0c41\u0dbf";
				break;
			case 241:
				obj = "ट\u05bdյच\u05bcಠ\u0c42\u0dda\u0901\u05b9պङ\u05f8\u0cf4జ\u0de0";
				break;
			case 242:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐ\u05c5ೡఖ෩झ\u05aaջझר೦ఈ෪\u093fעԮ";
				break;
			case 243:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dc8ढ\u05adէछך\u0cf4ఏ෦थ\u05bdզॐ\u05c9\u0cf0ఈ෮ह\u05b7դमע\u0cfcక\u0df1ॷע";
				break;
			case 244:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐח\u0cfcఋණग\u05b1դ\u093b\u05ff೧ఔ\u0df7ऌ\u05bbՠगע\u0cfb\u0c41\u0dbf";
				break;
			case 245:
				obj = "ך೧ఒ\u0df1नשԢ\u094dג\u0ccfఒ\u0df5ई\u05aaզऑ\u05ff\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 246:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05c8೧ఉ෪\u093f\u059bջऒס\u0cf0ఘ\u0df1त\u05b7պ\u0944\u05b7";
				break;
			case 247:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժ\u093f\u05f8ೡఓ෪\u093f\u05b1ծछ\u05c9\u0cf4ఏ\u0de4ॷעՕ\u0944י೧ఎ\u0de0ॷ";
				break;
			case 248:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණउ\u05bdղट\u05f8\u0cf9ఏහस\u05bcսऑ\u05c9\u0cf0\u0c0d෬म\u05bd\u0557ऑףೡఉ෪ड\u05b4ձऌ\u05b7ಯ";
				break;
			case 249:
				obj = "ट\u05bdյच\u05bcಣ\u0c4f\u0ddaऌ";
				break;
			case 250:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbళ\u0de4\u093e\u05b0Ձऊפ\u0cf9ఈ\u0dbfॷ";
				break;
			case 251:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dc8ढ\u05adէछך\u0cf4ఏ෦थ\u05bdզॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պळעೠఈ\u0de0ए\u05adՠऊע\u0cfbఈ\u0dbfॷ";
				break;
			case 252:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6Ճष׃ದ\u0c49හझ\u0591Կब\u05c8\u0cd6య\u0dbfॷ";
				break;
			case 253:
				obj = "ך೧ఒ\u0df1नשԢ\u0946ג\u0cd6ఓ\u0de4ह\u05b5յऐ׀\u0cfaఎ\u0df6न\u059aաऊ\u05f9\u0cfaక\u0df6";
				break;
			case 254:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Վग\u05fd\u0cbbడ෬ऽֈզऑת೧ఞ\u0df6\u093e\u059dբछףೡయ\u0dfcऽ\u05bdԮ\u0944";
				break;
			case 255:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժतפ\u0ce5\u0c55ෆढ\u05b5դऌר೦ఈ෬ढ\u05b6Շऊ\u05ff\u0cf4ఏ\u0de0प\u05a1Ԯ\u0944";
				break;
			case 256:
				obj = "\u0dd7न\u05b9հ\u094f\u05bbಬత\u0ddfत\u05a8Մऌעೲఉ\u0de0\u093e\u05abՑईר\u0cfbఏ\u0dd1ऴ\u05a8ձ";
				break;
			case 257:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963֍ՠगס೦\u0c55\u0dd6न\u05bbաऌפೡ\u0c02\u0dd0ह\u05b1ոऍ\u05a6\u0cd0గ\u0de0\u093b\u05b9ՠगע\u0cfbళ\u0de0ड\u05a8ձऌ\u05b7ಯ";
				break;
			case 258:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐמ\u0cf0ఘ\u0df0\u093f\u05b1ՠइטೡఒ෩\u093eעԮ";
				break;
			case 259:
				obj = "బ\u0df7त\u05acձ\u094f\u05baದత\u0dd6न\u05bbաऌפೡ\u0c02\u0dd0ह\u05b1ոऍ";
				break;
			case 260:
				obj = "बר\u0cf4టපॺ\u05ecՋ\u093bס\u0cf0\u0c0d\u0de4ह\u05b1ջऐ\u05c5\u0cf0గ\u0df5न\u05aa";
				break;
			case 261:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺऽץ\u0cf4ఏ\u0dc8ब\u05b6Րग\u05ec\u0cf9ఔ\u0de2ट\u05bdէऋסೡ\u0c41\u0dbf";
				break;
			case 262:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05c4\u0cd1\u0c48\u0df3ॿ\u059eզटנ\u0cf0ఈණङ\u05bdլऊ\u05cb೧చ෨न\u05abԺपר೭ఏ\u0dcaण\u05b4խस\u05ff\u0cf4ఖ\u0de0ॷע";
				break;
			case 263:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u059cյऊר\u0cc0ఏ෬ड\u05abԮ\u0944";
				break;
			case 264:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbశ\u0de4त\u05b4Ձऊפ\u0cf9ఈ\u0dbfॷ";
				break;
			case 265:
				obj = "च\u05aaսऊרತ\u0c4cලऒ\u059cյऊר\u0cc0ఏ෬ड\u05ab";
				break;
			case 266:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbన\u0df5ड\u05b9էखמ\u0cf6ఉ\u0de0न\u05b6\u0559ऑש\u0cf0\u0c41\u0dbf";
				break;
			case 267:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0ddfत\u05a8Ժऽע\u0cf8ఋ\u0df7न\u05abէगע\u0cfbశ෪ऩ\u05bdԮ\u0944";
				break;
			case 268:
				obj = "बר\u0cf4టපॺסՋभ\u05fd\u0cf9చ\u0df6थ\u058bշऌר\u0cf0క\u0dc8ढ\u05bcձ";
				break;
			case 269:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐי\u0cfdఉ\u0de0ब\u05bcսऐת\u0cbbస෭ब\u05acչटף\u0cc1ఓ\u0df7न\u05b9հ\u0944\u05b7";
				break;
			case 270:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6՝झע\u0cfb\u0c3e\u0dfdह\u05aaյझ\u05f9\u0cfaఉණञ\u05b0ձऒסದ\u0c49ථऄ\u058cՑळ\u05c4\u0cd1ష\u0dccञ\u058cԮ\u0944";
				break;
			case 271:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963֏՝र־ಧ\u0c3a\u0dd5ऄ׳Ճष׃\u0cd1ఴ\u0dd2झ\u0594Օऽ\u05c8\u0cd8\u0c3e\u0dcbङעԮ";
				break;
			case 272:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcಭ\u0c48\u0ddaच\u0591՚\u093a\u05c2\u0cc2ఫ\u0dc9ऌ\u059bՑळ\u05c8\u0cdbయ";
				break;
			case 273:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963֍ՠगס೦\u0c55\u0dc8न\u05abէटת\u0cf0హ෪व֍ՠगס೦\u0c41\u0dbf";
				break;
			case 274:
				obj = "\u0cc7ఞ\u0de4ऩשԬ\u094aג\u0cd8ఞ\u0df6\u093e\u05b9ճछ\u05cf\u0cfa\u0c03\u0dd0ह\u05b1ոऍ";
				break;
			case 275:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cdc\u0c3fබ\u0963\u059eզटנ\u0cf0ఽ෩ब\u05bfէ\u0944\u05b7";
				break;
			case 276:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼנԬड\u05cb೧చ෨न\u059eոटת೦";
				break;
			case 277:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺष\u05c9ದ\u0c55\u0dd1त\u05b5ձभ\u05f9\u0cf4ఖ\u0df5\u093eעԮ";
				break;
			case 278:
				obj = "֊ձटשತ\u0c43\u0dbcऒ\u058cսओר\u0cc6ఏ\u0de4ठ\u05a8է";
				break;
			case 279:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u058bՠऌר\u0cf4ఖ\u0dd0ह\u05b1ոऍ\u05b7ಯ";
				break;
			case 280:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcಬ\u0c48\u0ddaञ\u05acզछ\u05ec\u0cf8మ\u0df1त\u05b4է";
				break;
			case 281:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963ֈզऑ\u05fd\u0cf0ఉ\u0df1त\u05bdէॐן\u0cf0ఈ෪स\u05aaշछ\u05feಯ\u0c41";
				break;
			case 282:
				obj = "\u0cc7ఞ\u0de4ऩשԭ\u094aג\u0cc7ఞ\u0df6ढ\u05adզझר೦";
				break;
			case 283:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cdc\u0c3fබ\u0963\u0591Ր\u094d\u05fbಧఽ\u0df7ब\u05b5ձऍ\u05a3\u0cd4ఉ\u0df7ब\u05a1Ւऌ\u05ec\u0cf8ఞ\u0df6\u0963\u058bխऐ\u05ee\u0cfdఉ෪ण\u05b1էछש\u0cc1ఞ\u0dfdह׳\u0557ऑףೡఞ෫ह\u058cխऎר೦\u0c41\u0dbf";
				break;
			case 284:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼסԬड\u05ce\u0cfaక\u0df1न\u05b6ՠप״\u0ce5ఞ\u0df6";
				break;
			case 285:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc6ఒ෫प\u05b4ձम\u05ff\u0cfaజ\u0df7ब\u05b5՝ऐ\u05feೡచ෫म\u05bdՃगףಯ\u0c41";
				break;
			case 286:
				obj = "֊ձटשತ\u0c42\u0dbcऒ\u058bսऐת\u0cf9ఞ\u0dd5\u093f\u05b7ճऌ\u05ec\u0cf8ల෫\u093e\u05acյऐ\u05ee\u0cf0బ෬ण";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴃ = (char[])(object)Ⴐ.Ⴃ;
			int num2 = ⴃ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴃ[(num3 + Ⴀ) % num2]);
			}
			result = new string(array);
			Ⴃ[num] = result;
			return result;
		}

		static Ⴐ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴐ.Ⴃ = (string[])(object)array;
			Ⴃ = new string[287];
		}
	}
	internal sealed class Ⴓ
	{
		private static readonly char[] Ⴃ;

		private static readonly string[] Ⴃ;

		internal static string ႳႭႨ(int Ⴀ)
		{
			int num = Ⴀ ^ 0x33796AA2;
			string result;
			if ((result = Ⴃ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "\u0dcbढ\u05acսघ״\u0cd6ఔ෩ड\u05bdշऊפ\u0cfaకෆथ\u05b9պङרೱ\u0c3a෦ह\u05b1ջऐ";
				break;
			case 1:
				obj = "";
				break;
			case 2:
				obj = "\u0cdcఘ෪ण\u059cսऌ";
				break;
			case 3:
				obj = "\u0c3c\u0df7ढ\u05adդष\u05ee\u0cfaకශत\u05aa";
				break;
			case 4:
				obj = "फ\u05ff\u0cf9స෪ण־սङ\u05f8೧చ\u0df1त\u05b7պऽע\u0cfbఏ\u0de4त\u05b6ձऌ";
				break;
			case 5:
				obj = "\u05ce\u0cfdచ\u0df1ठ\u05b9պऽר\u0cfbఏ\u0df7ब\u05b4\u0557ऑף\u0cf3ఒ\u0de2स\u05aaյऊפ\u0cfaక";
				break;
			case 6:
				obj = "\u058cձआ\u05f9\u0cc0ఏ෬ड\u05ab";
				break;
			case 7:
				obj = "\u0558ऑ\u05ecೱష෬य\u05aaյऌ״\u0cd0\u0c03සड\u05b9ճऍ";
				break;
			case 8:
				obj = "\u0dc9ढ\u05b7տऋ\u05fd\u0cdcఘ෪ण\u0591հस\u05ff\u0cfaఖශत\u05aaձझ\u05f9\u0cfaఉ\u0dfcई\u05a0Ւऒ\u05ecೲఈ";
				break;
			case 9:
				obj = "ञ\u0590Փछ\u05f9\u0cd3ఒ෩न\u0591պघע\u0cd3గ\u0de4प\u05ab";
				break;
			case 10:
				obj = "\u0cc7ఞ\u0df6ढ\u05adզझר\u0cc0ఏ෬ड\u05ab";
				break;
			case 11:
				obj = "ఽ෬ड\u05bdՒऑ\u05ff\u0cf8చ\u0df1\u093e";
				break;
			case 12:
				obj = "ष\u05ee\u0cfaక\u0dd6त\u05a2ձ";
				break;
			case 13:
				obj = "מ\u0cfdఞ෩ड\u05ebԦ";
				break;
			case 14:
				obj = "\u058b՜षי\u0cd0శ\u0dccउ";
				break;
			case 15:
				obj = "Ձऍר೧\u0c48භ";
				break;
			case 16:
				obj = "ශ\u0901\u0594Ձऊפ\u0cf9ఈ";
				break;
			case 17:
				obj = "ए\u05b9էछ\u05cb\u0cfcగ\u0de0ऋ\u05aaյओר";
				break;
			case 18:
				obj = "\u0cd8ఔ\u0df0\u093e\u05bdՕझ\u05f9\u0cfcఔ෫";
				break;
			case 19:
				obj = "స෪ठ\u05a8զछ\u05fe೦ఒ෪ण\u058bՠऌ\u05ecೡఞ\u0de2ऴ";
				break;
			case 20:
				obj = "ऽן\u0cd6\u0c48භ";
				break;
			case 21:
				obj = "\u05cb\u0cfcగ\u0de0घ\u05acսऒ\u05fe";
				break;
			case 22:
				obj = "\u059eոऋ\u05fe\u0cfdయ\u0dfcऽ\u05bd";
				break;
			case 23:
				obj = "Րइף\u0cf4ఖ෬म\u0599շऊפ\u0ce3చ\u0df1ढ\u05aa";
				break;
			case 24:
				obj = "\u0dd0ट\u0594Ձऊפ\u0cf9ఈ";
				break;
			case 25:
				obj = "उ\u05bdղट\u05f8\u0cf9ఏහस\u05bcսऑ\u05c9\u0cf0\u0c0d෬म\u05bd\u0557ऑףೡఉ෪ड\u05b4ձऌ";
				break;
			case 26:
				obj = "\u0cd6ఓ\u0de4ह\u05b5յऐי\u0cfdఉ\u0de0ब\u05bc";
				break;
			case 27:
				obj = "డ෬ऽֈզऑת೧ఞ\u0df6\u093e\u059dբछףೡయ\u0dfcऽ\u05bd";
				break;
			case 28:
				obj = "सפ\u0cf9ఏ\u0de0\u093f\u059bջऒס\u0cf0ఘ\u0df1त\u05b7պ";
				break;
			case 29:
				obj = "מ\u0cf0ఘ\u0df0\u093f\u05b1ՠइטೡఒ෩\u093e";
				break;
			case 30:
				obj = "֊ձङפ೦ఏ\u0df7ऴ\u0599շझר೦ఈ෪\u093f";
				break;
			case 31:
				obj = "Րट\u05f9\u0cf0మ\u0df1त\u05b4է";
				break;
			case 32:
				obj = "\u0dd6ऽ\u05b4յऍץ\u0cc6ఘ\u0df7न\u05bdպळעೱఞ";
				break;
			case 33:
				obj = "च\u0591՚\u094d\u05bf\u0cd4ఫ\u0dcc";
				break;
			case 34:
				obj = "\u0cd6ఓ\u0de4ह\u0595յऐ\u05c9\u0cfcచ෩ढ\u05bfՆछ\u05feೠగ\u0df1";
				break;
			case 35:
				obj = "య෬ठ\u05bdՇऊ\u05ec\u0cf8ఋ\u0df6";
				break;
			case 36:
				obj = "ष\u05c9ದ\u0c0dභऋ\u05b4յङ\u05fe";
				break;
			case 37:
				obj = "מೡఉ\u0de0ब\u05b5Ձऊפ\u0cf9ఈ";
				break;
			case 38:
				obj = "\u0591Ր\u094d\u05c8೧ఉ෪\u093f";
				break;
			case 39:
				obj = "Շगףೲగ\u0de0झ\u05aaջङ\u05ff\u0cf4ఖ\u0dccण\u05abՠटף\u0cf6ఞ\u0dd2त\u05b6";
				break;
			case 40:
				obj = "\u0dc9ऴ\u05aaսझ";
				break;
			case 41:
				obj = "ङ\u05aaսईפ\u0cf4త\u0dd5ढ\u05a8աऎ\u05c4\u0cfbఝ෪";
				break;
			case 42:
				obj = "\u0cc7ఞ\u0df6ढ\u05adզझר೦";
				break;
			case 43:
				obj = "ష෪ब\u05bcՒगסೡఞ\u0df7\u093e\u0597պऒ״";
				break;
			case 44:
				obj = "\u093a\u05ee೧ఞ෨न\u05b6ՠ";
				break;
			case 45:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺष\u05c9ದ\u0c55\u0dd1त\u05b5ձभ\u05f9\u0cf4ఖ\u0df5\u093e";
				break;
			case 46:
				obj = "\u059dպझ\u05ff೬ఋ\u0df1त\u05b7պ";
				break;
			case 47:
				obj = "Ձप\u05cbಭ";
				break;
			case 48:
				obj = "සत\u05b4ձ\u093fסೡఞ\u0df7झ\u05aaձऍר೧\u0c0d\u0de4ह\u05b1ջऐ";
				break;
			case 49:
				obj = "ट\u05bdՠऌ״";
				break;
			case 50:
				obj = "\u0cd8ఞ\u0df6\u093e\u05b9ճछ\u05cf\u0cfa\u0c03\u0dd0ह\u05b1ոऍ";
				break;
			case 51:
				obj = "ఢ\u0de0\u093e\u0596ջऽ\u05ec\u0cfbఘ\u0de0ड";
				break;
			case 52:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6\u0557ख\u05ecೡశ\u0de4ण\u0595ձऍ\u05fe\u0cf4జ\u0de0ए\u05b7լ\u093c\u05f8ೡఏ෪ण\u05ab";
				break;
			case 53:
				obj = "ך\u0cdcవශ\u0902֏Մल\u05cc\u0cd6\u0c3e\u0dc8ई\u0596Հ";
				break;
			case 54:
				obj = "\u05acջऎ";
				break;
			case 55:
				obj = "դऊ׀\u0cfcక\u0dd5ढ\u05abսऊפ\u0cfaక";
				break;
			case 56:
				obj = "\u0ddfत\u05a8Ւगס\u0cf0";
				break;
			case 57:
				obj = "उ\u05b1էटׯ\u0cf9ఞ\u0de1";
				break;
			case 58:
				obj = "\u0cc1ఔ෮न\u05b6Ցऒר\u0ce3చ\u0df1त\u05b7պप״\u0ce5ఞසस\u05b4ո";
				break;
			case 59:
				obj = "శ\u0de4त\u05b4Ձऊפ\u0cf9ఈ";
				break;
			case 60:
				obj = "\u093fשೱఒ෫पև\u0557ऑנ\u0ce5గ\u0de0ह\u05bdհ";
				break;
			case 61:
				obj = "ו\u0cd7ఎ\u0df1ह\u05b7պ\u094f";
				break;
			case 62:
				obj = "֊ձटש\u0cfcక\u0de2ऒ\u0599զझץ\u0cfc\u0c0d\u0de0ए\u05a1ՠछ\u05fe\u0cc7ఞ\u0de4ऩ";
				break;
			case 63:
				obj = "\u0558छ\u05ebೡ";
				break;
			case 64:
				obj = "\u0dd6ब\u05aeսऐת\u0ccaహ\u0de0फ\u05b7զछן\u0cf0క\u0de4ठ\u05bdՀछנ\u0ce5\u0c3a\u0df7म\u05b0սईר";
				break;
			case 65:
				obj = "ई\u05a0ՠऌ\u05ec\u0cf6ఏ෬ण\u05bfՋ\u093f\u05ebೡఞ\u0df7ई\u05a0ՠऌ\u05ec\u0cf6ఏවण\u05acզइ";
				break;
			case 66:
				obj = "\u0cd0ఉ\u0df7ढ\u05aaՋभ\u05ec\u0ce3ఒ෫प";
				break;
			case 67:
				obj = "ల\u0df6ए\u05b9շकת೧ఔ\u0df0ण\u05bc";
				break;
			case 68:
				obj = "शפೲఓ\u0de0\u093e\u05ac";
				break;
			case 69:
				obj = "מ\u0cf8చ෩ड\u0591շऑף";
				break;
			case 70:
				obj = "\u0591պईע\u0cfeఞව\u093f\u05aaջऌ\u05c8\u0ce3ఞ෫ह";
				break;
			case 71:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժष\u05ee\u0cfaకවव\u05acզट\u05eeೡఔ\u0df7\u0963\u0591շऑף\u0cd3గ\u0de4प\u05ab";
				break;
			case 72:
				obj = "\u0dcdङ\u058cՄफ\u05f9\u0cfcగ\u0df6";
				break;
			case 73:
				obj = "ग\u0591Մफ\u05f9\u0cfcగ\u0df6";
				break;
			case 74:
				obj = "\u0cc6\u0c02෫म";
				break;
			case 75:
				obj = "వ෪ण\u05bd";
				break;
			case 76:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐח\u0cfcఋණऋ\u05b4աऍץ\u0cc1\u0c02\u0df5न";
				break;
			case 77:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0ccfఒ\u0df5\u0963\u059dպझ\u05ff೬ఋ\u0df1त\u05b7պ\u093fסೲఔ\u0df7त\u05acռओ";
				break;
			case 78:
				obj = "\u0590աघ\u05eb\u0cf8చ෫\u0902\u05b6ոइ";
				break;
			case 79:
				obj = "Հऑ\u05f9\u0cf4గ\u0dc7ऴ\u05acձऍ\u05c4\u0cfb";
				break;
			case 80:
				obj = "\u0dc9न\u05aeձऒ\u05b9";
				break;
			case 81:
				obj = "ए\u05bdէऊ\u05ce\u0cfaఖ\u0df5\u093f\u05bdէऍפ\u0cfaక";
				break;
			case 82:
				obj = "\u0cd8ఞ\u0df6\u093e\u05b9ճछ";
				break;
			case 83:
				obj = "బ෬ण\u05bcջउ\u05cf\u0cfcఏ\u0df6";
				break;
			case 84:
				obj = "ऩ׀\u0ccaశ\u0dcaघ\u058bՑळ\u05c2\u0cc3\u0c3e";
				break;
			case 85:
				obj = "\u05c2ೡఓ\u0de0\u093f";
				break;
			case 86:
				obj = "\u0599էरעೡఞ\u0dd6थ\u05bdձऊ";
				break;
			case 87:
				obj = "՛ऊץ\u0cf0ఉසत\u05b4ձष\u05ee\u0cfaక";
				break;
			case 88:
				obj = "\u0dd6ढ\u05b4ջग\u05feೡ";
				break;
			case 89:
				obj = "ए\u05aaջउ\u05fe\u0cf0ఉවव\u05acձऐ\u05fe\u0cfcఔ෫\u093e\u0591պऍ\u05f9\u0cf4గ෩न\u05aa";
				break;
			case 90:
				obj = "\u0cd6ఔ෨ऽ\u05b7էछ\u05ff";
				break;
			case 91:
				obj = "శ෪\u093b\u05b1ձ";
				break;
			case 92:
				obj = "ओצ\u0cfcట";
				break;
			case 93:
				obj = "\u05c1\u0cf4ఉ\u0de2न";
				break;
			case 94:
				obj = "\u058bսओ\u05fd\u0cf9ఞ\u0dccम\u05b7պ\u093b\u05f5ೡఉ\u0de4म\u05acջऌ";
				break;
			case 95:
				obj = "Ռओס";
				break;
			case 96:
				obj = "\u0dcc\u0900\u0599Փ\u093bג\u0cd7ల\u0dd1\u0900\u0599Մ";
				break;
			case 97:
				obj = "ङ\u05a1դछ׃\u0cf4ఖ\u0de0";
				break;
			case 98:
				obj = "\u0cd8ఒ෦\u093f\u05b7էऑ\u05ebೡ\u0c55හझ\u0591Ժलע\u0cf4ట\u0dccठ\u05b9ճछי೬ఋ\u0de0\u093e";
				break;
			case 99:
				obj = "ష\u0dd7ऒ\u0595՛र\u05c2\u0cd6ళ\u0dd7\u0902\u0595Ց";
				break;
			case 100:
				obj = "लפ\u0cfbఐ\u0dca\u093b\u05bdզऒ\u05ec೬";
				break;
			case 101:
				obj = "׀\u0cfcఘ\u0df7ढ\u05abջघ\u05f9\u0cbb\u0c3a\u0dd5ऄ\u05f6Նछ\u05fe\u0cfaఎ\u0df7म\u05bdՀइ\u05fd\u0cf0ఈ";
				break;
			case 102:
				obj = "\u0597դछף\u0cdcఘ෪ण";
				break;
			case 103:
				obj = "Ցबן\u0cda\u0c29\u0ddaए\u0599Րड\u05c8\u0ccd\u0c3e\u0ddaऋ\u0597Նळ\u05cc\u0cc1";
				break;
			case 104:
				obj = "හह\u05acզगׯೠఏ\u0de0\u093e";
				break;
			case 105:
				obj = "ञ\u05bdոछ\u05eeೡఞ\u0de1";
				break;
			case 106:
				obj = "\u0cc6ఓ\u0de0ड\u05b4՝झע\u0cfbన෬ष\u05bd";
				break;
			case 107:
				obj = "ల\u0df6\u0901\u05b1պकרೱ";
				break;
			case 108:
				obj = "बר\u0cf4ట\u0dd1त\u05b5ձऑ\u05f8ೡ";
				break;
			case 109:
				obj = "מ\u0cfcఖ\u0df5ड\u05bd՛ऎר\u0cfbఽ෬ड\u05bdՐग\u05ec\u0cf9ఔ\u0de2";
				break;
			case 110:
				obj = "\u0594յऍ\u05f9\u0cc0ఋ\u0de1ब\u05acձऽץ\u0cf0ఘ෮";
				break;
			case 111:
				obj = "Ձब\u05c1\u0cc6";
				break;
			case 112:
				obj = "\u0dd2त\u05bcՠख";
				break;
			case 113:
				obj = "ए\u05b1ՠऽעೠక\u0df1";
				break;
			case 114:
				obj = "\u0cddఞ෬प\u05b0ՠ";
				break;
			case 115:
				obj = "హ\u0dfcह\u05bdէषף\u0cc7ఞ\u0df6";
				break;
			case 116:
				obj = "ऩפ\u0cfbట෪\u093a\u05ab";
				break;
			case 117:
				obj = "ן\u0cf0ఋ෩ब\u05bbձ";
				break;
			case 118:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6՚ऑ\u05f9\u0cfcఝ\u0dfcऎ\u05b7ոऒר\u0cf6ఏ෬ढ\u05b6\u0557ख\u05ec\u0cfbజ\u0de0ऩ\u0599շऊפ\u0cfaక";
				break;
			case 119:
				obj = "Ԯश\u05ec೦ఓ\u0dd0ह\u05b1ոऍ";
				break;
			case 120:
				obj = "\u0dbf\u0903\u05b7ՠग\u05eb೬స෪ड\u05b4ձझ\u05f9\u0cfcఔ෫ऎ\u05b0յऐת\u0cf0టහम\u05acսऑף";
				break;
			case 121:
				obj = "ॷ\u059fզऑ\u05f8\u0ce5ల෦ढ\u05b6Րग\u05ff";
				break;
			case 122:
				obj = "ಯష෪प\u05bfձऌ";
				break;
			case 123:
				obj = "\u0c41ස\u093f\u05b9չछ";
				break;
			case 124:
				obj = "\u0944\u05c1\u0cfaచ\u0de1\u0901\u05b1նऌ\u05ec೧\u0c02වव\u059eոटת೦";
				break;
			case 125:
				obj = "\u05b7\u0cc6ళෂन\u05acՒगס\u0cf0ల෫फ\u05b7Ւऒ\u05ecೲఈ";
				break;
			case 126:
				obj = "עՇगנ\u0ce5గ\u0de0ऄ\u05bbջऐ\u05c8೭ఏ\u0df7ब\u05bbՠऑ\u05ff";
				break;
			case 127:
				obj = "Ԯष\u05ee\u0cfaక\u0dd6त\u05a2ձ";
				break;
			case 128:
				obj = "\u0dbfए\u05aaջउ\u05fe\u0cf0ఉවव\u05acձऐ\u05fe\u0cfcఔ෫\u093e\u0591պऍ\u05f9\u0cf4గ෩न\u05aa";
				break;
			case 129:
				obj = "ॷ\u059bջओ\u05fd೧ఞ\u0df6\u093e\u05b1ջऐמೡఉ\u0de4ह\u05bdճइ";
				break;
			case 130:
				obj = "ಯళ\u0df1ठ\u05b4Մऌע\u0cf6ఞ\u0df6\u093e\u05b7զ";
				break;
			case 131:
				obj = "\u0c41\u0ddfऄֈՁऊפ\u0cf9ఈ";
				break;
			case 132:
				obj = "\u0944\u05c5\u0cc1య\u0dd5घ\u05acսऒ\u05fe";
				break;
			case 133:
				obj = "\u05b7\u0cd8చ෬ड֍ՠगס೦";
				break;
			case 134:
				obj = "ע\u0557ख\u05ecೡశ\u0de4ण\u059cսटס\u0cfaజ\u0dd7न\u05abաऒ\u05f9";
				break;
			case 135:
				obj = "Ԯष\u05c9ದ\u0c0dභऋ\u05b4յङ\u05fe";
				break;
			case 136:
				obj = "\u0dbfऎ\u05b0յऊנ\u0cf4కෆढ\u05b6ղगתೠఉ\u0de4ह\u05b1ջऐ";
				break;
			case 137:
				obj = "ङ\u05bdլऊי೧చ෫\u093e\u05bbզग\u05fdೡఒ෪ण";
				break;
			case 138:
				obj = "ೲగ෪य\u05b9ո\u0944\u05b7\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐ\u05c4\u0cd1\u0c48ණऄ\u059cԧ\u093b\u05ff೧ఔ\u0df7";
				break;
			case 139:
				obj = "\u0c41ස\u093f\u05b9չछ\u05c4\u0cd1";
				break;
			case 140:
				obj = "षף\u0ce3ఔ෮न\u059dլऊ\u05ff\u0cf4ఘ\u0df1झ\u05aaջङ\u05ff\u0cf0ఈ\u0df6ई\u05aeձऐ\u05f9";
				break;
			case 141:
				obj = "ת\u0cf9ఔ෧ब\u05b4Ԯ\u0944ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc5ఉ෪ऽ\u05bdզऊפ\u0cf0ఈණट\u05bdէऑ\u05f8೧ఘ\u0de0\u093e";
				break;
			case 142:
				obj = "\u0596ջऊ\u05c1\u0cfaచ\u0de1ऋ\u05b1ոऊר೧ఈ";
				break;
			case 143:
				obj = "Ցआ\u05fd೧ఞ෨न\u05b6ՠग\u05ec\u0cf9";
				break;
			case 144:
				obj = "\u0dccण\u05bbզछנ\u0cf0క\u0df1";
				break;
			case 145:
				obj = "ट\u05bdյच\u05c2\u0cfbగ\u0dfc";
				break;
			case 146:
				obj = "\u0cd4ఙ෪\u093f\u05acՆछ\u05f9೧\u0c02\u0dccप\u05b6ջऌר";
				break;
			case 147:
				obj = "ల\u0de2ण\u05b7զछ";
				break;
			case 148:
				obj = "\u0944ס\u0cf0ఝ\u0df1ॡ\u05f8Ԯऊע\u0ce5\u0c57ඥॷ\u05aaսङץೡ\u0c57ඥॷ\u05baջऊ\u05f9\u0cfaఖ";
				break;
			case 149:
				obj = "ת\u0cf9ఔ෧ब\u05b4Ԯ\u0944מ೬ఈ\u0df1न\u05b5Ժ\u093a\u05ff\u0cf4ఌ෬ण\u05bfԺमע\u0cfcక\u0df1";
				break;
			case 150:
				obj = "עՌ\u0952\u05adಯఢ";
				break;
			case 151:
				obj = "Ճऌפೡఞශन\u05b4ձङ\u05ecೡఞ";
				break;
			case 152:
				obj = "\u0dc9ढ\u05b9հगףೲ";
				break;
			case 153:
				obj = "ङ\u05b7տछף\u0cd0గ\u0de0\u093b\u05b9ՠगע\u0cfbయ\u0dfcऽ\u05bd\u0558गנ\u0cfcఏ\u0de0ऩ";
				break;
			case 154:
				obj = "\u0cc7ఞ\u0de4ऩ\u05b1պङג\u0cd7ఞ\u0de3ढ\u05aaձबר\u0cf4టවण\u05acզइ";
				break;
			case 155:
				obj = "శ෬ऩ\u05bcոछ";
				break;
			case 156:
				obj = "भ\u05ec\u0ce3ఒ෫पևՖछ\u05eb\u0cfaఉ\u0de0च\u05aaսऊר\u0cd0క\u0df1\u093f\u05a1";
				break;
			case 157:
				obj = "\u05c1\u0cfaఌ\u0de0\u093e\u05ac";
				break;
			case 158:
				obj = "\u058bյईפ\u0cfbజ\u0ddaऌ־ՠछ\u05ff\u0cc7ఞ෫ब\u05b5ձपר\u0cf8ఋහ\u093f\u05bbռग\u05fb\u0cf0";
				break;
			case 159:
				obj = "Ԯष\u05fe\u0cd7చ෦द\u05bfզऑ\u05f8\u0cfbటඩ७עՄऌפ\u0cfaఉ෬ह\u05a1";
				break;
			case 160:
				obj = "\u0dc9ब\u05aaճछ\u05c4\u0cf6ఔ෫";
				break;
			case 161:
				obj = "ई\u05a0ՠऌ\u05ec\u0cf6ఏ෬ण\u05bfՋ\u093b\u05f5ೡఉ\u0de4म\u05acՑऐ\u05f9೧\u0c02\u0dd2ढ\u05adոच\u05c2\u0ce3ఞ\u0df7\u093a\u05aaսऊר";
				break;
			case 162:
				obj = "\u0cc6ఐ෬ऽ";
				break;
			case 163:
				obj = "\u0c41\u0dc9ब\u05b6ճऋ\u05ecೲఞ\u0dccउ";
				break;
			case 164:
				obj = "मצ೯ఒ\u0df5च\u05bdյक";
				break;
			case 165:
				obj = "\u05cbೠగ෩";
				break;
			case 166:
				obj = "\u0594ձईר\u0cf9\u0c49";
				break;
			case 167:
				obj = "\u0558छ\u05fb\u0cf0గඳ";
				break;
			case 168:
				obj = "ෆढ\u05b5դऌר೦ఈ";
				break;
			case 169:
				obj = "च\u0595Ջळ\u05c2\u0cc0నවच\u0590Ց\u093b\u05c1";
				break;
			case 170:
				obj = "\u0cd3ఒ෩न\u0597բछ\u05ff\u0cdcక\u0df1न\u05aaպछ\u05f9";
				break;
			case 171:
				obj = "ష\u0de0ब־ոछ\u05f9\u0cc5చ\u0de2न";
				break;
			case 172:
				obj = "रע\u0cfbశ\u0df0\u093e\u05b1շटס\u0cd8ఞ\u0df7म\u05b0յऐש\u0cfcఈ\u0de0";
				break;
			case 173:
				obj = "ן\u0cf0ఘ෪\u093f\u05bcսऐת\u0cd9ఔ෦ब\u05acսऑף";
				break;
			case 174:
				obj = "\u0591ոऒ\u05f8೦ఏ\u0df7ब\u05acսऑף";
				break;
			case 175:
				obj = "Ԯओצ\u0cfcట";
				break;
			case 176:
				obj = "\u0dbfम\u05baԸफ़\u05b7\u0cf4ఙ\u0dccउ";
				break;
			case 177:
				obj = "\u0901\u0597Օ\u093aג\u0cc2ల\u0dd1अևՕलי\u0cd0\u0c29වउևՇ\u093b\u05cc\u0cc7స\u0dcdऒֈՕप\u05c5";
				break;
			case 178:
				obj = "ೲగ෪य\u05b9ո\u0944\u05b7\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐ\u05c4\u0cd1\u0c48ණऄ\u059cԧई\u05bf\u0cd3ఉ\u0de4ठ\u05bdէॐ\u05cf\u0cfcక\u0de4\u093f\u05a1Ւऌ\u05ec\u0cf8ఞ\u0df6\u0963\u059aսऐ\u05ec೧\u0c02ස\u093f\u05b9չछ";
				break;
			case 179:
				obj = "\u0c41\u0dd5ढ\u05abսऊפ\u0cfaకඩ७עՆछ\u05ecೱయ෬ठ\u05bdջऋ\u05f9ಹ\u0c5b\u0dbfच\u05aaսऊר\u0cc1ఒ෨न\u05b7աऊ\u05a1ವ\u0c41ෆब\u05a8յझפೡ\u0c02";
				break;
			case 180:
				obj = "\u0944ן\u0cf0చ\u0de1\u0902\u05b6ոइ\u05a1ವ\u0c41වण\u05bbզइ\u05fdೡఒ෪ण״Դ\u0944\u05ca೧ఔ\u0df0ऽ\u0591հछףೡఒ\u0df1ऴ״Դ\u0944\u05ce\u0cfaఖ\u0df5\u093f\u05bdէऍפ\u0cfaకඩ७עՀटת\u0cd4గ\u0df1न\u05aaՄऌר೦ఞ\u0df7\u093b\u05b9ՠगע\u0cfb\u0c57ඥॷ\u059eսऒר\u0cd4గ\u0df1न\u05aaՄऌר೦ఞ\u0df7\u093b\u05b9ՠगע\u0cfb\u0c57ඥॷ\u0591էलפ\u0cfbఐ\u0de0ऩ״Դ\u0944\u05c9\u0cf4ఏ\u0de4";
				break;
			case 181:
				obj = "ת\u0cf9ఔ෧ब\u05b4Ԯ\u0944ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aaԺह\u05ff\u0cfaఎ\u0df5ऄ\u05bbջऐ\u05c9\u0cfcఉවण\u05acզइ";
				break;
			case 182:
				obj = "\u05bfոऑׯ\u0cf4గ\u0dbfॷ֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6՝झע\u0cfb\u0c3e\u0dfdह\u05aaյझ\u05f9\u0cfaఉණऄ\u05bbջऐ\u05c9\u0cfcఉවण\u05acզइ";
				break;
			case 183:
				obj = "Ԯऩפೱఏ෭ॡ\u05f8Ԯशר\u0cfcజ෭ह״Դ\u0944\u05ce\u0cfaగ෪\u093f\u059bջऋףೡ\u0c57ඥॷ֊ձऍר೧\u0c0d\u0de0ऩ״Դ\u0944ם\u0cf9చ෫न\u05abԸफ़\u05b7\u0cd7ఒ\u0df1ऎ\u05b7աऐ\u05f9ಹ\u0c5b\u0dbfए\u05a1ՠछ\u05fe\u0cdcక\u0dd7न\u05abԸफ़\u05b7\u0cdc\u0c3f";
				break;
			case 184:
				obj = "\u0dd0ण\u05b1լ";
				break;
			case 185:
				obj = "ग\u05b4սज\u05ce\u0cfaట\u0de0म";
				break;
			case 186:
				obj = "\u0ccfఒ\u0df5ॻ\u05ec՛ऎ\u05f9\u0cfcఔ෫";
				break;
			case 187:
				obj = "ల෫म\u05aaձओר\u0cfbఏශन\u05bbզछנ\u0cf0క\u0df1";
				break;
			case 188:
				obj = "षף\u0ce5ఎ\u0df1ए\u05adղघר೧";
				break;
			case 189:
				obj = "׃\u0cf0\u0c03\u0df1घ\u05a8հट\u05f9\u0cf0స෭न\u05bbտ";
				break;
			case 190:
				obj = "\u059dպझ\u05ff೬ఋ\u0df1त\u05b7պ\u093fסೲఔ\u0df7त\u05acռओ";
				break;
			case 191:
				obj = "՚छ\u05f5ೡఴ\u0df0ह";
				break;
			case 192:
				obj = "ෂ\u093f\u05b7աऎ\u05c4\u0cf6ఔ෫उ\u05b1զ\u093bףೡఉ\u0dfc";
				break;
			case 193:
				obj = "\u093f\u05bb՚ऑ\u05ff\u0cf8చ෩झ\u05b7էग\u05f9\u0cfcఔ෫";
				break;
			case 194:
				obj = "\u0cd6ఔ\u0df0ण\u05ac";
				break;
			case 195:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dcdब\u05abռफ\u05f9\u0cfcగ\u0df6ॷע";
				break;
			case 196:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼרԡड\u05c5\u0cf4ఈ෭घ\u05acսऒ\u05fe";
				break;
			case 197:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cdbఔ\u0df1त־խऽע\u0cf9గ\u0de0म\u05acսऑף\u0cd6ఓ\u0de4ण\u05bfձच\u05cc\u0cf6ఏ෬ढ\u05b6Ԯ\u0944";
				break;
			case 198:
				obj = "֊ձटשತ\u0c4bඳऒ\u0596ջऊפ\u0cf3\u0c02ෆढ\u05b4ոछ\u05eeೡఒ෪ण\u059bռटףೲఞ\u0de1ऌ\u05bbՠगע\u0cfb";
				break;
			case 199:
				obj = "Օई\u05ec\u0cfcగ\u0de4य\u05b4ձ\u093c״ೡఞ\u0df6\u0902\u05adՠ";
				break;
			case 200:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණऄ\u05bbջऐ\u05c8೭ఏ\u0df7ब\u05bbՠऑ\u05ff\u0cbbల෦ढ\u05b6Րग\u05ff\u0cd0క\u0df1\u093f\u05a1Ԯ\u0944";
				break;
			case 201:
				obj = "च\u05aaսऊרತ\u0c4aඵऒ\u0591շऑף\u0cd1ఒ\u0df7ई\u05b6ՠऌ״";
				break;
			case 202:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbల෦ढ\u05b6Ցआ\u05f9೧చ෦ह\u05b7զॐ\u05ca೧ఔ\u0df0ऽ\u0591շऑף\u0cd1ఒ\u0df7ॷע";
				break;
			case 203:
				obj = "\u0c29\u0de0ब\u05bcԥ\u094f\u05bc\u0cca\u0c3c\u0df7ढ\u05adդष\u05ee\u0cfaకශत\u05aa";
				break;
			case 204:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐ\u05c1\u0cfaజ\u0de2न\u05aaԮ\u0944";
				break;
			case 205:
				obj = "ך೧ఒ\u0df1नשԥ\u094bג\u0cd9ఔ\u0de2प\u05bdզ";
				break;
			case 206:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6\u0557ऑף\u0cf3ఒ\u0de2स\u05aaյऊפ\u0cfaకණऎ\u05b0յऊנ\u0cf4కෆन\u05b6ՠऌ\u05ec\u0cf9స෪ण־սङ\u05f8೧చ\u0df1त\u05b7պ\u0944\u05b7\u0cd6ఓ\u0de4ह\u05b5յऐ\u05ce\u0cf0క\u0df1\u093f\u05b9ոऽע\u0cfbఝ෬प\u05adզट\u05f9\u0cfcఔ෫ॷ\u058cզऋרಯ";
				break;
			case 207:
				obj = "Նछ\u05ecೱ\u0c4aපॻև\u0557ख\u05ecೡఖ\u0de4ण\u059bձऐ\u05f9೧చ෩ऎ\u05b7պघפೲఎ\u0df7ब\u05acսऑף";
				break;
			case 208:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbలශॾ\u05f6Ւऌ\u05ec\u0cf8ఞ\u0dbfॷ";
				break;
			case 209:
				obj = "च\u05aaսऊרತ\u0c49ඵऒ\u059eզटנ\u0cf0";
				break;
			case 210:
				obj = "\u0cd8ఒ෦\u093f\u05b7էऑ\u05ebೡ\u0c55හझ\u0591Ժलע\u0cf4ట\u0dc9त\u05baզट\u05ff೬\u0c3e\u0dfdऋ\u05b4յङ\u05feಯ\u0c41";
				break;
			case 211:
				obj = "ష෪ब\u05bc՝ओ\u05ecೲఞ\u0dd1ऴ\u05a8ձऍ";
				break;
			case 212:
				obj = "बר\u0cf4టපॿשՋलע\u0cf4ట\u0dc9त\u05baզट\u05ff೬\u0c3e\u0dfdऋ\u05b4յङ\u05fe";
				break;
			case 213:
				obj = "׀\u0cfcఘ\u0df7ढ\u05abջघ\u05f9\u0cbb\u0c3a\u0dd5ऄ\u05f6\u0558ऑ\u05ecೱల෨ब\u05bfձप״\u0ce5ఞ\u0df6ॷע";
				break;
			case 214:
				obj = "֏զग\u05f9\u0cf0\u0c4aභॸև\u0558ऑ\u05ecೱల෨ब\u05bfձप״\u0ce5ఞ\u0df6";
				break;
			case 215:
				obj = "նऑ\u05f9ೡఔ෨";
				break;
			case 216:
				obj = "\u0dc8त\u05bbզऑ\u05fe\u0cfaఝ\u0df1\u0963\u0599Մष\u05a3\u0cc6ళෂन\u05acՒगס\u0cf0ల෫फ\u05b7Ւऒ\u05ecೲఈ\u0dbfॷ";
				break;
			case 217:
				obj = "ट\u05bdյच\u05bcಧ\u0c4d\u0ddaञ\u0590Փछ\u05f9\u0cd3ఒ෩न\u0591պघע\u0cd3గ\u0de4प\u05ab";
				break;
			case 218:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbల෦ढ\u05b6Ցआ\u05f9೧చ෦ह\u05b7զॐמ\u0cfcఖ\u0df5ड\u05bd՝झע\u0cfb\u0c3e\u0dfdह\u05aaյझ\u05f9\u0cfaఉ\u0dbfॷ";
				break;
			case 219:
				obj = "బ\u0df7त\u05acձ\u094f־ಥత\u0dd6त\u05b5դऒר\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aa";
				break;
			case 220:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐ\u05c4\u0cf6ఔ෫ई\u05a0ՠऌ\u05ec\u0cf6ఏ෪\u093f\u05f6Շगנ\u0ce5గ\u0de0ऄ\u05bbջऐ\u05c8೭ఏ\u0df7ब\u05bbՠऑ\u05ff\u0cbeల෦ढ\u05b6Շग\u05f7\u0cf0\u0c41\u0dbf";
				break;
			case 221:
				obj = "ן\u0cf0చ\u0de1ॼ\u05ebԥड\u05c4\u0cf6ఔ෫ञ\u05b1ծछ";
				break;
			case 222:
				obj = "\u0594ջङת\u0cf0ఉ";
				break;
			case 223:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժष\u05ee\u0cfaకවव\u05acզट\u05eeೡఔ\u0df7\u0963\u058bռछס\u0cf9\u0c48භ०\u0591Հ\u093b׀\u0cdc\u0c3f\u0dc9ऄ\u058bՀ\u0944\u05b7";
				break;
			case 224:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcದ\u0c4e\u0ddaऄ\u058cՑळ\u05c4\u0cd1ష\u0dccञ\u058c";
				break;
			case 225:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u0591շऑף\u0cd0\u0c03\u0df1\u093f\u05b9շऊע೧\u0c55\u0dd0\u093e\u05bdզ\u094d\u05bfಯ\u0c41";
				break;
			case 226:
				obj = "\u0cc7ఞ\u0de4ऩשԧ\u0948ג\u0cc0ఈ\u0de0\u093f\u05ebԦ";
				break;
			case 227:
				obj = "ఈ෭ढ\u05af\u0557ओש";
				break;
			case 228:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐ\u05cf೧ఔ\u0df2\u093e\u05bdզ\u093b\u05f5ೡఞ෫\u093e\u05b1ջऐ\u05fe\u0cbbహ\u0df7ढ\u05afէछ\u05ff\u0cd0\u0c03\u0df1न\u05b6էगע\u0cfbఈ\u0dccण\u05abՠटס\u0cf9ఞ\u0df7ॷע";
				break;
			case 229:
				obj = "\u05ce\u0cfaఖ\u0df5\u093f\u05bdէऍפ\u0cfaక\u0dc8न\u05acռऑש";
				break;
			case 230:
				obj = "֏զग\u05f9\u0cf0\u0c4aනॽևՖऌע\u0ce2ఈ\u0de0\u093f\u059dլऊר\u0cfbఈ෬ढ\u05b6էषף೦ఏ\u0de4ड\u05b4ձऌ";
				break;
			case 231:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0591Ր\u094d\u05a3\u0cdc\u0c3fබ\u093bתՒऌ\u05ec\u0cf8ఞ\u0df6\u0963\u059aսऐ\u05ec೧\u0c02ස\u093f\u05b9չछ\u05fe\u0cbbహ\u0de4\u093e\u05bdՒगס\u0cf0ఽ\u0df7ब\u05b5ձ\u0944\u05b7";
				break;
			case 232:
				obj = "\u0dd7न\u05b9հ\u094f\u05b9ತత\u0dc7ब\u05abձसפ\u0cf9ఞස\u093f\u05b9չछ";
				break;
			case 233:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963ւսऎ\u05a3\u0cd6ఔ෨ऽ\u05aaձऍ\u05fe\u0cfcఔ෫\u0901\u05bdբछסಯ\u0c41";
				break;
			case 234:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u094a\u05b8\u0ccaస෪ठ\u05a8զछ\u05fe೦ఒ෪ण\u0594ձईר\u0cf9";
				break;
			case 235:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0ddfत\u05a8Ժऽע\u0cf8ఋ\u0df7न\u05abէगע\u0cfbన\u0df1\u093f\u05b9ՠछת೬\u0c41\u0dbf";
				break;
			case 236:
				obj = "बר\u0cf4టපॹ\u05eeՋऽע\u0cf8ఋ\u0df7न\u05abէगע\u0cfbన\u0df1\u093f\u05b9ՠछת೬";
				break;
			case 237:
				obj = "ט೧గෆढ\u05b6ղगתೠఉ\u0de4ह\u05b1ջऐ";
				break;
			case 238:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණअ\u05acչऒם೧ఔ෦न\u05abէऑ\u05ffಯ\u0c41";
				break;
			case 239:
				obj = "ՃऌפೡఞපॸרՋश\u05f9\u0cf8గ\u0dd5\u093f\u05b7շछ\u05fe೦ఔ\u0df7";
				break;
			case 240:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbఽ෬ड\u05bdՁऊפ\u0cf9ఈ\u0dbfॷ";
				break;
			case 241:
				obj = "ट\u05bdյच\u05bcಠ\u0c4a\u0ddaऋ\u05b1ոछטೡఒ෩\u093e";
				break;
			case 242:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐח\u0cdcఫ\u0dd0ह\u05b1ոऍ\u05b7ಯ";
				break;
			case 243:
				obj = "బ\u0df7त\u05acձ\u094f\u05b8ಠత\u0ddfऄֈՁऊפ\u0cf9ఈ";
				break;
			case 244:
				obj = "बר೦ఔ\u0df0\u093f\u05bbձप״\u0ce5ఞ\u0df6";
				break;
			case 245:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cd1\u0c02෫ब\u05b5սझ\u05cc\u0cf6ఏ෬\u093b\u05b9ՠऑ\u05ffಯ\u0c41";
				break;
			case 246:
				obj = "֊ձटשತ\u0c4eඳऒ\u059cխऐ\u05ec\u0cf8ఒ෦ऌ\u05bbՠग\u05fb\u0cf4ఏ෪\u093f";
				break;
			case 247:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0590Հपם\u0cc0ఏ෬ड\u05abԮ\u0944";
				break;
			case 248:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcಣ\u0c4b\u0ddaअ\u058cՀमטೡఒ෩\u093e";
				break;
			case 249:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u059cձघ\u05ecೠగ\u0df1ऌ\u05adհगע\u0cd1ఞ\u0df3त\u05bbձऽע\u0cfbఏ\u0df7ढ\u05b4ոछ\u05ffಯ\u0c41";
				break;
			case 250:
				obj = "\u0cc7ఞ\u0de4ऩשԢ\u094fג\u0cd1ఞ\u0de3ब\u05adոऊ\u05ccೠట෬ढ\u059cձईפ\u0cf6ఞෆढ\u05b6ՠऌע\u0cf9గ\u0de0\u093f";
				break;
			case 251:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0ddfत\u05a8Ժ\u093b\u05f5ೡఉ\u0de4म\u05acՑआפ೦ఏ෬ण\u05bfՒगס\u0cf0\u0c3a෦ह\u05b1ջऐ\u05b7ಯ";
				break;
			case 252:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐט\u0cc7షෆढ\u05b6ղगתೠఉ\u0de4ह\u05b1ջऐ\u05a3\u0cc0ఉ෩ऎ\u05b7պघפೲఎ\u0df7ब\u05acսऑף\u0cd6ఔ෫ह\u05b9սऐר೧\u0c41\u0dbfघ\u05aaոऽע\u0cfbఝ෬प\u05adզट\u05f9\u0cfcఔ෫ऎ\u05b7պऊ\u05ec\u0cfcక\u0de0\u093fעՀऌ\u05f8\u0cf0\u0c41";
				break;
			case 253:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aaԺष\u05ee\u0cfaకසड\u05b9ճऍ\u05b7ಯ";
				break;
			case 254:
				obj = "֏զग\u05f9\u0cf0\u0c4aඳॸև՝झע\u0cfbఽ෩ब\u05bfէ";
				break;
			case 255:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժऽץ\u0cf4ఏ෨ब\u05b6Հख\u05ff\u0cf0చ\u0de1त\u05b6ճॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պपץ೧ఞ\u0de4ऩעԮ";
				break;
			case 256:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbన\u0df1\u093f\u05bdյओטೡఒ෩\u093eעԮ";
				break;
			case 257:
				obj = "ट\u05bdյच\u05bcಣ\u0c4d\u0ddaऎ\u05b0յऊנ\u0cf4క\u0dd1थ\u05aaձटש";
				break;
			case 258:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐמ\u0cf0ఘ\u0df0\u093f\u05b1ՠइטೡఒ෩\u093e׳Ցऒר\u0ce3చ\u0df1त\u05b7պशר\u0cf9ఋ\u0de0\u093f׳Հऑצ\u0cf0కවड\u05bdբट\u05f9\u0cfcఔ෫ङ\u05a1դछ\u05b7ಯ";
				break;
			case 259:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cc7ఞ\u0df6ढ\u05adզझר\u0cc0ఏ෬ड\u05abԮ\u0944";
				break;
			case 260:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6\u0559टפ\u0cf9మ\u0df1त\u05b4է\u0944\u05b7";
				break;
			case 261:
				obj = "׀\u0cfcఘ\u0df7ढ\u05abջघ\u05f9\u0cbb\u0c3a\u0dd5ऄ\u05f6\u0558ऑע\u0cfeఎ\u0df5ऄ\u05bbջऐ\u05c4ೱఽ\u0df7ढ\u05b5Րग\u05ff\u0cf0ఘ\u0df1ढ\u05aaխ\u093b\u05f5\u0cd3గ\u0de4प\u05abԮ\u0944";
				break;
			case 262:
				obj = "֏զग\u05f9\u0cf0\u0c4a\u0db2ॽև\u0559टפ\u0cf9మ\u0df1त\u05b4է";
				break;
			case 263:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0591Ր\u094d\u05a3\u0cdc\u0c3fබ\u093bתՒऌ\u05ec\u0cf8ఞ\u0df6\u0963\u059eսऒ\u05f9\u0cf0ఉෆढ\u05b4ոछ\u05eeೡఒ෪णעԮ";
				break;
			case 264:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbయ\u0de0व\u05acՁऊפ\u0cf9ఈ\u0dbfॷ";
				break;
			case 265:
				obj = "ट\u05bdյच\u05bcಢ\u0c4a\u0ddaऋ\u05b1ոऊר೧స෪ड\u05b4ձझ\u05f9\u0cfcఔ෫";
				break;
			case 266:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbడ෬ऽ\u05f6Վग\u05fd\u0cd0క\u0df1\u093f\u05a1Շऑ\u05f8೧ఘ\u0de0ॷע";
				break;
			case 267:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cd1ష\u0dc9घ\u05acսऒ\u05feಯ\u0c41";
				break;
			case 268:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6Ճष׃ದ\u0c49හझ\u0591Ԯ\u0944";
				break;
			case 269:
				obj = "ך೧ఒ\u0df1नשԣ\u094bג\u0cc1ఔ෮न\u05b6Ցऒר\u0ce3చ\u0df1त\u05b7պप״\u0ce5ఞ";
				break;
			case 270:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05c4\u0cfbఘ\u0df7न\u05b5ձऐ\u05f9\u0cd1ఞ෦\u093f\u05bdչछףೡ\u0c41\u0dbf";
				break;
			case 271:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963֊ձङפ೦ఏ\u0df7ऴ\u0599շझר೦ఈ෪\u093fעԮ";
				break;
			case 272:
				obj = "\u0dd7न\u05b9հ\u094f\u05baಣత\u0dd7न\u05bfսऍ\u05f9೧\u0c02හम\u05bbձऍ\u05fe\u0cfaఉ";
				break;
			case 273:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u059bռट\u05f9\u0cf8చ෫ई\u05b6բग\u05ff\u0cfaక෨न\u05b6ՠ\u0944\u05b7";
				break;
			case 274:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u0946\u05bd\u0ccaడ෬ऽ\u059dպऊ\u05ff೬న෪स\u05aaշछ";
				break;
			case 275:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cdc\u0c3fබ\u0963\u059eսऒ\u05f9\u0cf0ఉ\u0dd1ऴ\u05a8ձऍ\u05b7ಯ";
				break;
			case 276:
				obj = "बר\u0cf4టපॵשՋऩ\u05c4\u0cdb\u0c48භऌֈ՝";
				break;
			case 277:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺभר\u0cf6ఎ\u0df7त\u05acխफ\u05f9\u0cfcగ\u0df6ॷע";
				break;
			case 278:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u059bջऐ\u05eb\u0cfcజ\u0df0\u093f\u05b9ՠगע\u0cfb\u0c41\u0dbf";
				break;
			case 279:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u059bռट\u05f9\u0cd8చ෫\u0900\u05bdէऍ\u05ecೲఞ\u0dc7ढ\u05a0Ֆऋ\u05f9ೡఔ෫\u093eעԮ";
				break;
			case 280:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcಭ\u0c4e\u0ddaऎ\u05b0յऊ׀\u0cf4క\u0dc8न\u05abէटת\u0cf0హ෪व\u059aաऊ\u05f9\u0cfaక\u0df6";
				break;
			case 281:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963֍ՠगס೦\u0c55ෆथ\u05b9ՠळ\u05ec\u0cfb\u0c3f෬ब\u05b4ջङן\u0cf0ఈ\u0df0ड\u05acԮ\u0944";
				break;
			case 282:
				obj = "\u0cc7ఞ\u0de4ऩשԬ\u0948ג\u0cd6ఓ\u0de4ह\u0595յऐ\u05c9\u0cfcచ෩ढ\u05bfՆछ\u05feೠగ\u0df1";
				break;
			case 283:
				obj = "బ\u0df7त\u05acձ\u094f\u05b4ಥత\u0dccण\u05bbզछנ\u0cf0క\u0df1उ\u05bdշऌר\u0cf8ఞ෫ह";
				break;
			case 284:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6՝\u093a־\u0cbbలශॾ\u05aeԦसס\u0cf4జ\u0df6ॷע";
				break;
			case 285:
				obj = "ן\u0cf0చ\u0de1ॼסԥड\u05c4\u0cd1\u0c48\u0df3ॿ\u059eոटת೦";
				break;
			case 286:
				obj = "֏զग\u05f9\u0cf0\u0c4a\u0dbcॸևՑआ\u05f9೧చ෦ह\u059dլग\u05feೡఒ෫प\u059eսऒר\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 287:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0591Ր\u094d\u05a3\u0cdc\u0c3fබई\u05aaզऑ\u05ffಯ\u0c41";
				break;
			case 288:
				obj = "\u0dd7न\u05b9հ\u094f\u05b4ಣత\u0dccउ\u05ebՑऌ\u05ff\u0cfaఉ";
				break;
			case 289:
				obj = "च\u05aaսऊרಧ\u0c4bඵऒ\u059bռट\u05f9\u0cf8చ෫ऎ\u05b7պघפೲఎ\u0df7ब\u05acսऑף";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴃ = (char[])(object)Ⴓ.Ⴃ;
			int num2 = ⴃ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴃ[(num3 + Ⴀ) % num2]);
			}
			result = new string(array);
			Ⴃ[num] = result;
			return result;
		}

		static Ⴓ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴓ.Ⴃ = (string[])(object)array;
			Ⴃ = new string[290];
		}
	}
	internal sealed class Ⴗ
	{
		private static readonly char[] Ⴃ;

		private static readonly string[] Ⴃ;

		internal static string ႳႭႨ(int Ⴀ)
		{
			int num = Ⴀ ^ 0x33796AA2;
			string result;
			if ((result = Ⴃ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "\u0dcdब\u05abռफ\u05f9\u0cfcగ\u0df6";
				break;
			case 1:
				obj = "";
				break;
			case 2:
				obj = "\u0cd6ఔ෨ऽ\u05aaձऍ\u05fe\u0cfcఔ෫\u0900\u05bdՠखעೱ";
				break;
			case 3:
				obj = "ల෦ढ\u05b6Րग\u05ff\u0cd0క\u0df1\u093f\u05a1";
				break;
			case 4:
				obj = "लעೲజ\u0de0\u093f";
				break;
			case 5:
				obj = "מ\u0cfcఖ\u0df5ड\u05bd՛ऎר\u0cfbఽ෬ड\u05bdՐग\u05ec\u0cf9ఔ\u0de2";
				break;
			case 6:
				obj = "\u059eզटנ\u0cf0";
				break;
			case 7:
				obj = "Նछ\u05fe\u0cfaఎ\u0df7म\u05bdՀइ\u05fd\u0cf0ఈ";
				break;
			case 8:
				obj = "\u0dc9ढ\u05b9հषנ\u0cf4జ\u0de0ङ\u05a1դछ\u05fe";
				break;
			case 9:
				obj = "ऄ\u05bbջऐטೡఒ෩\u093e";
				break;
			case 10:
				obj = "\u0cc6ఒ෨ऽ\u05b4ձष\u05ee\u0cfaకවव\u05acզट\u05eeೡఔ\u0df7";
				break;
			case 11:
				obj = "ల\u0dd1ई\u0595՝\u093a\u05c1\u0cdcన\u0dd1";
				break;
			case 12:
				obj = "पר೭ఏ\u0dcaण\u05b4խस\u05ff\u0cf4ఖ\u0de0";
				break;
			case 13:
				obj = "\u05cf೧ఔ\u0df2\u093e\u05bdզ\u093b\u05f5ೡఞ෫\u093e\u05b1ջऐ\u05fe\u0cdcక\u0df6ह\u05b9ոऒר೧";
				break;
			case 14:
				obj = "֊ձझפ\u0cf0\u0c0d\u0de0ऩ\u0599է\u093bףೠఖ";
				break;
			case 15:
				obj = "\u0557ऑנ\u0ce5ఉ\u0de0\u093e\u05abսऑף\u0cd9ఞ\u0df3न\u05b4";
				break;
			case 16:
				obj = "\u0dcdह\u05b5ոम\u05ff\u0cfaఘ\u0de0\u093e\u05abջऌ";
				break;
			case 17:
				obj = "ग\u05b4սज\u05ce\u0cfaట\u0de0म";
				break;
			case 18:
				obj = "\u0cd0క෦\u093f\u05a1դऊפ\u0cfaకහड\u05bfջऌפೡఓ෨";
				break;
			case 19:
				obj = "డ\u0dccझ֍ՠगס೦";
				break;
			case 20:
				obj = "शי\u0cc1ఫ\u0dd0ह\u05b1ոऍ";
				break;
			case 21:
				obj = "\u05c8೭ఏ\u0de0ण\u05abսऑף೦ళ\u0de0ड\u05a8ձऌ";
				break;
			case 22:
				obj = "ւսऎ\u05c8೧ఉ෪\u093f\u0599շऊפ\u0cfaక";
				break;
			case 23:
				obj = "՝झע\u0cfbఽ෩ब\u05bfէ";
				break;
			case 24:
				obj = "ශन\u05abտऊע\u0ce5ఫ෪त\u05b6ՠ";
				break;
			case 25:
				obj = "ऎ\u05b0յऊנ\u0cf4క\u0dc8ढ\u05adէछ\u05cfೠఏ\u0df1ढ\u05b6է";
				break;
			case 26:
				obj = "\u0cd8చ෬ड֍ՠगס೦";
				break;
			case 27:
				obj = "స෭ब\u05acչटף\u0cd0క\u0df3त\u05aaջऐנ\u0cf0క\u0df1";
				break;
			case 28:
				obj = "पע\u0cfeఞ෫ई\u05b4ձई\u05ecೡఒ෪ण\u058cխऎר";
				break;
			case 29:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ձऊפ\u0cf9ళ\u0de0ड\u05a8ձऌ";
				break;
			case 30:
				obj = "ւսऎ\u05c8\u0cfbఏ\u0df7ऴ\u058bջऋ\u05ff\u0cf6ఞ";
				break;
			case 31:
				obj = "Ճष׃\u0cd1ఴ\u0dd2झ\u0594Օऽ\u05c8\u0cd8\u0c3e\u0dcbङ";
				break;
			case 32:
				obj = "ෆथ\u05b9ՠळ\u05ec\u0cfbశ\u0de0\u093e\u05abյङר\u0cd7ఔ\u0dfdए\u05adՠऊע\u0cfbఈ";
				break;
			case 33:
				obj = "ऋ\u05aaյओר\u0cd3గ\u0de4प\u05ab";
				break;
			case 34:
				obj = "\u0cdcక෦\u093f\u05bdչछףೡ\u0c3f\u0de0म\u05aaձओר\u0cfbఏ";
				break;
			case 35:
				obj = "\u0c3e\u0dfdह\u05aaյझ\u05f9\u0cd0\u0c03෬\u093e\u05acսऐת\u0cd3ఒ෩न\u0599շऊפ\u0cfaక";
				break;
			case 36:
				obj = "\u093b\u05ff೧ఔ\u0df7ऎ\u05b7ոऒר\u0cf6ఏ෬ढ\u05b6";
				break;
			case 37:
				obj = "\u05ce\u0cfaక\u0df1न\u05b6ՠप״\u0ce5ఞ\u0df6";
				break;
			case 38:
				obj = "\u059bռट\u05f9\u0cf8చ෫ऎ\u05b7պघפೲఎ\u0df7ब\u05acսऑף";
				break;
			case 39:
				obj = "Ցईר\u0cfbఏ";
				break;
			case 40:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbలශॾ\u05f6՝\u093a־\u0ce3\u0c49ස\u093f\u05b9չछ\u05fe\u0cbb\u0c3a\u0df7\u093f\u05b9խस\u05ff\u0cf4ఖ\u0de0\u093e\u05f6Շइף\u0cf6ఓ\u0df7ढ\u05b6սऍרೱయ\u0de0व\u05acԺऽע\u0cfbఏ\u0de0ण\u05acՀइ\u05fd\u0cf0ఈ";
				break;
			case 41:
				obj = "ऋ\u05aaյओר\u0cdc\u0c3f";
				break;
			case 42:
				obj = "\u0cd1ఔ\u0dcbढ\u05ac՛ईר೧ఌ\u0df7त\u05acձ";
				break;
			case 43:
				obj = "\u0c3e\u0dfdह\u05bdպचרೱళ\u0de0ब\u05bcձऌ";
				break;
			case 44:
				obj = "बר\u0cf4ట\u0dcaण\u05b4խ";
				break;
			case 45:
				obj = "ט\u0cc1ఽ\u0ddaॼ\u05ee";
				break;
			case 46:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐי\u0cf0\u0c03\u0df1ई\u05b6շऑש\u0cfcక\u0de2\u093e";
				break;
			case 47:
				obj = "Ցऐ\u05ee೧\u0c02\u0df5ह\u05b1ջऐ";
				break;
			case 48:
				obj = "ෆब\u05b6շछס";
				break;
			case 49:
				obj = "\u0903\u05b7";
				break;
			case 50:
				obj = "\u0cdaరෆब\u05b6շछס";
				break;
			case 51:
				obj = "ఝ෩ब\u05bfէ";
				break;
			case 52:
				obj = "ऎ\u05f9\u0cd8చ\u0dfdझ\u05b7էग\u05f9\u0cfcఔ෫";
				break;
			case 53:
				obj = "ך\u0cdcవබॿ\u0599Մष";
				break;
			case 54:
				obj = "\u059eսऒר\u0cc6\u0c02\u0df6ह\u05bdչ";
				break;
			case 55:
				obj = "\u0558ऑ\u05ecೱఒ෫प\u059eսऌ\u05feೡయ෬ठ\u05bd";
				break;
			case 56:
				obj = "\u0ddfत\u05a8՛ऋ\u05f9\u0ce5ఎ\u0df1ञ\u05acզछ\u05ec\u0cf8";
				break;
			case 57:
				obj = "ट\u05bdճग\u05feೡఉ\u0dfcऌ\u05bbշछ\u05fe೦ఔ\u0df7";
				break;
			case 58:
				obj = "\u0cd3ఒ෩ह\u05bdզऽע\u0cf9గ\u0de0म\u05acսऑף";
				break;
			case 59:
				obj = "\u0c3a\u0de1ऩ\u05b1պङג\u0cd4ఝ\u0df1न\u05aaՕचש\u0cd0క\u0df1\u093f\u05a1";
				break;
			case 60:
				obj = "बפೲఓ\u0df1";
				break;
			case 61:
				obj = "ן\u0cf0చ\u0de1त\u05b6ճड\u05ce\u0cfaఖ\u0df5ड\u05bdՠछש";
				break;
			case 62:
				obj = "\u058bյईפ\u0cfbజ\u0ddaऎ\u05b7չऎס\u0cf0ఏ\u0de0ऩ";
				break;
			case 63:
				obj = "Ռ\u093c\u05f8ೡఏ෪णש";
				break;
			case 64:
				obj = "\u0dd6ब\u05aeսऐת\u0cca\u0c3e෫ह\u05aaխ\u093c״ೡఞ\u0df6ट\u05bdյच";
				break;
			case 65:
				obj = "ई\u05a0ՠऌ\u05ec\u0cf6ఏ෬ण\u05bfՋ\u093cר\u0cf3ఔ\u0df7न\u059dլऊ\u05ff\u0cf4ఘ\u0df1ऌ\u05b4ո";
				break;
			case 66:
				obj = "೭";
				break;
			case 67:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0ddfत\u05a8Ժतפ\u0ce5ఫ\u0df7ढ\u05bfզछ\u05fe೦\u0c3e\u0df3न\u05b6ՠप״\u0ce5ఞ";
				break;
			case 68:
				obj = "ऽץ\u0cf4ఏ෨ब\u05b6Հख\u05ff\u0cf0చ\u0de1";
				break;
			case 69:
				obj = "׃\u0cfaఉ෨ब\u05b4";
				break;
			case 70:
				obj = "\u058bխऍ\u05f9\u0cf0ఖණङ\u05b0զछ\u05ecೱఒ෫प\u05f6Հख\u05ff\u0cf0చ\u0de1झ\u05aaսऑ\u05ff\u0cfcఏ\u0dfc";
				break;
			case 71:
				obj = "Շछס\u0cf0ఘ\u0df1न\u05bc";
				break;
			case 72:
				obj = "\u0dd6द\u05b1դ";
				break;
			case 73:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963ւսऎ\u05a3\u0ccfఒ\u0df5ई\u05aaզऑ\u05ff\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 74:
				obj = "\u0cd1ఞ\u0de3ब\u05adոऊ\u05ccೠట෬ढ\u059cձईפ\u0cf6ఞෆढ\u05b6ՠऌע\u0cf9గ\u0de0\u093f";
				break;
			case 75:
				obj = "\u0c3f\u0dfcण\u05b9չग\u05ee\u0cd4ఘ\u0df1त\u05aeյऊע೧";
				break;
			case 76:
				obj = "\u093fס\u0ce2చ\u0dfc\u093e";
				break;
			case 77:
				obj = "׃\u0cfaక\u0de0";
				break;
			case 78:
				obj = "\u059cձघ\u05ecೠగ\u0df1";
				break;
			case 79:
				obj = "՝ऐ\u05fdೠఏ\u0dc7स־ղछ\u05ff";
				break;
			case 80:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණग\u05b1դॐ\u05ce\u0cfaఖ\u0df5\u093f\u05bdէऍפ\u0cfaక\u0dd6ह\u05aaյऊרೲ\u0c02";
				break;
			case 81:
				obj = "\u0901\u05bdբछסಧ";
				break;
			case 82:
				obj = "\u0cdbఞ\u0dfdह\u0597աऊ";
				break;
			case 83:
				obj = "ష\u0de0\u093b\u05bdո\u0949";
				break;
			case 84:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐח\u0cfcఋණऎ\u05b7չऎ\u05ff\u0cf0ఈ\u0df6त\u05b7պलר\u0ce3ఞ෩";
				break;
			case 85:
				obj = "\u05ce\u0cc7సබॿ";
				break;
			case 86:
				obj = "\u059cձझע\u0cf8ఋ\u0df7न\u05abէ";
				break;
			case 87:
				obj = "Ճळג\u0cd9హ\u0dd0ङ\u058c՛र\u05c9\u0cdaబ\u0dcb";
				break;
			case 88:
				obj = "\u0dd2\u0900ևՆ\u093cט\u0cc1య\u0dca\u0903֍Մ";
				break;
			case 89:
				obj = "ऋ\u05b1ոछ\u05c2\u0ce3ఞ\u0df7ऄ\u05b6ՠछ\u05ff\u0cfbఞ\u0df1";
				break;
			case 90:
				obj = "\u0cd3ఒ෩न\u0591շऑף";
				break;
			case 91:
				obj = "వ෪ण\u0595աऍפ\u0cf6చ෩\u0900\u05bdզझץ\u0cf4క\u0de1त\u05abձ";
				break;
			case 92:
				obj = "ळרೱఒ\u0de4";
				break;
			case 93:
				obj = "\u05ce\u0cfaక\u0de1स\u05bbՠऑ\u05ff";
				break;
			case 94:
				obj = "\u059cաऌפ\u0cfbజ\u0dd7न\u05bbջऌש\u0cfcక\u0de2";
				break;
			case 95:
				obj = "Ֆटףೱష෪प\u05b7";
				break;
			case 96:
				obj = "\u0dd0\u093e\u05bdզ\u094d\u05bf";
				break;
			case 97:
				obj = "ब\u05ba՝\u093a";
				break;
			case 98:
				obj = "\u0cdaఋ\u0de0ण";
				break;
			case 99:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55සत\u05b4ձसע೧ఖ\u0de4ह\u05ab";
				break;
			case 100:
				obj = "\u093aפ೦ఋ෩ब\u05a1՚टנ\u0cf0";
				break;
			case 101:
				obj = "מ೬ఈ\u0dccम\u05b7պषףೱఞ\u0dfd";
				break;
			case 102:
				obj = "\u0595սझ\u05ff\u0cfaఈ෪फ\u05acԺ\u093fם\u0cdc\u0c55\u0dc9ढ\u05b7տऋ\u05fd\u0cdcఘ෪ण\u0591հस\u05ff\u0cfaఖශत\u05aaձझ\u05f9\u0cfaఉ\u0dfcई\u05a0Ւऒ\u05ecೲఈ";
				break;
			case 103:
				obj = "Շओ\u05ec\u0cf9గ\u0dccम\u05b7պ";
				break;
			case 104:
				obj = "වट֊՛बג\u0cc6మෆऎ\u059dՇभ";
				break;
			case 105:
				obj = "\u0901\u0597Օ\u093aג\u0cd9ల\u0dc7ट\u0599Նधג\u0cd4న\u0ddaउ\u0599Հ\u093f\u05cb\u0cdcషව";
				break;
			case 106:
				obj = "\u0cd4ఏ\u0df1\u093f\u058bդछ\u05ee\u0cfcఝ෬न\u05bc";
				break;
			case 107:
				obj = "స෪ठ\u05a8զछ\u05fe೦ఒ෪ण";
				break;
			case 108:
				obj = "म\u05c4\u0cd1ష";
				break;
			case 109:
				obj = "י\u0cf0\u0c03\u0df1घ\u05acսऒ\u05fe";
				break;
			case 110:
				obj = "\u059bյऎ\u05ec\u0cf6ఒ\u0df1ऴ";
				break;
			case 111:
				obj = "Մ\u093f\u05ce";
				break;
			case 112:
				obj = "\u0dceन\u05a1";
				break;
			case 113:
				obj = "घ\u05aaոऽע\u0cfbఝ෬प\u05adզट\u05f9\u0cfcఔ෫ऎ\u05b7պऊ\u05ec\u0cfcక\u0de0\u093f";
				break;
			case 114:
				obj = "\u0cd2ఉ෪स\u05a8՝झע\u0cfb\u0c3f෬\u093f\u059dպऊ\u05ff೬";
				break;
			case 115:
				obj = "\u0c29\u0de0\u093e\u05bdզईרೱ";
				break;
			case 116:
				obj = "प״\u0ce5ఞ";
				break;
			case 117:
				obj = "ם\u0cf9చ෫न\u05ab";
				break;
			case 118:
				obj = "\u059bջऋףೡ";
				break;
			case 119:
				obj = "Օचש";
				break;
			case 120:
				obj = "\u0dd0ण\u05b1լ";
				break;
			case 121:
				obj = "ॷ\u058bռछס\u0cf9మ\u0df1त\u05b4է";
				break;
			case 122:
				obj = "ಯల෦ढ\u05b6Րग\u05ff\u0cd0క\u0df1\u093f\u05a1";
				break;
			case 123:
				obj = "\u0c41\u0dd0\u093f\u05b4\u0557ऑף\u0cf3ఒ\u0de2स\u05aaյऊפ\u0cfaక";
				break;
			case 124:
				obj = "\u0944׃ೠఖ\u0de0\u093f\u05b1շफ\u05f9\u0cfcగ\u0df6";
				break;
			case 125:
				obj = "\u05b7\u0cd9ఔ\u0de4ऩ\u0591չटת\u0cf0య\u0dfcऽ\u05bdէ";
				break;
			case 126:
				obj = "ע՝प\u05c8\u0cd8లශ\u0901\u0591Շप";
				break;
			case 127:
				obj = "Ԯ\u093aר\u0ce3ఒ෦न\u059bոट\u05fe೦స෪ण\u05acզऑס\u0cf9ఞ\u0df7";
				break;
			case 128:
				obj = "\u0dbfऎ\u05b7չऎ\u05ff\u0cf0ఈ\u0df6त\u05b7պलר\u0ce3ఞ෩";
				break;
			case 129:
				obj = "ॷ֎ձऌ\u05fe\u0cfcఔ෫घ\u05acսऒ\u05fe";
				break;
			case 130:
				obj = "ಯష\u0de4ण\u05bfաटת\u0cf0";
				break;
			case 131:
				obj = "\u0c41\u0dccम\u05b7պसס\u0cf4జ\u0df6";
				break;
			case 132:
				obj = "\u0944\u05c8\u0cf9ఞ\u0df3ब\u05acսऑף\u0cddఞ෩ऽ\u05bdզ";
				break;
			case 133:
				obj = "\u05b7\u0cc1ఔ෮न\u05b6Ցऒר\u0ce3చ\u0df1त\u05b7պप״\u0ce5ఞ";
				break;
			case 134:
				obj = "עՎग\u05fd\u0cd0క\u0df1\u093f\u05a1Շऑ\u05f8೧ఘ\u0de0";
				break;
			case 135:
				obj = "Ԯळר೦ఈ\u0de4प\u05bdՖऑ\u05f5\u0cc0ఏ෬ड\u05ab";
				break;
			case 136:
				obj = "\u0dbfऎ\u05b0յऊ׀\u0cf4క\u0dc8न\u05abէटת\u0cf0హ෪व\u059aաऊ\u05f9\u0cfaక\u0df6";
				break;
			case 137:
				obj = "ॷ\u0591պझ\u05ff\u0cf0ఖ\u0de0ण\u05acՐछ\u05ee೧ఞ෨न\u05b6ՠ";
				break;
			case 138:
				obj = "ಯ\u0c29\u0de0\u093e\u05b7աऌ\u05ee\u0cf0ఈ";
				break;
			case 139:
				obj = "\u0c41වव\u05acզट\u05eeೡ\u0c3e\u0dfdत\u05abՠगףೲఽ෬ड\u05bdՕझ\u05f9\u0cfcఔ෫";
				break;
			case 140:
				obj = "\u0944מ\u0cfcక\u0de2ड\u05bdՄऌעೲఉ\u0de4ठ\u0591պऍ\u05f9\u0cf4క෦न֏սऐ";
				break;
			case 141:
				obj = "\u05c2\u0ce3ఞ\u0df7\u093a\u05aaսऊר\u0cc6ఒ෩न\u05b6ՠऒ״";
				break;
			case 142:
				obj = "\u0596ջसפ\u0cf9ఏ\u0de0\u093f";
				break;
			case 143:
				obj = "Ձऐ\u05fe೬క෦थ\u05aaջऐפ೦చ\u0df1त\u05b7պ";
				break;
			case 144:
				obj = "\u0ddcन\u05ab՚ऑ";
				break;
			case 145:
				obj = "प\u05b4ջज\u05ec\u0cf9\u0c41\u0dbfट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963֍ՠगס೦\u0c55\u0dd2ऄ\u0596ԧ\u094c\u05cc\u0cc5లණट\u059d\u0557प";
				break;
			case 146:
				obj = "ಯగ\u0de0फ\u05acԸफ़\u05b7ೡఔ\u0df5ॡ\u05f8Ԯऌפೲఓ\u0df1ॡ\u05f8Ԯजעೡఏ෪ठ";
				break;
			case 147:
				obj = "ళ෬ऩ\u05bcձऐ";
				break;
			case 148:
				obj = "पע\u0cfeఞ෫ई\u05b4ձई\u05ecೡఒ෪ण\u058cխऎר\u0cd1ఞ\u0de3ब\u05adոऊ";
				break;
			case 149:
				obj = "ו\u0cd7ఎ\u0df1ह\u05b7պ\u094c";
				break;
			case 150:
				obj = "\u058bյईפ\u0cfbజ\u0ddaऌ־ՠछ\u05ff\u0cc6చ\u0df3न\u058cձओ\u05fd\u0cd4ఉ෦थ\u05b1բछ";
				break;
			case 151:
				obj = "ճऒע\u0cf7చ෩ॷעՆऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժऽץ\u0cf4ఏ෨ब\u05b6Հख\u05ff\u0cf0చ\u0de1त\u05b6ճॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պपץ೧ఞ\u0de4ऩ";
				break;
			case 152:
				obj = "හय\u05b7բछ׃\u0cfaఉ෨ब\u05b4";
				break;
			case 153:
				obj = "ऄ\u05bbջऐ";
				break;
			case 154:
				obj = "ಯల\u0df6ए\u05b9շकת೧ఔ\u0df0ण\u05bcԸफ़\u05b7\u0cc5ఉ෬ढ\u05aaսऊ״";
				break;
			case 155:
				obj = "\u0c3e\u0dfdह\u05aaյझ\u05f9\u0cfcక\u0de2ऒ\u059aձघע೧ఞවव\u05acզट\u05eeೡ\u0c3e෫ह\u05aaխ";
				break;
			case 156:
				obj = "ऱ\u05fd\u0cf0క\u0dccम\u05b7պ";
				break;
			case 157:
				obj = "\u05c8೭ఏ\u0df7ब\u05bbՠगףೲతහफ\u05acձऌ\u05c8೭ఏ\u0df7ब\u05bbՠ\u093fס\u0cf9";
				break;
			case 158:
				obj = "\u0599էरר\u0cf6ఞ\u0df6\u093e\u05b9զइ";
				break;
			case 159:
				obj = "Մट\u05ffೡఒ\u0de4ड";
				break;
			case 160:
				obj = "\u0dc9न\u05aeձऒ\u05bd";
				break;
			case 161:
				obj = "\u0901\u05bdբछסಡ";
				break;
			case 162:
				obj = "\u0cd7ఞ\u0df6ह\u059bջओ\u05fd೧ఞ\u0df6\u093e\u05b1ջऐ";
				break;
			case 163:
				obj = "ఴ\u0df1थ\u05bdզ";
				break;
			case 164:
				obj = "ऱ\u05f9\u0cfdఞ\u0df7ऋ\u05b1ոछ\u05c4\u0cf6ఔ෫";
				break;
			case 165:
				obj = "\u05cc೦వ෪ह\u05bdՇखר\u0cf0ఏ";
				break;
			case 166:
				obj = "\u058bջऒע\u0cfcఈ\u0df1";
				break;
			case 167:
				obj = "\u0557ऑנ\u0ce5ఔ\u0df6न\u05aa";
				break;
			case 168:
				obj = "\u0dc8ढ\u05aeսछ";
				break;
			case 169:
				obj = "प\u05b4ջज\u05ec\u0cf9\u0c41\u0dbfट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u0591շऑף\u0cd0\u0c03\u0df1\u093f\u05b9շऊע೧\u0c55\u0dd6थ\u05bdոऒ־ಧ\u0c55\u0dd6अ\u0591Հ\u093b׀\u0cdc\u0c3f";
				break;
			case 170:
				obj = "ಯఖ෮त\u05bc";
				break;
			case 171:
				obj = "ష\u0de4\u093f\u05bfձ";
				break;
			case 172:
				obj = "दנ\u0cf9";
				break;
			case 173:
				obj = "\u05c4\u0cf6ఔ෫\u0901\u05b7շट\u05f9\u0cfcఔ෫";
				break;
			case 174:
				obj = "\u0591\u0559\u093f\u05ca\u0cd0త\u0dccऎ\u0597՚";
				break;
			case 175:
				obj = "Րऱ׃\u0cc1త\u0dd7ई\u058b՛लכ\u0cd0తශ\u0901\u0594Ջब\u05c8\u0cd3\u0c3e\u0dd7ई\u0596\u0557\u093bמ";
				break;
			case 176:
				obj = "\u0dbfघ֊\u0558भ";
				break;
			case 177:
				obj = "प\u05b4ջज\u05ec\u0cf9\u0c41\u0dbfट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u0591շऑף\u0cd0\u0c03\u0df1\u093f\u05b9շऊע೧\u0c55ෂ\u093f\u05b7աऎ\u05c4\u0cf6ఔ෫उ\u05b1զ";
				break;
			case 178:
				obj = "ಯ\u0c29\u0de0\u093e\u05bdզईרೱ\u0c57ඥॷ\u058cխऎרಹ\u0c5b\u0dbfऎ\u05b7աऐ\u05f9";
				break;
			case 179:
				obj = "\u0c3f\u0de0फ\u05b4յऊר";
				break;
			case 180:
				obj = "\u093a\u05c2\u0cc6";
				break;
			case 181:
				obj = "ת\u0cf9ఔ෧ब\u05b4Ԯ\u0944ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0ccfఒ\u0df5\u0963ւսऎ\u05c8\u0cfbఏ\u0df7ऴ\u058cսओר೦ఏ\u0de4ठ\u05a8";
				break;
			case 182:
				obj = "\u058bՠऌר\u0cf4ఖ\u0dd0ह\u05b1ոऍ";
				break;
			case 183:
				obj = "Շखר\u0cf9గ\u0dd0ह\u05b1ոऍ";
				break;
			case 184:
				obj = "\u0dcbढ\u05acսघ״\u0cd6ఔ෩ड\u05bdշऊפ\u0cfaకෆथ\u05b9պङרೱ\u0c3a෦ह\u05b1ջऐ";
				break;
			case 185:
				obj = "ग\u05b1դ\u093bףೡఉ\u0dfcङ\u05b1չछ\u05feೡచ෨ऽ";
				break;
			case 186:
				obj = "\u0cd0గ\u0de0\u093b\u05b9ՠगע\u0cfbళ\u0de0ड\u05a8ձऌ";
				break;
			case 187:
				obj = "ల෦ढ\u05b6Րग\u05ff";
				break;
			case 188:
				obj = "ऱ\u05f8ೡఋ\u0df0ह\u059aաघ\u05eb\u0cf0ఉ";
				break;
			case 189:
				obj = "\u05ca೧ఔ\u0df0ऽ\u0591շऑף\u0cd1ఒ\u0df7";
				break;
			case 190:
				obj = "֍զऒ\u05ce\u0cfaక\u0de3त\u05bfաऌ\u05ecೡఒ෪ण";
				break;
			case 191:
				obj = "\u0557ख\u05ecೡఖ\u0de4ण\u059bձऐ\u05f9೧చ෩ऎ\u05b7պघפೲఎ\u0df7ब\u05acսऑף";
				break;
			case 192:
				obj = "෩न\u05b6ճऊץ";
				break;
			case 193:
				obj = "\u0903\u05adչछ\u05ff\u0cfcఘ\u0dd0ह\u05b1ոऍ";
				break;
			case 194:
				obj = "\u0cd9ఔ\u0de4ऩ\u0594սज\u05ff\u0cf4ఉ\u0dfcई\u05a0Ւऒ\u05ecೲఈ";
				break;
			case 195:
				obj = "\u0c3c\u0de0ह\u0594յऍ\u05f9\u0cd0ఉ\u0df7ढ\u05aaՆछ\u05feೠగ\u0df1";
				break;
			case 196:
				obj = "लע\u0cfaఐ\u0df0ऽ\u0591շऑף\u0cdcటස\u093f\u05b7չ\u093aפ೧ఞ෦ह\u05b7զइ\u05c8೭ఽ෩ब\u05bfէ";
				break;
			case 197:
				obj = "\u05cf\u0cfcఏෆढ\u05adպऊ";
				break;
			case 198:
				obj = "\u058b՜हרೡఽ෬ड\u05bd՝ऐ\u05eb\u0cfaఽ෩ब\u05bfէ";
				break;
			case 199:
				obj = "Շगףೲగ\u0de0झ\u05aaջङ\u05ff\u0cf4ఖ\u0dccण\u05abՠटף\u0cf6ఞ\u0dd2त\u05b6";
				break;
			case 200:
				obj = "\u0dd7न\u05abջऋ\u05ff\u0cf6ఞ\u0dd0ह\u05b1ոऍ";
				break;
			case 201:
				obj = "ऋ\u05b1ոछ\u05cb\u0cfaఉ෨ब\u05acէ";
				break;
			case 202:
				obj = "\u0cdcఘ෪ण\u058bսऄר";
				break;
			case 203:
				obj = "ఽ෪ड\u05bcձऌי೬ఋ\u0de0";
				break;
			case 204:
				obj = "भץ\u0cf0గ෩ॾת";
				break;
			case 205:
				obj = "מ\u0cddల\u0dd1ई\u0595՝\u093a";
				break;
			case 206:
				obj = "\u059c\u0558लטೡఒ෩\u093e";
				break;
			case 207:
				obj = "Րछ\u05fb\u0cfcఘ\u0de0ऎ\u05b4յऍ\u05fe\u0cd6ఔ෫ह\u05aaջऒס\u0cf0ఉ";
				break;
			case 208:
				obj = "\u0dc7ब\u05abձसפ\u0cf9ఞස\u093f\u05b9չछ";
				break;
			case 209:
				obj = "झ\u05b1շऊ\u05f8೧ఞ\u0dd1ऴ\u05a8ձऍ";
				break;
			case 210:
				obj = "\u0cc0\u0c29\u0dc9";
				break;
			case 211:
				obj = "శ෪स\u05abձ\u093f\u05eeೡఒ෪ण";
				break;
			case 212:
				obj = "ऽע\u0cf8ఋ\u0df7न\u05abէगע\u0cfbన\u0df1\u093f\u05b9ՠछת೬";
				break;
			case 213:
				obj = "\u05ce\u0cfaఖ\u0df5\u093f\u05bdէऍפ\u0cfaక\u0dc8ढ\u05bcձ";
				break;
			case 214:
				obj = "\u059fզऑ\u05f8\u0ce5ల\u0de1न\u05b6ՠग\u05f9೬";
				break;
			case 215:
				obj = "Ղछ\u05ff೦ఒ෪ण֍ՠगס೦";
				break;
			case 216:
				obj = "සत\u05b4ձफ\u05f9\u0cfcగ\u0df6";
				break;
			case 217:
				obj = "घ\u05aaո";
				break;
			case 218:
				obj = "\u0cd3గ\u0df0\u093e\u05b0Հइ\u05fd\u0cf0";
				break;
			case 219:
				obj = "డ෬ऽ\u05eeԠऱ\u05fdೡఒ෪ण";
				break;
			case 220:
				obj = "फן\u0cd9మ\u0df1त\u05b4է";
				break;
			case 221:
				obj = "\u05c1\u0cf4క\u0de2स\u05b9ճछ";
				break;
			case 222:
				obj = "\u0599";
				break;
			case 223:
				obj = "Վग\u05fd\u0cc5ఉ෪प\u05aaձऍ\u05fe\u0cd0\u0c0d\u0de0ण\u05acՀइ\u05fd\u0cf0";
				break;
			case 224:
				obj = "\u0dd5\u093f\u05b1ջऌפೡ\u0c02";
				break;
			case 225:
				obj = "ञ\u05bdշऋ\u05ff\u0cfcఏ\u0dfcघ\u05acսऒ\u05fe";
				break;
			case 226:
				obj = "\u0cddఞ෬प\u05b0ՠ";
				break;
			case 227:
				obj = "\u0c3f\u0de4ह\u05bdՁऊפ\u0cf9ఈ";
				break;
			case 228:
				obj = "भ\u05fd\u0cf9చ\u0df6थ\u058bշऌר\u0cf0క\u0dc8ढ\u05bcձ";
				break;
			case 229:
				obj = "ן\u0cd0స\u0dd1";
				break;
			case 230:
				obj = "\u0595ձऍ\u05fe\u0cf4జ\u0de0ए\u05b7լफ\u05f9\u0cfcగ\u0df6";
				break;
			case 231:
				obj = "\u0557ख\u05ecೡశ\u0de4ण\u059cսटס\u0cfaజ\u0dd7न\u05abաऒ\u05f9";
				break;
			case 232:
				obj = "\u0dd1न\u05a0ՠ\u093bף\u0cf6ఔ\u0de1त\u05b6ճऍ";
				break;
			case 233:
				obj = "ङ\u05b1չछמೡచ෨ऽ\u05ab";
				break;
			case 234:
				obj = "\u0cdc\u0c3fබ\u093bתՒऒ\u05ecೲఈ";
				break;
			case 235:
				obj = "ఽ෬ड\u05acձऌי೬ఋ\u0de0\u093e";
				break;
			case 236:
				obj = "बר೦ఔ\u0df0\u093f\u05bbձऍ";
				break;
			case 237:
				obj = "\u05c4\u0cd1\u0c48ව\u093f\u05aaջऌ";
				break;
			case 238:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණञ\u05b0ձऒס\u0cc0ఏ෬ड\u05abԮ\u0944";
				break;
			case 239:
				obj = "Ճऌפೡఞපॽ\u05ecՋभץ\u0cf0గ෩घ\u05acսऒ\u05fe";
				break;
			case 240:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණअ\u05b9էखטೡఒ෩\u093eעԮ";
				break;
			case 241:
				obj = "ट\u05bdյच\u05bcಥ\u0c4e\u0ddaअ\u05b9էखטೡఒ෩\u093e";
				break;
			case 242:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbల෦ढ\u05b6Ցआ\u05f9೧చ෦ह\u05b7զॐ\u05c4\u0cf6ఔ෫उ\u05b1զ\u0944\u05b7";
				break;
			case 243:
				obj = "బ\u0df7त\u05acձ\u094f\u05bdಬత\u0dccम\u05b7պ\u093aפ೧";
				break;
			case 244:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐ\u05c4\u0cf6ఔ෫ई\u05a0ՠऌ\u05ec\u0cf6ఏ෪\u093f\u05f6՝झע\u0cfb\u0c3f෬\u093f\u059dպऊ\u05ff೬\u0c41\u0dbf";
				break;
			case 245:
				obj = "ן\u0cf0చ\u0de1ॼשԤड\u05c4\u0cf6ఔ෫उ\u05b1զ\u093bףೡఉ\u0dfc";
				break;
			case 246:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձब\u05c1\u0cd6ఔ෫फ\u05b1ճऋ\u05ff\u0cf4ఏ෬ढ\u05b6Ժफ\u05ff\u0cf9స෪ण־սङ\u05f8೧చ\u0df1त\u05b7պ\u0944\u05b7";
				break;
			case 247:
				obj = "Հऑ\u05f9\u0cf4గ\u0dc7ऴ\u05acձऍ\u05c2ೠఏ";
				break;
			case 248:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcತ\u0c4f\u0ddaघ\u05aaոऽע\u0cfbఝ෬प\u05adզट\u05f9\u0cfcఔ෫";
				break;
			case 249:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u0594ջङת\u0cf0ఉ\u0dbfॷ";
				break;
			case 250:
				obj = "\u0cc7ఞ\u0de4ऩשԥ\u094bג\u0cd9ఔ\u0de2प\u05bdզ";
				break;
			case 251:
				obj = "హ෬ण\u05b9զइ\u05cb೧చ෨न";
				break;
			case 252:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6՚ऋנ\u0cf0ఉ෬म֍ՠगס೦\u0c41\u0dbf";
				break;
			case 253:
				obj = "ך೧ఒ\u0df1नשԥ\u0947ג\u0cdbఎ෨न\u05aaսझטೡఒ෩\u093e";
				break;
			case 254:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05cb೧చ෨नעԮ";
				break;
			case 255:
				obj = "Նछ\u05ecೱ\u0c4aභॽևՒऌ\u05ec\u0cf8ఞ";
				break;
			case 256:
				obj = "\u0dc8त\u05bbզऑ\u05fe\u0cfaఝ\u0df1\u0963\u0599Մष\u05a3\u0cd9ఔ෪द\u05adդष\u05ee\u0cfaక\u0dccऩ\u059eզऑנ\u0cd1ఒ\u0df7न\u05bbՠऑ\u05ff೬\u0c3e\u0dfdऋ\u05b4յङ\u05feಯ\u0c41";
				break;
			case 257:
				obj = "च\u05aaսऊרತ\u0c49නऒ\u0591ՠछנ";
				break;
			case 258:
				obj = "\u0cd8ఒ෦\u093f\u05b7էऑ\u05ebೡ\u0c55හझ\u0591Ժलע\u0cf4ట\u0dccठ\u05b9ճछי೬ఋ\u0de0\u093eעԮ";
				break;
			case 259:
				obj = "\u0c29\u0de0ब\u05bcԥ\u094c\u05b8\u0ccaష෪ब\u05bc՝ओ\u05ecೲఞ\u0dd1ऴ\u05a8ձऍ";
				break;
			case 260:
				obj = "ल\u05ec\u0cfbజ\u0df0ब\u05bfձष\u05c9";
				break;
			case 261:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cd3ఒ෩न\u059eջऌנ\u0cf4ఏ\u0df6ॷע";
				break;
			case 262:
				obj = "֏զग\u05f9\u0cf0\u0c4aභॴևՒगס\u0cf0ఽ෪\u093f\u05b5յऊ\u05fe";
				break;
			case 263:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժष\u05ee\u0cfaకවव\u05acզट\u05eeೡఔ\u0df7\u0963\u058bսओ\u05fd\u0cf9ఞ\u0dccम\u05b7պ\u093b\u05f5ೡఉ\u0de4म\u05acջऌ\u05b7ಯ";
				break;
			case 264:
				obj = "\u0dd7न\u05b9հ\u094f־ಥత\u0dd6त\u05b5դऒר\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aa";
				break;
			case 265:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u0591շऑף\u0cd0\u0c03\u0df1\u093f\u05b9շऊע೧\u0c55\u0dd6थ\u05bdոऒ־ಧ\u0c50\u0dd6अ\u0591Հ\u093b׀\u0cdc\u0c3f\u0dbfॷ";
				break;
			case 266:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u094d\u05b9\u0ccaన\u0dcdऄ\u058cՑळ\u05c4\u0cd1";
				break;
			case 267:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dccम\u05b7պ\u093b\u05f5ೡఉ\u0de4म\u05acջऌ\u05a3\u0cc6ఓ\u0de0ड\u05b4ԧ\u094c\u05a6\u0cdcయව\u0900\u0591Րल\u05c4\u0cc6య\u0dbfॷ";
				break;
			case 268:
				obj = "झׯ";
				break;
			case 269:
				obj = "ן\u0cf0చ\u0de1ॼ\u05ebԡड\u05c4\u0cc1\u0c3e\u0dc8ऄ\u059c\u0558षמ\u0cc1";
				break;
			case 270:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Րछ\u05fb\u0cfcఘ\u0de0ऎ\u05b4յऍ\u05fe\u0cd6ఔ෫ह\u05aaջऒס\u0cf0ఉ\u0dbfॷ";
				break;
			case 271:
				obj = "ՃऌפೡఞපॾסՋ\u093aר\u0ce3ఒ෦न\u059bոट\u05fe೦స෪ण\u05acզऑס\u0cf9ఞ\u0df7";
				break;
			case 272:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණए\u05aaջउ\u05fe\u0cf0ఉවव\u05acձऐ\u05fe\u0cfcఔ෫\u093e\u05f6Ֆऌע\u0ce2ఈ\u0de0\u093f\u059dլऊר\u0cfbఈ෬ढ\u05b6էषף೦ఏ\u0de4ड\u05b4ձऌ\u05b7ಯ";
				break;
			case 273:
				obj = "ट\u05bdյच\u05bcಡ\u0c4b\u0ddaए\u05aaջउ\u05fe\u0cf0ఉවव\u05acձऐ\u05fe\u0cfcఔ෫\u093e\u0591պऍ\u05f9\u0cf4గ෩न\u05aa";
				break;
			case 274:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbశ෪स\u05abձऩ\u05ecೡఘ෭न\u05aaԺळעೠఈ\u0de0ऌ\u05bbՠगע\u0cfb\u0c41\u0dbf";
				break;
			case 275:
				obj = "బ\u0df7त\u05acձ\u094f\u05b9ಡత\u0dc8ढ\u05adէछ\u05cc\u0cf6ఏ෬ढ\u05b6";
				break;
			case 276:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐח\u0cfcఋණऎ\u05b7չऎ\u05ff\u0cf0ఈ\u0df6त\u05b7պलר\u0ce3ఞ෩ॷע";
				break;
			case 277:
				obj = "ן\u0cf0చ\u0de1ॼ\u05ecԡड\u05ce\u0cfaఖ\u0df5\u093f\u05bdէऍפ\u0cfaక\u0dc9न\u05aeձऒ";
				break;
			case 278:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණछ\u05bdզऍפ\u0cfaక\u0dd0ह\u05b1ոऍ\u05b7ಯ";
				break;
			case 279:
				obj = "ՃऌפೡఞපॹסՋनר೧ఈ෬ढ\u05b6Ձऊפ\u0cf9ఈ";
				break;
			case 280:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbళ\u0df1ठ\u05b4Մऌע\u0cf6ఞ\u0df6\u093e\u05b7զ\u0944\u05b7";
				break;
			case 281:
				obj = "ट\u05bdյच\u05bcಠ\u0c4b\u0ddaअ\u05acչऒם೧ఔ෦न\u05abէऑ\u05ff";
				break;
			case 282:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbడ෬ऽ\u05f6Ւऒ\u05f8೦ఓ\u0dd1ऴ\u05a8ձ\u0944\u05b7";
				break;
			case 283:
				obj = "బ\u0df7त\u05acձ\u094f\u05b8ಡతසड\u05adէखי೬ఋ\u0de0";
				break;
			case 284:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐטೡఒ෩\u093e\u05f6Վषם\u0cc0ఏ෬ड\u05abԮ\u0944";
				break;
			case 285:
				obj = "ן\u0cf0చ\u0de1ॼ\u05edԡडח\u0cdcఫ\u0dd0ह\u05b1ոऍ";
				break;
			case 286:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05c4\u0cd1\u0c48\u0df3ॿ\u059eզटנ\u0cf0ఈණ\u0901\u05b9պङ\u05f8\u0cf4జ\u0de0ॷע";
				break;
			case 287:
				obj = "ՃऌפೡఞපॸסՋल\u05ec\u0cfbజ\u0df0ब\u05bfձ";
				break;
			case 288:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbbళ\u0dd1ङֈՁऊפ\u0cf9ఈ\u0dbfॷ";
				break;
			case 289:
				obj = "ट\u05bdյच\u05bcಣ\u0c4b\u0ddaअ\u058cՀमטೡఒ෩\u093e";
				break;
			case 290:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbల෦ढ\u05b6Ցआ\u05f9೧చ෦ह\u05b7զॐמ\u0cfcఖ\u0df5ड\u05bd՝झע\u0cfb\u0c3e\u0dfdह\u05aaյझ\u05f9\u0cfaఉථऋ\u05b7ոचר೧య\u0dfcऽ\u05bdԮ\u0944";
				break;
			case 291:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55හस\u05acռऑ\u05ff\u0cfc\u0c01\u0de0उ\u05b9ՠट\u05b7ಯ\u0c3a\u0dbfङ\u05aaաछ\u05b7";
				break;
			case 292:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼ\u05eeԠड\u05cc";
				break;
			case 293:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cdcఘ෪ण\u059dլऊ\u05ff\u0cf4ఘ\u0df1ढ\u05aaԺष\u05ee\u0cfaకසड\u05b9ճऍ\u05b7ಯ";
				break;
			case 294:
				obj = "֊ձटשತ\u0c4dධऒ\u0591շऑף\u0cd3గ\u0de4प\u05ab";
				break;
			case 295:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0591շऑף\u0cc0ఏ෬ड\u05abԮ\u0944";
				break;
			case 296:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණग\u05b1դॐח\u0cfcఋවण\u05acզइי\u0cfcఖ\u0de0\u093e\u05acյओ\u05fdಯ\u0c41";
				break;
			case 297:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963֍ՠगס೦\u0c55ෆथ\u05b9ՠळ\u05ec\u0cfbశ\u0de0\u093e\u05abյङר\u0cd7ఔ\u0dfdए\u05adՠऊע\u0cfbఈ\u0dbfॷ";
				break;
			case 298:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbడ෬ऽ\u05f6Վग\u05fd\u0cc5ఉ෪प\u05aaձऍ\u05fe\u0cd0\u0c0d\u0de0ण\u05acՀइ\u05fd\u0cf0\u0c41\u0dbf";
				break;
			case 299:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cdc\u0c3fබ\u0963\u0591Ր\u094d\u05c8೧ఉ෪\u093fעԮ";
				break;
			case 300:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼ\u05eeԭडח\u0cfcఋ\u0dd5\u093f\u05b7ճऌר೦ఈව\u093b\u05bdպऊי೬ఋ\u0de0";
				break;
			case 301:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺळ\u05ec\u0cfcగ\u0dd0ह\u05b1ոऍ\u05b7ಯ";
				break;
			case 302:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05c4\u0cd1\u0c48\u0df3ॿ\u059eզटנ\u0cf0ఈණए\u05b1պट\u05ff೬ఽ\u0df7ब\u05b5ձऍ\u05a3\u0cd7చ\u0df6न\u059eսऒר\u0cd3ఉ\u0de4ठ\u05bdԮ\u0944";
				break;
			case 303:
				obj = "Նछ\u05ecೱ\u0c4a\u0db2ॽև\u0559टפ\u0cf9మ\u0df1त\u05b4է";
				break;
			case 304:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණघ\u05acսऒ\u05fe\u0cbb\u0c29\u0de0प\u05b1էऊ\u05ff೬\u0c3a෦म\u05bdէऍע೧\u0c41\u0dbf";
				break;
			case 305:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963\u059bջऐ\u05eb\u0cfcజ\u0df0\u093f\u05b9ՠगע\u0cfb\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfbస\u0de0ण\u05acզटס\u0cd6ఔ෫फ\u05b1ճऋ\u05ff\u0cf4ఏ෬ढ\u05b6Ԯ\u0944\u05ce\u0cfdచ\u0df1ठ\u05b9պऽר\u0cfbఏ\u0df7ब\u05b4\u0557ऑף\u0cf3ఒ\u0de2स\u05aaյऊפ\u0cfaక\u0dbfङ\u05aaաछ\u05b7";
				break;
			case 306:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbమ\u0df1त\u05b4էॐמ\u0cf0ఘ\u0df0\u093f\u05b1ՠइטೡఒ෩\u093e׳Ցऒר\u0ce3చ\u0df1त\u05b7պशר\u0cf9ఋ\u0de0\u093fעԮ";
				break;
			case 307:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dc8ढ\u05adէछך\u0cf4ఏ෦थ\u05bdզॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պळעೠఈ\u0de0ए\u05adՠऊע\u0cfbఈ\u0dbfॷ";
				break;
			case 308:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॼׯԠड\u05c8\u0cf9ఞ\u0df3ब\u05acսऑף\u0cddఞ෩ऽ\u05bdզ";
				break;
			case 309:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժस\u05ff\u0cf4ఖ\u0de0\u093a\u05b7զक\u05a3\u0cc0ఏ෬ड\u05abԺभר\u0cf6ఎ\u0df7त\u05acխफ\u05f9\u0cfcగ\u0df6०\u059dոछ\u05fb\u0cf4ఏ෬ढ\u05b6՜छס\u0ce5ఞ\u0df7०\u058cջकר\u0cfb\u0c3e෩न\u05aeյऊפ\u0cfaక\u0dd1ऴ\u05a8ձ\u0944\u05b7";
				break;
			case 310:
				obj = "֊ձटשತ\u0c4cධऒ\u058cջकר\u0cfb\u0c3e෩न\u05aeյऊפ\u0cfaక\u0dd1ऴ\u05a8ձ";
				break;
			case 311:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժतפ\u0ce5\u0c55\u0ddfड\u05b1նऽעೱఞ෦ॷע";
				break;
			case 312:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණझ\u05aaջऎר೧ఏ෬न\u05abԺबר೦ఔ\u0df0\u093f\u05bbձऍ\u05b7ಯ";
				break;
			case 313:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ස\u093f\u05b9չछ\u05fa\u0cfaఉ෮\u0963֍ՠगס೦\u0c55\u0dccउ\u05ebԺपפ\u0cf8ఞ\u0dd6ह\u05b9չऎ\u05feಯ\u0c41";
				break;
			case 314:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbన\u0df5ड\u05b9էखמ\u0cf6ఉ\u0de0न\u05b6\u0559ऑש\u0cf0\u0c41\u0dbf";
				break;
			case 315:
				obj = "బ\u0df7त\u05acձ\u094f\u05baಬత\u0dd6ऽ\u05b4յऍץ\u0cc6ఘ\u0df7न\u05bdպळעೱఞ";
				break;
			case 316:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Ւऌ\u05ec\u0cf8ఞ\u0df2ढ\u05aaտॐח\u0cfcఋණग\u05b1դ\u093bףೡఉ\u0dfcञ\u05b7աऌ\u05ee\u0cf0\u0c41\u0dbf";
				break;
			case 317:
				obj = "ן\u0cf0చ\u0de1ॼנԤडח\u0cfcఋවण\u05acզइמ\u0cfaఎ\u0df7म\u05bd";
				break;
			case 318:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Ձऊפ\u0cf9ఈණऄ\u059cԧॐ\u05c4\u0cd1\u0c48\u0df3ॿ\u059eզटנ\u0cf0ఈණए\u05b1պट\u05ff೬ఽ\u0df7ब\u05b5ձऍ\u05a3\u0cd4ఏ\u0df1ब\u05bbռछש\u0cc5ఒ෦ह\u05adզछ\u05cb೧చ෨न׳Մग\u05eeೡఎ\u0df7न\u058cխऎר೦\u0c41\u0dbf";
				break;
			case 319:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059eզटנ\u0cf0ఌ෪\u093f\u05b3Ժफ\u05f9\u0cfcగ\u0df6\u0963\u0595ձऍ\u05fe\u0cf4జ\u0de0ए\u05b7լफ\u05f9\u0cfcగ\u0df6ॷע";
				break;
			case 320:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bcಭ\u0c4f\u0dda\u0900\u05bdէऍ\u05ecೲఞ\u0dc7ढ\u05a0Ձऊפ\u0cf9ఈ";
				break;
			case 321:
				obj = "ट\u05bdյच\u05bcಭ\u0c4e\u0ddaऎ\u05b0յऊ׀\u0cf4క\u0dc8न\u05abէटת\u0cf0హ෪व\u059aաऊ\u05f9\u0cfaక\u0df6";
				break;
			case 322:
				obj = "\u0cc2ఉ෬ह\u05bdԥ\u0946\u05b4\u0ccaయ෬ठ\u05bdՇऊ\u05ec\u0cf8ఋ\u0df6";
				break;
			case 323:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd3ఉ\u0de4ठ\u05bdգऑ\u05ff\u0cfe\u0c55\u0dd0ह\u05b1ոऍ\u05a3\u0cdc\u0c3fබ\u0963\u0591պझ\u05ff\u0cf0ఖ\u0de0ण\u05acՐछ\u05ee೧ఞ෨न\u05b6ՠ\u0944\u05b7";
				break;
			case 324:
				obj = "बר\u0cf4టපॴרՋषף\u0cf6ఉ\u0de0ठ\u05bdպऊ\u05c9\u0cf0ఘ\u0df7न\u05b5ձऐ\u05f9";
				break;
			case 325:
				obj = "ך೧ఒ\u0df1नשԭ\u094aג\u0cc7ఞ\u0df6ढ\u05adզझר೦";
				break;
			case 326:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණऋ\u05aaյओר\u0ce2ఔ\u0df7द\u05f6Վग\u05fd\u0cbb\u0c3e\u0dfdह\u05aaյझ\u05f9\u0cd0\u0c03෬\u093e\u05acսऐת\u0cd3ఒ෩न\u0599շऊפ\u0cfaక\u0dbfॷ";
				break;
			case 327:
				obj = "Նछ\u05ecೱ\u0c4a\u0dbcॸևՑआ\u05f9೧చ෦ह\u059dլग\u05feೡఒ෫प\u059eսऒר\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 328:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbbఽ\u0df7ब\u05b5ձउע೧ఐණञ\u05b1պङס\u0cf0ఫ\u0df7ढ\u05bfզटנ\u0cdcక\u0df6ह\u05b9պझר\u0cc2ఒ෫ॷע";
				break;
			case 329:
				obj = "च\u05aaսऊרತ\u0c42\u0dbcऒ\u058bսऐת\u0cf9ఞ\u0dd5\u093f\u05b7ճऌ\u05ec\u0cf8ల෫\u093e\u05acյऐ\u05ee\u0cf0బ෬ण";
				break;
			case 330:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05cb೧చ෨न\u05afջऌצ\u0cbbస෭ब\u05acչटף\u0cd6ఔ෫फ\u05b1ճऋ\u05ff\u0cf4ఏ෬ढ\u05b6Ԯ\u0944";
				break;
			case 331:
				obj = "\u0c29\u0de0ब\u05bcԦ\u094e\u05bd\u0ccaస෭ब\u05acչटף\u0cd6ఔ෫फ\u05b1ճऋ\u05ff\u0cf4ఏ෬ढ\u05b6";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴃ = (char[])(object)Ⴗ.Ⴃ;
			int num2 = ⴃ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴃ[(num3 + Ⴀ) % num2]);
			}
			result = new string(array);
			Ⴃ[num] = result;
			return result;
		}

		static Ⴗ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴗ.Ⴃ = (string[])(object)array;
			Ⴃ = new string[332];
		}
	}
}
