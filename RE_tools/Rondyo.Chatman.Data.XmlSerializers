
// /home/kensalt/practice/discord/terminator/Chatman/Rondyo.Chatman.Data.XmlSerializers.dll
// Rondyo.Chatman.Data.XmlSerializers, Version=1.1.0.0, Culture=neutral, PublicKeyToken=c5cbd59d58549e5d
// Global type: <Module>
// Architecture: x86
// Runtime: v2.0.50727
// This assembly is signed with a strong name key.
// Hash algorithm: SHA1
// Public key: 0024000004800000940000000602000000240000525341310004000001000100191d59fa159c23ec130eff416767aae23b0533b32ead9676e97436dde82b04dd0aae2f743f0b259ead5186c4f921b0230d12318b1fdb6feb32914e1e733a4a9d1693e0473756c24584e144719025749e0f1333e24fa4d6a34a8e3a811b2cb7ea0cb4698f36cfe0c396ed89b6870fa9c1dd357cf01295ab5914e28faf5c2936d8

using Rondyo.Chatman.Data;
using Rondyo.Chatman.Data.Events;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Globalization;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Security;
using System.Xml;
using System.Xml.Serialization;
using ႥႷႭ;
using ႭႥႨ;
using ႭႥႰ;

[assembly: CompilationRelaxations(8)]
[assembly: RuntimeCompatibility(WrapNonExceptionThrows = true)]
[assembly: AllowPartiallyTrustedCallers]
[assembly: SecurityTransparent]
[assembly: XmlSerializerVersion(Version = "2.0.0.0", ParentAssemblyId = "da604264-94fd-44b7-82a7-00927a3ca5fb,")]
[assembly: AssemblyVersion("1.1.0.0")]
namespace Microsoft.Xml.Serialization.GeneratedAssembly
{
	public sealed class ActionChangeLogSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394878), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write69_ActionChangeLog(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read70_ActionChangeLog();
		}
	}
	public sealed class ActionProducerDefinitionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394831), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write86_ActionProducerDefinition(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read87_ActionProducerDefinition();
		}
	}
	public sealed class ActionScopeSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394879), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write70_ActionScope(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read71_ActionScope();
		}
	}
	public sealed class ActionUsageSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394876), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write67_ActionUsage(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read68_ActionUsage();
		}
	}
	public sealed class ChatmanActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394877), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write68_ChatmanAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read69_ChatmanAction();
		}
	}
	public sealed class ChatmanBrainPowerSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394849), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write47_ChatmanBrainPower(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read48_ChatmanBrainPower();
		}
	}
	public sealed class ChatmanFriendshipSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394850), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write48_ChatmanFriendship(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read49_ChatmanFriendship();
		}
	}
	public sealed class ChatmanSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394848), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write46_Chatman(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read47_Chatman();
		}
	}
	public sealed class ChitChatListsSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394822), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write77_ChitChatLists(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read78_ChitChatLists();
		}
	}
	public sealed class CodeHardwareActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394874), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write73_CodeHardwareAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read74_CodeHardwareAction();
		}
	}
	public sealed class ConstraintFilterDefinitionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394853), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write44_ConstraintFilterDefinition(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read45_ConstraintFilterDefinition();
		}
	}
	public sealed class ContentFileEntrySerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394860), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write50_ContentFileEntry(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read51_ContentFileEntry();
		}
	}
	public sealed class CounterSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394867), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write66_Counter(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read67_Counter();
		}
	}
	public sealed class DataFileLocationSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394821), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write76_DataFileLocation(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read77_DataFileLocation();
		}
	}
	public sealed class GenderSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394828), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write83_Gender(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read84_Gender();
		}
	}
	public sealed class HardwareActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394873), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write72_HardwareAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read73_HardwareAction();
		}
	}
	public sealed class LevelLastChangeDirectionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394851), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write49_LevelLastChangeDirection(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read50_LevelLastChangeDirection();
		}
	}
	public sealed class MoodCounterSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394817), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write80_MoodCounter(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read81_MoodCounter();
		}
	}
	public sealed class MoodLevelSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394818), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write81_MoodLevel(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read82_MoodLevel();
		}
	}
	public sealed class MoodListContainerSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394823), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write78_MoodList(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read79_MoodList();
		}
	}
	public sealed class MoodListSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394830), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write85_ArrayOfMood(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read86_ArrayOfMood();
		}
	}
	public sealed class MoodMatrixEntrySerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394829), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write84_MoodMatrixEntry(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read85_MoodMatrixEntry();
		}
	}
	public sealed class MoodMatrixSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394819), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write82_MoodMatrix(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read83_MoodMatrix();
		}
	}
	public sealed class MoodSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394816), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write79_Mood(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read80_Mood();
		}
	}
	public sealed class PauseHardwareActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394875), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write74_PauseHardwareAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read75_PauseHardwareAction();
		}
	}
	public sealed class PersonalityDataFileSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394857), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write56_PersonalityDataFile(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read57_PersonalityDataFile();
		}
	}
	public sealed class PersonalityDataSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394858), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write57_PersonalityData(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read58_PersonalityData();
		}
	}
	public sealed class PersonalityListSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394854), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write45_ArrayOfPersonality(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read46_ArrayOfPersonality();
		}
	}
	public sealed class PersonalitySerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394855), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write53_Personality(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read54_Personality();
		}
	}
	public sealed class PersonalityStatusSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394856), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write55_PersonalityStatus(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read56_PersonalityStatus();
		}
	}
	public sealed class PushButtonActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394861), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write51_PushButtonAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read52_PushButtonAction();
		}
	}
	public sealed class QnAScenarioMatchActivitySerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394872), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write71_QnAScenarioMatchActivity(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read72_QnAScenarioMatchActivity();
		}
	}
	public sealed class ScenarioActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394865), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write64_ScenarioAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read65_ScenarioAction();
		}
	}
	public sealed class ScenarioIconTextSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394870), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write61_ScenarioIconText(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read62_ScenarioIconText();
		}
	}
	public sealed class ScenarioMoodSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394864), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write63_ScenarioMood(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read64_ScenarioMood();
		}
	}
	public sealed class ScenarioSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394859), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write58_Scenario(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read59_Scenario();
		}
	}
	public sealed class ScenarioTextBaseSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394868), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write59_ScenarioTextBase(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read60_ScenarioTextBase();
		}
	}
	public sealed class ScenarioTextRelationSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394871), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write62_ScenarioTextRelation(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read63_ScenarioTextRelation();
		}
	}
	public sealed class ScenarioTextSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394869), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write60_ScenarioText(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read61_ScenarioText();
		}
	}
	public sealed class ScenarioUserActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394866), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write65_ScenarioUserAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read66_ScenarioUserAction();
		}
	}
	public sealed class SerialNumberProducerSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394863), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write54_SerialNumberProducer(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read55_SerialNumberProducer();
		}
	}
	public sealed class SoundHardwareActionSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394820), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write75_SoundHardwareAction(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read76_SoundHardwareAction();
		}
	}
	public sealed class WebConnectionResultSerializer : XmlSerializer1
	{
		public override bool CanDeserialize(XmlReader xmlReader)
		{
			return xmlReader.IsStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394862), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		protected override void Serialize(object objectToSerialize, XmlSerializationWriter writer)
		{
			((XmlSerializationWriter1)writer).Write52_WebConnectionResult(objectToSerialize);
		}

		protected override object Deserialize(XmlSerializationReader reader)
		{
			return ((XmlSerializationReader1)reader).Read53_WebConnectionResult();
		}
	}
	public class XmlSerializationReader1 : XmlSerializationReader
	{
		private Hashtable Ⴍ;

		private Hashtable Ⴓ;

		private string Ⴍ;

		private string Ⴓ;

		private string Ⴈ;

		private string Ⴃ;

		private string Ⴗ;

		private string Ⴅ;

		private string Ⴐ;

		private string Ⴀ;

		private string Ⴄ;

		private string Ⴜ;

		private string ႳႭ;

		private string ႳႳ;

		private string m_ႳႨ;

		private string m_ႳႣ;

		private string m_ႳႷ;

		private string m_ႳႥ;

		private string m_ႳႰ;

		private string m_ႳႠ;

		private string m_ႳႤ;

		private string m_ႳႼ;

		private string m_ႨႭ;

		private string ႨႳ;

		private string ႨႨ;

		private string m_ႨႣ;

		private string ႨႷ;

		private string ႨႥ;

		private string ႨႰ;

		private string ႨႠ;

		private string ႨႤ;

		private string m_ႨႼ;

		private string m_ႣႭ;

		private string m_ႣႳ;

		private string m_ႣႨ;

		private string m_ႣႣ;

		private string m_ႣႷ;

		private string m_ႣႥ;

		private string m_ႣႰ;

		private string m_ႣႠ;

		private string m_ႣႤ;

		private string m_ႣႼ;

		private string m_ႷႭ;

		private string m_ႷႳ;

		private string m_ႷႨ;

		private string m_ႷႣ;

		private string m_ႷႷ;

		private string m_ႷႥ;

		private string m_ႷႰ;

		private string m_ႷႠ;

		private string ႷႤ;

		private string ႷႼ;

		private string ႥႭ;

		private string ႥႳ;

		private string ႥႨ;

		private string ႥႣ;

		private string ႥႷ;

		private string ႥႥ;

		private string ႥႰ;

		private string ႥႠ;

		private string ႥႤ;

		private string ႥႼ;

		private string ႰႭ;

		private string ႰႳ;

		private string ႰႨ;

		private string ႰႣ;

		private string m_ႰႷ;

		private string m_ႰႥ;

		private string m_ႰႰ;

		private string m_ႰႠ;

		private string m_ႰႤ;

		private string m_ႰႼ;

		private string ႠႭ;

		private string ႠႳ;

		private string ႠႨ;

		private string ႠႣ;

		private string ႠႷ;

		private string ႠႥ;

		private string ႠႰ;

		private string ႠႠ;

		private string ႠႤ;

		private string ႠႼ;

		private string ႤႭ;

		private string ႤႳ;

		private string ႤႨ;

		private string ႤႣ;

		private string ႤႷ;

		private string ႤႥ;

		private string ႤႰ;

		private string ႤႠ;

		private string ႤႤ;

		private string ႤႼ;

		private string ႼႭ;

		private string ႼႳ;

		private string ႼႨ;

		private string ႼႣ;

		private string ႼႷ;

		private string ႼႥ;

		private string ႼႰ;

		private string ႼႠ;

		private string ႼႤ;

		private string ႼႼ;

		private string m_ႳႭႭ;

		private string m_ႳႭႳ;

		private string m_ႳႭႨ;

		private string m_ႳႭႣ;

		private string m_ႳႭႷ;

		private string m_ႳႭႥ;

		private string m_ႳႭႰ;

		private string m_ႳႭႠ;

		private string ႳႭႤ;

		private string ႳႭႼ;

		private string ႳႳႭ;

		private string ႳႳႳ;

		private string ႳႳႨ;

		private string ႳႳႣ;

		private string ႳႳႷ;

		private string ႳႳႥ;

		private string ႳႳႰ;

		private string ႳႳႠ;

		private string ႳႳႤ;

		private string ႳႳႼ;

		private string ႳႨႭ;

		private string ႳႨႳ;

		private string ႳႨႨ;

		private string ႳႨႣ;

		private string ႳႨႷ;

		private string ႳႨႥ;

		private string ႳႨႰ;

		private string ႳႨႠ;

		private string ႳႨႤ;

		private string ႳႨႼ;

		private string ႳႣႭ;

		private string ႳႣႳ;

		private string ႳႣႨ;

		private string ႳႣႣ;

		private string ႳႣႷ;

		private string ႳႣႥ;

		private string ႳႣႰ;

		private string ႳႣႠ;

		private string ႳႣႤ;

		private string ႳႣႼ;

		private string ႳႷႭ;

		private string ႳႷႳ;

		private string ႳႷႨ;

		private string ႳႷႣ;

		private string ႳႷႷ;

		private string ႳႷႥ;

		private string ႳႷႰ;

		private string ႳႷႠ;

		private string ႳႷႤ;

		private string ႳႷႼ;

		private string ႳႥႭ;

		private string ႳႥႳ;

		private string ႳႥႨ;

		private string ႳႥႣ;

		private string ႳႥႷ;

		private string ႳႥႥ;

		private string ႳႥႰ;

		private string ႳႥႠ;

		private string ႳႥႤ;

		private string ႳႥႼ;

		private string ႳႰႭ;

		private string ႳႰႳ;

		private string ႳႰႨ;

		private string ႳႰႣ;

		private string ႳႰႷ;

		private string ႳႰႥ;

		private string ႳႰႰ;

		private string ႳႰႠ;

		private string ႳႰႤ;

		private string ႳႰႼ;

		private string ႳႠႭ;

		private string ႳႠႳ;

		private string ႳႠႨ;

		private string ႳႠႣ;

		private string ႳႠႷ;

		private string ႳႠႥ;

		private string ႳႠႰ;

		private string ႳႠႠ;

		public object Read45_ConstraintFilterDefinition()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 3 : 0);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName == ႥႳ) ? 1 : 4);
					continue;
				case 1:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 4 : 6);
					continue;
				case 6:
					result = ႷႭ(Ⴀ: true, Ⴍ: true);
					num = 2;
					continue;
				case 4:
					throw CreateUnknownNodeException();
				case 0:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394699));
					break;
				case 2:
					break;
				}
				break;
			}
			return result;
		}

		public object Read46_ArrayOfPersonality()
		{
			//Discarded unreachable code: IL_0005, IL_0016, IL_0033, IL_004e, IL_0060, IL_0083, IL_00b6, IL_00d3, IL_00fa, IL_011d, IL_0148, IL_0171, IL_019f, IL_01d1, IL_01e3, IL_0200, IL_022b, IL_024c, IL_0276, IL_029b, IL_02c3, IL_02db, IL_0306, IL_031b, IL_0352
			ႭႥႰ.Ⴈ ⴈ = default(ႭႥႰ.Ⴈ);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					goto IL_0062;
				}
				if (741 >= 741 - 353)
				{
					if ((object)base.Reader.LocalName != this.m_ႣႣ)
					{
						break;
					}
					if (883 < 883 - 574)
					{
						continue;
					}
					goto IL_0205;
				}
				goto IL_02c5;
				IL_008a:
				ⴈ = (ႭႥႰ.Ⴈ)obj;
				if (base.Reader.IsEmptyElement)
				{
					if (false)
					{
						goto IL_01a1;
					}
					goto IL_01d3;
				}
				base.Reader.ReadStartElement();
				goto IL_01b7;
				IL_0282:
				obj = new ႭႥႰ.Ⴈ();
				if (803 <= 803 - 197)
				{
					break;
				}
				goto IL_008a;
				IL_0038:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394748));
				goto IL_0122;
				IL_0062:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394749));
				if (544 > 544 - 423)
				{
					goto IL_0088;
				}
				goto IL_00d8;
				IL_00d8:
				if (base.Reader.NodeType == XmlNodeType.None)
				{
					if ((683 + 683 * 683) % 2 == 0)
					{
						goto IL_01a1;
					}
					goto IL_0282;
				}
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (635 > 635 - 373)
					{
						if ((object)base.Reader.LocalName != ႤႷ)
						{
							goto IL_0038;
						}
						if (642 > 642 - 304)
						{
							if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
							{
								goto IL_0038;
							}
							if (94 >= 94 - 65)
							{
								if (ⴈ == null)
								{
									if (false)
									{
										goto IL_01b7;
									}
									base.Reader.Skip();
								}
								else
								{
									((Collection<Personality>)(object)ⴈ).Add(ႷႣ(Ⴍ: true, Ⴄ: true));
								}
								goto IL_0122;
							}
						}
					}
					goto IL_0251;
				}
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394748));
				if (596 <= 596 - 153)
				{
					goto IL_0062;
				}
				goto IL_0122;
				IL_01a1:
				ReadEndElement();
				goto IL_0088;
				IL_0122:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (84 < 84 - 10)
				{
					break;
				}
				goto IL_0251;
				IL_0251:
				if (base.Reader.NodeType == XmlNodeType.EndElement)
				{
					goto IL_01a1;
				}
				if (678 >= 678 - 169)
				{
					goto IL_00d8;
				}
				goto IL_0205;
				IL_0205:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					break;
				}
				if (971 > 971 - 152)
				{
					if (!ReadNull())
					{
						if (622 >= 622 - 460)
						{
							if (obj != null)
							{
								goto IL_008a;
							}
							if (false)
							{
								goto IL_01d3;
							}
							goto IL_0282;
						}
					}
					if (obj == null)
					{
						if (563 <= 563 - 375)
						{
							goto IL_01a1;
						}
						goto IL_02c5;
					}
				}
				goto IL_000a;
				IL_01d3:
				base.Reader.Skip();
				goto IL_0088;
				IL_0088:
				return obj;
				IL_01b7:
				base.Reader.MoveToContent();
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_0251;
				IL_000a:
				_ = (ႭႥႰ.Ⴈ)obj;
				goto IL_0088;
				IL_02c5:
				obj = new ႭႥႰ.Ⴈ();
				if (34 > 34 - 14)
				{
					goto IL_000a;
				}
				goto IL_0122;
			}
			throw CreateUnknownNodeException();
		}

		public object Read47_Chatman()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 0);
					continue;
				case 1:
					num = (((object)base.Reader.LocalName != ႠႳ) ? 6 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 6 : 3);
					continue;
				case 3:
					result = ႷႠ(Ⴓ: true, Ⴅ: true);
					num = 4;
					continue;
				case 6:
					throw CreateUnknownNodeException();
				case 0:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394711));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read48_ChatmanBrainPower()
		{
			//Discarded unreachable code: IL_0028, IL_0053, IL_0078, IL_00b3
			object result;
			while (true)
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						continue;
					}
					if ((object)base.Reader.LocalName == ႳႥႨ)
					{
						if (431 < 431 - 206)
						{
							goto IL_007a;
						}
						while ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (598 <= 598 - 212)
							{
								continue;
							}
							goto IL_007a;
						}
					}
				}
				else
				{
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394744));
					if ((373 + 373 * 373) % 2 == 0)
					{
						break;
					}
				}
				throw CreateUnknownNodeException();
				IL_007a:
				result = ႷႰ(Ⴓ: true, Ⴅ: true);
				break;
			}
			return result;
		}

		public object Read49_ChatmanFriendship()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 3 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.LocalName != ႳႳႰ) ? 2 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 2 : 6);
					continue;
				case 6:
					result = ႷႥ(Ⴓ: true, Ⴅ: true);
					num = 1;
					continue;
				case 2:
					throw CreateUnknownNodeException();
				case 3:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394705));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read50_LevelLastChangeDirection()
		{
			//Discarded unreachable code: IL_0005, IL_002d, IL_005c, IL_007e, IL_0099, IL_00cc
			object result = null;
			do
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if ((813 + 813 * 813) % 2 == 0 && (object)base.Reader.LocalName == this.m_ႣႥ)
					{
						if (804 < 804 - 768)
						{
							break;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (177 <= 177 - 98)
							{
								goto IL_003b;
							}
							result = ႳႭႰ(base.Reader.ReadElementString());
							break;
						}
					}
					throw CreateUnknownNodeException();
				}
				goto IL_003b;
				IL_003b:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394745));
			}
			while (304 <= 304 - 203);
			return result;
		}

		public object Read51_ContentFileEntry()
		{
			//Discarded unreachable code: IL_0005, IL_0027, IL_004f, IL_0071, IL_007e, IL_00ae
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType != XmlNodeType.Element)
			{
				goto IL_0032;
			}
			if ((369 + 369 * 369) % 2 == 0)
			{
				if ((object)base.Reader.LocalName == ႳႨႷ)
				{
					if (21 >= 21 - 15)
					{
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (507 <= 507 - 111)
						{
							goto IL_0032;
						}
						goto IL_0073;
					}
				}
				throw CreateUnknownNodeException();
			}
			goto IL_0073;
			IL_0073:
			result = ႷႷ(Ⴍ: true, Ⴄ: true);
			goto IL_0030;
			IL_0030:
			return result;
			IL_0032:
			UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394707));
			if ((78 + 78 * 78) % 2 == 0)
			{
				goto IL_0030;
			}
			goto IL_0073;
		}

		public object Read52_PushButtonAction()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 6);
					continue;
				case 1:
					num = (((object)base.Reader.LocalName != Ⴀ) ? 3 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 3 : 4);
					continue;
				case 4:
					result = ႳႭႥ(base.Reader.ReadElementString());
					num = 0;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 6:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394746));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read53_WebConnectionResult()
		{
			int num = 1;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 5 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.LocalName != ႳႷႨ) ? 3 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 3 : 4);
					continue;
				case 4:
					result = ႳႭႷ(base.Reader.ReadElementString());
					num = 0;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394716));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read54_Personality()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 2);
					continue;
				case 1:
					num = (((object)base.Reader.LocalName != ႤႷ) ? 3 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 3 : 4);
					continue;
				case 4:
					result = ႷႣ(Ⴍ: true, Ⴄ: true);
					num = 0;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 2:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394748));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read55_SerialNumberProducer()
		{
			//Discarded unreachable code: IL_0005, IL_0029, IL_007e, IL_00ae
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (false)
						{
							break;
						}
						if ((object)base.Reader.LocalName == Ⴍ)
						{
							if (false)
							{
								goto IL_0032;
							}
							if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if ((103 + 103 * 103) % 2 == 0)
								{
									result = ႷႨ(Ⴍ: true, Ⴄ: true);
									goto IL_0032;
								}
							}
						}
						throw CreateUnknownNodeException();
					}
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394718));
					if (false)
					{
						continue;
					}
					goto IL_0032;
					IL_0032:
					return result;
				}
			}
		}

		public object Read56_PersonalityStatus()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 4 : 0);
					continue;
				case 4:
					num = (((object)base.Reader.LocalName == ႳႳ) ? 1 : 3);
					continue;
				case 1:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 3 : 5);
					continue;
				case 5:
					result = ႳႭႣ(base.Reader.ReadElementString());
					num = 2;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 0:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394692));
					break;
				case 2:
					break;
				}
				break;
			}
			return result;
		}

		public object Read57_PersonalityDataFile()
		{
			//Discarded unreachable code: IL_0005, IL_002c, IL_0058, IL_007c, IL_0089, IL_00ba
			while (true)
			{
				object result = null;
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (722 < 722 - 634)
						{
							break;
						}
						if ((object)base.Reader.LocalName == ႼႨ)
						{
							if (false)
							{
								continue;
							}
							while ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if (false)
								{
									continue;
								}
								goto IL_007e;
							}
						}
						throw CreateUnknownNodeException();
					}
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394712));
					if (473 < 473 - 268)
					{
					}
					goto IL_0035;
					IL_0035:
					return result;
					IL_007e:
					result = ႷႳ(Ⴍ: true, Ⴄ: true);
					goto IL_0035;
				}
			}
		}

		public object Read58_PersonalityData()
		{
			//Discarded unreachable code: IL_0005, IL_0023, IL_004f, IL_0074, IL_0081, IL_00b1
			object result = null;
			base.Reader.MoveToContent();
			while (true)
			{
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394694));
					if (292 < 292 - 286)
					{
					}
					break;
				}
				if (false)
				{
					continue;
				}
				if ((object)base.Reader.LocalName == this.m_ႷႨ)
				{
					if (124 <= 124 - 2)
					{
						break;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (1021 > 1021 - 845)
						{
							result = ႣႼ(Ⴍ: true, Ⴓ: true);
							break;
						}
					}
				}
				throw CreateUnknownNodeException();
			}
			return result;
		}

		public object Read59_Scenario()
		{
			//Discarded unreachable code: IL_0005, IL_002c, IL_0058, IL_007d, IL_008a, IL_00b8
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (393 < 393 - 14)
					{
						continue;
					}
					if ((object)base.Reader.LocalName != ႳႠႣ)
					{
						goto IL_002e;
					}
					if (false)
					{
						break;
					}
				}
				else
				{
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394714));
					if (430 >= 430 - 329)
					{
						break;
					}
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (679 <= 679 - 207)
					{
						continue;
					}
					result = ႣႤ(Ⴍ: true, Ⴓ: true);
					break;
				}
				goto IL_002e;
				IL_002e:
				throw CreateUnknownNodeException();
			}
			return result;
		}

		public object Read60_ScenarioTextBase()
		{
			//Discarded unreachable code: IL_0005, IL_0029, IL_0055, IL_0079, IL_0086, IL_00b9
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if ((98 + 98 * 98) % 2 == 0)
					{
						if ((object)base.Reader.LocalName == ႳႣႥ)
						{
							if (false)
							{
								continue;
							}
							if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if ((706 + 706 * 706) % 2 == 0)
								{
									result = ႣႠ(Ⴍ: true, Ⴓ: true);
								}
								break;
							}
						}
						throw CreateUnknownNodeException();
					}
				}
				do
				{
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394688));
				}
				while (912 < 912 - 321);
				break;
			}
			return result;
		}

		public object Read61_ScenarioText()
		{
			//Discarded unreachable code: IL_0005, IL_002d, IL_0058, IL_007d, IL_008a, IL_00bb
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394788));
					if ((950 + 950 * 950) % 2 == 0)
					{
						break;
					}
				}
				else if (457 <= 457 - 268)
				{
					goto IL_007f;
				}
				if ((object)base.Reader.LocalName == ႠႰ)
				{
					if (152 < 152 - 43)
					{
						continue;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (876 > 876 - 295)
						{
						}
						goto IL_007f;
					}
				}
				throw CreateUnknownNodeException();
				IL_007f:
				result = ႣႰ(Ⴍ: true, Ⴓ: true);
				break;
			}
			return result;
		}

		public object Read62_ScenarioIconText()
		{
			int num = 3;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 1 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.LocalName != ႳႨႼ) ? 4 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 4 : 6);
					continue;
				case 6:
					result = ႣႥ(Ⴍ: true, Ⴓ: true);
					num = 5;
					continue;
				case 4:
					throw CreateUnknownNodeException();
				case 1:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394690));
					break;
				case 5:
					break;
				}
				break;
			}
			return result;
		}

		public object Read63_ScenarioTextRelation()
		{
			//Discarded unreachable code: IL_0005, IL_002d, IL_0059, IL_007d, IL_0098, IL_00cc
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				while (true)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (538 > 538 - 238)
						{
							if ((object)base.Reader.LocalName != ႨႨ)
							{
								goto IL_002f;
							}
							if (929 <= 929 - 229)
							{
								break;
							}
						}
						if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
						{
							goto IL_002f;
						}
						if ((824 + 824 * 824) % 2 == 0)
						{
							result = ႳႭႳ(base.Reader.ReadElementString());
							goto IL_0036;
						}
					}
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394789));
					if (1022 <= 1022 - 693)
					{
						continue;
					}
					goto IL_0036;
					IL_002f:
					throw CreateUnknownNodeException();
					IL_0036:
					return result;
				}
			}
		}

		public object Read64_ScenarioMood()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 3 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.LocalName != this.m_ႣႼ) ? 6 : 0);
					continue;
				case 0:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 6 : 4);
					continue;
				case 4:
					result = ႣႷ(Ⴍ: true, Ⴓ: true);
					num = 1;
					continue;
				case 6:
					throw CreateUnknownNodeException();
				case 3:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394700));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read65_ScenarioAction()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 2 : 0);
					continue;
				case 2:
					num = (((object)base.Reader.LocalName != ႼႼ) ? 3 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 3 : 5);
					continue;
				case 5:
					result = ႣႣ(Ⴍ: true, Ⴓ: true);
					num = 1;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 0:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394790));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read66_ScenarioUserAction()
		{
			//Discarded unreachable code: IL_0005, IL_002a, IL_0055, IL_0079, IL_0086, IL_00b7
			object result = null;
			base.Reader.MoveToContent();
			do
			{
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (338 >= 338 - 187)
					{
						if ((object)base.Reader.LocalName == this.m_ႳႭႭ)
						{
							if (888 > 888 - 440)
							{
								if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
								{
									goto IL_002c;
								}
								if (false)
								{
									break;
								}
							}
							result = ႣႨ(Ⴍ: true, Ⴓ: true);
							break;
						}
						goto IL_002c;
					}
				}
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394702));
				continue;
				IL_002c:
				throw CreateUnknownNodeException();
			}
			while (false);
			return result;
		}

		public object Read67_Counter()
		{
			//Discarded unreachable code: IL_0005, IL_0027, IL_0056, IL_0077, IL_0084, IL_00b2
			while (true)
			{
				object result = null;
				while (true)
				{
					base.Reader.MoveToContent();
					if (base.Reader.NodeType != XmlNodeType.Element)
					{
						UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394784));
						if (421 < 421 - 321)
						{
						}
						goto IL_0033;
					}
					if (203 <= 203 - 127)
					{
						continue;
					}
					if ((object)base.Reader.LocalName == ႳႰႭ)
					{
						if (557 <= 557 - 12)
						{
							break;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (282 <= 282 - 6)
							{
							}
							result = ႣႳ(Ⴍ: true, Ⴓ: true);
							goto IL_0033;
						}
					}
					throw CreateUnknownNodeException();
					IL_0033:
					return result;
				}
			}
		}

		public object Read68_ActionUsage()
		{
			//Discarded unreachable code: IL_0005, IL_002a, IL_0059, IL_0088, IL_00bb
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if ((687 + 687 * 687) % 2 == 0)
				{
					goto IL_0007;
				}
			}
			goto IL_0038;
			IL_0036:
			return result;
			IL_0038:
			UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394703));
			if (558 < 558 - 344)
			{
				goto IL_0007;
			}
			goto IL_0036;
			IL_0007:
			if ((object)base.Reader.LocalName == ႥႤ)
			{
				if (956 < 956 - 787)
				{
					goto IL_0038;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (false)
					{
					}
					result = ႣႭ(Ⴍ: true, Ⴓ: true);
					goto IL_0036;
				}
			}
			throw CreateUnknownNodeException();
		}

		public object Read69_ChatmanAction()
		{
			//Discarded unreachable code: IL_0005, IL_0030, IL_005b, IL_007f, IL_008c, IL_00c0
			object result = null;
			base.Reader.MoveToContent();
			while (true)
			{
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394786));
					if ((669 + 669 * 669) % 2 == 0)
					{
					}
					break;
				}
				if (883 <= 883 - 140)
				{
				}
				if ((object)base.Reader.LocalName == this.m_ႣႨ)
				{
					if (891 <= 891 - 619)
					{
						continue;
					}
					while ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (false)
						{
							continue;
						}
						goto IL_0081;
					}
				}
				throw CreateUnknownNodeException();
				IL_0081:
				result = ႨႼ(Ⴍ: true, Ⴓ: true);
				break;
			}
			return result;
		}

		public object Read70_ActionChangeLog()
		{
			//Discarded unreachable code: IL_0005, IL_002d, IL_005b, IL_0098, IL_00c5
			object result = null;
			do
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (30 >= 30 - 8 && (object)base.Reader.LocalName == ႳႠႷ)
					{
						if (419 >= 419 - 349)
						{
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (false)
							{
								goto IL_003b;
							}
							result = ႳႭႭ(base.Reader.ReadElementString());
							break;
						}
					}
					throw CreateUnknownNodeException();
				}
				goto IL_003b;
				IL_003b:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394697));
			}
			while (false);
			return result;
		}

		public object Read71_ActionScope()
		{
			//Discarded unreachable code: IL_0005, IL_0023, IL_0052, IL_0077, IL_0092, IL_00c8
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (false)
				{
				}
				if ((object)base.Reader.LocalName == this.m_ႳႭႷ)
				{
					if (12 < 12 - 2)
					{
						goto IL_0031;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (880 < 880 - 302)
						{
						}
						goto IL_0079;
					}
				}
				throw CreateUnknownNodeException();
			}
			goto IL_0031;
			IL_0079:
			result = ႰႼ(base.Reader.ReadElementString());
			goto IL_002f;
			IL_002f:
			return result;
			IL_0031:
			UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394796));
			if (233 >= 233 - 162)
			{
				goto IL_002f;
			}
			goto IL_0079;
		}

		public object Read72_QnAScenarioMatchActivity()
		{
			//Discarded unreachable code: IL_0024, IL_004f, IL_0073, IL_008e, IL_00c8
			object result;
			while (true)
			{
				result = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (1010 < 1010 - 655)
					{
						break;
					}
					goto IL_0005;
				}
				goto IL_002f;
				IL_0005:
				if ((object)base.Reader.LocalName == ႨႷ)
				{
					if (164 <= 164 - 1)
					{
						goto IL_002f;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (false)
						{
							continue;
						}
						result = ႰႤ(base.Reader.ReadElementString());
						break;
					}
				}
				throw CreateUnknownNodeException();
				IL_002f:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394698));
				if ((653 + 653 * 653) % 2 == 0)
				{
					break;
				}
				goto IL_0005;
			}
			return result;
		}

		public object Read73_HardwareAction()
		{
			int num = 3;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 1 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.LocalName != ႳႰႷ) ? 6 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 6 : 2);
					continue;
				case 2:
					result = ႨႣ(Ⴍ: true, Ⴓ: true);
					num = 0;
					continue;
				case 6:
					throw CreateUnknownNodeException();
				case 1:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394798));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read74_CodeHardwareAction()
		{
			int num = 0;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 1 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.LocalName != ႳႰႤ) ? 3 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 3 : 4);
					continue;
				case 4:
					result = ႨႭ(Ⴍ: true, Ⴓ: true);
					num = 5;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 1:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394709));
					break;
				case 5:
					break;
				}
				break;
			}
			return result;
		}

		public object Read75_PauseHardwareAction()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 5 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.LocalName == ႳႨႰ) ? 1 : 0);
					continue;
				case 1:
					num = (((object)base.Reader.NamespaceURI == this.m_ႰႷ) ? 3 : 0);
					continue;
				case 3:
					result = ႳႼ(Ⴍ: true, Ⴓ: true);
					num = 4;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394799));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read76_SoundHardwareAction()
		{
			int num = 6;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType == XmlNodeType.Element) ? 1 : 5);
					continue;
				case 1:
					num = (((object)base.Reader.LocalName != ႳႥႥ) ? 2 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 2 : 0);
					continue;
				case 0:
					result = ႳႤ(Ⴍ: true, Ⴓ: true);
					num = 4;
					continue;
				case 2:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394710));
					break;
				case 4:
					break;
				}
				break;
			}
			return result;
		}

		public object Read77_DataFileLocation()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 5 : 4);
					continue;
				case 4:
					num = (((object)base.Reader.LocalName == Ⴐ) ? 6 : 0);
					continue;
				case 6:
					num = (((object)base.Reader.NamespaceURI == this.m_ႰႷ) ? 3 : 0);
					continue;
				case 3:
					result = ႰႠ(base.Reader.ReadElementString());
					num = 1;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394793));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read78_ChitChatLists()
		{
			int num = 4;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 6 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.LocalName != ႳႨႳ) ? 1 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 1 : 5);
					continue;
				case 5:
					result = ႰႰ(base.Reader.ReadElementString());
					num = 0;
					continue;
				case 1:
					throw CreateUnknownNodeException();
				case 6:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394704));
					break;
				case 0:
					break;
				}
				break;
			}
			return result;
		}

		public object Read79_MoodList()
		{
			//Discarded unreachable code: IL_0005, IL_0029, IL_0054, IL_0075, IL_0082, IL_00b0
			object result = null;
			base.Reader.MoveToContent();
			while (true)
			{
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394794));
					if ((987 + 987 * 987) % 2 == 0)
					{
						break;
					}
					continue;
				}
				if (800 > 800 - 98)
				{
					while (true)
					{
						if ((object)base.Reader.LocalName == this.m_ႳႰ)
						{
							if (false)
							{
								continue;
							}
							while ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if (false)
								{
									continue;
								}
								goto IL_0077;
							}
						}
						throw CreateUnknownNodeException();
					}
				}
				goto IL_0077;
				IL_0077:
				result = ႳႠ(Ⴍ: true, Ⴓ: true);
				break;
			}
			return result;
		}

		public object Read80_Mood()
		{
			int num = 0;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 4 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.LocalName == ႳႰႣ) ? 1 : 3);
					continue;
				case 1:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 3 : 6);
					continue;
				case 6:
					result = ႳႣ(Ⴍ: true, Ⴓ: true);
					num = 5;
					continue;
				case 3:
					throw CreateUnknownNodeException();
				case 4:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394706));
					break;
				case 5:
					break;
				}
				break;
			}
			return result;
		}

		public object Read81_MoodCounter()
		{
			int num = 2;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 4 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.LocalName == ႨႳ) ? 3 : 0);
					continue;
				case 3:
					num = (((object)base.Reader.NamespaceURI == this.m_ႰႷ) ? 6 : 0);
					continue;
				case 6:
					result = ႳႰ(Ⴍ: true, Ⴓ: true);
					num = 1;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 4:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394795));
					break;
				case 1:
					break;
				}
				break;
			}
			return result;
		}

		public object Read82_MoodLevel()
		{
			int num = 5;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 1 : 6);
					continue;
				case 6:
					num = (((object)base.Reader.LocalName == this.m_ႳႠ) ? 3 : 0);
					continue;
				case 3:
					num = (((object)base.Reader.NamespaceURI == this.m_ႰႷ) ? 4 : 0);
					continue;
				case 4:
					result = ႰႥ(base.Reader.ReadElementString());
					num = 2;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 1:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394716));
					break;
				case 2:
					break;
				}
				break;
			}
			return result;
		}

		public object Read83_MoodMatrix()
		{
			int num = 1;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 2 : 5);
					continue;
				case 5:
					num = (((object)base.Reader.LocalName == ႼႣ) ? 6 : 0);
					continue;
				case 6:
					num = (((object)base.Reader.NamespaceURI == this.m_ႰႷ) ? 4 : 0);
					continue;
				case 4:
					result = ႳႥ(Ⴍ: true, Ⴓ: true);
					num = 3;
					continue;
				case 0:
					throw CreateUnknownNodeException();
				case 2:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394804));
					break;
				case 3:
					break;
				}
				break;
			}
			return result;
		}

		public object Read84_Gender()
		{
			//Discarded unreachable code: IL_0005, IL_002a, IL_0078, IL_0093, IL_00c7
			object result = null;
			base.Reader.MoveToContent();
			if (base.Reader.NodeType != XmlNodeType.Element)
			{
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394718));
				if (623 >= 623 - 324)
				{
					goto IL_0033;
				}
			}
			else if (591 <= 591 - 429)
			{
				goto IL_002c;
			}
			if ((object)base.Reader.LocalName == ႳႳႷ)
			{
				if (301 < 301 - 286)
				{
					goto IL_007a;
				}
				while ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (false)
					{
						continue;
					}
					goto IL_007a;
				}
			}
			goto IL_002c;
			IL_0033:
			return result;
			IL_002c:
			throw CreateUnknownNodeException();
			IL_007a:
			result = ႰႷ(base.Reader.ReadElementString());
			goto IL_0033;
		}

		public object Read85_MoodMatrixEntry()
		{
			//Discarded unreachable code: IL_0005, IL_002a, IL_0050, IL_0075, IL_0082, IL_00b2
			object result = null;
			while (true)
			{
				base.Reader.MoveToContent();
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if ((597 + 597 * 597) % 2 == 0)
					{
						if ((object)base.Reader.LocalName != ႳႰႨ)
						{
							goto IL_002c;
						}
						if (692 < 692 - 56)
						{
							continue;
						}
						goto IL_0052;
					}
				}
				goto IL_0035;
				IL_0035:
				UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394805));
				if (20 > 20 - 18)
				{
					break;
				}
				goto IL_0052;
				IL_0052:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_002c;
				}
				if (408 <= 408 - 183)
				{
					goto IL_0035;
				}
				result = ႳႷ(Ⴍ: true, Ⴓ: true);
				break;
				IL_002c:
				throw CreateUnknownNodeException();
			}
			return result;
		}

		public object Read86_ArrayOfMood()
		{
			//Discarded unreachable code: IL_0005, IL_0013, IL_002a, IL_0045, IL_005a, IL_007f, IL_00b2, IL_00eb, IL_010e, IL_013c, IL_0165, IL_0193, IL_01a3, IL_01ca, IL_01df, IL_0202, IL_0229, IL_0246, IL_0272, IL_0295, IL_02d8, IL_0309, IL_0321, IL_035a
			int whileIterations = default(int);
			int readerCount = default(int);
			Ⴀ ⴀ = default(Ⴀ);
			while (true)
			{
				object obj = null;
				base.Reader.MoveToContent();
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394712));
					if ((599 + 599 * 599) % 2 == 0)
					{
					}
				}
				else if ((919 + 919 * 919) % 2 == 0)
				{
					if ((object)base.Reader.LocalName != ႠႨ)
					{
						break;
					}
					if (631 < 631 - 181)
					{
						goto IL_0113;
					}
					goto IL_0207;
				}
				goto IL_0084;
				IL_0084:
				return obj;
				IL_01e4:
				if (!ReadNull())
				{
					if (432 > 432 - 154)
					{
						if (obj != null)
						{
							goto IL_0086;
						}
						if (false)
						{
							goto IL_0084;
						}
					}
					goto IL_027e;
				}
				if (obj == null)
				{
					if (false)
					{
						goto IL_0084;
					}
					obj = new Ⴀ();
					if (false)
					{
						goto IL_0113;
					}
				}
				_ = (Ⴀ)obj;
				goto IL_0084;
				IL_01b0:
				base.Reader.MoveToContent();
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_024b;
				IL_0113:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (552 <= 552 - 341)
				{
					goto IL_01b0;
				}
				goto IL_024b;
				IL_024b:
				while (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if ((967 + 967 * 967) % 2 == 0)
					{
						if (base.Reader.NodeType == XmlNodeType.None)
						{
							goto IL_00d9;
						}
						if (base.Reader.NodeType != XmlNodeType.Element)
						{
							goto IL_0141;
						}
						if (344 < 344 - 11)
						{
							goto IL_0207;
						}
						if ((object)base.Reader.LocalName != ႳႰႣ)
						{
							goto IL_002f;
						}
						if (694 <= 694 - 194)
						{
							continue;
						}
						goto IL_02dd;
					}
					goto IL_01e4;
				}
				goto IL_0198;
				IL_00d9:
				if (false)
				{
					goto IL_0086;
				}
				goto IL_0198;
				IL_02dd:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_002f;
				}
				if (574 > 574 - 130)
				{
					if (ⴀ == null)
					{
						if (false)
						{
							continue;
						}
						base.Reader.Skip();
					}
					else
					{
						ⴀ.Add(ႳႣ(Ⴍ: true, Ⴓ: true));
					}
					goto IL_0113;
				}
				goto IL_008d;
				IL_0141:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394706));
				if (478 <= 478 - 210)
				{
					continue;
				}
				goto IL_0113;
				IL_027e:
				obj = new Ⴀ();
				if ((1 + 1 * 1) % 2 == 0)
				{
					goto IL_0086;
				}
				goto IL_0141;
				IL_0086:
				ⴀ = (Ⴀ)obj;
				goto IL_008d;
				IL_0198:
				ReadEndElement();
				goto IL_0084;
				IL_008d:
				if (base.Reader.IsEmptyElement)
				{
					if (false)
					{
						goto IL_0198;
					}
					base.Reader.Skip();
					goto IL_0084;
				}
				base.Reader.ReadStartElement();
				goto IL_01b0;
				IL_002f:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394706));
				goto IL_0113;
				IL_0207:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					break;
				}
				if ((800 + 800 * 800) % 2 == 0)
				{
					goto IL_01e4;
				}
				goto IL_027e;
			}
			throw CreateUnknownNodeException();
		}

		public object Read87_ActionProducerDefinition()
		{
			int num = 0;
			object result = default(object);
			while (true)
			{
				switch (num)
				{
				default:
					result = null;
					base.Reader.MoveToContent();
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 5 : 3);
					continue;
				case 3:
					num = (((object)base.Reader.LocalName != ႳႰႳ) ? 4 : 2);
					continue;
				case 2:
					num = (((object)base.Reader.NamespaceURI == this.m_ႰႷ) ? 1 : 4);
					continue;
				case 1:
					result = ႳႨ(Ⴍ: true, Ⴓ: true);
					num = 6;
					continue;
				case 4:
					throw CreateUnknownNodeException();
				case 5:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394807));
					break;
				case 6:
					break;
				}
				break;
			}
			return result;
		}

		private ActionProducerDefinition ႳႨ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0030, IL_005b, IL_007d, IL_00a8, IL_00d4, IL_00fb, IL_011c, IL_0138, IL_0163, IL_018a, IL_0195, IL_01cb, IL_0206, IL_0232, IL_0256, IL_027d, IL_029d, IL_02b1, IL_02d1, IL_02ed, IL_0308, IL_033f, IL_0360, IL_0388, IL_0395, IL_03b8, IL_03e4, IL_0412, IL_043d, IL_045e
			int whileIterations = default(int);
			int readerCount = default(int);
			ActionProducerDefinition actionProducerDefinition = default(ActionProducerDefinition);
			bool[] array = default(bool[]);
			while (true)
			{
				IL_0442:
				object obj;
				if (Ⴓ)
				{
					obj = GetXsiType();
					goto IL_039a;
				}
				if (437 > 437 - 367)
				{
				}
				goto IL_018f;
				IL_0216:
				base.Reader.MoveToContent();
				goto IL_0222;
				IL_0222:
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_00ad;
				IL_039a:
				XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
				bool flag = false;
				if (Ⴍ)
				{
					if (false)
					{
						goto IL_00d9;
					}
					flag = ReadNull();
					if (853 < 853 - 392)
					{
						goto IL_01e2;
					}
				}
				goto IL_02b8;
				IL_00ad:
				while (true)
				{
					if (base.Reader.NodeType != XmlNodeType.EndElement)
					{
						if (false)
						{
							break;
						}
						if (base.Reader.NodeType != 0)
						{
							goto IL_01e2;
						}
						if (558 <= 558 - 534)
						{
							continue;
						}
					}
					ReadEndElement();
					return actionProducerDefinition;
				}
				goto IL_0035;
				IL_020b:
				base.Reader.ReadStartElement();
				goto IL_0216;
				IL_02b8:
				if (Ⴓ)
				{
					if (163 > 163 - 27 && !(xmlQualifiedName == null))
					{
						if (383 > 383 - 189)
						{
							goto IL_0082;
						}
						goto IL_0216;
					}
				}
				goto IL_0100;
				IL_030d:
				base.Reader.MoveToElement();
				goto IL_0319;
				IL_0319:
				if (base.Reader.IsEmptyElement)
				{
					if (414 > 414 - 202)
					{
						base.Reader.Skip();
						return actionProducerDefinition;
					}
					goto IL_018f;
				}
				goto IL_020b;
				IL_01e2:
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (715 <= 715 - 109)
					{
						goto IL_00d9;
					}
					UnknownNode(actionProducerDefinition, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
				}
				else
				{
					UnknownNode(actionProducerDefinition, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					if (613 < 613 - 386)
					{
						goto IL_02b8;
					}
				}
				goto IL_0035;
				IL_0100:
				if (flag)
				{
					if (854 >= 854 - 665)
					{
						break;
					}
					goto IL_0222;
				}
				goto IL_029f;
				IL_018f:
				obj = null;
				goto IL_039a;
				IL_029f:
				actionProducerDefinition = new ActionProducerDefinition();
				array = new bool[2];
				goto IL_00d9;
				IL_00d9:
				while (base.Reader.MoveToNextAttribute())
				{
					if (!array[0])
					{
						if (false)
						{
							goto IL_0442;
						}
						if ((object)base.Reader.LocalName == ႳႣႼ)
						{
							if (705 <= 705 - 62)
							{
								goto IL_020b;
							}
							if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if (false)
								{
									goto IL_029f;
								}
								actionProducerDefinition.ID = XmlConvert.ToInt32(base.Reader.Value);
								goto IL_0357;
							}
						}
					}
					if (!array[1])
					{
						if (723 >= 723 - 699)
						{
						}
						if ((object)base.Reader.LocalName == Ⴗ)
						{
							if (110 < 110 - 27)
							{
								goto IL_030d;
							}
							if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if ((178 + 178 * 178) % 2 == 0)
								{
									actionProducerDefinition.Parameters = base.Reader.Value;
									array[1] = true;
									continue;
								}
								goto IL_01e2;
							}
						}
					}
					if (IsXmlnsAttribute(base.Reader.Name))
					{
						continue;
					}
					if (895 > 895 - 53)
					{
						UnknownNode(actionProducerDefinition, ႥႷႭ.Ⴓ.ႰႷ(1821394714));
						if ((451 + 451 * 451) % 2 == 0)
						{
							continue;
						}
						goto IL_0357;
					}
					goto IL_030d;
					IL_0357:
					array[0] = true;
				}
				if (false)
				{
					goto IL_0082;
				}
				goto IL_030d;
				IL_0035:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (289 > 289 - 50)
				{
					goto IL_00ad;
				}
				goto IL_0319;
				IL_0082:
				if ((object)xmlQualifiedName.Name == ႳႰႳ)
				{
					if (false)
					{
						goto IL_02b8;
					}
					if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
					{
						goto IL_0100;
					}
					if (false)
					{
						goto IL_0035;
					}
				}
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			return null;
		}

		private Mood ႳႣ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0023, IL_004c, IL_007a, IL_009f, IL_00be, IL_00ee, IL_0115, IL_013a, IL_0168, IL_0173, IL_0193, IL_01c3, IL_01f0, IL_021a, IL_0248, IL_0279, IL_029b, IL_02ce, IL_02ff, IL_0330, IL_035e, IL_037e, IL_03af, IL_03ce, IL_03ee, IL_041f, IL_0448, IL_0472, IL_0499, IL_04be, IL_04ef, IL_051b, IL_053f, IL_0561, IL_0581, IL_05b2, IL_05e0, IL_0601, IL_062f, IL_0659, IL_067b, IL_06a6, IL_06ca, IL_06ee, IL_06fb, IL_071e, IL_0755, IL_0785, IL_07a8, IL_07d9, IL_07fd, IL_0822, IL_084d, IL_086c, IL_0898, IL_08c4, IL_08e4, IL_0914, IL_092c, IL_094c, IL_0977, IL_0992, IL_09c2, IL_09f0, IL_0a20, IL_0a51, IL_0a73, IL_0a8e, IL_0abc, IL_0ae1, IL_0b05, IL_0b24, IL_0b54, IL_0b71, IL_0b9e, IL_0bce, IL_0bf0, IL_0c12, IL_0c39, IL_0c63, IL_0c94, IL_0cb5
			if (Ⴓ)
			{
				goto IL_06f3;
			}
			object obj;
			if (331 > 331 - 289)
			{
				obj = null;
				goto IL_0700;
			}
			goto IL_01f5;
			IL_0c49:
			Mood mood = default(Mood);
			return mood;
			IL_00a4:
			mood.Description = base.Reader.Value;
			bool[] array = default(bool[]);
			array[2] = true;
			goto IL_01f5;
			IL_06f3:
			obj = GetXsiType();
			goto IL_0700;
			IL_0700:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			goto IL_0701;
			IL_0701:
			bool flag = false;
			if (!Ⴍ)
			{
				goto IL_097c;
			}
			if ((959 + 959 * 959) % 2 == 0)
			{
				goto IL_027e;
			}
			goto IL_0b0a;
			IL_0477:
			if (base.Reader.NodeType == XmlNodeType.EndElement)
			{
				goto IL_0827;
			}
			if (34 > 34 - 10)
			{
				goto IL_02a8;
			}
			goto IL_091f;
			IL_097c:
			if (Ⴓ)
			{
				if (114 <= 114 - 93)
				{
					goto IL_0178;
				}
				if (!(xmlQualifiedName == null))
				{
					if (723 <= 723 - 558)
					{
						goto IL_01f5;
					}
					goto IL_04f4;
				}
			}
			goto IL_0b59;
			IL_0b0a:
			mood.Author = base.Reader.Value;
			array[5] = true;
			goto IL_01f5;
			IL_0c4b:
			if (!array[6])
			{
				if (101 <= 101 - 100)
				{
					goto IL_0198;
				}
				if ((object)base.Reader.LocalName == this.m_ႷႭ)
				{
					if (1012 > 1012 - 388)
					{
						if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
						{
							goto IL_078a;
						}
						if ((503 + 503 * 503) % 2 == 0)
						{
							mood.UpdateDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
							array[6] = true;
							goto IL_01f5;
						}
					}
					goto IL_082d;
				}
			}
			goto IL_078a;
			IL_0a90:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_000a;
			}
			if (806 >= 806 - 290)
			{
				mood.IsVisible = XmlConvert.ToBoolean(base.Reader.Value);
				array[10] = true;
			}
			goto IL_01f5;
			IL_0b59:
			if (!flag)
			{
				mood = new Mood();
				goto IL_091f;
			}
			if ((90 + 90 * 90) % 2 == 0)
			{
				return null;
			}
			goto IL_02a0;
			IL_0198:
			if ((object)base.Reader.LocalName == ႳႷႼ)
			{
				if (false)
				{
					goto IL_0c4b;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (174 <= 174 - 23)
					{
						goto IL_01f5;
					}
					goto IL_07de;
				}
			}
			goto IL_0360;
			IL_0863:
			array[1] = true;
			goto IL_01f5;
			IL_043e:
			int readerCount = base.ReaderCount;
			goto IL_0477;
			IL_091f:
			array = new bool[15];
			goto IL_01f5;
			IL_01f5:
			while (true)
			{
				if (!base.Reader.MoveToNextAttribute())
				{
					if (false)
					{
						break;
					}
					base.Reader.MoveToElement();
					if (!base.Reader.IsEmptyElement)
					{
						goto IL_0424;
					}
					if (638 <= 638 - 618)
					{
						continue;
					}
					goto IL_0c3e;
				}
				if (!array[0])
				{
					if (false)
					{
						goto IL_0577;
					}
					while ((object)base.Reader.LocalName == ႳႣႼ)
					{
						if (false)
						{
							continue;
						}
						goto IL_0b29;
					}
				}
				goto IL_08c9;
				IL_0b29:
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if ((952 + 952 * 952) % 2 == 0)
					{
						mood.ID = XmlConvert.ToGuid(base.Reader.Value);
						array[0] = true;
						continue;
					}
					goto IL_02a8;
				}
				goto IL_08c9;
			}
			goto IL_0997;
			IL_0831:
			if (!array[13])
			{
				if (205 <= 205 - 13)
				{
					goto IL_03d3;
				}
				if ((object)base.Reader.LocalName == ႳႥႤ)
				{
					if (832 < 832 - 328)
					{
						goto IL_0c68;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (703 > 703 - 316)
						{
							goto IL_007f;
						}
						goto IL_01f5;
					}
				}
			}
			goto IL_0178;
			IL_0c68:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_03d3;
			}
			if (470 > 470 - 197)
			{
				mood.Priority = XmlConvert.ToInt32(base.Reader.Value);
				array[8] = true;
				goto IL_01f5;
			}
			goto IL_0b59;
			IL_04f4:
			if ((object)xmlQualifiedName.Name == ႳႰႣ)
			{
				if (981 < 981 - 770)
				{
					goto IL_0c49;
				}
				if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
				{
					goto IL_0b59;
				}
				if (624 <= 624 - 51)
				{
					goto IL_01f5;
				}
			}
			goto IL_02a0;
			IL_0c3e:
			base.Reader.Skip();
			goto IL_0c49;
			IL_03f3:
			if ((object)base.Reader.LocalName == ႳႣႣ)
			{
				if (542 < 542 - 257)
				{
					goto IL_0095;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if ((803 + 803 * 803) % 2 == 0)
					{
						mood.Group = XmlConvert.ToInt32(base.Reader.Value);
						array[14] = true;
						goto IL_01f5;
					}
					goto IL_065e;
				}
			}
			goto IL_04c3;
			IL_07de:
			mood.Ordinal = XmlConvert.ToInt32(base.Reader.Value);
			array[4] = true;
			goto IL_01f5;
			IL_007f:
			mood.IsReadOnly = XmlConvert.ToBoolean(base.Reader.Value);
			goto IL_0095;
			IL_082d:
			return mood;
			IL_04c3:
			if (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (683 <= 683 - 411)
				{
					goto IL_07de;
				}
				UnknownNode(mood, ႥႷႭ.Ⴓ.ႰႷ(1821394715));
				if (372 <= 372 - 347)
				{
					goto IL_04f4;
				}
			}
			goto IL_01f5;
			IL_0095:
			array[13] = true;
			goto IL_01f5;
			IL_0178:
			if (!array[14])
			{
				if (false)
				{
					goto IL_01f5;
				}
				goto IL_03f3;
			}
			goto IL_04c3;
			IL_08c9:
			if (!array[1])
			{
				if (250 < 250 - 89)
				{
					goto IL_0335;
				}
				if ((object)base.Reader.LocalName == ႳႠႠ)
				{
					if (431 <= 431 - 205)
					{
						goto IL_06f3;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (69 < 69 - 9)
						{
							goto IL_082d;
						}
						mood.Name = base.Reader.Value;
						goto IL_0863;
					}
				}
			}
			if (array[2])
			{
				goto IL_0544;
			}
			if ((755 + 755 * 755) % 2 == 0)
			{
				goto IL_0051;
			}
			goto IL_0701;
			IL_021f:
			base.Reader.MoveToContent();
			int whileIterations = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (135 >= 135 - 59)
			{
				goto IL_0477;
			}
			goto IL_078a;
			IL_0424:
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			whileIterations = 0;
			goto IL_043e;
			IL_03d3:
			if (!array[9])
			{
				if (false)
				{
					goto IL_021f;
				}
				goto IL_0383;
			}
			goto IL_0931;
			IL_0634:
			if ((object)base.Reader.LocalName != this.m_ႣႰ)
			{
				goto IL_05e5;
			}
			if (225 <= 225 - 4)
			{
				goto IL_097c;
			}
			goto IL_0997;
			IL_0383:
			if ((object)base.Reader.LocalName == ႠႠ)
			{
				if (422 <= 422 - 259)
				{
					goto IL_0863;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (326 > 326 - 209)
					{
						mood.ImageFileName = base.Reader.Value;
						goto IL_0577;
					}
					goto IL_04c3;
				}
			}
			goto IL_0931;
			IL_078a:
			if (!array[7])
			{
				if (654 < 654 - 398)
				{
					goto IL_08c9;
				}
				if ((object)base.Reader.LocalName == ႼႤ)
				{
					if (771 < 771 - 178)
					{
						goto IL_0051;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (24 <= 24 - 3)
						{
							goto IL_00a4;
						}
						mood.EngineVersion = base.Reader.Value;
						array[7] = true;
						goto IL_01f5;
					}
				}
			}
			if (!array[8])
			{
				if (false)
				{
					goto IL_03f3;
				}
				if ((object)base.Reader.LocalName == ႳႷႳ)
				{
					if (171 <= 171 - 146)
					{
						goto IL_0424;
					}
					goto IL_0c68;
				}
			}
			goto IL_03d3;
			IL_0997:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_05e5;
			}
			if (false)
			{
				goto IL_043e;
			}
			goto IL_0ac1;
			IL_0ac1:
			mood.NoIntensity = XmlConvert.ToBoolean(base.Reader.Value);
			array[11] = true;
			goto IL_01f5;
			IL_0544:
			if (!array[3])
			{
				if (false)
				{
					goto IL_007f;
				}
				if ((object)base.Reader.LocalName == ႳႳႣ)
				{
					if (false)
					{
						goto IL_027e;
					}
					goto IL_0335;
				}
			}
			goto IL_065e;
			IL_0577:
			array[9] = true;
			goto IL_01f5;
			IL_0931:
			if (!array[10])
			{
				if (false)
				{
					goto IL_0ac1;
				}
				if ((object)base.Reader.LocalName == ႳႷႷ)
				{
					if (806 < 806 - 2)
					{
						goto IL_0831;
					}
					goto IL_0a90;
				}
			}
			goto IL_000a;
			IL_05e5:
			if (!array[12])
			{
				if (698 <= 698 - 288)
				{
					goto IL_000a;
				}
				if ((object)base.Reader.LocalName == ႳႠႳ)
				{
					if (838 <= 838 - 56)
					{
						goto IL_0424;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (821 <= 821 - 49)
						{
							goto IL_07de;
						}
						mood.NotSelectable = XmlConvert.ToBoolean(base.Reader.Value);
						array[12] = true;
						goto IL_01f5;
					}
				}
			}
			goto IL_0831;
			IL_0335:
			if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
			{
				if (789 >= 789 - 337)
				{
					mood.WebID = XmlConvert.ToInt32(base.Reader.Value);
					array[3] = true;
				}
				goto IL_01f5;
			}
			goto IL_065e;
			IL_0827:
			ReadEndElement();
			goto IL_082d;
			IL_02a8:
			if (base.Reader.NodeType == XmlNodeType.None)
			{
				if (343 <= 343 - 286)
				{
					goto IL_01f5;
				}
				goto IL_0827;
			}
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (967 < 967 - 217)
				{
					goto IL_01f5;
				}
				UnknownNode(mood, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
			}
			else
			{
				UnknownNode(mood, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
				if ((218 + 218 * 218) % 2 == 0)
				{
				}
			}
			goto IL_021f;
			IL_065e:
			if (!array[4])
			{
				if ((916 + 916 * 916) % 2 == 0)
				{
					goto IL_0198;
				}
				goto IL_027e;
			}
			goto IL_0360;
			IL_0051:
			if ((object)base.Reader.LocalName == ႳႳႼ)
			{
				if (712 < 712 - 271)
				{
					goto IL_01f5;
				}
				while ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (false)
					{
						continue;
					}
					goto IL_00a4;
				}
			}
			goto IL_0544;
			IL_027e:
			flag = ReadNull();
			if (255 <= 255 - 135)
			{
				goto IL_091f;
			}
			goto IL_097c;
			IL_0360:
			if (!array[5])
			{
				if (668 < 668 - 638)
				{
					goto IL_0544;
				}
				if ((object)base.Reader.LocalName == this.m_ႳႣ)
				{
					if (false)
					{
						goto IL_0383;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (false)
						{
							goto IL_0a90;
						}
						goto IL_0b0a;
					}
				}
			}
			goto IL_0c4b;
			IL_000a:
			while (!array[11])
			{
				if (182 <= 182 - 25)
				{
					continue;
				}
				goto IL_0634;
			}
			goto IL_05e5;
			IL_02a0:
			throw CreateUnknownTypeException(xmlQualifiedName);
		}

		private MoodMatrixEntry ႳႷ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0036, IL_0061, IL_008b, IL_00c3, IL_00e4, IL_010d, IL_0138, IL_0164, IL_0181, IL_01ab, IL_01d1, IL_01f9, IL_0219, IL_0221, IL_024d, IL_0263, IL_0287, IL_02b3, IL_02dc, IL_0308, IL_032d, IL_0358, IL_0375, IL_039c, IL_03be, IL_03ec, IL_0420, IL_044e, IL_0463, IL_0487, IL_04a2, IL_04c6, IL_04ea, IL_0507
			if (!Ⴓ)
			{
				if (false)
				{
					goto IL_01b0;
				}
				goto IL_021b;
			}
			goto IL_045b;
			IL_035d:
			bool[] array = default(bool[]);
			if (!array[0])
			{
				if (388 < 388 - 16)
				{
					goto IL_02e1;
				}
				if ((object)base.Reader.LocalName == ႳႷႭ)
				{
					if (74 >= 74 - 33)
					{
						if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
						{
							goto IL_01fe;
						}
						if (false)
						{
							goto IL_046b;
						}
					}
					goto IL_04a7;
				}
			}
			goto IL_01fe;
			IL_045b:
			object obj = GetXsiType();
			goto IL_0468;
			IL_0468:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			goto IL_0469;
			IL_0469:
			bool flag = false;
			goto IL_046b;
			IL_046b:
			if (Ⴍ)
			{
				if (993 <= 993 - 760)
				{
					goto IL_0186;
				}
				flag = ReadNull();
				if (500 < 500 - 185)
				{
					goto IL_01b0;
				}
			}
			goto IL_0073;
			IL_04cb:
			MoodMatrixEntry moodMatrixEntry = default(MoodMatrixEntry);
			moodMatrixEntry.ToMood = XmlConvert.ToGuid(base.Reader.Value);
			array[1] = true;
			goto IL_0186;
			IL_03c3:
			base.Reader.MoveToContent();
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (239 >= 239 - 42)
			{
				goto IL_0226;
			}
			goto IL_0469;
			IL_0073:
			if (!Ⴓ)
			{
				goto IL_00c8;
			}
			if (false)
			{
				goto IL_035d;
			}
			goto IL_037a;
			IL_037a:
			if (xmlQualifiedName == null)
			{
				goto IL_00c8;
			}
			if (1008 >= 1008 - 871)
			{
				while (true)
				{
					if ((object)xmlQualifiedName.Name == ႳႰႨ)
					{
						if (626 <= 626 - 523)
						{
							break;
						}
						if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
						{
							goto IL_00c8;
						}
						if (366 < 366 - 352)
						{
							continue;
						}
					}
					throw CreateUnknownTypeException(xmlQualifiedName);
				}
				goto IL_03c3;
			}
			goto IL_04a7;
			IL_00c8:
			if (flag)
			{
				if (655 <= 655 - 238)
				{
					goto IL_01b0;
				}
				return null;
			}
			moodMatrixEntry = new MoodMatrixEntry();
			goto IL_0257;
			IL_021b:
			obj = null;
			goto IL_0468;
			IL_01fe:
			while (!array[1])
			{
				if (499 <= 499 - 81)
				{
					goto IL_0073;
				}
				if ((object)base.Reader.LocalName != ႳႭ)
				{
					break;
				}
				if (469 < 469 - 39 || (object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					break;
				}
				if (524 < 524 - 522)
				{
					continue;
				}
				goto IL_04cb;
			}
			if (!array[2])
			{
				if (537 < 537 - 33)
				{
					goto IL_037a;
				}
				if ((object)base.Reader.LocalName == ႰႭ)
				{
					if (651 > 651 - 39)
					{
						if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
						{
							goto IL_0112;
						}
						if (948 <= 948 - 695)
						{
							goto IL_0257;
						}
						moodMatrixEntry.Correlation = XmlConvert.ToDouble(base.Reader.Value);
						array[2] = true;
					}
					goto IL_0186;
				}
			}
			goto IL_0112;
			IL_0112:
			if (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (945 <= 945 - 515)
				{
					goto IL_037a;
				}
				UnknownNode(moodMatrixEntry, ႥႷႭ.Ⴍ.ႰႷ(1821394801));
				if (549 < 549 - 201)
				{
					goto IL_0226;
				}
			}
			goto IL_0186;
			IL_0257:
			array = new bool[3];
			goto IL_0186;
			IL_0186:
			if (!base.Reader.MoveToNextAttribute())
			{
				if ((555 + 555 * 555) % 2 == 0)
				{
					base.Reader.MoveToElement();
					if (!base.Reader.IsEmptyElement)
					{
						base.Reader.ReadStartElement();
						base.Reader.MoveToContent();
						whileIterations = 0;
						readerCount = base.ReaderCount;
						goto IL_0226;
					}
					if (865 >= 865 - 246)
					{
						base.Reader.Skip();
						return moodMatrixEntry;
					}
					goto IL_048c;
				}
			}
			goto IL_035d;
			IL_048c:
			UnknownNode(moodMatrixEntry, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
			goto IL_03c3;
			IL_04a7:
			moodMatrixEntry.FromMood = XmlConvert.ToGuid(base.Reader.Value);
			array[0] = true;
			goto IL_0186;
			IL_02e1:
			if (base.Reader.NodeType != XmlNodeType.Element)
			{
				goto IL_01b0;
			}
			if (350 <= 350 - 145)
			{
				goto IL_0186;
			}
			goto IL_048c;
			IL_01b0:
			UnknownNode(moodMatrixEntry, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
			if (238 < 238 - 39)
			{
				goto IL_021b;
			}
			goto IL_03c3;
			IL_0226:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (false)
				{
					goto IL_0112;
				}
				if (base.Reader.NodeType != 0)
				{
					goto IL_02e1;
				}
				if (735 <= 735 - 553)
				{
					goto IL_045b;
				}
			}
			ReadEndElement();
			return moodMatrixEntry;
		}

		private Gender ႰႷ(string Ⴍ)
		{
			int num = 6;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴍ) == null) ? 1 : 3);
					break;
				case 3:
					num = ((!(a == ႥႷႭ.Ⴍ.ႰႷ(1821394844))) ? 4 : 0);
					break;
				case 4:
					num = ((a == ႥႷႭ.Ⴓ.ႰႷ(1821394788)) ? 5 : 2);
					break;
				case 2:
					num = 1;
					break;
				case 0:
					return Gender.Male;
				case 5:
					return Gender.Female;
				case 1:
					throw CreateUnknownConstantException(Ⴍ, typeof(Gender));
				}
			}
		}

		private MoodMatrix ႳႥ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0027, IL_0040, IL_005b, IL_008b, IL_00bb, IL_00e7, IL_010f, IL_0134, IL_0156, IL_016b, IL_0193, IL_01c0, IL_01e6, IL_020b, IL_022f, IL_0260, IL_0291, IL_02c2, IL_02ee, IL_02f9, IL_0321, IL_0349, IL_037b, IL_03a7, IL_03d8, IL_03ed, IL_0418, IL_0450, IL_047b, IL_04a3, IL_04d0, IL_04fb, IL_052c, IL_054b, IL_0558, IL_0576, IL_059b, IL_05be, IL_05e6, IL_0612, IL_063e, IL_0663, IL_0694, IL_06ba, IL_06e7, IL_0718, IL_0739, IL_0764, IL_0786, IL_07a1, IL_07c3, IL_07e0, IL_07f0, IL_0814, IL_0840, IL_085b
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			bool flag = default(bool);
			int whileIterations = default(int);
			int readerCount = default(int);
			MoodMatrix moodMatrix = default(MoodMatrix);
			int whileIterations2 = default(int);
			int readerCount2 = default(int);
			bool[] array = default(bool[]);
			List<MoodMatrixEntry> moodMatrixEntries = default(List<MoodMatrixEntry>);
			while (true)
			{
				object obj;
				if (!Ⴓ)
				{
					if (87 <= 87 - 38)
					{
						goto IL_038b;
					}
					obj = null;
				}
				else
				{
					obj = GetXsiType();
				}
				xmlQualifiedName = (XmlQualifiedName)obj;
				flag = false;
				goto IL_0560;
				IL_0500:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (236 <= 236 - 185)
				{
					goto IL_03f2;
				}
				goto IL_06bf;
				IL_0699:
				moodMatrix.MoodMatrixEntries = new List<MoodMatrixEntry>();
				if (1022 <= 1022 - 296)
				{
					break;
				}
				goto IL_034e;
				IL_04d5:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations2, ref readerCount2);
				if (141 < 141 - 68)
				{
					goto IL_00e9;
				}
				goto IL_04a8;
				IL_080b:
				array[2] = true;
				goto IL_0170;
				IL_0560:
				if (Ⴍ)
				{
					if (423 < 423 - 391)
					{
						goto IL_0500;
					}
					goto IL_0531;
				}
				goto IL_07c8;
				IL_034e:
				moodMatrixEntries = moodMatrix.MoodMatrixEntries;
				if (base.Reader.IsEmptyElement)
				{
					if ((891 + 891 * 891) % 2 == 0)
					{
						base.Reader.Skip();
					}
					goto IL_0500;
				}
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				goto IL_0602;
				IL_07c8:
				if (Ⴓ)
				{
					if (false)
					{
						goto IL_07e5;
					}
					while (!(xmlQualifiedName == null))
					{
						if (false)
						{
							continue;
						}
						goto IL_073e;
					}
				}
				goto IL_071d;
				IL_0668:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_0045;
				}
				if (607 < 607 - 290)
				{
					goto IL_00e9;
				}
				if (!ReadNull())
				{
					if ((1003 + 1003 * 1003) % 2 == 0)
					{
						goto IL_01c5;
					}
					goto IL_04a8;
				}
				goto IL_0500;
				IL_03f2:
				ReadEndElement();
				goto IL_03f8;
				IL_073e:
				if ((object)xmlQualifiedName.Name == ႼႣ)
				{
					if (false)
					{
						goto IL_0380;
					}
					if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
					{
						goto IL_071d;
					}
					if (429 < 429 - 261)
					{
						goto IL_01c5;
					}
				}
				throw CreateUnknownTypeException(xmlQualifiedName);
				IL_0602:
				whileIterations2 = 0;
				readerCount2 = base.ReaderCount;
				goto IL_04a8;
				IL_04a8:
				while (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (770 < 770 - 271)
					{
						goto IL_034e;
					}
					if (base.Reader.NodeType != 0)
					{
						if (base.Reader.NodeType == XmlNodeType.Element)
						{
							if (301 <= 301 - 3)
							{
								continue;
							}
							goto IL_0265;
						}
						goto IL_0480;
					}
					goto IL_05d3;
				}
				goto IL_07e5;
				IL_05d3:
				if (354 <= 354 - 36)
				{
					goto IL_0060;
				}
				goto IL_07e5;
				IL_0114:
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (40 <= 40 - 13)
					{
						goto IL_0170;
					}
					if (moodMatrixEntries != null)
					{
						moodMatrixEntries.Add(ႳႷ(Ⴍ: true, Ⴓ: true));
						goto IL_04d5;
					}
					if (989 >= 989 - 438)
					{
						goto IL_03dd;
					}
					goto IL_06bf;
				}
				goto IL_078b;
				IL_071d:
				if (!flag)
				{
					moodMatrix = new MoodMatrix();
					if (moodMatrix.MoodMatrixEntries == null)
					{
						if (385 >= 385 - 221)
						{
							goto IL_0643;
						}
						goto IL_06bf;
					}
					goto IL_07b0;
				}
				if (785 > 785 - 448)
				{
					return null;
				}
				goto IL_0668;
				IL_0060:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_05a0;
				}
				if (false)
				{
					goto IL_06bf;
				}
				moodMatrix.MinAge = XmlConvert.ToInt32(base.Reader.Value);
				goto IL_0226;
				IL_03dd:
				base.Reader.Skip();
				goto IL_04d5;
				IL_03f8:
				return moodMatrix;
				IL_0265:
				if ((object)base.Reader.LocalName == ႳႰႨ)
				{
					if (268 < 268 - 129)
					{
						continue;
					}
					goto IL_0114;
				}
				goto IL_078b;
				IL_07b0:
				_ = moodMatrix.MoodMatrixEntries;
				array = new bool[4];
				goto IL_0170;
				IL_0170:
				while (true)
				{
					if (!base.Reader.MoveToNextAttribute())
					{
						if (146 <= 146 - 96)
						{
							break;
						}
						base.Reader.MoveToElement();
						if (!base.Reader.IsEmptyElement)
						{
							goto IL_0380;
						}
						if (593 <= 593 - 97)
						{
							goto IL_0202;
						}
						goto IL_07a3;
					}
					if (!array[0])
					{
						if ((415 + 415 * 415) % 2 == 0)
						{
							if ((object)base.Reader.LocalName != ႳႳႷ)
							{
								goto IL_000a;
							}
							if (280 < 280 - 257)
							{
								goto IL_0500;
							}
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (false)
							{
								goto IL_0643;
							}
							moodMatrix.Gender = ႰႷ(base.Reader.Value);
							goto IL_0202;
						}
					}
					goto IL_000a;
					IL_0202:
					array[0] = true;
				}
				goto IL_05a0;
				IL_07a3:
				base.Reader.Skip();
				break;
				IL_0380:
				base.Reader.ReadStartElement();
				goto IL_038b;
				IL_038b:
				base.Reader.MoveToContent();
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_06bf;
				IL_0643:
				moodMatrix.MoodMatrixEntries = new List<MoodMatrixEntry>();
				if (false)
				{
					goto IL_03f8;
				}
				goto IL_07b0;
				IL_000a:
				if (!array[1])
				{
					if (false)
					{
						goto IL_080b;
					}
					if ((object)base.Reader.LocalName == ႥႣ)
					{
						if (979 >= 979 - 567)
						{
							goto IL_0060;
						}
						goto IL_04a8;
					}
				}
				goto IL_05a0;
				IL_01c5:
				if (moodMatrix.MoodMatrixEntries != null)
				{
					goto IL_034e;
				}
				if (420 <= 420 - 132)
				{
					goto IL_0531;
				}
				goto IL_0699;
				IL_0480:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394791));
				if (false)
				{
					goto IL_000a;
				}
				goto IL_04d5;
				IL_07e5:
				ReadEndElement();
				goto IL_0500;
				IL_05a0:
				if (!array[2])
				{
					if (843 <= 843 - 685)
					{
						goto IL_03dd;
					}
					if ((object)base.Reader.LocalName == ႤႰ)
					{
						if (363 <= 363 - 341)
						{
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (41 < 41 - 25)
							{
								break;
							}
							moodMatrix.MaxAge = XmlConvert.ToInt32(base.Reader.Value);
							goto IL_080b;
						}
					}
				}
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					if (false)
					{
						goto IL_0699;
					}
					UnknownNode(moodMatrix, ႥႷႭ.Ⴓ.ႰႷ(1821394789));
					if (642 < 642 - 509)
					{
						goto IL_07c8;
					}
				}
				goto IL_0170;
				IL_06bf:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (225 <= 225 - 221)
					{
						break;
					}
					goto IL_00e9;
				}
				goto IL_03f2;
				IL_0045:
				UnknownNode(moodMatrix, ႥႷႭ.Ⴍ.ႰႷ(1821394802));
				goto IL_0500;
				IL_00e9:
				if (base.Reader.NodeType == XmlNodeType.None)
				{
					if (650 <= 650 - 213)
					{
						goto IL_0226;
					}
					goto IL_03f2;
				}
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					UnknownNode(moodMatrix, ႥႷႭ.Ⴍ.ႰႷ(1821394802));
					if ((40 + 40 * 40) % 2 == 0)
					{
						goto IL_0500;
					}
					goto IL_0602;
				}
				if (176 > 176 - 140)
				{
					if ((object)base.Reader.LocalName != ႳႣႳ)
					{
						goto IL_0045;
					}
					if (957 <= 957 - 498)
					{
						goto IL_0114;
					}
					goto IL_0668;
				}
				break;
				IL_0531:
				flag = ReadNull();
				if (502 < 502 - 307)
				{
					goto IL_0560;
				}
				goto IL_07c8;
				IL_0226:
				array[1] = true;
				goto IL_0170;
				IL_078b:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394791));
				goto IL_04d5;
			}
			return moodMatrix;
		}

		private MoodLevel ႰႥ(string Ⴍ)
		{
			int num = 12;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴍ) == null) ? 10 : 0);
					break;
				case 0:
					num = ((a == ႥႷႭ.Ⴍ.ႰႷ(1821394840)) ? 6 : 9);
					break;
				case 9:
					num = ((!(a == ႥႷႭ.Ⴓ.ႰႷ(1821394790))) ? 1 : 11);
					break;
				case 1:
					num = ((a == ႥႷႭ.Ⴍ.ႰႷ(1821394842)) ? 2 : 4);
					break;
				case 4:
					num = ((a == ႥႷႭ.Ⴓ.ႰႷ(1821394784)) ? 8 : 7);
					break;
				case 7:
					num = ((a == ႥႷႭ.Ⴍ.ႰႷ(1821394916)) ? 3 : 5);
					break;
				case 5:
					num = 10;
					break;
				case 6:
					return MoodLevel.Unset;
				case 11:
					return MoodLevel.ABit;
				case 2:
					return MoodLevel.ALittle;
				case 8:
					return MoodLevel.Pretty;
				case 3:
					return MoodLevel.Very;
				case 10:
					throw CreateUnknownConstantException(Ⴍ, typeof(MoodLevel));
				}
			}
		}

		private MoodCounter ႳႰ(bool Ⴍ, bool Ⴓ)
		{
			int num = 44;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			MoodCounter moodCounter = default(MoodCounter);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 7 : 33);
					break;
				case 33:
					obj = null;
					goto IL_0107;
				case 7:
					obj = GetXsiType();
					goto IL_0107;
				case 20:
					flag = ReadNull();
					num = 35;
					break;
				case 35:
					num = ((!Ⴓ) ? 45 : 29);
					break;
				case 29:
					num = ((xmlQualifiedName == null) ? 45 : 24);
					break;
				case 24:
					num = (((object)xmlQualifiedName.Name != ႨႳ) ? 16 : 39);
					break;
				case 39:
					num = (((object)xmlQualifiedName.Namespace == this.m_ႰႷ) ? 45 : 16);
					break;
				case 16:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 45:
					num = ((!flag) ? 22 : 38);
					break;
				case 38:
					return null;
				case 22:
					moodCounter = new MoodCounter();
					array = new bool[8];
					num = 5;
					break;
				case 26:
					num = ((!array[0]) ? 1 : 41);
					break;
				case 1:
					num = (((object)base.Reader.LocalName != ႨႥ) ? 41 : 6);
					break;
				case 6:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 41 : 11);
					break;
				case 11:
					moodCounter.TotalCounter = XmlConvert.ToInt32(base.Reader.Value);
					array[0] = true;
					num = 5;
					break;
				case 41:
					num = (array[1] ? 40 : 52);
					break;
				case 52:
					num = (((object)base.Reader.LocalName != ႳႷႰ) ? 40 : 21);
					break;
				case 21:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 40 : 28);
					break;
				case 28:
					moodCounter.DailyAverage = XmlConvert.ToDouble(base.Reader.Value);
					array[1] = true;
					num = 5;
					break;
				case 40:
					num = (array[2] ? 27 : 13);
					break;
				case 13:
					num = (((object)base.Reader.LocalName != this.m_ႳႭႠ) ? 27 : 0);
					break;
				case 0:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 27 : 32);
					break;
				case 32:
					moodCounter.DaysUsed = XmlConvert.ToInt32(base.Reader.Value);
					array[2] = true;
					num = 5;
					break;
				case 27:
					num = (array[3] ? 14 : 42);
					break;
				case 42:
					num = (((object)base.Reader.LocalName != ႥႰ) ? 14 : 54);
					break;
				case 54:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 14 : 56);
					break;
				case 56:
					moodCounter.LastUseDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
					array[3] = true;
					num = 5;
					break;
				case 14:
					num = (array[4] ? 31 : 19);
					break;
				case 19:
					num = (((object)base.Reader.LocalName != ႳႣႼ) ? 31 : 9);
					break;
				case 9:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 31 : 51);
					break;
				case 51:
					moodCounter.ID = XmlConvert.ToGuid(base.Reader.Value);
					array[4] = true;
					num = 5;
					break;
				case 31:
					num = (array[5] ? 50 : 55);
					break;
				case 55:
					num = (((object)base.Reader.LocalName != ႳႠႠ) ? 50 : 10);
					break;
				case 10:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 50 : 43);
					break;
				case 43:
					moodCounter.Name = base.Reader.Value;
					array[5] = true;
					num = 5;
					break;
				case 50:
					num = (array[6] ? 47 : 8);
					break;
				case 8:
					num = (((object)base.Reader.LocalName != ႳႳႼ) ? 47 : 53);
					break;
				case 53:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 47 : 48);
					break;
				case 48:
					moodCounter.Description = base.Reader.Value;
					array[6] = true;
					num = 5;
					break;
				case 47:
					num = (array[7] ? 36 : 12);
					break;
				case 12:
					num = (((object)base.Reader.LocalName != this.m_ႣႰ) ? 36 : 3);
					break;
				case 3:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 36 : 49);
					break;
				case 49:
					moodCounter.NoIntensity = XmlConvert.ToBoolean(base.Reader.Value);
					array[7] = true;
					num = 5;
					break;
				case 36:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 5 : 46);
					break;
				case 46:
					UnknownNode(moodCounter, ႥႷႭ.Ⴍ.ႰႷ(1821394803));
					goto case 5;
				case 5:
					num = (base.Reader.MoveToNextAttribute() ? 26 : 34);
					break;
				case 34:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 18 : 15);
					break;
				case 15:
					base.Reader.Skip();
					return moodCounter;
				case 18:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 30;
					break;
				case 25:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 4 : 17);
					break;
				case 17:
					UnknownNode(moodCounter, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					num = 2;
					break;
				case 4:
					UnknownNode(moodCounter, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					goto case 2;
				case 2:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 30;
				case 30:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 23 : 37);
					break;
				case 37:
					num = ((base.Reader.NodeType != 0) ? 25 : 23);
					break;
				case 23:
					{
						ReadEndElement();
						return moodCounter;
					}
					IL_0107:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 35 : 20);
					break;
				}
			}
		}

		private MoodListContainer ႳႠ(bool Ⴍ, bool Ⴓ)
		{
			int num = 25;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			MoodListContainer moodListContainer = default(MoodListContainer);
			int whileIterations = default(int);
			int readerCount = default(int);
			List<Mood> moods = default(List<Mood>);
			int whileIterations2 = default(int);
			int readerCount2 = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 1 : 32);
					break;
				case 32:
					obj = null;
					goto IL_00df;
				case 1:
					obj = GetXsiType();
					goto IL_00df;
				case 35:
					flag = ReadNull();
					num = 43;
					break;
				case 43:
					num = ((!Ⴓ) ? 5 : 38);
					break;
				case 38:
					num = ((xmlQualifiedName == null) ? 5 : 30);
					break;
				case 30:
					num = (((object)xmlQualifiedName.Name != ႳႣႷ) ? 7 : 14);
					break;
				case 14:
					num = (((object)xmlQualifiedName.Namespace == this.m_ႰႷ) ? 5 : 7);
					break;
				case 7:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 5:
					num = ((!flag) ? 11 : 46);
					break;
				case 46:
					return null;
				case 11:
					moodListContainer = new MoodListContainer();
					num = ((moodListContainer.Moods != null) ? 37 : 36);
					break;
				case 36:
					moodListContainer.Moods = new List<Mood>();
					goto case 37;
				case 37:
					_ = moodListContainer.Moods;
					num = 20;
					break;
				case 41:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 20 : 33);
					break;
				case 33:
					UnknownNode(moodListContainer);
					goto case 20;
				case 20:
					num = (base.Reader.MoveToNextAttribute() ? 41 : 31);
					break;
				case 31:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 16 : 13);
					break;
				case 13:
					base.Reader.Skip();
					return moodListContainer;
				case 16:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 21;
					break;
				case 2:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 27 : 4);
					break;
				case 4:
					num = (((object)base.Reader.LocalName != this.m_ႳႭႥ) ? 6 : 22);
					break;
				case 22:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 6 : 19);
					break;
				case 19:
					num = ((!ReadNull()) ? 45 : 0);
					break;
				case 45:
					num = ((moodListContainer.Moods != null) ? 15 : 10);
					break;
				case 10:
					moodListContainer.Moods = new List<Mood>();
					goto case 15;
				case 15:
					moods = moodListContainer.Moods;
					num = ((!base.Reader.IsEmptyElement) ? 8 : 39);
					break;
				case 39:
					base.Reader.Skip();
					num = 0;
					break;
				case 8:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations2 = 0;
					readerCount2 = base.ReaderCount;
					num = 24;
					break;
				case 17:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 34 : 3);
					break;
				case 3:
					num = (((object)base.Reader.LocalName != ႳႰႣ) ? 28 : 12);
					break;
				case 12:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 28 : 18);
					break;
				case 18:
					num = ((moods != null) ? 26 : 42);
					break;
				case 42:
					base.Reader.Skip();
					num = 29;
					break;
				case 26:
					moods.Add(ႳႣ(Ⴍ: true, Ⴓ: true));
					num = 29;
					break;
				case 28:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394812));
					num = 29;
					break;
				case 34:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394812));
					goto case 29;
				case 29:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations2, ref readerCount2);
					goto case 24;
				case 24:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 9 : 40);
					break;
				case 40:
					num = ((base.Reader.NodeType != 0) ? 17 : 9);
					break;
				case 9:
					ReadEndElement();
					num = 0;
					break;
				case 6:
					UnknownNode(moodListContainer, ႥႷႭ.Ⴓ.ႰႷ(1821394785));
					num = 0;
					break;
				case 27:
					UnknownNode(moodListContainer, ႥႷႭ.Ⴓ.ႰႷ(1821394785));
					goto case 0;
				case 0:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 21;
				case 21:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 23 : 44);
					break;
				case 44:
					num = ((base.Reader.NodeType != 0) ? 2 : 23);
					break;
				case 23:
					{
						ReadEndElement();
						return moodListContainer;
					}
					IL_00df:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 43 : 35);
					break;
				}
			}
		}

		internal Hashtable ႰႷ()
		{
			//Discarded unreachable code: IL_00bf
			if (this.Ⴍ == null)
			{
				if (541 >= 541 - 172)
				{
				}
				Hashtable hashtable = new Hashtable();
				hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394924), 0L);
				hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394925), 1L);
				hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394926), 2L);
				hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394927), 4L);
				do
				{
					hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394920), 8L);
					this.Ⴍ = (string)(object)hashtable;
				}
				while (false);
			}
			return (Hashtable)(object)this.Ⴍ;
		}

		private Ⴄ ႰႰ(string Ⴍ)
		{
			return (Ⴄ)XmlSerializationReader.ToEnum(Ⴍ, ႰႷ(), ႥႷႭ.Ⴓ.ႰႷ(1821394786));
		}

		private DataFileLocation ႰႠ(string Ⴍ)
		{
			int num = 7;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴍ) == null) ? 8 : 4);
					break;
				case 4:
					num = ((!(a == ႥႷႭ.Ⴓ.ႰႷ(1821394857))) ? 1 : 5);
					break;
				case 1:
					num = ((a == ႥႷႭ.Ⴍ.ႰႷ(1821394922)) ? 6 : 0);
					break;
				case 0:
					num = ((a == ႥႷႭ.Ⴓ.ႰႷ(1821394787)) ? 2 : 3);
					break;
				case 3:
					num = 8;
					break;
				case 5:
					return DataFileLocation.PersonalityDataFile;
				case 6:
					return DataFileLocation.MasterDataFile;
				case 2:
					return DataFileLocation.UserDataFile;
				case 8:
					throw CreateUnknownConstantException(Ⴍ, typeof(DataFileLocation));
				}
			}
		}

		private SoundHardwareAction ႳႤ(bool Ⴍ, bool Ⴓ)
		{
			int num = 18;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			SoundHardwareAction soundHardwareAction = default(SoundHardwareAction);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 2 : 32);
					break;
				case 32:
					obj = null;
					goto IL_00a7;
				case 2:
					obj = GetXsiType();
					goto IL_00a7;
				case 0:
					flag = ReadNull();
					num = 5;
					break;
				case 5:
					num = ((!Ⴓ) ? 28 : 10);
					break;
				case 10:
					num = ((xmlQualifiedName == null) ? 28 : 26);
					break;
				case 26:
					num = (((object)xmlQualifiedName.Name != ႳႥႥ) ? 3 : 4);
					break;
				case 4:
					num = (((object)xmlQualifiedName.Namespace == this.m_ႰႷ) ? 28 : 3);
					break;
				case 3:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 28:
					num = ((!flag) ? 16 : 13);
					break;
				case 13:
					return null;
				case 16:
					soundHardwareAction = new SoundHardwareAction();
					array = new bool[2];
					num = 23;
					break;
				case 12:
					num = (array[0] ? 7 : 27);
					break;
				case 27:
					num = (((object)base.Reader.LocalName != this.m_ႣႷ) ? 7 : 31);
					break;
				case 31:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 7 : 9);
					break;
				case 9:
					soundHardwareAction.Start = XmlConvert.ToInt32(base.Reader.Value);
					array[0] = true;
					num = 23;
					break;
				case 7:
					num = (array[1] ? 30 : 19);
					break;
				case 19:
					num = (((object)base.Reader.LocalName != this.m_ႷႷ) ? 30 : 11);
					break;
				case 11:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 30 : 14);
					break;
				case 14:
					soundHardwareAction.FileName = base.Reader.Value;
					array[1] = true;
					num = 23;
					break;
				case 30:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 23 : 6);
					break;
				case 6:
					UnknownNode(soundHardwareAction, ႥႷႭ.Ⴍ.ႰႷ(1821394813));
					goto case 23;
				case 23:
					num = (base.Reader.MoveToNextAttribute() ? 12 : 25);
					break;
				case 25:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 15 : 22);
					break;
				case 22:
					base.Reader.Skip();
					return soundHardwareAction;
				case 15:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 1;
					break;
				case 29:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 21 : 20);
					break;
				case 20:
					UnknownNode(soundHardwareAction, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					num = 24;
					break;
				case 21:
					UnknownNode(soundHardwareAction, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					goto case 24;
				case 24:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 1;
				case 1:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 17 : 8);
					break;
				case 8:
					num = ((base.Reader.NodeType != 0) ? 29 : 17);
					break;
				case 17:
					{
						ReadEndElement();
						return soundHardwareAction;
					}
					IL_00a7:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 5 : 0);
					break;
				}
			}
		}

		private PauseHardwareAction ႳႼ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_002d, IL_0052, IL_0072, IL_009b, IL_00c8, IL_00f0, IL_0111, IL_0132, IL_015e, IL_0183, IL_018e, IL_01c7, IL_0208, IL_0231, IL_0254, IL_027b, IL_029e, IL_02b5, IL_02d5, IL_02ee, IL_0309, IL_033d, IL_0361, IL_038a, IL_0397, IL_03b4, IL_03d7, IL_0405, IL_0436, IL_0457
			object obj;
			if (Ⴓ)
			{
				obj = GetXsiType();
				goto IL_039c;
			}
			if (367 > 367 - 172)
			{
				goto IL_0188;
			}
			goto IL_02a3;
			IL_0137:
			PauseHardwareAction pauseHardwareAction = default(PauseHardwareAction);
			UnknownNode(pauseHardwareAction, ႥႷႭ.Ⴍ.ႰႷ(1821394814));
			if (660 > 660 - 200)
			{
				goto IL_00cd;
			}
			goto IL_0256;
			IL_0366:
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
			{
				goto IL_00f5;
			}
			if (778 > 778 - 536)
			{
				goto IL_01d9;
			}
			goto IL_03b6;
			IL_039c:
			xmlQualifiedName = (XmlQualifiedName)obj;
			goto IL_039d;
			IL_039d:
			bool flag = false;
			goto IL_039f;
			IL_039f:
			if (!Ⴍ)
			{
				goto IL_02bc;
			}
			if (37 < 37 - 2)
			{
				goto IL_0188;
			}
			goto IL_02da;
			IL_002f:
			int whileIterations = default(int);
			int readerCount = default(int);
			do
			{
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
			}
			while (221 < 221 - 90);
			goto IL_00a0;
			IL_02bc:
			if (Ⴓ)
			{
				if (406 <= 406 - 177)
				{
					goto IL_002f;
				}
				if (!(xmlQualifiedName == null))
				{
					if ((389 + 389 * 389) % 2 == 0)
					{
						if ((object)xmlQualifiedName.Name != ႳႨႰ)
						{
							goto IL_01d9;
						}
						if (905 < 905 - 576)
						{
							goto IL_0199;
						}
						goto IL_0366;
					}
				}
			}
			goto IL_00f5;
			IL_01d9:
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_019b:
			if (IsXmlnsAttribute(base.Reader.Name))
			{
				goto IL_00cd;
			}
			if (741 > 741 - 504)
			{
				goto IL_0137;
			}
			goto IL_02da;
			IL_0256:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_0280;
			}
			if (false)
			{
				goto IL_039f;
			}
			pauseHardwareAction.Start = XmlConvert.ToInt32(base.Reader.Value);
			bool[] array = default(bool[]);
			array[0] = true;
			goto IL_00cd;
			IL_01d7:
			return pauseHardwareAction;
			IL_0280:
			if (!array[1])
			{
				if (644 <= 644 - 252)
				{
					goto IL_0215;
				}
				if ((object)base.Reader.LocalName == ႳႳႥ)
				{
					if (1010 >= 1010 - 658)
					{
						if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
						{
							goto IL_019b;
						}
						if (767 < 767 - 45)
						{
							goto IL_0137;
						}
						pauseHardwareAction.Duration = XmlConvert.ToInt32(base.Reader.Value);
						array[1] = true;
					}
					goto IL_00cd;
				}
			}
			goto IL_019b;
			IL_00f5:
			if (flag)
			{
				if (921 <= 921 - 529)
				{
					goto IL_0188;
				}
				return null;
			}
			goto IL_02a3;
			IL_02da:
			flag = ReadNull();
			if (118 < 118 - 22)
			{
				goto IL_0256;
			}
			goto IL_02bc;
			IL_0188:
			obj = null;
			goto IL_039c;
			IL_0215:
			base.Reader.MoveToContent();
			whileIterations = 0;
			readerCount = base.ReaderCount;
			goto IL_00a0;
			IL_02a3:
			pauseHardwareAction = new PauseHardwareAction();
			array = new bool[2];
			goto IL_00cd;
			IL_00cd:
			if (base.Reader.MoveToNextAttribute())
			{
				if (!array[0])
				{
					if (788 <= 788 - 419)
					{
						goto IL_0199;
					}
					if ((object)base.Reader.LocalName == this.m_ႣႷ)
					{
						if (606 <= 606 - 74)
						{
							goto IL_01d7;
						}
						goto IL_0256;
					}
				}
				goto IL_0280;
			}
			if (717 < 717 - 90)
			{
				goto IL_00a0;
			}
			base.Reader.MoveToElement();
			if (!base.Reader.IsEmptyElement)
			{
				base.Reader.ReadStartElement();
				goto IL_0215;
			}
			if (826 > 826 - 591)
			{
				base.Reader.Skip();
				goto IL_01d7;
			}
			goto IL_02da;
			IL_00a0:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (755 < 755 - 360)
				{
					goto IL_019b;
				}
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (894 >= 894 - 480)
						{
							UnknownNode(pauseHardwareAction, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
							goto IL_002f;
						}
						goto IL_02a3;
					}
					goto IL_03b6;
				}
				if (510 <= 510 - 89)
				{
					goto IL_0366;
				}
			}
			ReadEndElement();
			goto IL_0199;
			IL_0199:
			return pauseHardwareAction;
			IL_03b6:
			UnknownNode(pauseHardwareAction, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
			if (834 >= 834 - 52)
			{
				goto IL_002f;
			}
			goto IL_039d;
		}

		private CodeHardwareAction ႨႭ(bool Ⴍ, bool Ⴓ)
		{
			int num = 24;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			CodeHardwareAction codeHardwareAction = default(CodeHardwareAction);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 22 : 36);
					break;
				case 36:
					obj = null;
					goto IL_00b8;
				case 22:
					obj = GetXsiType();
					goto IL_00b8;
				case 1:
					flag = ReadNull();
					num = 27;
					break;
				case 27:
					num = ((!Ⴓ) ? 13 : 33);
					break;
				case 33:
					num = ((xmlQualifiedName == null) ? 13 : 32);
					break;
				case 32:
					num = (((object)xmlQualifiedName.Name != ႳႰႤ) ? 8 : 6);
					break;
				case 6:
					num = (((object)xmlQualifiedName.Namespace == this.m_ႰႷ) ? 13 : 8);
					break;
				case 8:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 13:
					num = ((!flag) ? 34 : 10);
					break;
				case 10:
					return null;
				case 34:
					codeHardwareAction = new CodeHardwareAction();
					array = new bool[3];
					num = 25;
					break;
				case 12:
					num = (array[0] ? 5 : 21);
					break;
				case 21:
					num = (((object)base.Reader.LocalName != this.m_ႣႷ) ? 5 : 9);
					break;
				case 9:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 5 : 28);
					break;
				case 28:
					codeHardwareAction.Start = XmlConvert.ToInt32(base.Reader.Value);
					array[0] = true;
					num = 25;
					break;
				case 5:
					num = (array[1] ? 20 : 4);
					break;
				case 4:
					num = (((object)base.Reader.LocalName != ႳႳႨ) ? 20 : 19);
					break;
				case 19:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 20 : 30);
					break;
				case 30:
					codeHardwareAction.Code = XmlConvert.ToInt32(base.Reader.Value);
					array[1] = true;
					num = 25;
					break;
				case 20:
					num = (array[2] ? 7 : 18);
					break;
				case 18:
					num = (((object)base.Reader.LocalName != ႳႠႰ) ? 7 : 11);
					break;
				case 11:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 7 : 35);
					break;
				case 35:
					codeHardwareAction.Parameter = XmlConvert.ToInt32(base.Reader.Value);
					array[2] = true;
					num = 25;
					break;
				case 7:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 25 : 29);
					break;
				case 29:
					UnknownNode(codeHardwareAction, ႥႷႭ.Ⴓ.ႰႷ(1821394796));
					goto case 25;
				case 25:
					num = (base.Reader.MoveToNextAttribute() ? 12 : 15);
					break;
				case 15:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 31 : 23);
					break;
				case 23:
					base.Reader.Skip();
					return codeHardwareAction;
				case 31:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 0;
					break;
				case 16:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 3 : 14);
					break;
				case 14:
					UnknownNode(codeHardwareAction, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					num = 26;
					break;
				case 3:
					UnknownNode(codeHardwareAction, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					goto case 26;
				case 26:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 0;
				case 0:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 17 : 2);
					break;
				case 2:
					num = ((base.Reader.NodeType != 0) ? 16 : 17);
					break;
				case 17:
					{
						ReadEndElement();
						return codeHardwareAction;
					}
					IL_00b8:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = (Ⴍ ? 1 : 27);
					break;
				}
			}
		}

		private HardwareAction ႨႣ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0020, IL_004b, IL_0077, IL_00a2, IL_00cd, IL_00fc, IL_0125, IL_0155, IL_018b, IL_01b3, IL_01d9, IL_0205, IL_0215, IL_024a, IL_026b, IL_0289, IL_02b4, IL_02df, IL_0301, IL_0327, IL_0354, IL_0373, IL_03a1, IL_03d4, IL_03f1, IL_041a, IL_0427, IL_0444, IL_045f, IL_0498, IL_04b9
			object obj;
			if (Ⴓ)
			{
				obj = GetXsiType();
				goto IL_042c;
			}
			if (776 >= 776 - 190)
			{
				goto IL_020f;
			}
			goto IL_028e;
			IL_012a:
			return null;
			IL_0486:
			HardwareAction hardwareAction = new HardwareAction();
			bool[] array = new bool[1];
			goto IL_0190;
			IL_042c:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			goto IL_042d;
			IL_042d:
			bool flag = false;
			if (Ⴍ)
			{
				if (false)
				{
					goto IL_03d6;
				}
				flag = ReadNull();
				if (695 < 695 - 383)
				{
					goto IL_032c;
				}
			}
			if (Ⴓ)
			{
				if (937 <= 937 - 33)
				{
					goto IL_0486;
				}
				if (!(xmlQualifiedName == null))
				{
					if (429 < 429 - 76)
					{
						goto IL_0157;
					}
					goto IL_028e;
				}
			}
			goto IL_03d6;
			IL_0384:
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (234 <= 234 - 52)
			{
				goto IL_0025;
			}
			goto IL_00da;
			IL_020f:
			obj = null;
			goto IL_042c;
			IL_0190:
			if (base.Reader.MoveToNextAttribute())
			{
				if (array[0])
				{
					goto IL_00a4;
				}
				if (130 < 130 - 75)
				{
					goto IL_03d6;
				}
			}
			else if (344 >= 344 - 17)
			{
				base.Reader.MoveToElement();
				goto IL_03b2;
			}
			if ((object)base.Reader.LocalName != this.m_ႣႷ)
			{
				goto IL_00a4;
			}
			if (922 > 922 - 726)
			{
				goto IL_0025;
			}
			goto IL_017b;
			IL_032c:
			return ႳႤ(Ⴍ, Ⴓ: false);
			IL_0303:
			if ((object)xmlQualifiedName.Name == ႳႰႤ)
			{
				if (821 < 821 - 664)
				{
					goto IL_0384;
				}
				if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
				{
					if (false)
					{
						goto IL_016f;
					}
					goto IL_0217;
				}
			}
			goto IL_0207;
			IL_01de:
			if ((object)xmlQualifiedName.Namespace != this.m_ႰႷ)
			{
				goto IL_0303;
			}
			if (861 < 861 - 539)
			{
				goto IL_017b;
			}
			goto IL_032c;
			IL_028e:
			if ((object)xmlQualifiedName.Name == ႳႰႷ)
			{
				if (false)
				{
					goto IL_012a;
				}
				if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
				{
					goto IL_03d6;
				}
				if (false)
				{
					goto IL_0190;
				}
			}
			if ((object)xmlQualifiedName.Name == ႳႨႰ)
			{
				if (509 < 509 - 39)
				{
					goto IL_0207;
				}
				if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
				{
					if (573 >= 573 - 202)
					{
						return ႳႼ(Ⴍ, Ⴓ: false);
					}
					goto IL_0303;
				}
			}
			if ((object)xmlQualifiedName.Name == ႳႥႥ)
			{
				if (800 > 800 - 180)
				{
					goto IL_01de;
				}
				goto IL_0217;
			}
			goto IL_0303;
			IL_00a4:
			if (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (1016 <= 1016 - 555)
				{
					goto IL_0303;
				}
				UnknownNode(hardwareAction, ႥႷႭ.Ⴓ.ႰႷ(1821394797));
				if (262 <= 262 - 233)
				{
					goto IL_03b2;
				}
			}
			goto IL_0190;
			IL_0217:
			return ႨႭ(Ⴍ, Ⴓ: false);
			IL_0162:
			return hardwareAction;
			IL_0207:
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_0025:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_00a4;
			}
			if (587 > 587 - 21)
			{
				hardwareAction.Start = XmlConvert.ToInt32(base.Reader.Value);
				array[0] = true;
			}
			goto IL_0190;
			IL_0157:
			base.Reader.Skip();
			goto IL_0162;
			IL_0164:
			base.Reader.ReadStartElement();
			goto IL_016f;
			IL_016f:
			base.Reader.MoveToContent();
			goto IL_017b;
			IL_03b2:
			if (!base.Reader.IsEmptyElement)
			{
				goto IL_0164;
			}
			if ((918 + 918 * 918) % 2 == 0)
			{
				goto IL_0157;
			}
			goto IL_042d;
			IL_017b:
			whileIterations = 0;
			readerCount = base.ReaderCount;
			goto IL_00da;
			IL_03d6:
			if (flag)
			{
				if ((461 + 461 * 461) % 2 == 0)
				{
					goto IL_012a;
				}
				goto IL_0164;
			}
			goto IL_0486;
			IL_00da:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (334 < 334 - 25)
				{
					goto IL_01de;
				}
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType != XmlNodeType.Element)
					{
						UnknownNode(hardwareAction, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
						if (144 < 144 - 53)
						{
							goto IL_0162;
						}
					}
					else
					{
						if (false)
						{
							goto IL_0025;
						}
						UnknownNode(hardwareAction, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					}
					base.Reader.MoveToContent();
					goto IL_0384;
				}
				if (57 < 57 - 22)
				{
					goto IL_020f;
				}
			}
			ReadEndElement();
			return hardwareAction;
		}

		private QnAScenarioMatchActivity ႰႤ(string Ⴍ)
		{
			int num = 8;
			string key = default(string);
			int value = default(int);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((key = Ⴍ) == null) ? 28 : 6);
					break;
				case 6:
					num = ((<PrivateImplementationDetails>{79C65F45-14CF-43E0-8E3F-6BFA4F0A164D}.$$method0x6000092-1 != null) ? 9 : 0);
					break;
				case 0:
					<PrivateImplementationDetails>{79C65F45-14CF-43E0-8E3F-6BFA4F0A164D}.$$method0x6000092-1 = new Dictionary<string, int>(35)
					{
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394928),
							0
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394815),
							1
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394929),
							2
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394808),
							3
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394930),
							4
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394809),
							5
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394931),
							6
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394811),
							7
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394940),
							8
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394757),
							9
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394792),
							10
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394758),
							11
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394794),
							12
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394759),
							13
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394795),
							14
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394752),
							15
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394804),
							16
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394754),
							17
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394805),
							18
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394755),
							19
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394806),
							20
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394764),
							21
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394807),
							22
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394884),
							23
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394800),
							24
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394886),
							25
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394801),
							26
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394880),
							27
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394802),
							28
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394882),
							29
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394803),
							30
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394892),
							31
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394813),
							32
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394894),
							33
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394814),
							34
						}
					};
					num = 9;
					break;
				case 9:
					num = ((!<PrivateImplementationDetails>{79C65F45-14CF-43E0-8E3F-6BFA4F0A164D}.$$method0x6000092-1.TryGetValue(key, out value)) ? 28 : 29);
					break;
				case 29:
				{
					int num2;
					switch (value)
					{
					default:
						num2 = 41;
						break;
					case 0:
						num2 = 4;
						break;
					case 1:
						num2 = 27;
						break;
					case 2:
						num2 = 36;
						break;
					case 3:
						num2 = 33;
						break;
					case 4:
						num2 = 11;
						break;
					case 5:
						num2 = 12;
						break;
					case 6:
						num2 = 31;
						break;
					case 7:
						num2 = 2;
						break;
					case 8:
						num2 = 38;
						break;
					case 9:
						num2 = 5;
						break;
					case 10:
						num2 = 19;
						break;
					case 11:
						num2 = 21;
						break;
					case 12:
						num2 = 34;
						break;
					case 13:
						num2 = 1;
						break;
					case 14:
						num2 = 39;
						break;
					case 15:
						num2 = 26;
						break;
					case 16:
						num2 = 20;
						break;
					case 17:
						num2 = 15;
						break;
					case 18:
						num2 = 23;
						break;
					case 19:
						num2 = 14;
						break;
					case 20:
						num2 = 13;
						break;
					case 21:
						num2 = 22;
						break;
					case 22:
						num2 = 24;
						break;
					case 23:
						num2 = 3;
						break;
					case 24:
						num2 = 18;
						break;
					case 25:
						num2 = 17;
						break;
					case 26:
						num2 = 37;
						break;
					case 27:
						num2 = 10;
						break;
					case 28:
						num2 = 35;
						break;
					case 29:
						num2 = 25;
						break;
					case 30:
						num2 = 7;
						break;
					case 31:
						num2 = 16;
						break;
					case 32:
						num2 = 32;
						break;
					case 33:
						num2 = 40;
						break;
					case 34:
						num2 = 30;
						break;
					}
					num = num2;
					break;
				}
				case 41:
					num = 28;
					break;
				case 4:
					return QnAScenarioMatchActivity.PlayChitChat;
				case 27:
					return QnAScenarioMatchActivity.RunWebSearch;
				case 36:
					return QnAScenarioMatchActivity.ConfirmWebSearch;
				case 33:
					return QnAScenarioMatchActivity.ConfirmWebSearchWithQ;
				case 11:
					return QnAScenarioMatchActivity.CheckAndPlayChitChat;
				case 12:
					return QnAScenarioMatchActivity.PlayGames;
				case 31:
					return QnAScenarioMatchActivity.Cinema;
				case 2:
					return QnAScenarioMatchActivity.NewChitChat;
				case 38:
					return QnAScenarioMatchActivity.NewWords;
				case 5:
					return QnAScenarioMatchActivity.GoToMyChatman;
				case 19:
					return QnAScenarioMatchActivity.WhatsTheTime;
				case 21:
					return QnAScenarioMatchActivity.AnswerQuestion;
				case 34:
					return QnAScenarioMatchActivity.TeachQOrSearchWeb;
				case 1:
					return QnAScenarioMatchActivity.TeachQOrSearchWebWithQ;
				case 39:
					return QnAScenarioMatchActivity.TeachQuestion;
				case 26:
					return QnAScenarioMatchActivity.UserProfile;
				case 20:
					return QnAScenarioMatchActivity.PromptYesNo;
				case 15:
					return QnAScenarioMatchActivity.WhatsMyName;
				case 23:
					return QnAScenarioMatchActivity.ShowWeather;
				case 14:
					return QnAScenarioMatchActivity.ShowSports;
				case 13:
					return QnAScenarioMatchActivity.ShowTv;
				case 22:
					return QnAScenarioMatchActivity.ShowHomework;
				case 24:
					return QnAScenarioMatchActivity.ShowApps;
				case 3:
					return QnAScenarioMatchActivity.UserProfileOrTeach;
				case 18:
					return QnAScenarioMatchActivity.ShowReminders;
				case 17:
					return QnAScenarioMatchActivity.ShowCinemaAndGames;
				case 37:
					return QnAScenarioMatchActivity.GoToFacebook;
				case 10:
					return QnAScenarioMatchActivity.GoToFunnyWebsite;
				case 35:
					return QnAScenarioMatchActivity.GoToRegistration;
				case 25:
					return QnAScenarioMatchActivity.Personalities;
				case 7:
					return QnAScenarioMatchActivity.ShowCredits;
				case 16:
					return QnAScenarioMatchActivity.DownloadChitChat;
				case 32:
					return QnAScenarioMatchActivity.ShowAllTeach;
				case 40:
					return QnAScenarioMatchActivity.HomeworkOrGamesOrCinema;
				case 30:
					return QnAScenarioMatchActivity.GoToHomework;
				case 28:
					throw CreateUnknownConstantException(Ⴍ, typeof(QnAScenarioMatchActivity));
				}
			}
		}

		private ActionScope ႰႼ(string Ⴍ)
		{
			int num = 6;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴍ) == null) ? 8 : 2);
					break;
				case 2:
					num = ((a == ႥႷႭ.Ⴓ.ႰႷ(1821394798)) ? 4 : 5);
					break;
				case 5:
					num = ((a == ႥႷႭ.Ⴍ.ႰႷ(1821394890)) ? 3 : 0);
					break;
				case 0:
					num = ((a == ႥႷႭ.Ⴓ.ႰႷ(1821394799)) ? 1 : 7);
					break;
				case 7:
					num = 8;
					break;
				case 4:
					return ActionScope.Reactive;
				case 3:
					return ActionScope.Proactive;
				case 1:
					return ActionScope.Both;
				case 8:
					throw CreateUnknownConstantException(Ⴍ, typeof(ActionScope));
				}
			}
		}

		internal Hashtable ႰႥ()
		{
			int num = 1;
			while (true)
			{
				switch (num)
				{
				default:
					num = ((this.Ⴓ != null) ? 2 : 0);
					break;
				case 0:
				{
					Hashtable hashtable = new Hashtable();
					hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394924), 0L);
					hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394901), 1L);
					hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394902), 2L);
					hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394826), 4L);
					hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394912), 8L);
					hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394816), 16L);
					hashtable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394923), 32L);
					this.Ⴓ = (string)(object)hashtable;
					num = 2;
					break;
				}
				case 2:
					return (Hashtable)(object)this.Ⴓ;
				}
			}
		}

		private ActionChangeLog ႳႭႭ(string Ⴍ)
		{
			return (ActionChangeLog)XmlSerializationReader.ToEnum(Ⴍ, ႰႥ(), ႥႷႭ.Ⴍ.ႰႷ(1821394810));
		}

		private ChatmanAction ႨႼ(bool Ⴍ, bool Ⴓ)
		{
			int num = 37;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ChatmanAction chatmanAction = default(ChatmanAction);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			List<HardwareAction> actions = default(List<HardwareAction>);
			int whileIterations2 = default(int);
			int readerCount2 = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 127 : 87);
					break;
				case 87:
					obj = null;
					goto IL_0238;
				case 127:
					obj = GetXsiType();
					goto IL_0238;
				case 75:
					flag = ReadNull();
					num = 105;
					break;
				case 105:
					num = ((!Ⴓ) ? 74 : 62);
					break;
				case 62:
					num = ((xmlQualifiedName == null) ? 74 : 97);
					break;
				case 97:
					num = (((object)xmlQualifiedName.Name != this.m_ႣႨ) ? 129 : 122);
					break;
				case 122:
					num = (((object)xmlQualifiedName.Namespace == this.m_ႰႷ) ? 74 : 129);
					break;
				case 129:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 74:
					num = ((!flag) ? 124 : 118);
					break;
				case 118:
					return null;
				case 124:
					chatmanAction = new ChatmanAction();
					num = ((chatmanAction.Actions != null) ? 4 : 49);
					break;
				case 49:
					chatmanAction.Actions = new List<HardwareAction>();
					goto case 4;
				case 4:
					_ = chatmanAction.Actions;
					array = new bool[20];
					num = 16;
					break;
				case 58:
					num = (array[0] ? 93 : 34);
					break;
				case 34:
					num = (((object)base.Reader.LocalName != ႨႥ) ? 93 : 103);
					break;
				case 103:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 93 : 33);
					break;
				case 33:
					chatmanAction.TotalCounter = XmlConvert.ToInt32(base.Reader.Value);
					array[0] = true;
					num = 16;
					break;
				case 93:
					num = (array[1] ? 22 : 80);
					break;
				case 80:
					num = (((object)base.Reader.LocalName != ႳႷႰ) ? 22 : 60);
					break;
				case 60:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 22 : 111);
					break;
				case 111:
					chatmanAction.DailyAverage = XmlConvert.ToDouble(base.Reader.Value);
					array[1] = true;
					num = 16;
					break;
				case 22:
					num = (array[2] ? 32 : 43);
					break;
				case 43:
					num = (((object)base.Reader.LocalName != this.m_ႳႭႠ) ? 32 : 68);
					break;
				case 68:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 32 : 39);
					break;
				case 39:
					chatmanAction.DaysUsed = XmlConvert.ToInt32(base.Reader.Value);
					array[2] = true;
					num = 16;
					break;
				case 32:
					num = (array[3] ? 81 : 120);
					break;
				case 120:
					num = (((object)base.Reader.LocalName != ႥႰ) ? 81 : 52);
					break;
				case 52:
					num = (((object)base.Reader.NamespaceURI == this.m_ႰႷ) ? 1 : 81);
					break;
				case 1:
					chatmanAction.LastUseDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
					array[3] = true;
					num = 16;
					break;
				case 81:
					num = (array[4] ? 42 : 55);
					break;
				case 55:
					num = (((object)base.Reader.LocalName != ႳႣႼ) ? 42 : 106);
					break;
				case 106:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 42 : 35);
					break;
				case 35:
					chatmanAction.ID = XmlConvert.ToGuid(base.Reader.Value);
					array[4] = true;
					num = 16;
					break;
				case 42:
					num = (array[5] ? 66 : 89);
					break;
				case 89:
					num = (((object)base.Reader.LocalName != ႳႠႠ) ? 66 : 8);
					break;
				case 8:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 66 : 57);
					break;
				case 57:
					chatmanAction.Name = base.Reader.Value;
					array[5] = true;
					num = 16;
					break;
				case 66:
					num = (array[6] ? 28 : 94);
					break;
				case 94:
					num = (((object)base.Reader.LocalName != ႳႳႼ) ? 28 : 26);
					break;
				case 26:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 28 : 109);
					break;
				case 109:
					chatmanAction.Description = base.Reader.Value;
					array[6] = true;
					num = 16;
					break;
				case 28:
					num = (array[7] ? 3 : 63);
					break;
				case 63:
					num = (((object)base.Reader.LocalName != this.m_ႳႣ) ? 3 : 91);
					break;
				case 91:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 3 : 99);
					break;
				case 99:
					chatmanAction.Author = base.Reader.Value;
					array[7] = true;
					num = 16;
					break;
				case 3:
					num = (array[8] ? 90 : 84);
					break;
				case 84:
					num = (((object)base.Reader.LocalName != ႳႨႥ) ? 90 : 86);
					break;
				case 86:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 90 : 131);
					break;
				case 131:
					chatmanAction.Reference = base.Reader.Value;
					array[8] = true;
					num = 16;
					break;
				case 90:
					num = (array[9] ? 69 : 24);
					break;
				case 24:
					num = (((object)base.Reader.LocalName != this.m_ႷႥ) ? 69 : 98);
					break;
				case 98:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 69 : 47);
					break;
				case 47:
					chatmanAction.MoodID = XmlConvert.ToGuid(base.Reader.Value);
					array[9] = true;
					num = 16;
					break;
				case 69:
					num = (array[10] ? 56 : 126);
					break;
				case 126:
					num = (((object)base.Reader.LocalName != ႠႥ) ? 56 : 9);
					break;
				case 9:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 56 : 51);
					break;
				case 51:
					chatmanAction.Intensity = XmlConvert.ToInt32(base.Reader.Value);
					array[10] = true;
					num = 16;
					break;
				case 56:
					num = (array[11] ? 11 : 44);
					break;
				case 44:
					num = (((object)base.Reader.LocalName != this.m_ႣႠ) ? 11 : 20);
					break;
				case 20:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 11 : 36);
					break;
				case 36:
					chatmanAction.CreationDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
					array[11] = true;
					num = 16;
					break;
				case 11:
					num = (array[12] ? 41 : 117);
					break;
				case 117:
					num = (((object)base.Reader.LocalName != ႥႥ) ? 41 : 110);
					break;
				case 110:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 41 : 96);
					break;
				case 96:
					chatmanAction.IsPrivate = XmlConvert.ToBoolean(base.Reader.Value);
					array[12] = true;
					num = 16;
					break;
				case 41:
					num = (array[13] ? 125 : 83);
					break;
				case 83:
					num = (((object)base.Reader.LocalName != ႠႤ) ? 125 : 27);
					break;
				case 27:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 125 : 70);
					break;
				case 70:
					chatmanAction.IsExcluded = XmlConvert.ToBoolean(base.Reader.Value);
					array[13] = true;
					num = 16;
					break;
				case 125:
					num = (array[14] ? 61 : 38);
					break;
				case 38:
					num = (((object)base.Reader.LocalName != ႤႳ) ? 61 : 112);
					break;
				case 112:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 61 : 59);
					break;
				case 59:
					chatmanAction.Scope = ႰႼ(base.Reader.Value);
					array[14] = true;
					num = 16;
					break;
				case 61:
					num = (array[15] ? 67 : 65);
					break;
				case 65:
					num = (((object)base.Reader.LocalName != ႳႰႼ) ? 67 : 30);
					break;
				case 30:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 67 : 13);
					break;
				case 13:
					chatmanAction.SpecialActionCode = XmlConvert.ToInt32(base.Reader.Value);
					array[15] = true;
					num = 16;
					break;
				case 67:
					num = (array[16] ? 18 : 53);
					break;
				case 53:
					num = (((object)base.Reader.LocalName != ႼႷ) ? 18 : 82);
					break;
				case 82:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 18 : 78);
					break;
				case 78:
					chatmanAction.SerialNumberUsedForDownload = base.Reader.Value;
					array[16] = true;
					num = 16;
					break;
				case 18:
					num = (array[17] ? 88 : 101);
					break;
				case 101:
					num = (((object)base.Reader.LocalName != this.m_ႳႭႰ) ? 88 : 115);
					break;
				case 115:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 88 : 17);
					break;
				case 17:
					chatmanAction.IsMy = XmlConvert.ToBoolean(base.Reader.Value);
					array[17] = true;
					num = 16;
					break;
				case 88:
					num = (array[18] ? 21 : 10);
					break;
				case 10:
					num = (((object)base.Reader.LocalName != ႤႨ) ? 21 : 2);
					break;
				case 2:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 21 : 19);
					break;
				case 19:
					chatmanAction.ChangeLog = XmlConvert.ToInt32(base.Reader.Value);
					array[18] = true;
					num = 16;
					break;
				case 21:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 16 : 85);
					break;
				case 85:
					UnknownNode(chatmanAction, ႥႷႭ.Ⴍ.ႰႷ(1821394756));
					goto case 16;
				case 16:
					num = (base.Reader.MoveToNextAttribute() ? 58 : 76);
					break;
				case 76:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 45 : 12);
					break;
				case 12:
					base.Reader.Skip();
					return chatmanAction;
				case 45:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 102;
					break;
				case 40:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 121 : 6);
					break;
				case 6:
					num = (((object)base.Reader.LocalName != ႥႠ) ? 114 : 5);
					break;
				case 5:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 114 : 25);
					break;
				case 25:
					num = (ReadNull() ? 107 : 23);
					break;
				case 23:
					num = ((chatmanAction.Actions != null) ? 108 : 31);
					break;
				case 31:
					chatmanAction.Actions = new List<HardwareAction>();
					goto case 108;
				case 108:
					actions = chatmanAction.Actions;
					num = ((!base.Reader.IsEmptyElement) ? 73 : 29);
					break;
				case 29:
					base.Reader.Skip();
					num = 107;
					break;
				case 73:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations2 = 0;
					readerCount2 = base.ReaderCount;
					num = 128;
					break;
				case 116:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 95 : 72);
					break;
				case 72:
					num = (((object)base.Reader.LocalName != ႳႳႨ) ? 46 : 14);
					break;
				case 14:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 46 : 0);
					break;
				case 0:
					num = ((actions != null) ? 123 : 119);
					break;
				case 119:
					base.Reader.Skip();
					num = 50;
					break;
				case 123:
					actions.Add(ႨႭ(Ⴍ: true, Ⴓ: true));
					num = 50;
					break;
				case 46:
					num = (((object)base.Reader.LocalName != this.m_ႨႣ) ? 7 : 92);
					break;
				case 92:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 7 : 15);
					break;
				case 15:
					num = ((actions != null) ? 54 : 64);
					break;
				case 64:
					base.Reader.Skip();
					num = 50;
					break;
				case 54:
					actions.Add(ႳႤ(Ⴍ: true, Ⴓ: true));
					num = 50;
					break;
				case 7:
					num = (((object)base.Reader.LocalName != ႳႳႠ) ? 130 : 71);
					break;
				case 71:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 130 : 79);
					break;
				case 79:
					num = ((actions != null) ? 104 : 100);
					break;
				case 100:
					base.Reader.Skip();
					num = 50;
					break;
				case 104:
					actions.Add(ႳႼ(Ⴍ: true, Ⴓ: true));
					num = 50;
					break;
				case 130:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394793));
					num = 50;
					break;
				case 95:
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394793));
					goto case 50;
				case 50:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations2, ref readerCount2);
					goto case 128;
				case 128:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 132 : 48);
					break;
				case 48:
					num = ((base.Reader.NodeType != 0) ? 116 : 132);
					break;
				case 132:
					ReadEndElement();
					num = 107;
					break;
				case 114:
					UnknownNode(chatmanAction, ႥႷႭ.Ⴍ.ႰႷ(1821394753));
					num = 107;
					break;
				case 121:
					UnknownNode(chatmanAction, ႥႷႭ.Ⴍ.ႰႷ(1821394753));
					goto case 107;
				case 107:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 102;
				case 102:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 77 : 113);
					break;
				case 113:
					num = ((base.Reader.NodeType != 0) ? 40 : 77);
					break;
				case 77:
					{
						ReadEndElement();
						return chatmanAction;
					}
					IL_0238:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 105 : 75);
					break;
				}
			}
		}

		private ActionUsage ႣႭ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_001c, IL_0049, IL_007a, IL_009e, IL_00c2, IL_00f2, IL_011b, IL_0142, IL_0164, IL_018d, IL_01c4, IL_01f1, IL_0225, IL_0248, IL_0278, IL_0292, IL_02b5, IL_02de, IL_030c, IL_0343, IL_036e, IL_037b, IL_039c, IL_03a4, IL_03cc, IL_03fc, IL_0428, IL_044c, IL_0491, IL_04b5, IL_04e6, IL_0506, IL_0534, IL_0560, IL_0580, IL_05b1, IL_05dc, IL_05fe, IL_0628, IL_0643, IL_0671, IL_069e, IL_06bf
			if (Ⴓ)
			{
				goto IL_0373;
			}
			if (996 <= 996 - 583)
			{
			}
			object obj = null;
			goto IL_0380;
			IL_0373:
			obj = GetXsiType();
			goto IL_0380;
			IL_0380:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			ActionUsage actionUsage = default(ActionUsage);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				bool flag = false;
				if (Ⴍ)
				{
					if (889 < 889 - 63)
					{
						goto IL_0443;
					}
					flag = ReadNull();
					if (742 < 742 - 142)
					{
						goto IL_05b6;
					}
				}
				if (Ⴓ)
				{
					if (false)
					{
						goto IL_0585;
					}
					while (!(xmlQualifiedName == null))
					{
						if (476 < 476 - 284)
						{
							goto IL_022a;
						}
						if ((object)xmlQualifiedName.Name != ႥႤ)
						{
							goto IL_019d;
						}
						if (598 >= 598 - 501)
						{
							if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
							{
								break;
							}
							if (477 >= 477 - 288)
							{
								goto IL_019d;
							}
						}
						goto IL_05b6;
						IL_019d:
						if ((object)xmlQualifiedName.Name == this.m_ႣႨ)
						{
							if (559 <= 559 - 276)
							{
								goto IL_0095;
							}
							if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
							{
								if (104 > 104 - 69)
								{
									return ႨႼ(Ⴍ, Ⴓ: false);
								}
								continue;
							}
						}
						goto IL_0603;
					}
				}
				if (!flag)
				{
					actionUsage = new ActionUsage();
					array = new bool[5];
					goto IL_05b6;
				}
				if (124 > 124 - 5)
				{
					return null;
				}
				goto IL_0169;
				IL_022a:
				while (!array[4])
				{
					if (931 >= 931 - 353)
					{
						if ((object)base.Reader.LocalName != ႳႣႼ)
						{
							break;
						}
						if (485 < 485 - 107)
						{
							continue;
						}
						goto IL_01c6;
					}
					goto IL_0603;
				}
				goto IL_0021;
				IL_01c6:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_0021;
				}
				if ((685 + 685 * 685) % 2 == 0)
				{
					actionUsage.ID = XmlConvert.ToGuid(base.Reader.Value);
					goto IL_0095;
				}
				goto IL_00b9;
				IL_0443:
				array[3] = true;
				goto IL_05b6;
				IL_00b9:
				array[1] = true;
				goto IL_05b6;
				IL_01f6:
				ReadEndElement();
				return actionUsage;
				IL_0120:
				if (base.Reader.NodeType == XmlNodeType.EndElement)
				{
					goto IL_01f6;
				}
				if (12 > 12 - 9)
				{
					if (base.Reader.NodeType == XmlNodeType.None)
					{
						if (354 <= 354 - 326)
						{
							continue;
						}
						goto IL_01f6;
					}
					if (base.Reader.NodeType != XmlNodeType.Element)
					{
						UnknownNode(actionUsage, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
						if (766 <= 766 - 531)
						{
							break;
						}
						goto IL_0585;
					}
					if (162 <= 162 - 34)
					{
						goto IL_0401;
					}
				}
				UnknownNode(actionUsage, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
				goto IL_0585;
				IL_0095:
				array[4] = true;
				goto IL_05b6;
				IL_0021:
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					if ((20 + 20 * 20) % 2 == 0)
					{
					}
					goto IL_0401;
				}
				goto IL_05b6;
				IL_0603:
				throw CreateUnknownTypeException(xmlQualifiedName);
				IL_05b6:
				while (base.Reader.MoveToNextAttribute())
				{
					if (!array[0])
					{
						if (772 <= 772 - 228)
						{
							continue;
						}
						goto IL_03d1;
					}
					goto IL_04eb;
					IL_03d1:
					if ((object)base.Reader.LocalName != ႨႥ)
					{
						goto IL_04eb;
					}
					if (false)
					{
						goto IL_0120;
					}
					goto IL_050b;
					IL_050b:
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (773 > 773 - 417)
						{
							actionUsage.TotalCounter = XmlConvert.ToInt32(base.Reader.Value);
							array[0] = true;
							continue;
						}
						goto IL_0174;
					}
					goto IL_04eb;
					IL_04eb:
					if (!array[1])
					{
						if (383 < 383 - 110)
						{
							goto IL_0169;
						}
						if ((object)base.Reader.LocalName == ႳႷႰ)
						{
							if (689 <= 689 - 462)
							{
								continue;
							}
							if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if (701 > 701 - 397)
								{
									goto IL_00a3;
								}
								goto IL_03d1;
							}
						}
					}
					if (!array[2])
					{
						if (false)
						{
							goto IL_04ac;
						}
						if ((object)base.Reader.LocalName == this.m_ႳႭႠ)
						{
							if (false)
							{
								goto IL_0373;
							}
							if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if (325 >= 325 - 5)
								{
									actionUsage.DaysUsed = XmlConvert.ToInt32(base.Reader.Value);
								}
								goto IL_04ac;
							}
						}
					}
					if (!array[3])
					{
						if (false)
						{
							goto IL_0095;
						}
						if ((object)base.Reader.LocalName == ႥႰ)
						{
							if (479 < 479 - 213)
							{
								goto IL_0585;
							}
							if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if ((1014 + 1014 * 1014) % 2 == 0)
								{
									goto IL_042d;
								}
								goto IL_050b;
							}
						}
					}
					goto IL_022a;
					IL_04ac:
					array[2] = true;
				}
				if (604 < 604 - 446)
				{
					goto IL_0021;
				}
				base.Reader.MoveToElement();
				if (!base.Reader.IsEmptyElement)
				{
					goto IL_0169;
				}
				if (706 > 706 - 284)
				{
					base.Reader.Skip();
					return actionUsage;
				}
				goto IL_0183;
				IL_0585:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (931 > 931 - 238)
				{
					goto IL_0120;
				}
				goto IL_05b6;
				IL_0401:
				UnknownNode(actionUsage, ႥႷႭ.Ⴓ.ႰႷ(1821394812));
				if (755 <= 755 - 317)
				{
					goto IL_0174;
				}
				goto IL_05b6;
				IL_0174:
				base.Reader.MoveToContent();
				whileIterations = 0;
				goto IL_0183;
				IL_0183:
				readerCount = base.ReaderCount;
				goto IL_0120;
				IL_00a3:
				actionUsage.DailyAverage = XmlConvert.ToDouble(base.Reader.Value);
				goto IL_00b9;
				IL_0169:
				base.Reader.ReadStartElement();
				goto IL_0174;
				IL_042d:
				actionUsage.LastUseDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
				goto IL_0443;
			}
			goto IL_0373;
		}

		private Counter ႣႳ(bool Ⴍ, bool Ⴓ)
		{
			int num = 38;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			Counter counter = default(Counter);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 11 : 40);
					break;
				case 40:
					obj = null;
					goto IL_00ec;
				case 11:
					obj = GetXsiType();
					goto IL_00ec;
				case 12:
					flag = ReadNull();
					num = 1;
					break;
				case 1:
					num = ((!Ⴓ) ? 28 : 39);
					break;
				case 39:
					num = ((xmlQualifiedName == null) ? 28 : 46);
					break;
				case 46:
					num = (((object)xmlQualifiedName.Name != ႳႰႭ) ? 13 : 25);
					break;
				case 25:
					num = (((object)xmlQualifiedName.Namespace == this.m_ႰႷ) ? 28 : 13);
					break;
				case 13:
					num = (((object)xmlQualifiedName.Name != ႥႤ) ? 4 : 20);
					break;
				case 20:
					num = (((object)xmlQualifiedName.Namespace != this.m_ႰႷ) ? 4 : 22);
					break;
				case 22:
					return ႣႭ(Ⴍ, Ⴓ: false);
				case 4:
					num = (((object)xmlQualifiedName.Name != this.m_ႣႨ) ? 30 : 19);
					break;
				case 19:
					num = (((object)xmlQualifiedName.Namespace != this.m_ႰႷ) ? 30 : 36);
					break;
				case 36:
					return ႨႼ(Ⴍ, Ⴓ: false);
				case 30:
					num = (((object)xmlQualifiedName.Name != ႨႳ) ? 16 : 23);
					break;
				case 23:
					num = (((object)xmlQualifiedName.Namespace != this.m_ႰႷ) ? 16 : 18);
					break;
				case 18:
					return ႳႰ(Ⴍ, Ⴓ: false);
				case 16:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 28:
					num = ((!flag) ? 10 : 31);
					break;
				case 31:
					return null;
				case 10:
					counter = new Counter();
					array = new bool[4];
					num = 21;
					break;
				case 15:
					num = (array[0] ? 2 : 42);
					break;
				case 42:
					num = (((object)base.Reader.LocalName != ႨႥ) ? 2 : 49);
					break;
				case 49:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 2 : 37);
					break;
				case 37:
					counter.TotalCounter = XmlConvert.ToInt32(base.Reader.Value);
					array[0] = true;
					num = 21;
					break;
				case 2:
					num = (array[1] ? 33 : 8);
					break;
				case 8:
					num = (((object)base.Reader.LocalName != ႳႷႰ) ? 33 : 26);
					break;
				case 26:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 33 : 41);
					break;
				case 41:
					counter.DailyAverage = XmlConvert.ToDouble(base.Reader.Value);
					array[1] = true;
					num = 21;
					break;
				case 33:
					num = (array[2] ? 14 : 34);
					break;
				case 34:
					num = (((object)base.Reader.LocalName != this.m_ႳႭႠ) ? 14 : 45);
					break;
				case 45:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 14 : 29);
					break;
				case 29:
					counter.DaysUsed = XmlConvert.ToInt32(base.Reader.Value);
					array[2] = true;
					num = 21;
					break;
				case 14:
					num = (array[3] ? 3 : 47);
					break;
				case 47:
					num = (((object)base.Reader.LocalName != ႥႰ) ? 3 : 43);
					break;
				case 43:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 3 : 7);
					break;
				case 7:
					counter.LastUseDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
					array[3] = true;
					num = 21;
					break;
				case 3:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 21 : 35);
					break;
				case 35:
					UnknownNode(counter, ႥႷႭ.Ⴍ.ႰႷ(1821394765));
					goto case 21;
				case 21:
					num = (base.Reader.MoveToNextAttribute() ? 15 : 48);
					break;
				case 48:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 32 : 0);
					break;
				case 0:
					base.Reader.Skip();
					return counter;
				case 32:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 24;
					break;
				case 17:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 44 : 6);
					break;
				case 6:
					UnknownNode(counter, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					num = 9;
					break;
				case 44:
					UnknownNode(counter, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					goto case 9;
				case 9:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 24;
				case 24:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 5 : 27);
					break;
				case 27:
					num = ((base.Reader.NodeType != 0) ? 17 : 5);
					break;
				case 5:
					{
						ReadEndElement();
						return counter;
					}
					IL_00ec:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 1 : 12);
					break;
				}
			}
		}

		private ScenarioUserAction ႣႨ(bool Ⴍ, bool Ⴓ)
		{
			int num = 20;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ScenarioUserAction scenarioUserAction = default(ScenarioUserAction);
			List<ScenarioAction> actions = default(List<ScenarioAction>);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 40 : 47);
					break;
				case 47:
					obj = null;
					goto IL_00f4;
				case 40:
					obj = GetXsiType();
					goto IL_00f4;
				case 28:
					flag = ReadNull();
					num = 50;
					break;
				case 50:
					num = ((!Ⴓ) ? 38 : 51);
					break;
				case 51:
					num = ((xmlQualifiedName == null) ? 38 : 5);
					break;
				case 5:
					num = (((object)xmlQualifiedName.Name != this.m_ႳႭႭ) ? 45 : 18);
					break;
				case 18:
					num = (((object)xmlQualifiedName.Namespace == this.m_ႰႷ) ? 38 : 45);
					break;
				case 45:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 38:
					num = ((!flag) ? 17 : 35);
					break;
				case 35:
					return null;
				case 17:
					scenarioUserAction = new ScenarioUserAction();
					num = ((scenarioUserAction.Actions != null) ? 12 : 37);
					break;
				case 37:
					scenarioUserAction.Actions = new List<ScenarioAction>();
					goto case 12;
				case 12:
					actions = scenarioUserAction.Actions;
					array = new bool[6];
					num = 11;
					break;
				case 22:
					num = (array[0] ? 9 : 19);
					break;
				case 19:
					num = (((object)base.Reader.LocalName != ႳႣႼ) ? 9 : 6);
					break;
				case 6:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 9 : 27);
					break;
				case 27:
					scenarioUserAction.ID = XmlConvert.ToGuid(base.Reader.Value);
					array[0] = true;
					num = 11;
					break;
				case 9:
					num = (array[1] ? 21 : 23);
					break;
				case 23:
					num = (((object)base.Reader.LocalName != ႥႨ) ? 21 : 7);
					break;
				case 7:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 21 : 42);
					break;
				case 42:
					scenarioUserAction.SpecialCode = XmlConvert.ToInt32(base.Reader.Value);
					array[1] = true;
					num = 11;
					break;
				case 21:
					num = (array[2] ? 34 : 24);
					break;
				case 24:
					num = (((object)base.Reader.LocalName != ႳႨႣ) ? 34 : 14);
					break;
				case 14:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 34 : 29);
					break;
				case 29:
					scenarioUserAction.Data = base.Reader.Value;
					array[2] = true;
					num = 11;
					break;
				case 34:
					num = (array[4] ? 2 : 39);
					break;
				case 39:
					num = (((object)base.Reader.LocalName != ႳႠႭ) ? 2 : 0);
					break;
				case 0:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 2 : 46);
					break;
				case 46:
					scenarioUserAction.RequestedActivity = ႰႤ(base.Reader.Value);
					array[4] = true;
					num = 11;
					break;
				case 2:
					num = (array[5] ? 25 : 41);
					break;
				case 41:
					num = (((object)base.Reader.LocalName != this.m_ႰႠ) ? 25 : 31);
					break;
				case 31:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 25 : 33);
					break;
				case 33:
					scenarioUserAction.AnswerText = base.Reader.Value;
					array[5] = true;
					num = 11;
					break;
				case 25:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 11 : 16);
					break;
				case 16:
					UnknownNode(scenarioUserAction, ႥႷႭ.Ⴍ.ႰႷ(1821394766));
					goto case 11;
				case 11:
					num = (base.Reader.MoveToNextAttribute() ? 22 : 43);
					break;
				case 43:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 13 : 3);
					break;
				case 3:
					base.Reader.Skip();
					return scenarioUserAction;
				case 13:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 15;
					break;
				case 44:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 26 : 49);
					break;
				case 49:
					num = (((object)base.Reader.LocalName != this.m_ႳႥ) ? 32 : 10);
					break;
				case 10:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 32 : 48);
					break;
				case 48:
					num = ((actions != null) ? 30 : 36);
					break;
				case 36:
					base.Reader.Skip();
					num = 8;
					break;
				case 30:
					actions.Add(ႣႣ(Ⴍ: false, Ⴓ: true));
					num = 8;
					break;
				case 32:
					UnknownNode(scenarioUserAction, ႥႷႭ.Ⴓ.ႰႷ(1821394815));
					num = 8;
					break;
				case 26:
					UnknownNode(scenarioUserAction, ႥႷႭ.Ⴓ.ႰႷ(1821394815));
					goto case 8;
				case 8:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 15;
				case 15:
					num = ((base.Reader.NodeType != XmlNodeType.EndElement) ? 1 : 4);
					break;
				case 1:
					num = ((base.Reader.NodeType != 0) ? 44 : 4);
					break;
				case 4:
					{
						ReadEndElement();
						return scenarioUserAction;
					}
					IL_00f4:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 50 : 28);
					break;
				}
			}
		}

		private ScenarioAction ႣႣ(bool Ⴍ, bool Ⴓ)
		{
			int num = 22;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ScenarioAction scenarioAction = default(ScenarioAction);
			List<ScenarioAction> actions = default(List<ScenarioAction>);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 44 : 16);
					break;
				case 16:
					obj = null;
					goto IL_00f0;
				case 44:
					obj = GetXsiType();
					goto IL_00f0;
				case 12:
					flag = ReadNull();
					num = 43;
					break;
				case 43:
					num = ((!Ⴓ) ? 7 : 42);
					break;
				case 42:
					num = ((xmlQualifiedName == null) ? 7 : 34);
					break;
				case 34:
					num = (((object)xmlQualifiedName.Name != ႼႼ) ? 4 : 48);
					break;
				case 48:
					num = (((object)xmlQualifiedName.Namespace == this.m_ႰႷ) ? 7 : 4);
					break;
				case 4:
					num = (((object)xmlQualifiedName.Name != this.m_ႳႭႭ) ? 49 : 38);
					break;
				case 38:
					num = (((object)xmlQualifiedName.Namespace != this.m_ႰႷ) ? 49 : 9);
					break;
				case 9:
					return ႣႨ(Ⴍ, Ⴓ: false);
				case 49:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 7:
					num = ((!flag) ? 21 : 0);
					break;
				case 0:
					return null;
				case 21:
					scenarioAction = new ScenarioAction();
					num = ((scenarioAction.Actions != null) ? 20 : 32);
					break;
				case 32:
					scenarioAction.Actions = new List<ScenarioAction>();
					goto case 20;
				case 20:
					actions = scenarioAction.Actions;
					array = new bool[5];
					num = 31;
					break;
				case 13:
					num = (array[0] ? 33 : 3);
					break;
				case 3:
					num = (((object)base.Reader.LocalName != ႳႣႼ) ? 33 : 40);
					break;
				case 40:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 33 : 28);
					break;
				case 28:
					scenarioAction.ID = XmlConvert.ToGuid(base.Reader.Value);
					array[0] = true;
					num = 31;
					break;
				case 33:
					num = (array[1] ? 36 : 30);
					break;
				case 30:
					num = (((object)base.Reader.LocalName != ႥႨ) ? 36 : 15);
					break;
				case 15:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 36 : 10);
					break;
				case 10:
					scenarioAction.SpecialCode = XmlConvert.ToInt32(base.Reader.Value);
					array[1] = true;
					num = 31;
					break;
				case 36:
					num = (array[2] ? 17 : 26);
					break;
				case 26:
					num = (((object)base.Reader.LocalName != ႳႨႣ) ? 17 : 27);
					break;
				case 27:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 17 : 50);
					break;
				case 50:
					scenarioAction.Data = base.Reader.Value;
					array[2] = true;
					num = 31;
					break;
				case 17:
					num = ((!array[4]) ? 1 : 18);
					break;
				case 1:
					num = (((object)base.Reader.LocalName != ႳႠႭ) ? 18 : 25);
					break;
				case 25:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 18 : 47);
					break;
				case 47:
					scenarioAction.RequestedActivity = ႰႤ(base.Reader.Value);
					array[4] = true;
					num = 31;
					break;
				case 18:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 31 : 11);
					break;
				case 11:
					UnknownNode(scenarioAction, ႥႷႭ.Ⴓ.ႰႷ(1821394808));
					goto case 31;
				case 31:
					num = (base.Reader.MoveToNextAttribute() ? 13 : 41);
					break;
				case 41:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 5 : 23);
					break;
				case 23:
					base.Reader.Skip();
					return scenarioAction;
				case 5:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 46;
					break;
				case 39:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 8 : 37);
					break;
				case 37:
					num = (((object)base.Reader.LocalName != this.m_ႳႥ) ? 6 : 29);
					break;
				case 29:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 6 : 24);
					break;
				case 24:
					num = ((actions != null) ? 19 : 14);
					break;
				case 14:
					base.Reader.Skip();
					num = 35;
					break;
				case 19:
					actions.Add(ႣႣ(Ⴍ: false, Ⴓ: true));
					num = 35;
					break;
				case 6:
					UnknownNode(scenarioAction, ႥႷႭ.Ⴍ.ႰႷ(1821394767));
					num = 35;
					break;
				case 8:
					UnknownNode(scenarioAction, ႥႷႭ.Ⴍ.ႰႷ(1821394767));
					goto case 35;
				case 35:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 46;
				case 46:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 2 : 45);
					break;
				case 45:
					num = ((base.Reader.NodeType != 0) ? 39 : 2);
					break;
				case 2:
					{
						ReadEndElement();
						return scenarioAction;
					}
					IL_00f0:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 43 : 12);
					break;
				}
			}
		}

		private ScenarioMood ႣႷ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_002d, IL_0058, IL_0078, IL_009d, IL_00ca, IL_00f1, IL_010c, IL_0128, IL_0150, IL_0175, IL_0180, IL_01b6, IL_01f3, IL_021c, IL_023f, IL_0267, IL_028a, IL_02a1, IL_02bd, IL_02d0, IL_02eb, IL_031c, IL_0340, IL_0369, IL_0376, IL_0399, IL_03c5, IL_03f3, IL_0424, IL_0445
			object obj;
			if (!Ⴓ)
			{
				if (727 < 727 - 193)
				{
					goto IL_005d;
				}
				obj = null;
			}
			else
			{
				obj = GetXsiType();
			}
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			goto IL_037e;
			IL_0185:
			ReadEndElement();
			goto IL_018b;
			IL_020f:
			int readerCount = base.ReaderCount;
			goto IL_00a2;
			IL_005d:
			bool[] array = default(bool[]);
			if (!array[0])
			{
				if (227 <= 227 - 34)
				{
					goto IL_037e;
				}
				if ((object)base.Reader.LocalName == ႳႣႼ)
				{
					if (778 < 778 - 669)
					{
						goto IL_0122;
					}
					goto IL_0241;
				}
			}
			goto IL_026c;
			IL_00cf:
			if (base.Reader.MoveToNextAttribute())
			{
				goto IL_005d;
			}
			if (false)
			{
				goto IL_0155;
			}
			goto IL_02f0;
			IL_037e:
			if (Ⴍ)
			{
				if (false)
				{
					goto IL_005d;
				}
				flag = ReadNull();
				if (96 <= 96 - 19)
				{
					goto IL_02f0;
				}
			}
			if (!Ⴓ)
			{
				goto IL_00f6;
			}
			if (false)
			{
				goto IL_00cf;
			}
			goto IL_0221;
			IL_0155:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_018d;
			}
			ScenarioMood scenarioMood = default(ScenarioMood);
			if (78 > 78 - 76)
			{
				scenarioMood.ActionMoodID = base.Reader.Value;
				goto IL_0122;
			}
			goto IL_0241;
			IL_026c:
			if (!array[1])
			{
				if (967 <= 967 - 774)
				{
					goto IL_0337;
				}
				if ((object)base.Reader.LocalName == Ⴃ)
				{
					if (238 <= 238 - 189)
					{
						goto IL_000a;
					}
					goto IL_0155;
				}
			}
			goto IL_018d;
			IL_0321:
			scenarioMood.ID = XmlConvert.ToGuid(base.Reader.Value);
			goto IL_0337;
			IL_0122:
			array[1] = true;
			goto IL_00cf;
			IL_00f6:
			if (flag)
			{
				if (109 <= 109 - 94)
				{
					goto IL_0221;
				}
				return null;
			}
			scenarioMood = new ScenarioMood();
			array = new bool[2];
			goto IL_00cf;
			IL_0241:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_026c;
			}
			if (693 <= 693 - 37)
			{
				goto IL_02f0;
			}
			goto IL_0321;
			IL_0221:
			if (xmlQualifiedName == null)
			{
				goto IL_00f6;
			}
			if ((823 + 823 * 823) % 2 == 0)
			{
				if ((object)xmlQualifiedName.Name == this.m_ႣႼ)
				{
					if (false)
					{
						goto IL_0032;
					}
					if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
					{
						goto IL_00f6;
					}
					if (408 < 408 - 377)
					{
						goto IL_0321;
					}
				}
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			goto IL_0241;
			IL_02f0:
			base.Reader.MoveToElement();
			int whileIterations = default(int);
			if (!base.Reader.IsEmptyElement)
			{
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				whileIterations = 0;
				goto IL_020f;
			}
			if (893 >= 893 - 40)
			{
				base.Reader.Skip();
				return scenarioMood;
			}
			goto IL_0321;
			IL_0032:
			base.Reader.MoveToContent();
			goto IL_003e;
			IL_00a2:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (838 > 838 - 188)
				{
					goto IL_000a;
				}
				goto IL_0155;
			}
			goto IL_0185;
			IL_018b:
			return scenarioMood;
			IL_000a:
			if (base.Reader.NodeType == XmlNodeType.None)
			{
				if (371 >= 371 - 126)
				{
					goto IL_0185;
				}
				goto IL_018d;
			}
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (false)
				{
					goto IL_0155;
				}
				UnknownNode(scenarioMood, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
			}
			else
			{
				UnknownNode(scenarioMood, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
				if (271 <= 271 - 199)
				{
					goto IL_018b;
				}
			}
			goto IL_0032;
			IL_003e:
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (370 > 370 - 96)
			{
				goto IL_00a2;
			}
			goto IL_020f;
			IL_018d:
			if (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (726 <= 726 - 194)
				{
					goto IL_00a2;
				}
				UnknownNode(scenarioMood, ႥႷႭ.Ⴓ.ႰႷ(1821394809));
				if (false)
				{
					goto IL_003e;
				}
			}
			goto IL_00cf;
			IL_0337:
			array[0] = true;
			goto IL_00cf;
		}

		private ScenarioTextRelation ႳႭႳ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_0029, IL_0063, IL_0067, IL_007d
			string a;
			if ((a = Ⴍ) != null)
			{
				if ((363 + 363 * 363) % 2 == 0)
				{
					while (!(a == ႥႷႭ.Ⴍ.ႰႷ(1821394727)))
					{
						if (716 <= 716 - 525)
						{
						}
						if (a == ႥႷႭ.Ⴓ.ႰႷ(1821394810))
						{
							return ScenarioTextRelation.Exclude;
						}
						if (973 < 973 - 872)
						{
							continue;
						}
						goto IL_002d;
					}
				}
				return ScenarioTextRelation.Include;
			}
			goto IL_002d;
			IL_002d:
			throw CreateUnknownConstantException(Ⴍ, typeof(ScenarioTextRelation));
		}

		private ScenarioIconText ႣႥ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0015, IL_0068, IL_0087, IL_00b8, IL_00e3, IL_0111, IL_0135, IL_0160, IL_016b, IL_0194, IL_01b7, IL_01e0, IL_020b, IL_0226, IL_0257, IL_0277, IL_02a3, IL_02d4, IL_02fa, IL_030c, IL_0336, IL_0366, IL_0386, IL_039c, IL_03bf, IL_03e4, IL_040c, IL_0435, IL_0459, IL_0485, IL_04b0, IL_04cc, IL_04ee, IL_050a, IL_0538, IL_0562, IL_0583, IL_05b5, IL_05c2, IL_05e6, IL_0617, IL_0636, IL_0661, IL_0691, IL_06c2, IL_06e8, IL_0711, IL_0741, IL_0765, IL_0780, IL_07ad, IL_07c9, IL_07fa, IL_0827, IL_0850, IL_086c, IL_089d, IL_08c1, IL_08f1, IL_091d, IL_0948, IL_096a, IL_09a7, IL_09d8, IL_0a09, IL_0a22, IL_0a55, IL_0a6a, IL_0a89, IL_0ab9, IL_0adf, IL_0b0a, IL_0b2c, IL_0b57, IL_0b78
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ScenarioIconText scenarioIconText = default(ScenarioIconText);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			bool flag = default(bool);
			int readerCount = default(int);
			int readerCount2 = default(int);
			List<ScenarioAction> actions = default(List<ScenarioAction>);
			int whileIterations2 = default(int);
			while (true)
			{
				object obj;
				if (!Ⴓ)
				{
					if (998 < 998 - 939)
					{
						goto IL_0a6f;
					}
					obj = null;
				}
				else
				{
					obj = GetXsiType();
				}
				xmlQualifiedName = (XmlQualifiedName)obj;
				goto IL_05c8;
				IL_0a2f:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_036b;
				}
				if (411 >= 411 - 79)
				{
					scenarioIconText.Data = base.Reader.Value;
					array[1] = true;
				}
				goto IL_053d;
				IL_0178:
				base.Reader.MoveToContent();
				whileIterations = 0;
				goto IL_0187;
				IL_016d:
				base.Reader.ReadStartElement();
				goto IL_0178;
				IL_0a6f:
				scenarioIconText.MatchWord = base.Reader.Value;
				goto IL_0a80;
				IL_05c8:
				flag = false;
				if (Ⴍ)
				{
					if (968 < 968 - 610)
					{
						goto IL_0666;
					}
					flag = ReadNull();
					if (17 <= 17 - 11)
					{
						goto IL_04f3;
					}
				}
				goto IL_025c;
				IL_061c:
				if (!array[5])
				{
					if (false)
					{
						goto IL_05c8;
					}
					if ((object)base.Reader.LocalName == ႳႭႤ)
					{
						if (128 < 128 - 101)
						{
							goto IL_025c;
						}
						goto IL_09dd;
					}
				}
				goto IL_0b0f;
				IL_0187:
				readerCount = base.ReaderCount;
				goto IL_045e;
				IL_025c:
				if (Ⴓ)
				{
					if (false)
					{
						goto IL_053d;
					}
					if (!(xmlQualifiedName == null))
					{
						if ((337 + 337 * 337) % 2 == 0)
						{
							goto IL_01b9;
						}
						goto IL_033b;
					}
				}
				goto IL_06f5;
				IL_045e:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (false || base.Reader.NodeType != 0)
					{
						if (base.Reader.NodeType == XmlNodeType.Element)
						{
							if (689 < 689 - 252)
							{
								goto IL_0910;
							}
							if ((object)base.Reader.LocalName == ႥႠ)
							{
								if (637 <= 637 - 321)
								{
									goto IL_0199;
								}
								if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
								{
									if ((171 + 171 * 171) % 2 == 0)
									{
										goto IL_04b5;
									}
									goto IL_0a80;
								}
							}
							UnknownNode(scenarioIconText, ႥႷႭ.Ⴓ.ႰႷ(1821394756));
						}
						else
						{
							UnknownNode(scenarioIconText, ႥႷႭ.Ⴓ.ႰႷ(1821394756));
							if (401 < 401 - 71)
							{
								goto IL_0388;
							}
						}
						goto IL_033b;
					}
					if (false)
					{
						goto IL_053d;
					}
				}
				ReadEndElement();
				return scenarioIconText;
				IL_02ff:
				base.Reader.Skip();
				goto IL_033b;
				IL_09dd:
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (267 >= 267 - 263)
					{
						scenarioIconText.TopPhraseID = XmlConvert.ToInt32(base.Reader.Value);
						array[5] = true;
						goto IL_053d;
					}
					goto IL_0590;
				}
				goto IL_0b0f;
				IL_06f5:
				if (flag)
				{
					if (616 >= 616 - 300)
					{
						return null;
					}
					goto IL_02ff;
				}
				scenarioIconText = new ScenarioIconText();
				if (scenarioIconText.Actions == null)
				{
					if (false)
					{
						goto IL_0696;
					}
					scenarioIconText.Actions = new List<ScenarioAction>();
					if (498 < 498 - 224)
					{
						goto IL_0a80;
					}
				}
				goto IL_0a0e;
				IL_0411:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (false)
					{
						goto IL_045e;
					}
					if (base.Reader.NodeType != 0)
					{
						goto IL_063b;
					}
					if (355 <= 355 - 226)
					{
						goto IL_06f5;
					}
				}
				ReadEndElement();
				goto IL_033b;
				IL_0b0f:
				if (!array[6])
				{
					if (false)
					{
						goto IL_0588;
					}
					if ((object)base.Reader.LocalName == ႳႠႥ)
					{
						if (false)
						{
							goto IL_0411;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (849 < 849 - 377)
							{
								goto IL_01b9;
							}
							scenarioIconText.RequireAdditionalPhrase = XmlConvert.ToBoolean(base.Reader.Value);
							array[6] = true;
							goto IL_053d;
						}
					}
				}
				goto IL_04f3;
				IL_05eb:
				base.Reader.MoveToContent();
				goto IL_05f7;
				IL_0910:
				readerCount2 = base.ReaderCount;
				goto IL_0411;
				IL_0388:
				actions.Add(ႣႣ(Ⴍ: true, Ⴓ: true));
				goto IL_05eb;
				IL_0a0e:
				_ = scenarioIconText.Actions;
				array = new bool[9];
				goto IL_053d;
				IL_053d:
				if (!base.Reader.MoveToNextAttribute())
				{
					if ((349 + 349 * 349) % 2 == 0)
					{
						base.Reader.MoveToElement();
						if (!base.Reader.IsEmptyElement)
						{
							goto IL_016d;
						}
						if (694 >= 694 - 418)
						{
							base.Reader.Skip();
							return scenarioIconText;
						}
						goto IL_09dd;
					}
					goto IL_04b5;
				}
				if (!array[0])
				{
					if (10 < 10 - 7)
					{
						goto IL_06f5;
					}
					if ((object)base.Reader.LocalName == ႳႣႼ)
					{
						if (false)
						{
							goto IL_0a2f;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (123 < 123 - 44)
							{
								goto IL_057d;
							}
							goto IL_0746;
						}
					}
				}
				if (array[1])
				{
					goto IL_036b;
				}
				if (false)
				{
					goto IL_05eb;
				}
				goto IL_0a8e;
				IL_05f7:
				CheckReaderCount(ref whileIterations2, ref readerCount2);
				if (400 < 400 - 386)
				{
				}
				goto IL_0411;
				IL_057d:
				array[4] = true;
				goto IL_053d;
				IL_0a5a:
				base.Reader.Skip();
				goto IL_05eb;
				IL_01b9:
				if ((object)xmlQualifiedName.Name != ႳႨႼ)
				{
					break;
				}
				if (464 > 464 - 294)
				{
					goto IL_00bd;
				}
				goto IL_0a5a;
				IL_022b:
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (519 <= 519 - 334)
					{
						goto IL_0347;
					}
					scenarioIconText.HasStar = XmlConvert.ToBoolean(base.Reader.Value);
					goto IL_057d;
				}
				goto IL_061c;
				IL_04f3:
				if (!array[7])
				{
					if (40 < 40 - 1)
					{
						goto IL_022b;
					}
					if ((object)base.Reader.LocalName == this.m_ႣႤ)
					{
						if ((53 + 53 * 53) % 2 == 0)
						{
							goto IL_008c;
						}
						goto IL_03c4;
					}
				}
				goto IL_03a1;
				IL_063b:
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (false)
					{
						goto IL_0a0e;
					}
					if ((object)base.Reader.LocalName == this.m_ႳႥ)
					{
						if (140 <= 140 - 56)
						{
							goto IL_0910;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (485 < 485 - 129)
							{
								goto IL_00bd;
							}
							if (actions != null)
							{
								goto IL_0388;
							}
							if (false)
							{
								goto IL_016d;
							}
							goto IL_0a5a;
						}
					}
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394767));
				}
				else
				{
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394767));
					if (false)
					{
						goto IL_00bd;
					}
				}
				goto IL_05eb;
				IL_03c4:
				if (scenarioIconText.Actions == null)
				{
					if (false)
					{
						goto IL_0187;
					}
					scenarioIconText.Actions = new List<ScenarioAction>();
					if (570 <= 570 - 528)
					{
						goto IL_05eb;
					}
				}
				goto IL_0588;
				IL_0a80:
				array[7] = true;
				goto IL_053d;
				IL_03a1:
				if (!array[8])
				{
					if (429 <= 429 - 276)
					{
						goto IL_063b;
					}
					if ((object)base.Reader.LocalName == ႼႠ)
					{
						if (671 >= 671 - 79)
						{
							goto IL_0666;
						}
						goto IL_0746;
					}
				}
				goto IL_048a;
				IL_04b5:
				if (ReadNull())
				{
					goto IL_033b;
				}
				if (11 >= 11 - 2)
				{
					goto IL_03c4;
				}
				goto IL_053d;
				IL_00bd:
				if ((object)xmlQualifiedName.Namespace != this.m_ႰႷ)
				{
					if ((639 + 639 * 639) % 2 == 0)
					{
						break;
					}
					continue;
				}
				goto IL_06f5;
				IL_036b:
				if (!array[2])
				{
					if (250 < 250 - 14)
					{
						goto IL_053d;
					}
					if ((object)base.Reader.LocalName == ႼႥ)
					{
						if (308 < 308 - 212)
						{
							goto IL_008c;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (937 >= 937 - 390)
							{
								scenarioIconText.Relation = ႳႭႳ(base.Reader.Value);
								array[2] = true;
								goto IL_053d;
							}
							goto IL_05eb;
						}
					}
				}
				goto IL_0199;
				IL_0588:
				actions = scenarioIconText.Actions;
				goto IL_0590;
				IL_0590:
				if (base.Reader.IsEmptyElement)
				{
					if (false)
					{
						goto IL_008c;
					}
					goto IL_02ff;
				}
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				whileIterations2 = 0;
				goto IL_0910;
				IL_0666:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_048a;
				}
				if ((340 + 340 * 340) % 2 == 0)
				{
					scenarioIconText.Deleted = XmlConvert.ToBoolean(base.Reader.Value);
					array[8] = true;
					goto IL_053d;
				}
				goto IL_0178;
				IL_0347:
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (false)
				{
					goto IL_022b;
				}
				goto IL_045e;
				IL_008c:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_03a1;
				}
				if (773 <= 773 - 663)
				{
					goto IL_05f7;
				}
				goto IL_0a6f;
				IL_0746:
				scenarioIconText.ID = XmlConvert.ToInt32(base.Reader.Value);
				array[0] = true;
				goto IL_053d;
				IL_0199:
				if (array[4])
				{
					goto IL_061c;
				}
				if (890 < 890 - 286)
				{
					goto IL_02ff;
				}
				goto IL_0696;
				IL_048a:
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					if (174 >= 174 - 97)
					{
						UnknownNode(scenarioIconText, ႥႷႭ.Ⴍ.ႰႷ(1821394760));
						if (false)
						{
							goto IL_016d;
						}
					}
				}
				goto IL_053d;
				IL_0696:
				if ((object)base.Reader.LocalName != ႳႳႭ)
				{
					goto IL_061c;
				}
				if (523 > 523 - 490)
				{
					goto IL_022b;
				}
				goto IL_0a8e;
				IL_033b:
				base.Reader.MoveToContent();
				goto IL_0347;
				IL_0a8e:
				if ((object)base.Reader.LocalName != ႳႨႣ)
				{
					goto IL_036b;
				}
				if (false)
				{
					goto IL_0187;
				}
				goto IL_0a2f;
			}
			throw CreateUnknownTypeException(xmlQualifiedName);
		}

		private ScenarioText ႣႰ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0015, IL_004c, IL_006d, IL_008c, IL_00b7, IL_00e0, IL_0110, IL_0134, IL_0162, IL_016d, IL_0199, IL_01bb, IL_01e6, IL_0217, IL_0232, IL_0262, IL_0282, IL_02ae, IL_02d9, IL_02ff, IL_0311, IL_033c, IL_036a, IL_038d, IL_03a6, IL_03c9, IL_03ee, IL_0416, IL_0440, IL_0464, IL_048e, IL_04b9, IL_04de, IL_04fd, IL_0520, IL_054e, IL_0576, IL_0597, IL_05c4, IL_05d1, IL_05f4, IL_0625, IL_0648, IL_0673, IL_06a4, IL_06d4, IL_06f7, IL_071c, IL_074d, IL_0771, IL_078c, IL_07b9, IL_07dc, IL_080d, IL_083b, IL_085e, IL_0880, IL_08ae, IL_08d2, IL_08fd, IL_0929, IL_0952, IL_0972, IL_09af, IL_09e0, IL_0a0d, IL_0a26, IL_0a56, IL_0a6b, IL_0a8a, IL_0abb, IL_0ae1, IL_0b05, IL_0b28, IL_0b58, IL_0b79
			if (Ⴓ)
			{
				goto IL_05c9;
			}
			if (317 < 317 - 194)
			{
				goto IL_02b3;
			}
			object obj = null;
			goto IL_05d6;
			IL_0316:
			if (base.Reader.NodeType != 0)
			{
				goto IL_0287;
			}
			if (478 <= 478 - 359)
			{
				goto IL_05a4;
			}
			goto IL_06f9;
			IL_05f9:
			base.Reader.MoveToContent();
			goto IL_0605;
			IL_05c9:
			obj = GetXsiType();
			goto IL_05d6;
			IL_05d6:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			goto IL_05d7;
			IL_05d7:
			bool flag = false;
			if (!Ⴍ)
			{
				goto IL_0267;
			}
			if (false)
			{
				goto IL_03ab;
			}
			goto IL_0863;
			IL_0287:
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (703 <= 703 - 208)
				{
					goto IL_03ab;
				}
				goto IL_0885;
			}
			ScenarioText scenarioText = default(ScenarioText);
			UnknownNode(scenarioText, ႥႷႭ.Ⴍ.ႰႷ(1821394753));
			if (43 > 43 - 26)
			{
				goto IL_0341;
			}
			goto IL_0814;
			IL_0267:
			if (Ⴓ)
			{
				if (false)
				{
					goto IL_0a12;
				}
				if (!(xmlQualifiedName == null))
				{
					if ((758 + 758 * 758) % 2 == 0)
					{
						goto IL_01c0;
					}
					goto IL_0605;
				}
			}
			goto IL_0701;
			IL_0490:
			if (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (222 > 222 - 116)
				{
					goto IL_0814;
				}
			}
			goto IL_0553;
			IL_0885:
			if ((object)base.Reader.LocalName == ႥႠ)
			{
				if (344 < 344 - 103)
				{
					goto IL_0a70;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if ((150 + 150 * 150) % 2 == 0)
					{
						goto IL_04be;
					}
					goto IL_05f9;
				}
			}
			UnknownNode(scenarioText, ႥႷႭ.Ⴍ.ႰႷ(1821394753));
			goto IL_0341;
			IL_0591:
			bool[] array = default(bool[]);
			array[4] = true;
			goto IL_0553;
			IL_0701:
			if (flag)
			{
				if (false)
				{
					goto IL_0553;
				}
				return null;
			}
			goto IL_092e;
			IL_0b0a:
			if (!array[6])
			{
				if (775 <= 775 - 308)
				{
					goto IL_0902;
				}
				if ((object)base.Reader.LocalName == ႳႠႥ)
				{
					if (53 <= 53 - 28)
					{
						goto IL_0791;
					}
					goto IL_09b4;
				}
			}
			goto IL_0502;
			IL_02b3:
			List<ScenarioAction> actions = default(List<ScenarioAction>);
			if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
			{
				if (94 > 94 - 60)
				{
					if (actions == null)
					{
						if (false)
						{
							goto IL_062a;
						}
						base.Reader.Skip();
					}
					else
					{
						actions.Add(ႣႣ(Ⴍ: true, Ⴓ: true));
					}
					goto IL_05f9;
				}
				goto IL_0139;
			}
			goto IL_0776;
			IL_092e:
			scenarioText = new ScenarioText();
			if (scenarioText.Actions == null)
			{
				if (924 < 924 - 119)
				{
					goto IL_0768;
				}
				scenarioText.Actions = new List<ScenarioAction>();
				if (868 < 868 - 611)
				{
					goto IL_019e;
				}
			}
			goto IL_0a12;
			IL_0139:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_0957;
			}
			if (139 <= 139 - 19)
			{
				goto IL_0a19;
			}
			scenarioText.ID = XmlConvert.ToInt32(base.Reader.Value);
			goto IL_0768;
			IL_0083:
			array[1] = true;
			goto IL_0553;
			IL_0a12:
			_ = scenarioText.Actions;
			goto IL_0a19;
			IL_0a19:
			array = new bool[9];
			goto IL_0553;
			IL_0553:
			if (!base.Reader.MoveToNextAttribute())
			{
				if (351 > 351 - 100)
				{
					base.Reader.MoveToElement();
					if (base.Reader.IsEmptyElement)
					{
						if (788 > 788 - 475)
						{
							goto IL_0977;
						}
						goto IL_0a70;
					}
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					goto IL_0189;
				}
				goto IL_01c0;
			}
			if (!array[0])
			{
				if (842 <= 842 - 709)
				{
					goto IL_0341;
				}
				if ((object)base.Reader.LocalName == ႳႣႼ)
				{
					if (408 >= 408 - 246)
					{
						goto IL_0139;
					}
					goto IL_0316;
				}
			}
			goto IL_0957;
			IL_09b4:
			if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
			{
				if (297 > 297 - 277)
				{
					goto IL_0115;
				}
				goto IL_03ce;
			}
			goto IL_0502;
			IL_01c0:
			if ((object)xmlQualifiedName.Name == ႠႰ)
			{
				if (false)
				{
					goto IL_057b;
				}
				if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
				{
					goto IL_0701;
				}
				if (638 < 638 - 137)
				{
					goto IL_0115;
				}
			}
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_059c:
			actions = scenarioText.Actions;
			goto IL_05a4;
			IL_05a4:
			if (base.Reader.IsEmptyElement)
			{
				if (31 > 31 - 26)
				{
					base.Reader.Skip();
					goto IL_0341;
				}
				goto IL_0863;
			}
			goto IL_0902;
			IL_0a70:
			scenarioText.MatchWord = base.Reader.Value;
			array[7] = true;
			goto IL_0553;
			IL_0768:
			array[0] = true;
			goto IL_0553;
			IL_0115:
			scenarioText.RequireAdditionalPhrase = XmlConvert.ToBoolean(base.Reader.Value);
			array[6] = true;
			goto IL_0553;
			IL_0502:
			if (array[7])
			{
				goto IL_03ab;
			}
			if (623 < 623 - 484)
			{
				goto IL_0490;
			}
			goto IL_0791;
			IL_0814:
			UnknownNode(scenarioText, ႥႷႭ.Ⴓ.ႰႷ(1821394811));
			if (574 <= 574 - 278)
			{
				goto IL_0083;
			}
			goto IL_0553;
			IL_04be:
			if (ReadNull())
			{
				goto IL_0341;
			}
			if ((350 + 350 * 350) % 2 == 0)
			{
				goto IL_03ce;
			}
			goto IL_0469;
			IL_0791:
			if ((object)base.Reader.LocalName != this.m_ႣႤ)
			{
				goto IL_03ab;
			}
			if ((608 + 608 * 608) % 2 == 0)
			{
				goto IL_0091;
			}
			goto IL_07e1;
			IL_03ce:
			if (scenarioText.Actions != null)
			{
				goto IL_059c;
			}
			if (false)
			{
				goto IL_0553;
			}
			goto IL_06d9;
			IL_07e1:
			if ((object)base.Reader.LocalName == ႼႥ)
			{
				if (308 < 308 - 145)
				{
					goto IL_02b3;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (957 >= 957 - 250)
					{
						scenarioText.Relation = ႳႭႳ(base.Reader.Value);
						array[2] = true;
						goto IL_0553;
					}
					goto IL_0977;
				}
			}
			goto IL_019e;
			IL_0957:
			if (!array[1])
			{
				if (454 <= 454 - 239)
				{
					goto IL_041b;
				}
				if ((object)base.Reader.LocalName == ႳႨႣ)
				{
					if (849 < 849 - 481)
					{
						goto IL_05c9;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (98 > 98 - 32)
						{
							goto IL_0072;
						}
						goto IL_0553;
					}
				}
			}
			if (array[2])
			{
				goto IL_019e;
			}
			if (376 <= 376 - 372)
			{
				goto IL_0189;
			}
			goto IL_07e1;
			IL_03ab:
			if (!array[8])
			{
				if (736 < 736 - 192)
				{
					goto IL_0814;
				}
				if ((object)base.Reader.LocalName == ႼႠ)
				{
					if ((905 + 905 * 905) % 2 == 0)
					{
						if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
						{
							goto IL_0490;
						}
						if (461 <= 461 - 137)
						{
							goto IL_0341;
						}
						scenarioText.Deleted = XmlConvert.ToBoolean(base.Reader.Value);
						array[8] = true;
					}
					goto IL_0553;
				}
			}
			goto IL_0490;
			IL_0863:
			flag = ReadNull();
			if (206 > 206 - 165)
			{
				goto IL_0267;
			}
			goto IL_04be;
			IL_06f9:
			ReadEndElement();
			return scenarioText;
			IL_0902:
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			goto IL_041b;
			IL_041b:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (128 <= 128 - 118)
				{
					goto IL_0287;
				}
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType != XmlNodeType.Element)
					{
						UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394815));
						if ((86 + 86 * 86) % 2 == 0)
						{
							goto IL_05f9;
						}
						goto IL_06d9;
					}
					if ((688 + 688 * 688) % 2 == 0)
					{
						if ((object)base.Reader.LocalName != this.m_ႳႥ)
						{
							goto IL_0776;
						}
						if ((774 + 774 * 774) % 2 == 0)
						{
							goto IL_02b3;
						}
						goto IL_0902;
					}
					goto IL_0957;
				}
				if (false)
				{
					goto IL_0b0a;
				}
			}
			ReadEndElement();
			goto IL_0341;
			IL_0977:
			base.Reader.Skip();
			return scenarioText;
			IL_0776:
			UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394815));
			goto IL_05f9;
			IL_0189:
			int whileIterations2 = 0;
			int readerCount2 = base.ReaderCount;
			goto IL_0469;
			IL_019e:
			if (!array[4])
			{
				if (false)
				{
					goto IL_092e;
				}
				if ((object)base.Reader.LocalName == ႳႳႭ)
				{
					if (false)
					{
						goto IL_05d7;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (false)
						{
							goto IL_0341;
						}
						goto IL_057b;
					}
				}
			}
			goto IL_062a;
			IL_0341:
			base.Reader.MoveToContent();
			CheckReaderCount(ref whileIterations2, ref readerCount2);
			if (469 > 469 - 80)
			{
				goto IL_0469;
			}
			goto IL_062a;
			IL_0469:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (190 <= 190 - 72)
				{
					goto IL_0091;
				}
				goto IL_0316;
			}
			goto IL_06f9;
			IL_0605:
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (357 < 357 - 150)
			{
				goto IL_03ce;
			}
			goto IL_041b;
			IL_0091:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_03ab;
			}
			if (415 <= 415 - 69)
			{
				goto IL_0072;
			}
			goto IL_0a70;
			IL_06d9:
			scenarioText.Actions = new List<ScenarioAction>();
			if (196 > 196 - 110)
			{
				goto IL_059c;
			}
			goto IL_0885;
			IL_057b:
			scenarioText.HasStar = XmlConvert.ToBoolean(base.Reader.Value);
			goto IL_0591;
			IL_062a:
			if (!array[5])
			{
				if (663 < 663 - 484)
				{
					goto IL_0591;
				}
				if ((object)base.Reader.LocalName == ႳႭႤ)
				{
					if (426 <= 426 - 161)
					{
						goto IL_09b4;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if ((653 + 653 * 653) % 2 == 0)
						{
							scenarioText.TopPhraseID = XmlConvert.ToInt32(base.Reader.Value);
							array[5] = true;
							goto IL_0553;
						}
						goto IL_0139;
					}
				}
			}
			goto IL_0b0a;
			IL_0072:
			scenarioText.Data = base.Reader.Value;
			goto IL_0083;
		}

		private ScenarioTextBase ႣႠ(bool Ⴍ, bool Ⴓ)
		{
			int num = 78;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ScenarioTextBase scenarioTextBase = default(ScenarioTextBase);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			List<ScenarioAction> actions = default(List<ScenarioAction>);
			int whileIterations2 = default(int);
			int readerCount2 = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴓ ? 59 : 36);
					break;
				case 36:
					obj = null;
					goto IL_0178;
				case 59:
					obj = GetXsiType();
					goto IL_0178;
				case 49:
					flag = ReadNull();
					num = 23;
					break;
				case 23:
					num = ((!Ⴓ) ? 3 : 56);
					break;
				case 56:
					num = ((xmlQualifiedName == null) ? 3 : 14);
					break;
				case 14:
					num = (((object)xmlQualifiedName.Name != ႳႣႥ) ? 55 : 28);
					break;
				case 28:
					num = (((object)xmlQualifiedName.Namespace == this.m_ႰႷ) ? 3 : 55);
					break;
				case 55:
					num = (((object)xmlQualifiedName.Name != ႠႰ) ? 54 : 2);
					break;
				case 2:
					num = (((object)xmlQualifiedName.Namespace != this.m_ႰႷ) ? 54 : 34);
					break;
				case 34:
					return ႣႰ(Ⴍ, Ⴓ: false);
				case 54:
					num = (((object)xmlQualifiedName.Name != ႳႨႼ) ? 10 : 51);
					break;
				case 51:
					num = (((object)xmlQualifiedName.Namespace != this.m_ႰႷ) ? 10 : 60);
					break;
				case 60:
					return ႣႥ(Ⴍ, Ⴓ: false);
				case 10:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 3:
					num = ((!flag) ? 21 : 46);
					break;
				case 46:
					return null;
				case 21:
					scenarioTextBase = new ScenarioTextBase();
					num = ((scenarioTextBase.Actions != null) ? 6 : 33);
					break;
				case 33:
					scenarioTextBase.Actions = new List<ScenarioAction>();
					goto case 6;
				case 6:
					_ = scenarioTextBase.Actions;
					array = new bool[9];
					num = 8;
					break;
				case 81:
					num = (array[0] ? 18 : 27);
					break;
				case 27:
					num = (((object)base.Reader.LocalName != ႳႣႼ) ? 18 : 57);
					break;
				case 57:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 18 : 4);
					break;
				case 4:
					scenarioTextBase.ID = XmlConvert.ToInt32(base.Reader.Value);
					array[0] = true;
					num = 8;
					break;
				case 18:
					num = (array[1] ? 37 : 11);
					break;
				case 11:
					num = (((object)base.Reader.LocalName != ႳႨႣ) ? 37 : 16);
					break;
				case 16:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 37 : 67);
					break;
				case 67:
					scenarioTextBase.Data = base.Reader.Value;
					array[1] = true;
					num = 8;
					break;
				case 37:
					num = (array[2] ? 43 : 68);
					break;
				case 68:
					num = (((object)base.Reader.LocalName != ႼႥ) ? 43 : 52);
					break;
				case 52:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 43 : 84);
					break;
				case 84:
					scenarioTextBase.Relation = ႳႭႳ(base.Reader.Value);
					array[2] = true;
					num = 8;
					break;
				case 43:
					num = (array[4] ? 83 : 73);
					break;
				case 73:
					num = (((object)base.Reader.LocalName != ႳႳႭ) ? 83 : 47);
					break;
				case 47:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 83 : 71);
					break;
				case 71:
					scenarioTextBase.HasStar = XmlConvert.ToBoolean(base.Reader.Value);
					array[4] = true;
					num = 8;
					break;
				case 83:
					num = (array[5] ? 66 : 35);
					break;
				case 35:
					num = (((object)base.Reader.LocalName != ႳႭႤ) ? 66 : 39);
					break;
				case 39:
					num = (((object)base.Reader.NamespaceURI == this.m_ႰႷ) ? 1 : 66);
					break;
				case 1:
					scenarioTextBase.TopPhraseID = XmlConvert.ToInt32(base.Reader.Value);
					array[5] = true;
					num = 8;
					break;
				case 66:
					num = (array[6] ? 40 : 79);
					break;
				case 79:
					num = (((object)base.Reader.LocalName != ႳႠႥ) ? 40 : 42);
					break;
				case 42:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 40 : 63);
					break;
				case 63:
					scenarioTextBase.RequireAdditionalPhrase = XmlConvert.ToBoolean(base.Reader.Value);
					array[6] = true;
					num = 8;
					break;
				case 40:
					num = (array[7] ? 76 : 17);
					break;
				case 17:
					num = (((object)base.Reader.LocalName != this.m_ႣႤ) ? 76 : 58);
					break;
				case 58:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 76 : 15);
					break;
				case 15:
					scenarioTextBase.MatchWord = base.Reader.Value;
					array[7] = true;
					num = 8;
					break;
				case 76:
					num = (array[8] ? 75 : 70);
					break;
				case 70:
					num = (((object)base.Reader.LocalName != ႼႠ) ? 75 : 80);
					break;
				case 80:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 75 : 77);
					break;
				case 77:
					scenarioTextBase.Deleted = XmlConvert.ToBoolean(base.Reader.Value);
					array[8] = true;
					num = 8;
					break;
				case 75:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 8 : 61);
					break;
				case 61:
					UnknownNode(scenarioTextBase, ႥႷႭ.Ⴍ.ႰႷ(1821394760));
					goto case 8;
				case 8:
					num = (base.Reader.MoveToNextAttribute() ? 81 : 72);
					break;
				case 72:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 38 : 29);
					break;
				case 29:
					base.Reader.Skip();
					return scenarioTextBase;
				case 38:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 12;
					break;
				case 19:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 25 : 53);
					break;
				case 53:
					num = (((object)base.Reader.LocalName != ႥႠ) ? 5 : 22);
					break;
				case 22:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 5 : 41);
					break;
				case 41:
					num = ((!ReadNull()) ? 26 : 0);
					break;
				case 26:
					num = ((scenarioTextBase.Actions != null) ? 31 : 9);
					break;
				case 9:
					scenarioTextBase.Actions = new List<ScenarioAction>();
					goto case 31;
				case 31:
					actions = scenarioTextBase.Actions;
					num = ((!base.Reader.IsEmptyElement) ? 74 : 13);
					break;
				case 13:
					base.Reader.Skip();
					num = 0;
					break;
				case 74:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations2 = 0;
					readerCount2 = base.ReaderCount;
					num = 32;
					break;
				case 65:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 7 : 30);
					break;
				case 30:
					num = (((object)base.Reader.LocalName != this.m_ႳႥ) ? 20 : 24);
					break;
				case 24:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 20 : 50);
					break;
				case 50:
					num = ((actions != null) ? 45 : 64);
					break;
				case 64:
					base.Reader.Skip();
					num = 82;
					break;
				case 45:
					actions.Add(ႣႣ(Ⴍ: true, Ⴓ: true));
					num = 82;
					break;
				case 20:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394767));
					num = 82;
					break;
				case 7:
					UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394767));
					goto case 82;
				case 82:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations2, ref readerCount2);
					goto case 32;
				case 32:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 69 : 44);
					break;
				case 44:
					num = ((base.Reader.NodeType != 0) ? 65 : 69);
					break;
				case 69:
					ReadEndElement();
					num = 0;
					break;
				case 5:
					UnknownNode(scenarioTextBase, ႥႷႭ.Ⴓ.ႰႷ(1821394756));
					num = 0;
					break;
				case 25:
					UnknownNode(scenarioTextBase, ႥႷႭ.Ⴓ.ႰႷ(1821394756));
					goto case 0;
				case 0:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 12;
				case 12:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 48 : 62);
					break;
				case 62:
					num = ((base.Reader.NodeType != 0) ? 19 : 48);
					break;
				case 48:
					{
						ReadEndElement();
						return scenarioTextBase;
					}
					IL_0178:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 23 : 49);
					break;
				}
			}
		}

		private Scenario ႣႤ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_002b, IL_0049, IL_0075, IL_008e, IL_00bb, IL_00eb, IL_0116, IL_0144, IL_0164, IL_0186, IL_01a9, IL_01d6, IL_0207, IL_0233, IL_0264, IL_028f, IL_02bf, IL_02d4, IL_0300, IL_032d, IL_034d, IL_0370, IL_0391, IL_03aa, IL_03c3, IL_03d8, IL_0405, IL_0425, IL_044e, IL_047a, IL_04ab, IL_04db, IL_050c, IL_0527, IL_053c, IL_056a, IL_0596, IL_05c7, IL_05f8, IL_0628, IL_0638, IL_065b, IL_067c, IL_06ad, IL_06d2, IL_06f1, IL_071d, IL_0741, IL_0763, IL_0770, IL_0794, IL_07b7, IL_07e3, IL_0825, IL_0856, IL_0883, IL_08ad, IL_08dd, IL_090b, IL_093c, IL_0969, IL_0988, IL_09b3, IL_09cc, IL_09dc, IL_0a0c, IL_0a37, IL_0a68, IL_0a8e, IL_0ab3, IL_0ac8, IL_0af9, IL_0b1e, IL_0b37, IL_0b47, IL_0b78, IL_0b9b, IL_0bb0, IL_0bcb, IL_0bf8, IL_0c24, IL_0c3d, IL_0c69, IL_0c8e, IL_0cbc, IL_0ce8, IL_0d0c, IL_0d2f, IL_0d5f, IL_0d8f, IL_0dbe, IL_0dc9, IL_0df7, IL_0e1a, IL_0e42, IL_0e6d, IL_0e82, IL_0ea4, IL_0ed2, IL_0efb, IL_0f16, IL_0f38, IL_0f5e, IL_0f8f, IL_0fb0, IL_0fe1, IL_100a, IL_103a, IL_1057, IL_1072, IL_1091, IL_10c1, IL_10eb, IL_111c, IL_113e, IL_115a, IL_118a, IL_11af, IL_11d3, IL_1201, IL_1232, IL_1260, IL_1290, IL_12b6, IL_130a, IL_132e, IL_135f, IL_1374, IL_1397, IL_13b2, IL_13dd, IL_140e
			if (Ⴓ)
			{
				goto IL_0768;
			}
			if (385 <= 385 - 247)
			{
				goto IL_098d;
			}
			object obj = null;
			goto IL_0775;
			IL_118f:
			if (base.Reader.NodeType != 0)
			{
				goto IL_004e;
			}
			if (36 > 36 - 23)
			{
				goto IL_09d1;
			}
			goto IL_0a11;
			IL_0c29:
			List<ScenarioAction> actions = default(List<ScenarioAction>);
			actions.Add(ႣႨ(Ⴍ: true, Ⴓ: true));
			goto IL_0d64;
			IL_0768:
			obj = GetXsiType();
			goto IL_0775;
			IL_0775:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			if (Ⴍ)
			{
				if (577 < 577 - 376)
				{
					goto IL_1265;
				}
				flag = ReadNull();
				if (680 <= 680 - 408)
				{
					goto IL_0a11;
				}
			}
			goto IL_0149;
			IL_0d9f:
			Scenario scenario = default(Scenario);
			return scenario;
			IL_0ccc:
			base.Reader.MoveToContent();
			int whileIterations = 0;
			goto IL_0cdb;
			IL_0149:
			if (Ⴓ)
			{
				if ((633 + 633 * 633) % 2 == 0)
				{
					goto IL_0332;
				}
				goto IL_040a;
			}
			goto IL_105c;
			IL_056f:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (false)
				{
					goto IL_103f;
				}
				if (base.Reader.NodeType != 0)
				{
					goto IL_00f0;
				}
				if (938 <= 938 - 565)
				{
					goto IL_100f;
				}
			}
			ReadEndElement();
			goto IL_12bb;
			IL_105c:
			if (!flag)
			{
				scenario = new Scenario();
				goto IL_0a73;
			}
			if (109 >= 109 - 80)
			{
				goto IL_0030;
			}
			goto IL_0149;
			IL_03c8:
			base.Reader.Skip();
			goto IL_12bb;
			IL_0e47:
			UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394706));
			if ((200 + 200 * 200) % 2 == 0)
			{
				goto IL_11d8;
			}
			goto IL_1265;
			IL_0a73:
			if (scenario.Moods == null)
			{
				if (17 <= 17 - 16)
				{
					goto IL_02e4;
				}
				scenario.Moods = new List<ScenarioMood>();
				if (149 <= 149 - 24)
				{
					goto IL_0cdb;
				}
			}
			_ = scenario.Moods;
			goto IL_01b5;
			IL_1265:
			if ((object)base.Reader.LocalName == this.m_ႷႰ)
			{
				if (false)
				{
					goto IL_04e0;
				}
				goto IL_098d;
			}
			goto IL_0da1;
			IL_130f:
			scenario.IsInternal = XmlConvert.ToBoolean(base.Reader.Value);
			bool[] array = default(bool[]);
			array[5] = true;
			goto IL_0a11;
			IL_100f:
			if ((object)base.Reader.LocalName == ႳႣႼ)
			{
				if (false)
				{
					goto IL_11b4;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (496 <= 496 - 195)
					{
						goto IL_0948;
					}
					goto IL_0ced;
				}
			}
			goto IL_0d11;
			IL_01b5:
			if (scenario.Actions != null)
			{
				goto IL_0941;
			}
			if (894 >= 894 - 540)
			{
				goto IL_0f3d;
			}
			goto IL_1333;
			IL_098d:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_0da1;
			}
			if (60 <= 60 - 39)
			{
				goto IL_0ba0;
			}
			goto IL_11b4;
			IL_0941:
			_ = scenario.Actions;
			goto IL_0948;
			IL_0948:
			if (scenario.Texts == null)
			{
				if (836 > 836 - 626)
				{
					goto IL_063d;
				}
				goto IL_0a11;
			}
			goto IL_0b23;
			IL_004e:
			if (base.Reader.NodeType != XmlNodeType.Element)
			{
				goto IL_0e47;
			}
			if (1007 > 1007 - 855)
			{
				goto IL_05fd;
			}
			goto IL_1143;
			IL_0b23:
			_ = scenario.Texts;
			goto IL_0b2a;
			IL_0b2a:
			array = new bool[12];
			goto IL_0a11;
			IL_0a11:
			if (!base.Reader.MoveToNextAttribute())
			{
				if (243 <= 243 - 227)
				{
					goto IL_0030;
				}
				base.Reader.MoveToElement();
				goto IL_0ad9;
			}
			if (array[1])
			{
				goto IL_0d11;
			}
			if (256 <= 256 - 187)
			{
				goto IL_0ced;
			}
			goto IL_100f;
			IL_00f0:
			if (base.Reader.NodeType == XmlNodeType.Element)
			{
				if (false)
				{
					goto IL_042a;
				}
				goto IL_13e2;
			}
			UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394757));
			if (439 > 439 - 216)
			{
				goto IL_0fb5;
			}
			goto IL_1237;
			IL_0030:
			return null;
			IL_13e2:
			List<ScenarioTextBase> texts = default(List<ScenarioTextBase>);
			if ((object)base.Reader.LocalName == this.m_ႳႷ)
			{
				if (413 < 413 - 250)
				{
					goto IL_0746;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (false)
					{
						goto IL_118f;
					}
					if (texts != null)
					{
						texts.Add(ႣႰ(Ⴍ: true, Ⴓ: true));
					}
					else
					{
						if (679 <= 679 - 363)
						{
							goto IL_12bb;
						}
						base.Reader.Skip();
					}
					goto IL_0fb5;
				}
			}
			if ((object)base.Reader.LocalName == this.m_ႳႭႣ)
			{
				if (491 <= 491 - 213)
				{
					goto IL_10f0;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (false)
					{
						goto IL_00c8;
					}
					goto IL_1143;
				}
			}
			UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394757));
			goto IL_0fb5;
			IL_0ba0:
			base.Reader.Skip();
			goto IL_12bb;
			IL_1143:
			if (texts != null)
			{
				texts.Add(ႣႥ(Ⴍ: true, Ⴓ: true));
				goto IL_0fb5;
			}
			if (108 < 108 - 26)
			{
				goto IL_07d3;
			}
			goto IL_0ab8;
			IL_0d11:
			if (array[2])
			{
				goto IL_0e87;
			}
			if (219 > 219 - 195)
			{
				goto IL_04b0;
			}
			goto IL_11b4;
			IL_0fe6:
			if ((object)xmlQualifiedName.Name == ႳႠႣ)
			{
				if (731 < 731 - 572)
				{
					goto IL_11b4;
				}
				if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
				{
					goto IL_105c;
				}
				if (345 <= 345 - 189)
				{
					goto IL_0f00;
				}
			}
			goto IL_103f;
			IL_0e87:
			if (!array[3])
			{
				if (false)
				{
					goto IL_0d9f;
				}
				if ((object)base.Reader.LocalName == ႳႨႠ)
				{
					if (944 < 944 - 483)
					{
						goto IL_0885;
					}
					goto IL_0ea9;
				}
			}
			goto IL_040a;
			IL_02c4:
			base.Reader.Skip();
			goto IL_0d64;
			IL_0ab8:
			base.Reader.Skip();
			goto IL_0fb5;
			IL_0ced:
			scenario.ID = XmlConvert.ToGuid(base.Reader.Value);
			array[1] = true;
			goto IL_0a11;
			IL_040a:
			if (array[4])
			{
				goto IL_0da1;
			}
			if (394 < 394 - 55)
			{
				goto IL_0f00;
			}
			goto IL_1265;
			IL_0cdb:
			int readerCount = base.ReaderCount;
			goto IL_056f;
			IL_0da1:
			if (!array[5])
			{
				if (false)
				{
					goto IL_0ad9;
				}
				if ((object)base.Reader.LocalName == ႳႥႼ)
				{
					if (601 <= 601 - 478)
					{
						goto IL_0ab8;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (false)
						{
							goto IL_0910;
						}
						goto IL_130f;
					}
				}
			}
			if (!array[6])
			{
				if (789 <= 789 - 250)
				{
					goto IL_004e;
				}
				if ((object)base.Reader.LocalName == this.m_ႨႼ)
				{
					if (689 <= 689 - 599)
					{
						goto IL_02c4;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (1012 < 1012 - 679)
						{
							goto IL_03c8;
						}
						scenario.IsQnA = XmlConvert.ToBoolean(base.Reader.Value);
						array[6] = true;
						goto IL_0a11;
					}
				}
			}
			if (array[7])
			{
				goto IL_0f94;
			}
			if ((1009 + 1009 * 1009) % 2 == 0)
			{
				goto IL_10f0;
			}
			goto IL_13e2;
			IL_07d3:
			int whileIterations2 = 0;
			int readerCount2 = base.ReaderCount;
			goto IL_0305;
			IL_0ad9:
			if (!base.Reader.IsEmptyElement)
			{
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				goto IL_07d3;
			}
			if (94 <= 94 - 46)
			{
				goto IL_088d;
			}
			goto IL_0d94;
			IL_0885:
			ReadEndElement();
			return scenario;
			IL_063d:
			scenario.Texts = new List<ScenarioTextBase>();
			if (321 >= 321 - 83)
			{
				goto IL_0b23;
			}
			goto IL_0d64;
			IL_0305:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (137 < 137 - 129)
				{
					goto IL_0d94;
				}
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType != XmlNodeType.Element)
					{
						goto IL_06f6;
					}
					if ((911 + 911 * 911) % 2 == 0)
					{
						if (array[0])
						{
							goto IL_0541;
						}
						if (609 >= 609 - 465)
						{
							goto IL_0910;
						}
						goto IL_0a11;
					}
					goto IL_0fc1;
				}
				if (746 <= 746 - 704)
				{
					goto IL_082a;
				}
			}
			goto IL_0885;
			IL_0f00:
			UnknownNode(scenario, ႥႷႭ.Ⴍ.ႰႷ(1821394763));
			goto IL_12bb;
			IL_06f6:
			UnknownNode(scenario, ႥႷႭ.Ⴍ.ႰႷ(1821394763));
			if (970 <= 970 - 674)
			{
				goto IL_0fe6;
			}
			goto IL_12bb;
			IL_0541:
			if ((object)base.Reader.LocalName == this.m_ႳႭႥ)
			{
				if (180 <= 180 - 178)
				{
					goto IL_1206;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if ((277 + 277 * 277) % 2 == 0)
					{
						while (!ReadNull())
						{
							if (732 <= 732 - 489)
							{
								continue;
							}
							goto IL_0799;
						}
						goto IL_12bb;
					}
					goto IL_0332;
				}
			}
			goto IL_04e0;
			IL_0910:
			if ((object)base.Reader.LocalName == ႰႳ)
			{
				if (217 <= 217 - 214)
				{
					goto IL_0ab8;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if ((647 + 647 * 647) % 2 == 0)
					{
						scenario.originalScenarioID = base.Reader.ReadElementString();
						array[0] = true;
						goto IL_12bb;
					}
					goto IL_0a73;
				}
			}
			goto IL_0541;
			IL_082a:
			if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
			{
				if (384 < 384 - 163)
				{
					goto IL_01b5;
				}
				goto IL_0746;
			}
			goto IL_1206;
			IL_10f0:
			if ((object)base.Reader.LocalName == ႳႨႭ)
			{
				if (555 < 555 - 468)
				{
					goto IL_085b;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (717 < 717 - 39)
					{
						goto IL_0768;
					}
					scenario.IsUserQnA = XmlConvert.ToBoolean(base.Reader.Value);
					array[7] = true;
					goto IL_0a11;
				}
			}
			goto IL_0f94;
			IL_0332:
			if (!(xmlQualifiedName == null))
			{
				if (false)
				{
					goto IL_02d9;
				}
				goto IL_0fe6;
			}
			goto IL_105c;
			IL_11b4:
			scenario.HighPriority = XmlConvert.ToBoolean(base.Reader.Value);
			array[4] = true;
			goto IL_0a11;
			IL_103f:
			throw CreateUnknownTypeException(xmlQualifiedName);
			IL_0b3c:
			ReadEndElement();
			goto IL_12bb;
			IL_09d1:
			ReadEndElement();
			goto IL_12bb;
			IL_0799:
			if (scenario.Moods == null)
			{
				if (357 < 357 - 281)
				{
					goto IL_0ea9;
				}
				scenario.Moods = new List<ScenarioMood>();
				if (351 < 351 - 82)
				{
					goto IL_000a;
				}
			}
			List<ScenarioMood> moods = scenario.Moods;
			goto IL_00c8;
			IL_0f94:
			if (!array[11])
			{
				if (194 < 194 - 29)
				{
					goto IL_0d70;
				}
				if ((object)base.Reader.LocalName == this.m_ႷႣ)
				{
					if (948 < 948 - 531)
					{
						goto IL_0d9f;
					}
					goto IL_1333;
				}
			}
			goto IL_0238;
			IL_0ea9:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_040a;
			}
			if (740 > 740 - 218)
			{
				goto IL_088d;
			}
			goto IL_0d64;
			IL_0746:
			if (ReadNull())
			{
				goto IL_12bb;
			}
			if (false)
			{
				goto IL_0b2a;
			}
			if (scenario.Actions == null)
			{
				if (697 <= 697 - 459)
				{
					goto IL_063d;
				}
				scenario.Actions = new List<ScenarioAction>();
				if (false)
				{
					goto IL_00f0;
				}
			}
			actions = scenario.Actions;
			int whileIterations3 = default(int);
			int readerCount3 = default(int);
			if (!base.Reader.IsEmptyElement)
			{
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				whileIterations3 = 0;
				readerCount3 = base.ReaderCount;
				goto IL_03dd;
			}
			if (419 >= 419 - 17)
			{
				goto IL_03c8;
			}
			goto IL_130f;
			IL_088d:
			scenario.EventType = ႳႭႨ(base.Reader.Value);
			array[3] = true;
			goto IL_0a11;
			IL_1333:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_0238;
			}
			if (604 < 604 - 506)
			{
				goto IL_0fb5;
			}
			scenario.DontOverrideDanger = XmlConvert.ToBoolean(base.Reader.Value);
			array[11] = true;
			goto IL_0a11;
			IL_0d94:
			base.Reader.Skip();
			goto IL_0d9f;
			IL_04e0:
			if ((object)base.Reader.LocalName == ႥႠ)
			{
				if (336 > 336 - 264)
				{
					goto IL_082a;
				}
				goto IL_1143;
			}
			goto IL_1206;
			IL_0238:
			if (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (841 <= 841 - 476)
				{
					goto IL_0fb5;
				}
				UnknownNode(scenario, ႥႷႭ.Ⴍ.ႰႷ(1821394761));
				if (548 < 548 - 503)
				{
					goto IL_05fd;
				}
			}
			goto IL_0a11;
			IL_00c8:
			if (!base.Reader.IsEmptyElement)
			{
				goto IL_02d9;
			}
			if (259 >= 259 - 33)
			{
				goto IL_0ba0;
			}
			goto IL_0d11;
			IL_1206:
			if ((object)base.Reader.LocalName == this.m_ႣႭ)
			{
				if (733 <= 733 - 414)
				{
					goto IL_02f0;
				}
				goto IL_042a;
			}
			goto IL_0f00;
			IL_05fd:
			if ((object)base.Reader.LocalName == ႳႰႣ)
			{
				if (false)
				{
					goto IL_0f94;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (false)
					{
						goto IL_11b4;
					}
					if (moods != null)
					{
						moods.Add(ႣႷ(Ⴍ: true, Ⴓ: true));
					}
					else
					{
						if (594 <= 594 - 452)
						{
							goto IL_0fe6;
						}
						base.Reader.Skip();
					}
					goto IL_11d8;
				}
			}
			UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394706));
			goto IL_11d8;
			IL_042a:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_0f00;
			}
			if (7 < 7 - 6)
			{
				goto IL_0941;
			}
			if (!ReadNull())
			{
				if ((166 + 166 * 166) % 2 == 0)
				{
					goto IL_000a;
				}
				goto IL_02f3;
			}
			goto IL_12bb;
			IL_02d9:
			base.Reader.ReadStartElement();
			goto IL_02e4;
			IL_02e4:
			base.Reader.MoveToContent();
			goto IL_02f0;
			IL_02f0:
			int whileIterations4 = 0;
			goto IL_02f3;
			IL_000a:
			if (scenario.Texts != null)
			{
				goto IL_0bd0;
			}
			if (921 > 921 - 820)
			{
				goto IL_0c6e;
			}
			goto IL_0d64;
			IL_0c6e:
			scenario.Texts = new List<ScenarioTextBase>();
			if (false)
			{
				goto IL_06f6;
			}
			goto IL_0bd0;
			IL_02f3:
			int readerCount4 = base.ReaderCount;
			goto IL_085b;
			IL_1237:
			if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
			{
				if (349 > 349 - 39)
				{
					scenario.Description = base.Reader.Value;
					array[2] = true;
					goto IL_0a11;
				}
				goto IL_0b3c;
			}
			goto IL_0e87;
			IL_11d8:
			base.Reader.MoveToContent();
			CheckReaderCount(ref whileIterations4, ref readerCount4);
			if (362 < 362 - 64)
			{
				goto IL_12bb;
			}
			goto IL_085b;
			IL_12bb:
			base.Reader.MoveToContent();
			CheckReaderCount(ref whileIterations2, ref readerCount2);
			if (245 >= 245 - 87)
			{
				goto IL_0305;
			}
			goto IL_0f3d;
			IL_0f3d:
			scenario.Actions = new List<ScenarioAction>();
			if (775 < 775 - 300)
			{
				goto IL_0fb5;
			}
			goto IL_0941;
			IL_0fb5:
			base.Reader.MoveToContent();
			goto IL_0fc1;
			IL_0fc1:
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (758 < 758 - 596)
			{
				goto IL_0d64;
			}
			goto IL_056f;
			IL_0d64:
			base.Reader.MoveToContent();
			goto IL_0d70;
			IL_0d70:
			CheckReaderCount(ref whileIterations3, ref readerCount3);
			if ((247 + 247 * 247) % 2 == 0)
			{
				goto IL_03dd;
			}
			goto IL_04b0;
			IL_04b0:
			if ((object)base.Reader.LocalName != ႳႳႼ)
			{
				goto IL_0e87;
			}
			if (false)
			{
				goto IL_0c6e;
			}
			goto IL_1237;
			IL_0bd0:
			texts = scenario.Texts;
			if (base.Reader.IsEmptyElement)
			{
				if (416 < 416 - 54)
				{
					goto IL_0c29;
				}
				base.Reader.Skip();
				goto IL_12bb;
			}
			base.Reader.ReadStartElement();
			goto IL_0ccc;
			IL_03dd:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (311 < 311 - 276)
				{
					goto IL_0fb5;
				}
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType != XmlNodeType.Element)
					{
						UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394762));
						if (false)
						{
							goto IL_0910;
						}
					}
					else
					{
						if (920 < 920 - 873)
						{
							goto IL_0ea9;
						}
						if ((object)base.Reader.LocalName == this.m_ႰႼ)
						{
							if (592 < 592 - 256)
							{
								goto IL_105c;
							}
							if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if (260 > 260 - 121)
								{
									if (actions != null)
									{
										goto IL_0c29;
									}
									if (false)
									{
										goto IL_12bb;
									}
									base.Reader.Skip();
								}
								goto IL_0d64;
							}
						}
						if ((object)base.Reader.LocalName == this.m_ႳႥ)
						{
							if (690 < 690 - 416)
							{
								goto IL_13e2;
							}
							if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if (495 >= 495 - 106)
								{
									if (actions == null)
									{
										if (160 > 160 - 124)
										{
											goto IL_02c4;
										}
										goto IL_0ccc;
									}
									actions.Add(ႣႣ(Ⴍ: true, Ⴓ: true));
									goto IL_0d64;
								}
								goto IL_0a11;
							}
						}
						UnknownNode(null, ႥႷႭ.Ⴍ.ႰႷ(1821394762));
					}
					goto IL_0d64;
				}
				if (false)
				{
					goto IL_0e47;
				}
			}
			goto IL_0b3c;
			IL_085b:
			if (base.Reader.NodeType == XmlNodeType.EndElement)
			{
				goto IL_09d1;
			}
			if (417 <= 417 - 174)
			{
				goto IL_0fc1;
			}
			goto IL_118f;
		}

		private EventType ႳႭႨ(string Ⴍ)
		{
			int num = 16;
			string key = default(string);
			int value = default(int);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((key = Ⴍ) == null) ? 2 : 12);
					break;
				case 12:
					num = ((<PrivateImplementationDetails>{79C65F45-14CF-43E0-8E3F-6BFA4F0A164D}.$$method0x60000a1-1 != null) ? 24 : 29);
					break;
				case 29:
					<PrivateImplementationDetails>{79C65F45-14CF-43E0-8E3F-6BFA4F0A164D}.$$method0x60000a1-1 = new Dictionary<string, int>(26)
					{
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394758),
							0
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394882),
							1
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394759),
							2
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394892),
							3
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394752),
							4
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394893),
							5
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394753),
							6
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394895),
							7
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394754),
							8
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394888),
							9
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394737),
							10
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394889),
							11
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394738),
							12
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394890),
							13
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394772),
							14
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394900),
							15
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394773),
							16
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394902),
							17
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394774),
							18
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394896),
							19
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394775),
							20
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394898),
							21
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394768),
							22
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394909),
							23
						},
						{
							ႥႷႭ.Ⴍ.ႰႷ(1821394769),
							24
						},
						{
							ႥႷႭ.Ⴓ.ႰႷ(1821394905),
							25
						}
					};
					num = 24;
					break;
				case 24:
					num = ((!<PrivateImplementationDetails>{79C65F45-14CF-43E0-8E3F-6BFA4F0A164D}.$$method0x60000a1-1.TryGetValue(key, out value)) ? 2 : 32);
					break;
				case 32:
				{
					int num2;
					switch (value)
					{
					default:
						num2 = 17;
						break;
					case 0:
						num2 = 25;
						break;
					case 1:
						num2 = 5;
						break;
					case 2:
						num2 = 10;
						break;
					case 3:
						num2 = 7;
						break;
					case 4:
						num2 = 28;
						break;
					case 5:
						num2 = 6;
						break;
					case 6:
						num2 = 14;
						break;
					case 7:
						num2 = 19;
						break;
					case 8:
						num2 = 27;
						break;
					case 9:
						num2 = 11;
						break;
					case 10:
						num2 = 20;
						break;
					case 11:
						num2 = 13;
						break;
					case 12:
						num2 = 3;
						break;
					case 13:
						num2 = 4;
						break;
					case 14:
						num2 = 23;
						break;
					case 15:
						num2 = 0;
						break;
					case 16:
						num2 = 22;
						break;
					case 17:
						num2 = 30;
						break;
					case 18:
						num2 = 9;
						break;
					case 19:
						num2 = 31;
						break;
					case 20:
						num2 = 15;
						break;
					case 21:
						num2 = 1;
						break;
					case 22:
						num2 = 8;
						break;
					case 23:
						num2 = 18;
						break;
					case 24:
						num2 = 21;
						break;
					case 25:
						num2 = 26;
						break;
					}
					num = num2;
					break;
				}
				case 17:
					num = 2;
					break;
				case 25:
					return EventType.IMAppShutdown;
				case 5:
					return EventType.IMMyStatusChange;
				case 10:
					return EventType.ContactStatusChanged;
				case 7:
					return EventType.IMLogin;
				case 28:
					return EventType.IMSignout;
				case 6:
					return EventType.IMSessionStarted;
				case 14:
					return EventType.IMSessionEnded;
				case 19:
					return EventType.IMTextTyped;
				case 27:
					return EventType.IMTextIn;
				case 11:
					return EventType.IMTextOut;
				case 20:
					return EventType.IMNudgeSent;
				case 13:
					return EventType.IMNudgeReceived;
				case 3:
					return EventType.IMFileSent;
				case 4:
					return EventType.IMFileReceived;
				case 23:
					return EventType.IMAudioVideoInvitationReceived;
				case 0:
					return EventType.IMVideoInvitationReceived;
				case 22:
					return EventType.IMSessionWindowStartMove;
				case 30:
					return EventType.IMSessionWindowEndMove;
				case 9:
					return EventType.IMUrlReceived;
				case 31:
					return EventType.IMUrlSent;
				case 15:
					return EventType.IMSessionWindowActivate;
				case 1:
					return EventType.IMSessionWindowDeactivate;
				case 8:
					return EventType.IMSoftwareConnectionOK;
				case 18:
					return EventType.IMSoftwareConnectionPending;
				case 21:
					return EventType.IMSoftwareConnectionFailed;
				case 26:
					return EventType.IMSoftwareConnectionRefused;
				case 2:
					throw CreateUnknownConstantException(Ⴍ, typeof(EventType));
				}
			}
		}

		private PersonalityData ႣႼ(bool Ⴍ, bool Ⴓ)
		{
			//Discarded unreachable code: IL_0005, IL_0032, IL_005c, IL_0075, IL_009f, IL_00bb, IL_00e2, IL_010b, IL_0129, IL_0153, IL_0183, IL_0193, IL_01bd, IL_01ee, IL_0216, IL_0246, IL_0273, IL_028c, IL_029c, IL_02cc, IL_02e8, IL_0307, IL_0337, IL_035d, IL_0387, IL_03a0, IL_03b5, IL_03ca, IL_03f4, IL_0424, IL_0449, IL_0473, IL_049f, IL_04ca, IL_04f6, IL_0519, IL_0547, IL_0560, IL_058c, IL_05b5, IL_05e6, IL_05f1, IL_061f, IL_0645, IL_0665, IL_0680, IL_06b0, IL_06e1, IL_0702, IL_0734, IL_074f, IL_077c, IL_07aa, IL_07c7, IL_07f7, IL_0812, IL_0832, IL_085e, IL_088a, IL_08ab, IL_08d1, IL_08ed, IL_091d, IL_093d, IL_096d, IL_0992, IL_09b4, IL_09df, IL_0a04, IL_0a2d, IL_0a42, IL_0a6d, IL_0a9b, IL_0abc, IL_0ae9, IL_0b0c, IL_0b38, IL_0b7f, IL_0ba3, IL_0bcc, IL_0bf7, IL_0c1a, IL_0c47, IL_0c6d, IL_0c86, IL_0cac, IL_0cc1, IL_0cf1, IL_0d1d, IL_0d3c, IL_0d5d, IL_0d8e, IL_0dc5, IL_0ddd, IL_0e05, IL_0e2e, IL_0e60, IL_0e86, IL_0eb7, IL_0ed7, IL_0f03, IL_0f2f, IL_0f60, IL_0f8c, IL_0fa1, IL_0fcb, IL_0fee, IL_101a, IL_104b, IL_1060, IL_1075, IL_108e, IL_10a9, IL_10d5, IL_10f0, IL_111e, IL_114a, IL_116f, IL_1184, IL_11b5, IL_11e3, IL_120f, IL_1230, IL_1261, IL_1292, IL_12c3, IL_12f0, IL_12fd, IL_1321, IL_1351, IL_1381, IL_13a4, IL_13d5, IL_13f8, IL_1408, IL_1438, IL_1451, IL_147f, IL_14a3, IL_14be, IL_14e5, IL_14f5, IL_1523, IL_1538, IL_156b, IL_1591, IL_15a6, IL_15c9
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			bool flag = default(bool);
			List<ConstraintFilterDefinition> constraintFilters = default(List<ConstraintFilterDefinition>);
			PersonalityData personalityData = default(PersonalityData);
			int whileIterations = default(int);
			int readerCount = default(int);
			List<ChatmanAction> actions = default(List<ChatmanAction>);
			int whileIterations2 = default(int);
			int readerCount2 = default(int);
			List<Scenario> scenarios = default(List<Scenario>);
			int whileIterations3 = default(int);
			int whileIterations4 = default(int);
			int readerCount3 = default(int);
			bool[] array = default(bool[]);
			int whileIterations5 = default(int);
			int readerCount4 = default(int);
			int readerCount5 = default(int);
			List<ActionProducerDefinition> actionProducers = default(List<ActionProducerDefinition>);
			List<MoodMatrix> moodMatrixes = default(List<MoodMatrix>);
			int whileIterations6 = default(int);
			int readerCount6 = default(int);
			while (true)
			{
				if (!Ⴓ)
				{
					if (889 >= 889 - 576)
					{
						goto IL_05eb;
					}
					goto IL_0942;
				}
				goto IL_12f5;
				IL_1326:
				if ((object)base.Reader.LocalName != this.m_ႳႥ)
				{
					goto IL_14a8;
				}
				if ((507 + 507 * 507) % 2 == 0)
				{
					goto IL_0a72;
				}
				goto IL_15ab;
				IL_12f5:
				object obj = GetXsiType();
				goto IL_1302;
				IL_1302:
				xmlQualifiedName = (XmlQualifiedName)obj;
				goto IL_1303;
				IL_1303:
				flag = false;
				if (Ⴍ)
				{
					if (851 < 851 - 495)
					{
						goto IL_14fa;
					}
					flag = ReadNull();
					if (309 < 309 - 107)
					{
						goto IL_05fe;
					}
				}
				if (Ⴓ)
				{
					if (724 >= 724 - 240 && !(xmlQualifiedName == null))
					{
						if (132 >= 132 - 25)
						{
							if ((object)xmlQualifiedName.Name == this.m_ႷႨ)
							{
								if (1005 <= 1005 - 801)
								{
									continue;
								}
								goto IL_00e7;
							}
							goto IL_05f6;
						}
						goto IL_1101;
					}
				}
				goto IL_0110;
				IL_0a72:
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (554 <= 554 - 530)
					{
						goto IL_012e;
					}
					goto IL_0aa0;
				}
				goto IL_14a8;
				IL_030c:
				constraintFilters = personalityData.ConstraintFilters;
				if (base.Reader.IsEmptyElement)
				{
					if (625 <= 625 - 123)
					{
						goto IL_10f5;
					}
					base.Reader.Skip();
					goto IL_0942;
				}
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_024b;
				IL_0a47:
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					goto IL_04cf;
				}
				if (false)
				{
					goto IL_0837;
				}
				goto IL_1326;
				IL_0aa0:
				if (actions != null)
				{
					goto IL_0061;
				}
				if ((828 + 828 * 828) % 2 == 0)
				{
					goto IL_03a5;
				}
				goto IL_09b9;
				IL_1101:
				CheckReaderCount(ref whileIterations2, ref readerCount2);
				if (171 <= 171 - 61)
				{
					goto IL_0942;
				}
				goto IL_0c1f;
				IL_09b9:
				if (base.Reader.NodeType != 0)
				{
					goto IL_0e0a;
				}
				if (355 < 355 - 228)
				{
					goto IL_047f;
				}
				goto IL_14ea;
				IL_0aee:
				if (!ReadNull())
				{
					if (335 <= 335 - 63)
					{
						goto IL_054c;
					}
					if (personalityData.Scenarios == null)
					{
						if (false)
						{
							goto IL_153f;
						}
						personalityData.Scenarios = new List<Scenario>();
						if (408 < 408 - 303)
						{
							goto IL_047f;
						}
					}
					scenarios = personalityData.Scenarios;
					if (!base.Reader.IsEmptyElement)
					{
						base.Reader.ReadStartElement();
						base.Reader.MoveToContent();
						whileIterations3 = 0;
						goto IL_0f22;
					}
					if (false)
					{
						goto IL_1415;
					}
					base.Reader.Skip();
				}
				goto IL_0942;
				IL_0e0a:
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					goto IL_05fe;
				}
				if (303 < 303 - 64)
				{
					goto IL_0842;
				}
				goto IL_1266;
				IL_0110:
				if (flag)
				{
					if (817 > 817 - 114)
					{
						break;
					}
					goto IL_007a;
				}
				personalityData = new PersonalityData();
				while (personalityData.Scenarios == null)
				{
					if (448 > 448 - 189)
					{
						personalityData.Scenarios = new List<Scenario>();
						if (87 > 87 - 10)
						{
							break;
						}
						continue;
					}
					goto IL_0fa6;
				}
				goto IL_012e;
				IL_086e:
				base.Reader.MoveToContent();
				whileIterations2 = 0;
				readerCount2 = base.ReaderCount;
				goto IL_0c1f;
				IL_05fe:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394760));
				if (45 < 45 - 43)
				{
					goto IL_07cc;
				}
				goto IL_0ddf;
				IL_07cc:
				if ((object)base.Reader.LocalName == ႳႥႠ)
				{
					if (false)
					{
						goto IL_051e;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if ((461 + 461 * 461) % 2 == 0)
						{
							goto IL_07af;
						}
						goto IL_0bf9;
					}
				}
				goto IL_007a;
				IL_012e:
				_ = personalityData.Scenarios;
				if (personalityData.Actions == null)
				{
					if (653 < 653 - 22)
					{
						goto IL_0fad;
					}
					personalityData.Actions = new List<ChatmanAction>();
					if (119 < 119 - 76)
					{
						goto IL_1065;
					}
				}
				goto IL_0478;
				IL_04cf:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394815));
				if (887 < 887 - 717)
				{
					goto IL_0ac9;
				}
				goto IL_153f;
				IL_0ac9:
				if (!base.Reader.IsEmptyElement)
				{
					goto IL_0863;
				}
				if (415 <= 415 - 17)
				{
					goto IL_0aee;
				}
				goto IL_1174;
				IL_0478:
				_ = personalityData.Actions;
				goto IL_047f;
				IL_047f:
				if (personalityData.MoodMatrixes == null)
				{
					if (false)
					{
						goto IL_03cf;
					}
					personalityData.MoodMatrixes = new List<MoodMatrix>();
					if (330 < 330 - 250)
					{
						goto IL_0fd0;
					}
				}
				goto IL_14c3;
				IL_0f91:
				base.Reader.Skip();
				goto IL_0ddf;
				IL_0ddf:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations4, ref readerCount3);
				if (912 > 912 - 92)
				{
					goto IL_0754;
				}
				goto IL_0e3b;
				IL_14c3:
				_ = personalityData.MoodMatrixes;
				if (personalityData.ConstraintFilters != null)
				{
					goto IL_0fa6;
				}
				if (75 < 75 - 48)
				{
					goto IL_04cf;
				}
				goto IL_0fd0;
				IL_10da:
				UnknownNode(personalityData, ႥႷႭ.Ⴍ.ႰႷ(1821394771));
				goto IL_0942;
				IL_0fd0:
				personalityData.ConstraintFilters = new List<ConstraintFilterDefinition>();
				if (600 >= 600 - 153)
				{
					goto IL_0fa6;
				}
				goto IL_0942;
				IL_0fa6:
				_ = personalityData.ConstraintFilters;
				goto IL_0fad;
				IL_0fad:
				if (personalityData.ActionProducers != null)
				{
					goto IL_038c;
				}
				if (166 >= 166 - 10)
				{
					goto IL_0972;
				}
				goto IL_0cb1;
				IL_0e3b:
				if (!base.Reader.IsEmptyElement)
				{
					goto IL_0837;
				}
				if (false)
				{
					goto IL_044e;
				}
				goto IL_0cb1;
				IL_038c:
				_ = personalityData.ActionProducers;
				array = new bool[9];
				goto IL_044e;
				IL_044e:
				if (!base.Reader.MoveToNextAttribute())
				{
					if (false)
					{
						goto IL_05ba;
					}
					base.Reader.MoveToElement();
					if (base.Reader.IsEmptyElement)
					{
						if (234 <= 234 - 164)
						{
							goto IL_1266;
						}
						base.Reader.Skip();
						return personalityData;
					}
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations5 = 0;
					readerCount4 = base.ReaderCount;
					goto IL_03cf;
				}
				if (!array[0])
				{
					if (1014 <= 1014 - 21)
					{
						goto IL_02fe;
					}
					if ((object)base.Reader.LocalName == ႰႣ)
					{
						if (823 <= 823 - 781)
						{
							goto IL_0188;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if ((963 + 963 * 963) % 2 == 0)
							{
								personalityData.SupportedHardwareModel = base.Reader.Value;
								goto IL_00b2;
							}
							goto IL_1123;
						}
					}
				}
				goto IL_1386;
				IL_051e:
				if ((object)base.Reader.LocalName == ႼႤ)
				{
					if (159 > 159 - 23)
					{
						goto IL_021b;
					}
					goto IL_0754;
				}
				goto IL_1189;
				IL_0f22:
				readerCount5 = base.ReaderCount;
				goto IL_00c0;
				IL_01c2:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_064a;
				}
				if (923 >= 923 - 587)
				{
					personalityData.Version = base.Reader.Value;
					goto IL_02fe;
				}
				goto IL_0f91;
				IL_140d:
				actionProducers = personalityData.ActionProducers;
				goto IL_1415;
				IL_007a:
				if ((object)base.Reader.LocalName == this.m_ႷႠ)
				{
					if (36 > 36 - 1)
					{
						goto IL_000a;
					}
					goto IL_094e;
				}
				goto IL_10da;
				IL_0754:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (989 < 989 - 528)
					{
						goto IL_00e7;
					}
					goto IL_09b9;
				}
				goto IL_14ea;
				IL_000a:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_10da;
				}
				if (false)
				{
					goto IL_02fe;
				}
				if (ReadNull())
				{
					goto IL_0942;
				}
				if (911 < 911 - 569)
				{
					goto IL_0061;
				}
				goto IL_114f;
				IL_02fe:
				array[2] = true;
				goto IL_044e;
				IL_1415:
				if (base.Reader.IsEmptyElement)
				{
					if (235 < 235 - 89)
					{
						goto IL_021b;
					}
					base.Reader.Skip();
					goto IL_0942;
				}
				goto IL_1123;
				IL_1174:
				base.Reader.Skip();
				goto IL_0942;
				IL_114f:
				if (personalityData.ActionProducers == null)
				{
					if (false)
					{
						goto IL_1297;
					}
					personalityData.ActionProducers = new List<ActionProducerDefinition>();
					if (false)
					{
						goto IL_113a;
					}
				}
				goto IL_140d;
				IL_0863:
				base.Reader.ReadStartElement();
				goto IL_086e;
				IL_1386:
				if (!array[1])
				{
					if (669 < 669 - 462)
					{
						goto IL_0ac1;
					}
					if ((object)base.Reader.LocalName == ႤႭ)
					{
						if (false)
						{
							goto IL_0cb1;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (339 > 339 - 335)
							{
								personalityData.Converted = XmlConvert.ToBoolean(base.Reader.Value);
								goto IL_0b9a;
							}
							goto IL_04cf;
						}
					}
				}
				goto IL_15ab;
				IL_1297:
				if ((object)base.Reader.LocalName == ႤႤ)
				{
					if (925 < 925 - 861)
					{
						goto IL_0972;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (10 <= 10 - 5)
						{
							goto IL_086e;
						}
						if (ReadNull())
						{
							goto IL_0942;
						}
						if (96 >= 96 - 60)
						{
							if (personalityData.MoodMatrixes == null)
							{
								if (220 < 220 - 80)
								{
									goto IL_1266;
								}
								personalityData.MoodMatrixes = new List<MoodMatrix>();
								if (440 <= 440 - 346)
								{
									goto IL_03cf;
								}
							}
							goto IL_0ac1;
						}
						goto IL_0e0a;
					}
				}
				goto IL_07cc;
				IL_0c1f:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (823 <= 823 - 538)
					{
						goto IL_064a;
					}
					if (base.Reader.NodeType != 0)
					{
						goto IL_0bf9;
					}
					if (false)
					{
						goto IL_000a;
					}
				}
				ReadEndElement();
				goto IL_0942;
				IL_14ea:
				ReadEndElement();
				goto IL_0942;
				IL_0cb1:
				base.Reader.Skip();
				goto IL_0942;
				IL_0837:
				base.Reader.ReadStartElement();
				goto IL_0842;
				IL_0bf9:
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394765));
					if (294 <= 294 - 217)
					{
						goto IL_0942;
					}
				}
				else
				{
					if (28 < 28 - 11)
					{
						goto IL_0f22;
					}
					if ((object)base.Reader.LocalName == ႼႣ)
					{
						if (411 <= 411 - 158)
						{
							goto IL_12f5;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (694 > 694 - 225)
							{
								if (moodMatrixes != null)
								{
									goto IL_054c;
								}
								if (34 >= 34 - 12)
								{
									base.Reader.Skip();
									goto IL_10f5;
								}
								goto IL_14ea;
							}
							goto IL_14c3;
						}
					}
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394765));
				}
				goto IL_10f5;
				IL_15ab:
				if (!array[2])
				{
					if (813 <= 813 - 365)
					{
						goto IL_05eb;
					}
					if ((object)base.Reader.LocalName == ႳႥႳ)
					{
						if (776 > 776 - 702)
						{
							goto IL_01c2;
						}
						goto IL_0dca;
					}
				}
				goto IL_064a;
				IL_00e7:
				if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
				{
					goto IL_0110;
				}
				if (981 >= 981 - 241)
				{
					goto IL_05f6;
				}
				goto IL_113a;
				IL_05ba:
				if ((object)base.Reader.LocalName == ႳႠႣ)
				{
					if (994 <= 994 - 468)
					{
						goto IL_1303;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (false)
						{
							goto IL_0158;
						}
						if (scenarios == null)
						{
							if (186 <= 186 - 108)
							{
								goto IL_0863;
							}
							goto IL_1065;
						}
						scenarios.Add(ႣႤ(Ⴍ: true, Ⴓ: true));
						goto IL_06b5;
					}
				}
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394764));
				goto IL_06b5;
				IL_03a5:
				base.Reader.Skip();
				goto IL_153f;
				IL_064a:
				if (!array[3])
				{
					if (248 >= 248 - 49)
					{
						goto IL_051e;
					}
					goto IL_0b9a;
				}
				goto IL_1189;
				IL_1266:
				if ((object)base.Reader.LocalName == ႳႰႰ)
				{
					if (957 <= 957 - 567)
					{
						goto IL_03a5;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (927 < 927 - 852)
						{
							goto IL_00b2;
						}
						if (actionProducers != null)
						{
							actionProducers.Add(ႳႨ(Ⴍ: true, Ⴓ: true));
							goto IL_0ddf;
						}
						if (false)
						{
							goto IL_084e;
						}
						goto IL_0f91;
					}
				}
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394760));
				goto IL_0ddf;
				IL_0b9a:
				array[1] = true;
				goto IL_044e;
				IL_1189:
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					if (617 < 617 - 372)
					{
						goto IL_0842;
					}
					UnknownNode(personalityData, ႥႷႭ.Ⴓ.ႰႷ(1821394755));
					if (101 < 101 - 100)
					{
						goto IL_094e;
					}
				}
				goto IL_044e;
				IL_0061:
				actions.Add(ႨႼ(Ⴍ: true, Ⴓ: true));
				goto IL_153f;
				IL_1123:
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				goto IL_113a;
				IL_0842:
				base.Reader.MoveToContent();
				goto IL_084e;
				IL_084e:
				whileIterations6 = 0;
				readerCount6 = base.ReaderCount;
				goto IL_0edc;
				IL_0edc:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (false)
					{
						goto IL_114f;
					}
					if (base.Reader.NodeType != 0)
					{
						goto IL_0a47;
					}
					if (503 <= 503 - 366)
					{
						goto IL_0aa0;
					}
				}
				goto IL_0188;
				IL_1065:
				base.Reader.Skip();
				goto IL_06b5;
				IL_113a:
				whileIterations4 = 0;
				readerCount3 = base.ReaderCount;
				goto IL_0754;
				IL_054c:
				moodMatrixes.Add(ႳႥ(Ⴍ: true, Ⴓ: true));
				goto IL_10f5;
				IL_0188:
				ReadEndElement();
				goto IL_0942;
				IL_0942:
				base.Reader.MoveToContent();
				goto IL_094e;
				IL_094e:
				CheckReaderCount(ref whileIterations5, ref readerCount4);
				if ((815 + 815 * 815) % 2 == 0)
				{
					goto IL_03cf;
				}
				goto IL_0e65;
				IL_03cf:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (171 < 171 - 95)
					{
						goto IL_0739;
					}
					if (base.Reader.NodeType != 0)
					{
						while (base.Reader.NodeType == XmlNodeType.Element)
						{
							if (197 <= 197 - 163)
							{
								goto IL_0942;
							}
							if ((object)base.Reader.LocalName != ႤႼ)
							{
								goto IL_0781;
							}
							if (426 <= 426 - 292)
							{
								continue;
							}
							goto IL_1235;
						}
						UnknownNode(personalityData, ႥႷႭ.Ⴍ.ႰႷ(1821394771));
						if (286 > 286 - 54)
						{
							goto IL_0942;
						}
						goto IL_094e;
					}
					if (737 <= 737 - 635)
					{
						goto IL_0863;
					}
				}
				goto IL_0dca;
				IL_021b:
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (false)
					{
						goto IL_05eb;
					}
					personalityData.EngineVersion = base.Reader.Value;
					array[3] = true;
					goto IL_044e;
				}
				goto IL_1189;
				IL_00b2:
				array[0] = true;
				goto IL_044e;
				IL_05eb:
				obj = null;
				goto IL_1302;
				IL_0ac1:
				moodMatrixes = personalityData.MoodMatrixes;
				goto IL_0ac9;
				IL_1235:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_0781;
				}
				if (335 <= 335 - 243)
				{
					goto IL_03a5;
				}
				goto IL_0aee;
				IL_0781:
				if ((object)base.Reader.LocalName != ႥႠ)
				{
					goto IL_1297;
				}
				if (347 < 347 - 109)
				{
					goto IL_0a72;
				}
				goto IL_14fa;
				IL_0972:
				personalityData.ActionProducers = new List<ActionProducerDefinition>();
				if ((293 + 293 * 293) % 2 == 0)
				{
					goto IL_038c;
				}
				goto IL_0781;
				IL_0739:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394767));
				goto IL_0158;
				IL_0158:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if ((984 + 984 * 984) % 2 == 0)
				{
					goto IL_024b;
				}
				goto IL_094e;
				IL_024b:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (789 < 789 - 764)
					{
						goto IL_044e;
					}
					if (base.Reader.NodeType != 0)
					{
						if (base.Reader.NodeType == XmlNodeType.Element)
						{
							if (230 > 230 - 19)
							{
								if ((object)base.Reader.LocalName != ႼႳ)
								{
									goto IL_0739;
								}
								if ((236 + 236 * 236) % 2 == 0)
								{
									goto IL_02a1;
								}
								goto IL_153f;
							}
							goto IL_1174;
						}
						UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394767));
						if (1014 >= 1014 - 331)
						{
							goto IL_0158;
						}
						goto IL_06b5;
					}
					if (false)
					{
						goto IL_140d;
					}
				}
				ReadEndElement();
				goto IL_0942;
				IL_14fa:
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (131 < 131 - 59)
					{
						goto IL_0a47;
					}
					if (ReadNull())
					{
						goto IL_0942;
					}
					if ((329 + 329 * 329) % 2 == 0)
					{
						if (personalityData.Actions == null)
						{
							if (245 <= 245 - 34)
							{
								goto IL_09b9;
							}
							personalityData.Actions = new List<ChatmanAction>();
							if (220 <= 220 - 134)
							{
								goto IL_0478;
							}
						}
						actions = personalityData.Actions;
						goto IL_0e3b;
					}
					goto IL_0ddf;
				}
				goto IL_1297;
				IL_00c0:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (83 <= 83 - 11)
					{
						goto IL_07af;
					}
					if (base.Reader.NodeType != 0)
					{
						if (base.Reader.NodeType != XmlNodeType.Element)
						{
							UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394764));
							if (998 <= 998 - 382)
							{
								goto IL_02a1;
							}
							goto IL_06b5;
						}
						if (698 <= 698 - 87)
						{
							goto IL_044e;
						}
						goto IL_05ba;
					}
					if (999 <= 999 - 715)
					{
						goto IL_01c2;
					}
				}
				ReadEndElement();
				goto IL_0942;
				IL_02a1:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_0739;
				}
				if (false)
				{
					goto IL_114f;
				}
				if (constraintFilters == null)
				{
					if ((390 + 390 * 390) % 2 == 0)
					{
						base.Reader.Skip();
					}
				}
				else
				{
					constraintFilters.Add(ႷႭ(Ⴀ: true, Ⴍ: true));
				}
				goto IL_0158;
				IL_07af:
				if (ReadNull())
				{
					goto IL_0942;
				}
				if (27 <= 27 - 18)
				{
					goto IL_0842;
				}
				if (personalityData.ConstraintFilters != null)
				{
					goto IL_030c;
				}
				if (1014 <= 1014 - 616)
				{
					goto IL_05ba;
				}
				goto IL_0e65;
				IL_0dca:
				ReadEndElement();
				return personalityData;
				IL_0e65:
				personalityData.ConstraintFilters = new List<ConstraintFilterDefinition>();
				if (276 >= 276 - 171)
				{
					goto IL_030c;
				}
				goto IL_1386;
				IL_05f6:
				throw CreateUnknownTypeException(xmlQualifiedName);
				IL_10f5:
				base.Reader.MoveToContent();
				goto IL_1101;
				IL_06b5:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations3, ref readerCount5);
				if (597 >= 597 - 558)
				{
					goto IL_00c0;
				}
				goto IL_14a8;
				IL_14a8:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394815));
				goto IL_153f;
				IL_153f:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations6, ref readerCount6);
				if (536 >= 536 - 344)
				{
					goto IL_0edc;
				}
				goto IL_1326;
			}
			return null;
		}

		private ConstraintFilterDefinition ႷႭ(bool Ⴀ, bool Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_003c, IL_005b, IL_0068, IL_0089, IL_00b0, IL_00d9, IL_00e1, IL_00ff, IL_0127, IL_0144, IL_016c, IL_018c, IL_01ba, IL_01e2, IL_0213, IL_023c, IL_0270, IL_0298, IL_02bb, IL_02ec, IL_0319, IL_033a, IL_035b, IL_0371, IL_0388, IL_03b0, IL_0407, IL_0431, IL_044c
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			bool[] array = default(bool[]);
			ConstraintFilterDefinition constraintFilterDefinition = default(ConstraintFilterDefinition);
			bool flag = default(bool);
			int whileIterations = default(int);
			while (true)
			{
				IL_012c:
				object obj;
				if (Ⴍ)
				{
					obj = GetXsiType();
				}
				else
				{
					if (false)
					{
						goto IL_0041;
					}
					obj = null;
				}
				xmlQualifiedName = (XmlQualifiedName)obj;
				goto IL_006e;
				IL_029d:
				if (!array[0])
				{
					if (900 >= 900 - 345)
					{
						goto IL_0104;
					}
				}
				goto IL_0171;
				IL_0104:
				if ((object)base.Reader.LocalName == ႳႣႼ)
				{
					if (85 <= 85 - 78)
					{
						goto IL_0260;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (771 <= 771 - 600)
						{
							goto IL_029d;
						}
						constraintFilterDefinition.ID = XmlConvert.ToInt32(base.Reader.Value);
						array[0] = true;
						goto IL_0275;
					}
				}
				goto IL_0171;
				IL_0191:
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					if (555 <= 555 - 540)
					{
						goto IL_00e6;
					}
					goto IL_0218;
				}
				goto IL_0275;
				IL_0041:
				constraintFilterDefinition.Parameters = base.Reader.Value;
				goto IL_0052;
				IL_006e:
				flag = false;
				if (Ⴀ)
				{
					if (467 >= 467 - 23)
					{
						goto IL_035d;
					}
				}
				goto IL_03c4;
				IL_035d:
				flag = ReadNull();
				if (88 < 88 - 11)
				{
					goto IL_0263;
				}
				goto IL_03c4;
				IL_03c4:
				if (!Ⴍ)
				{
					goto IL_00e6;
				}
				if (755 <= 755 - 357)
				{
					goto IL_0275;
				}
				goto IL_031b;
				IL_0260:
				whileIterations = 0;
				goto IL_0263;
				IL_00e6:
				if (flag)
				{
					if (157 >= 157 - 97)
					{
						return null;
					}
					goto IL_0016;
				}
				constraintFilterDefinition = new ConstraintFilterDefinition();
				array = new bool[2];
				goto IL_0275;
				IL_0218:
				UnknownNode(constraintFilterDefinition, ႥႷႭ.Ⴓ.ႰႷ(1821394714));
				if (886 > 886 - 141)
				{
					goto IL_0275;
				}
				goto IL_031b;
				IL_01bf:
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (108 >= 108 - 106)
					{
						goto IL_0041;
					}
					goto IL_0052;
				}
				goto IL_0191;
				IL_031b:
				if (xmlQualifiedName == null)
				{
					goto IL_00e6;
				}
				if (999 >= 999 - 762)
				{
					if ((object)xmlQualifiedName.Name == ႥႳ)
					{
						if (false)
						{
							continue;
						}
						if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
						{
							goto IL_00e6;
						}
						if (false)
						{
							goto IL_01bf;
						}
					}
					throw CreateUnknownTypeException(xmlQualifiedName);
				}
				goto IL_035d;
				IL_0275:
				if (!base.Reader.MoveToNextAttribute())
				{
					if (785 > 785 - 719)
					{
						base.Reader.MoveToElement();
						goto IL_0016;
					}
					goto IL_0191;
				}
				goto IL_029d;
				IL_0171:
				if (!array[1])
				{
					if (797 < 797 - 678)
					{
						goto IL_0218;
					}
					if ((object)base.Reader.LocalName == Ⴗ)
					{
						if (264 <= 264 - 262)
						{
							goto IL_006e;
						}
						goto IL_01bf;
					}
				}
				goto IL_0191;
				IL_0263:
				while (true)
				{
					IL_0263:
					int readerCount = base.ReaderCount;
					while (true)
					{
						IL_040c:
						if (base.Reader.NodeType != XmlNodeType.EndElement)
						{
							if (165 < 165 - 93)
							{
								break;
							}
							while (base.Reader.NodeType != 0)
							{
								if (base.Reader.NodeType == XmlNodeType.Element)
								{
									if (459 <= 459 - 193)
									{
										goto IL_012c;
									}
									UnknownNode(constraintFilterDefinition, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
								}
								else
								{
									UnknownNode(constraintFilterDefinition, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
									if (677 < 677 - 171)
									{
										goto IL_0171;
									}
								}
								base.Reader.MoveToContent();
								CheckReaderCount(ref whileIterations, ref readerCount);
								if (false)
								{
									continue;
								}
								goto IL_040c;
							}
							if (917 < 917 - 30)
							{
								goto IL_0263;
							}
						}
						ReadEndElement();
						return constraintFilterDefinition;
					}
					break;
				}
				goto IL_029d;
				IL_0016:
				if (base.Reader.IsEmptyElement)
				{
					if (449 >= 449 - 172)
					{
						break;
					}
					goto IL_0104;
				}
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				goto IL_0260;
				IL_0052:
				array[1] = true;
				goto IL_0275;
			}
			base.Reader.Skip();
			return constraintFilterDefinition;
		}

		private PersonalityDataFile ႷႳ(bool Ⴍ, bool Ⴄ)
		{
			int num = 29;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			PersonalityDataFile personalityDataFile = default(PersonalityDataFile);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴄ ? 16 : 10);
					break;
				case 10:
					obj = null;
					goto IL_00a8;
				case 16:
					obj = GetXsiType();
					goto IL_00a8;
				case 19:
					flag = ReadNull();
					num = 2;
					break;
				case 2:
					num = ((!Ⴄ) ? 7 : 22);
					break;
				case 22:
					num = ((xmlQualifiedName == null) ? 7 : 28);
					break;
				case 28:
					num = (((object)xmlQualifiedName.Name == ႼႨ) ? 24 : 0);
					break;
				case 24:
					num = (((object)xmlQualifiedName.Namespace == this.m_ႰႷ) ? 7 : 0);
					break;
				case 0:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 7:
					num = ((!flag) ? 9 : 30);
					break;
				case 30:
					return null;
				case 9:
					personalityDataFile = new PersonalityDataFile();
					array = new bool[2];
					num = 25;
					break;
				case 21:
					num = (array[0] ? 32 : 23);
					break;
				case 23:
					num = (((object)base.Reader.LocalName != this.m_ႷႷ) ? 32 : 12);
					break;
				case 12:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 32 : 14);
					break;
				case 14:
					personalityDataFile.FileName = base.Reader.Value;
					array[0] = true;
					num = 25;
					break;
				case 32:
					num = (array[1] ? 13 : 17);
					break;
				case 17:
					num = (((object)base.Reader.LocalName != this.m_ႰႰ) ? 13 : 15);
					break;
				case 15:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 13 : 8);
					break;
				case 8:
					personalityDataFile.FileRelevance = ႰႠ(base.Reader.Value);
					array[1] = true;
					num = 25;
					break;
				case 13:
					num = ((!IsXmlnsAttribute(base.Reader.Name)) ? 1 : 25);
					break;
				case 1:
					UnknownNode(personalityDataFile, ႥႷႭ.Ⴓ.ႰႷ(1821394766));
					goto case 25;
				case 25:
					num = (base.Reader.MoveToNextAttribute() ? 21 : 18);
					break;
				case 18:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 26 : 5);
					break;
				case 5:
					base.Reader.Skip();
					return personalityDataFile;
				case 26:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 11;
					break;
				case 4:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 27 : 20);
					break;
				case 20:
					UnknownNode(personalityDataFile, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					num = 31;
					break;
				case 27:
					UnknownNode(personalityDataFile, ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					goto case 31;
				case 31:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 11;
				case 11:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 3 : 6);
					break;
				case 6:
					num = ((base.Reader.NodeType != 0) ? 4 : 3);
					break;
				case 3:
					{
						ReadEndElement();
						return personalityDataFile;
					}
					IL_00a8:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 2 : 19);
					break;
				}
			}
		}

		private PersonalityStatus ႳႭႣ(string Ⴍ)
		{
			int num = 5;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴍ) == null) ? 4 : 0);
					break;
				case 0:
					num = ((a == ႥႷႭ.Ⴓ.ႰႷ(1821394727)) ? 1 : 3);
					break;
				case 3:
					num = ((a == ႥႷႭ.Ⴍ.ႰႷ(1821394770)) ? 6 : 2);
					break;
				case 2:
					num = 4;
					break;
				case 1:
					return PersonalityStatus.Unloaded;
				case 6:
					return PersonalityStatus.Loaded;
				case 4:
					throw CreateUnknownConstantException(Ⴍ, typeof(PersonalityStatus));
				}
			}
		}

		private Personality.Ⴄ ႷႨ(bool Ⴍ, bool Ⴄ)
		{
			//Discarded unreachable code: IL_0022, IL_003f, IL_0047, IL_0073, IL_00a8, IL_00c9, IL_0100, IL_011a, IL_0146, IL_0162, IL_018a, IL_019a, IL_01cf, IL_01db, IL_01f6, IL_020e, IL_022f, IL_0252, IL_0297, IL_02c3, IL_02f0
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			int whileIterations = default(int);
			int readerCount = default(int);
			Personality.Ⴄ ⴄ = default(Personality.Ⴄ);
			while (true)
			{
				object obj;
				if (!Ⴄ)
				{
					if (false)
					{
						goto IL_0270;
					}
					obj = null;
				}
				else
				{
					obj = GetXsiType();
				}
				xmlQualifiedName = (XmlQualifiedName)obj;
				goto IL_01e1;
				IL_0078:
				throw CreateUnknownTypeException(xmlQualifiedName);
				IL_02c8:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (false)
				{
					goto IL_0078;
				}
				goto IL_02a4;
				IL_0270:
				readerCount = base.ReaderCount;
				goto IL_02a4;
				IL_00ad:
				bool flag;
				if (flag)
				{
					if (247 <= 247 - 159)
					{
						goto IL_01e1;
					}
					return null;
				}
				ⴄ = new Personality.Ⴄ();
				goto IL_0002;
				IL_01e1:
				flag = false;
				if (!Ⴍ)
				{
					goto IL_0105;
				}
				if (122 <= 122 - 107)
				{
					goto IL_01f8;
				}
				goto IL_027a;
				IL_0002:
				if (base.Reader.MoveToNextAttribute())
				{
					goto IL_0080;
				}
				if (577 <= 577 - 318)
				{
					continue;
				}
				goto IL_00ce;
				IL_0105:
				if (Ⴄ)
				{
					if (false)
					{
						goto IL_0270;
					}
					if (!(xmlQualifiedName == null))
					{
						if (921 > 921 - 809)
						{
							if ((object)xmlQualifiedName.Name == this.Ⴍ)
							{
								if (405 >= 405 - 228)
								{
									while ((object)xmlQualifiedName.Namespace != this.m_ႰႷ)
									{
										if (330 <= 330 - 17)
										{
											continue;
										}
										goto IL_0078;
									}
									goto IL_00ad;
								}
							}
							goto IL_0078;
						}
						goto IL_02c8;
					}
				}
				goto IL_00ad;
				IL_02a4:
				if (base.Reader.NodeType == XmlNodeType.EndElement)
				{
					break;
				}
				if (290 < 290 - 33)
				{
					goto IL_0270;
				}
				while (base.Reader.NodeType == XmlNodeType.None)
				{
					if (433 >= 433 - 204)
					{
						goto end_IL_0027;
					}
				}
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (981 < 981 - 636)
					{
						goto IL_0148;
					}
					goto IL_01f8;
				}
				UnknownNode(ⴄ, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				if (false)
				{
					goto IL_0002;
				}
				goto IL_02c8;
				IL_0080:
				if (IsXmlnsAttribute(base.Reader.Name))
				{
					goto IL_0002;
				}
				if (false)
				{
					goto IL_00ce;
				}
				goto IL_0148;
				IL_01f8:
				UnknownNode(ⴄ, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				goto IL_02c8;
				IL_00ce:
				base.Reader.MoveToElement();
				if (base.Reader.IsEmptyElement)
				{
					if (984 <= 984 - 836)
					{
						goto IL_027a;
					}
					base.Reader.Skip();
					return ⴄ;
				}
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				whileIterations = 0;
				goto IL_0270;
				IL_0148:
				UnknownNode(ⴄ);
				if (757 <= 757 - 93)
				{
					break;
				}
				goto IL_0002;
				IL_027a:
				flag = ReadNull();
				if (290 < 290 - 224)
				{
					goto IL_0080;
				}
				goto IL_0105;
				continue;
				end_IL_0027:
				break;
			}
			ReadEndElement();
			return ⴄ;
		}

		private Personality ႷႣ(bool Ⴍ, bool Ⴄ)
		{
			//Discarded unreachable code: IL_0005, IL_0030, IL_0049, IL_006b, IL_008b, IL_00ca, IL_00f7, IL_011b, IL_013d, IL_016a, IL_017f, IL_0194, IL_01a9, IL_01cc, IL_01f0, IL_0219, IL_0245, IL_026a, IL_0282, IL_02a7, IL_02da, IL_02fe, IL_0320, IL_0351, IL_0372, IL_03a2, IL_03d3, IL_03f6, IL_0426, IL_044c, IL_047d, IL_04a9, IL_04d7, IL_0502, IL_052e, IL_0554, IL_0574, IL_0597, IL_05c3, IL_05f3, IL_0603, IL_0623, IL_065a, IL_067a, IL_06a8, IL_06b3, IL_06cd, IL_06f6, IL_071e, IL_073d, IL_076d, IL_079e, IL_07c9, IL_07e9, IL_0814, IL_0843, IL_0869, IL_088d, IL_08b3, IL_08df, IL_090d, IL_0931, IL_095f, IL_0978, IL_0999, IL_09c3, IL_09f1, IL_0a1c, IL_0a49, IL_0a69, IL_0a8c, IL_0ab8, IL_0af6, IL_0b22, IL_0b42, IL_0b6f, IL_0b9c, IL_0bc9, IL_0bf3, IL_0c10, IL_0c33, IL_0c56, IL_0c6f, IL_0c8a, IL_0cb0, IL_0cdc, IL_0cf7, IL_0d1f, IL_0d4f, IL_0d72, IL_0da2, IL_0dc5, IL_0de4, IL_0dfc, IL_0e2c, IL_0e4e, IL_0e7f, IL_0eaf, IL_0ec7, IL_0ee2, IL_0f13, IL_0f40, IL_0f60, IL_0f7f, IL_0faa, IL_0fd6, IL_1006, IL_102b, IL_1051, IL_1066, IL_1096, IL_10c2, IL_10e6, IL_1114, IL_1129, IL_1154, IL_117c, IL_11a1, IL_11cd, IL_11f2, IL_1222, IL_124e, IL_1271, IL_1291, IL_12c2, IL_12f3, IL_131c, IL_133e, IL_136e, IL_139e, IL_13c8, IL_13f8, IL_1423, IL_142d, IL_1450, IL_1465, IL_148a, IL_14b4, IL_14d3, IL_1500, IL_1529, IL_155b, IL_1570, IL_15a1, IL_15c1, IL_15f2, IL_1615, IL_1625, IL_164d, IL_167b, IL_16a9, IL_16c2, IL_16ed, IL_171b
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			bool flag = default(bool);
			Personality personality = default(Personality);
			int whileIterations = default(int);
			int readerCount = default(int);
			bool[] array = default(bool[]);
			int whileIterations2 = default(int);
			int readerCount2 = default(int);
			int whileIterations3 = default(int);
			int readerCount3 = default(int);
			int whileIterations4 = default(int);
			int readerCount4 = default(int);
			int[] array2 = default(int[]);
			int num = default(int);
			int whileIterations5 = default(int);
			int readerCount5 = default(int);
			List<PersonalityDataFile> dataFiles = default(List<PersonalityDataFile>);
			List<ActionUsage> actionUsages = default(List<ActionUsage>);
			List<MoodCounter> stateMoodCounterList = default(List<MoodCounter>);
			while (true)
			{
				if (!Ⴄ)
				{
					if (false)
					{
						goto IL_02b4;
					}
					goto IL_06ad;
				}
				goto IL_1425;
				IL_0a9c:
				base.Reader.MoveToContent();
				goto IL_0aa8;
				IL_1425:
				object obj = GetXsiType();
				goto IL_1432;
				IL_1432:
				xmlQualifiedName = (XmlQualifiedName)obj;
				flag = false;
				if (Ⴍ)
				{
					if (false)
					{
						goto IL_162a;
					}
					flag = ReadNull();
					if (false)
					{
						goto IL_0afb;
					}
				}
				if (Ⴄ)
				{
					if (925 < 925 - 904)
					{
						goto IL_02b4;
					}
					if (!(xmlQualifiedName == null))
					{
						if (114 > 114 - 3)
						{
							if ((object)xmlQualifiedName.Name == ႤႷ)
							{
								if (71 <= 71 - 14)
								{
									goto IL_0579;
								}
								if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
								{
									goto IL_06b8;
								}
								if (736 < 736 - 577)
								{
									goto IL_0e53;
								}
							}
							goto IL_02ac;
						}
						goto IL_0b12;
					}
				}
				goto IL_06b8;
				IL_0eb4:
				ReadEndElement();
				goto IL_0eba;
				IL_05f8:
				ReadEndElement();
				goto IL_02b4;
				IL_1505:
				UnknownNode(personality, ႥႷႭ.Ⴓ.ႰႷ(1821394761));
				if (172 <= 172 - 76)
				{
					goto IL_02ac;
				}
				goto IL_162a;
				IL_02b4:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations, ref readerCount);
				if (39 > 39 - 28)
				{
					goto IL_00cf;
				}
				goto IL_162a;
				IL_00cf:
				if (base.Reader.NodeType == XmlNodeType.EndElement)
				{
					goto IL_0eb4;
				}
				if (1008 <= 1008 - 851)
				{
					goto IL_0eba;
				}
				goto IL_1159;
				IL_0f76:
				array[3] = true;
				goto IL_162a;
				IL_1159:
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (false)
						{
							goto IL_09c8;
						}
						goto IL_0d77;
					}
					UnknownNode(personality, ႥႷႭ.Ⴍ.ႰႷ(1821394782));
					if (562 > 562 - 34)
					{
						goto IL_02b4;
					}
					goto IL_08e4;
				}
				if (227 < 227 - 13)
				{
					goto IL_0aca;
				}
				goto IL_0eb4;
				IL_1536:
				if (!base.Reader.IsEmptyElement)
				{
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations2 = 0;
					readerCount2 = base.ReaderCount;
					goto IL_109b;
				}
				if ((615 + 615 * 615) % 2 == 0)
				{
					base.Reader.Skip();
					goto IL_02b4;
				}
				goto IL_0d77;
				IL_0afb:
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				goto IL_0b12;
				IL_0b12:
				whileIterations3 = 0;
				readerCount3 = base.ReaderCount;
				goto IL_099e;
				IL_06b8:
				if (flag)
				{
					if (102 >= 102 - 5)
					{
						break;
					}
					goto IL_0f76;
				}
				personality = new Personality();
				if (personality.StateMoodCounterList != null)
				{
					goto IL_0a21;
				}
				if (295 <= 295 - 78)
				{
					goto IL_042b;
				}
				goto IL_0c15;
				IL_0d77:
				if ((object)base.Reader.LocalName == ႳႠႨ)
				{
					if (false)
					{
						goto IL_0faf;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (false)
						{
							goto IL_0325;
						}
						goto IL_0da7;
					}
				}
				if ((object)base.Reader.LocalName == ႠႣ)
				{
					if (865 <= 865 - 122)
					{
						goto IL_1425;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if ((10 + 10 * 10) % 2 == 0)
						{
							if (ReadNull())
							{
								goto IL_02b4;
							}
							if ((383 + 383 * 383) % 2 == 0)
							{
								goto IL_042b;
							}
							goto IL_0ad0;
						}
						goto IL_11bd;
					}
				}
				if ((object)base.Reader.LocalName != ႳႰႥ)
				{
					goto IL_0742;
				}
				if (523 > 523 - 195)
				{
					goto IL_09f6;
				}
				goto IL_13cd;
				IL_13cd:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_0f45;
				}
				if ((275 + 275 * 275) % 2 == 0)
				{
					personality.CreationDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
					array[7] = true;
					goto IL_162a;
				}
				goto IL_04d9;
				IL_0184:
				base.Reader.Skip();
				goto IL_02b4;
				IL_0a21:
				_ = personality.StateMoodCounterList;
				if (personality.ActionUsages == null)
				{
					if (739 > 739 - 652)
					{
						goto IL_03d8;
					}
					goto IL_0628;
				}
				goto IL_090f;
				IL_04d9:
				if ((object)base.Reader.LocalName == ႳႳႳ)
				{
					if (587 < 587 - 271)
					{
						goto IL_05f8;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (476 < 476 - 409)
						{
							goto IL_00fc;
						}
						personality.IgnoreInternalScenarios = XmlConvert.ToBoolean(base.Reader.Value);
						array[15] = true;
						goto IL_162a;
					}
				}
				goto IL_04ae;
				IL_090f:
				_ = personality.ActionUsages;
				if (personality.DataFiles == null)
				{
					if (123 >= 123 - 78)
					{
						personality.DataFiles = new List<PersonalityDataFile>();
						if ((491 + 491 * 491) % 2 == 0)
						{
							goto IL_16ae;
						}
					}
					goto IL_02b4;
				}
				goto IL_16ae;
				IL_0325:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_0120;
				}
				if (904 >= 904 - 405)
				{
					personality.Language = base.Reader.Value;
					goto IL_0734;
				}
				goto IL_0ecc;
				IL_0742:
				if ((object)base.Reader.LocalName == ႳႳႤ)
				{
					if (false)
					{
						goto IL_0bad;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if ((791 + 791 * 791) % 2 == 0)
						{
							goto IL_0848;
						}
						goto IL_161a;
					}
				}
				goto IL_026f;
				IL_16ae:
				_ = personality.DataFiles;
				array = new bool[16];
				goto IL_162a;
				IL_162a:
				while (base.Reader.MoveToNextAttribute())
				{
					if (!array[0])
					{
						if (748 <= 748 - 313)
						{
							goto IL_1203;
						}
						if ((object)base.Reader.LocalName == ႳႣႼ)
						{
							if (false)
							{
								goto IL_0a91;
							}
							if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								goto IL_1081;
							}
						}
					}
					if (!array[1])
					{
						if (163 <= 163 - 159)
						{
							goto IL_07ee;
						}
						if ((object)base.Reader.LocalName == ႳႠႠ)
						{
							if (109 < 109 - 24)
							{
								goto IL_0e0d;
							}
							if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
							{
								if (168 >= 168 - 147)
								{
									personality.Name = base.Reader.Value;
									array[1] = true;
								}
								continue;
							}
						}
					}
					goto IL_0303;
				}
				if (437 <= 437 - 258)
				{
					continue;
				}
				goto IL_0628;
				IL_0ecc:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394762));
				goto IL_0ba1;
				IL_1081:
				if ((989 + 989 * 989) % 2 == 0)
				{
					personality.ID = XmlConvert.ToGuid(base.Reader.Value);
					goto IL_0884;
				}
				goto IL_1560;
				IL_05a7:
				base.Reader.MoveToContent();
				whileIterations4 = 0;
				readerCount4 = base.ReaderCount;
				goto IL_0faf;
				IL_0303:
				if (!array[2])
				{
					if (false)
					{
						goto IL_0142;
					}
					if ((object)base.Reader.LocalName == ႳႳႼ)
					{
						if (31 <= 31 - 3)
						{
							goto IL_06ad;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (629 <= 629 - 263)
							{
								goto IL_0608;
							}
							goto IL_14b9;
						}
					}
				}
				goto IL_0579;
				IL_0734:
				array[4] = true;
				goto IL_162a;
				IL_0da7:
				if (ReadNull())
				{
					goto IL_02b4;
				}
				if (676 <= 676 - 19)
				{
					goto IL_0aa8;
				}
				goto IL_0aca;
				IL_0c74:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394774));
				goto IL_0b47;
				IL_06ad:
				obj = null;
				goto IL_1432;
				IL_0aa8:
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_00cf;
				IL_0aca:
				array2 = null;
				num = 0;
				goto IL_0ad0;
				IL_0579:
				if (!array[3])
				{
					if (645 <= 645 - 638)
					{
						goto IL_0ba1;
					}
					if ((object)base.Reader.LocalName == this.m_ႳႣ)
					{
						if (758 > 758 - 61)
						{
							goto IL_0e53;
						}
						goto IL_1652;
					}
				}
				goto IL_065f;
				IL_0e01:
				base.Reader.MoveToContent();
				goto IL_0e0d;
				IL_0e0d:
				CheckReaderCount(ref whileIterations5, ref readerCount5);
				if ((132 + 132 * 132) % 2 == 0)
				{
					goto IL_0142;
				}
				goto IL_0e01;
				IL_0142:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (530 >= 530 - 359)
					{
						goto IL_07ee;
					}
					goto IL_0e31;
				}
				goto IL_0ebc;
				IL_0e53:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_065f;
				}
				if (938 < 938 - 643)
				{
					goto IL_0120;
				}
				personality.Author = base.Reader.Value;
				goto IL_0f76;
				IL_0b27:
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (17 < 17 - 11)
					{
						goto IL_0bad;
					}
					if ((object)base.Reader.LocalName == ႨႠ)
					{
						if (false)
						{
							goto IL_0b47;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (258 < 258 - 189)
							{
								goto IL_05a7;
							}
							array2 = (int[])EnsureArrayIndex(array2, num, typeof(int));
							array2[num++] = XmlConvert.ToInt32(base.Reader.ReadElementString());
							goto IL_0ba1;
						}
					}
					goto IL_0ecc;
				}
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394762));
				if (847 < 847 - 772)
				{
					goto IL_0b47;
				}
				goto IL_0ba1;
				IL_09f6:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_0742;
				}
				if (213 >= 213 - 59)
				{
					goto IL_0892;
				}
				goto IL_0a4e;
				IL_065f:
				if (!array[4])
				{
					if (321 < 321 - 38)
					{
						goto IL_0abd;
					}
					if ((object)base.Reader.LocalName == this.m_ႳႤ)
					{
						if (429 >= 429 - 331)
						{
							goto IL_0325;
						}
						goto IL_09f6;
					}
				}
				goto IL_0120;
				IL_0ad0:
				if (!base.Reader.IsEmptyElement)
				{
					goto IL_059c;
				}
				if (293 <= 293 - 172)
				{
					goto IL_14b9;
				}
				base.Reader.Skip();
				goto IL_13a3;
				IL_021e:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394763));
				if (923 >= 923 - 840)
				{
					goto IL_11f7;
				}
				goto IL_162a;
				IL_0a4e:
				ReadEndElement();
				if (false)
				{
					goto IL_1159;
				}
				goto IL_13a3;
				IL_0120:
				if (!array[6])
				{
					if (false)
					{
						goto IL_0734;
					}
					if ((object)base.Reader.LocalName == this.m_ႣႳ)
					{
						if (302 <= 302 - 204)
						{
							goto IL_161a;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (27 < 27 - 2)
							{
								goto IL_026f;
							}
							personality.IconColorSchemeIndex = XmlConvert.ToInt32(base.Reader.Value);
							array[6] = true;
							goto IL_162a;
						}
					}
				}
				goto IL_0608;
				IL_0ebc:
				ReadEndElement();
				goto IL_02b4;
				IL_0ba1:
				base.Reader.MoveToContent();
				goto IL_0bad;
				IL_0848:
				if (ReadNull())
				{
					goto IL_02b4;
				}
				if (886 < 886 - 684)
				{
					goto IL_06b8;
				}
				if (personality.DataFiles == null)
				{
					if (365 < 365 - 69)
					{
						goto IL_0b27;
					}
					personality.DataFiles = new List<PersonalityDataFile>();
					if (227 <= 227 - 41)
					{
						goto IL_0892;
					}
				}
				dataFiles = personality.DataFiles;
				goto IL_1536;
				IL_0bad:
				CheckReaderCount(ref whileIterations4, ref readerCount4);
				if (181 >= 181 - 1)
				{
					goto IL_0faf;
				}
				goto IL_14b9;
				IL_0faf:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (false)
					{
						goto IL_162a;
					}
					if (base.Reader.NodeType != 0)
					{
						goto IL_0b27;
					}
					if (248 <= 248 - 53)
					{
						goto IL_0b47;
					}
				}
				goto IL_0a4e;
				IL_01d1:
				personality.UpdateDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
				array[8] = true;
				goto IL_162a;
				IL_0608:
				if (!array[7])
				{
					if (274 < 274 - 54)
					{
						goto IL_11f7;
					}
					if ((object)base.Reader.LocalName == this.m_ႣႠ)
					{
						if (false)
						{
							goto IL_0c15;
						}
						goto IL_13cd;
					}
				}
				goto IL_0f45;
				IL_0eba:
				return personality;
				IL_0892:
				if (ReadNull())
				{
					goto IL_02b4;
				}
				if (427 >= 427 - 287)
				{
					if (personality.ActionUsages == null)
					{
						if (131 < 131 - 42)
						{
							goto IL_0848;
						}
						personality.ActionUsages = new List<ActionUsage>();
						if (344 < 344 - 210)
						{
							goto IL_0f76;
						}
					}
					while (true)
					{
						actionUsages = personality.ActionUsages;
						if (!base.Reader.IsEmptyElement)
						{
							break;
						}
						if (false)
						{
							continue;
						}
						goto IL_0184;
					}
					goto IL_11a6;
				}
				goto IL_1536;
				IL_14b9:
				personality.Description = base.Reader.Value;
				array[2] = true;
				goto IL_162a;
				IL_0c15:
				personality.StateMoodCounterList = new List<MoodCounter>();
				if (189 < 189 - 85)
				{
					goto IL_037f;
				}
				goto IL_0a21;
				IL_0f45:
				if (!array[8])
				{
					if (370 <= 370 - 43)
					{
						goto IL_0bad;
					}
					if ((object)base.Reader.LocalName == this.m_ႷႭ)
					{
						if (1007 < 1007 - 43)
						{
							goto IL_0da7;
						}
						goto IL_1343;
					}
				}
				goto IL_0bf8;
				IL_026f:
				UnknownNode(personality, ႥႷႭ.Ⴍ.ႰႷ(1821394782));
				goto IL_02b4;
				IL_0ce1:
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394703));
				goto IL_0e01;
				IL_1343:
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if ((794 + 794 * 794) % 2 == 0)
					{
						goto IL_01d1;
					}
					goto IL_07ee;
				}
				goto IL_0bf8;
				IL_0bf8:
				if (!array[9])
				{
					if (77 < 77 - 3)
					{
						goto IL_162a;
					}
					if ((object)base.Reader.LocalName == ႳႨႤ)
					{
						if (473 <= 473 - 426)
						{
							goto IL_0884;
						}
						goto IL_1652;
					}
				}
				goto IL_0070;
				IL_161a:
				ReadEndElement();
				goto IL_02b4;
				IL_1575:
				if ((object)base.Reader.LocalName == ႨႳ)
				{
					if (503 < 503 - 200)
					{
						goto IL_02b4;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (773 > 773 - 17)
						{
							if (stateMoodCounterList != null)
							{
								goto IL_0964;
							}
							if (911 <= 911 - 656)
							{
								goto IL_01d1;
							}
							base.Reader.Skip();
							goto IL_11f7;
						}
						goto IL_11a6;
					}
				}
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394763));
				goto IL_11f7;
				IL_08e4:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_01ae;
				}
				if (360 > 360 - 19)
				{
					personality.IsPrivate = XmlConvert.ToBoolean(base.Reader.Value);
				}
				array[10] = true;
				goto IL_162a;
				IL_0884:
				array[0] = true;
				goto IL_162a;
				IL_0070:
				if (!array[10])
				{
					if (false)
					{
						goto IL_0e01;
					}
					if ((object)base.Reader.LocalName == ႥႥ)
					{
						if (false)
						{
							goto IL_059c;
						}
						goto IL_08e4;
					}
				}
				goto IL_01ae;
				IL_11a6:
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				goto IL_11bd;
				IL_11bd:
				whileIterations5 = 0;
				readerCount5 = base.ReaderCount;
				goto IL_0142;
				IL_09c8:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_0ce1;
				}
				if (300 < 300 - 114)
				{
					goto IL_0507;
				}
				if (actionUsages != null)
				{
					actionUsages.Add(ႣႭ(Ⴍ: true, Ⴓ: true));
					goto IL_0e01;
				}
				if (293 < 293 - 192)
				{
					goto IL_0c74;
				}
				goto IL_1560;
				IL_01ae:
				if (!array[11])
				{
					if (false)
					{
						goto IL_11f7;
					}
					if ((object)base.Reader.LocalName == ႳႥႤ)
					{
						if (725 < 725 - 115)
						{
							goto IL_0e01;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (243 > 243 - 47)
							{
								goto IL_1181;
							}
							goto IL_162a;
						}
					}
				}
				if (array[15])
				{
					goto IL_04ae;
				}
				if ((849 + 849 * 849) % 2 == 0)
				{
					goto IL_04d9;
				}
				goto IL_1652;
				IL_0507:
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (472 <= 472 - 317)
					{
						goto IL_1181;
					}
					if ((object)base.Reader.LocalName != ႥႤ)
					{
						goto IL_0ce1;
					}
					if (113 > 113 - 12)
					{
						goto IL_09c8;
					}
					goto IL_1343;
				}
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394703));
				if (887 >= 887 - 19)
				{
					goto IL_0e01;
				}
				goto IL_1575;
				IL_0b47:
				base.Reader.MoveToContent();
				CheckReaderCount(ref whileIterations2, ref readerCount2);
				if (982 >= 982 - 1)
				{
					goto IL_109b;
				}
				goto IL_162a;
				IL_1181:
				personality.IsReadOnly = XmlConvert.ToBoolean(base.Reader.Value);
				array[11] = true;
				goto IL_162a;
				IL_1560:
				base.Reader.Skip();
				goto IL_0e01;
				IL_03d8:
				personality.ActionUsages = new List<ActionUsage>();
				if (435 <= 435 - 127)
				{
					goto IL_05f8;
				}
				goto IL_090f;
				IL_13a3:
				personality.DecorationImages = (int[])ShrinkArray(array2, num, typeof(int), isNullable: false);
				goto IL_02b4;
				IL_0e31:
				if (dataFiles != null)
				{
					dataFiles.Add(ႷႳ(Ⴍ: true, Ⴄ: true));
				}
				else
				{
					if (557 <= 557 - 287)
					{
						goto IL_0e01;
					}
					base.Reader.Skip();
				}
				goto IL_0b47;
				IL_1652:
				if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
				{
					goto IL_0070;
				}
				if (625 > 625 - 41)
				{
					personality.IsHidden = XmlConvert.ToBoolean(base.Reader.Value);
					array[9] = true;
				}
				goto IL_162a;
				IL_00fc:
				if (base.Reader.NodeType == XmlNodeType.None)
				{
					if (117 <= 117 - 5)
					{
						goto IL_02b4;
					}
					goto IL_161a;
				}
				if (base.Reader.NodeType == XmlNodeType.Element)
				{
					if (448 <= 448 - 316)
					{
						goto IL_162a;
					}
					if ((object)base.Reader.LocalName == ႤႠ)
					{
						if (false)
						{
							goto IL_07ee;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if (false)
							{
								goto IL_03d8;
							}
							goto IL_0e31;
						}
					}
					goto IL_0c74;
				}
				UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394774));
				if (192 <= 192 - 63)
				{
					goto IL_0a4e;
				}
				goto IL_0b47;
				IL_07ee:
				if (base.Reader.NodeType != 0)
				{
					goto IL_0507;
				}
				if (872 < 872 - 675)
				{
					goto IL_021e;
				}
				goto IL_0ebc;
				IL_04ae:
				if (!IsXmlnsAttribute(base.Reader.Name))
				{
					if (162 <= 162 - 42)
					{
						goto IL_0964;
					}
					goto IL_1505;
				}
				goto IL_162a;
				IL_02ac:
				throw CreateUnknownTypeException(xmlQualifiedName);
				IL_0964:
				stateMoodCounterList.Add(ႳႰ(Ⴍ: true, Ⴓ: true));
				goto IL_11f7;
				IL_11f7:
				base.Reader.MoveToContent();
				goto IL_1203;
				IL_1203:
				CheckReaderCount(ref whileIterations3, ref readerCount3);
				if ((155 + 155 * 155) % 2 == 0)
				{
					goto IL_099e;
				}
				goto IL_162a;
				IL_099e:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if (1016 <= 1016 - 21)
					{
						goto IL_0a9c;
					}
					if (base.Reader.NodeType != 0)
					{
						if (base.Reader.NodeType != XmlNodeType.Element)
						{
							goto IL_021e;
						}
						if (985 <= 985 - 786)
						{
							goto IL_00cf;
						}
						goto IL_1575;
					}
					if (395 < 395 - 32)
					{
						goto IL_0628;
					}
				}
				goto IL_05f8;
				IL_059c:
				base.Reader.ReadStartElement();
				goto IL_05a7;
				IL_042b:
				if (personality.StateMoodCounterList == null)
				{
					if (152 < 152 - 140)
					{
						goto IL_1505;
					}
					personality.StateMoodCounterList = new List<MoodCounter>();
					if (58 < 58 - 48)
					{
						goto IL_0742;
					}
				}
				stateMoodCounterList = personality.StateMoodCounterList;
				goto IL_037f;
				IL_109b:
				if (base.Reader.NodeType != XmlNodeType.EndElement)
				{
					if ((705 + 705 * 705) % 2 == 0)
					{
						goto IL_00fc;
					}
					goto IL_021e;
				}
				goto IL_161a;
				IL_0628:
				base.Reader.MoveToElement();
				if (!base.Reader.IsEmptyElement)
				{
					goto IL_0a91;
				}
				if (646 >= 646 - 292)
				{
					goto IL_0abd;
				}
				goto IL_162a;
				IL_037f:
				if (base.Reader.IsEmptyElement)
				{
					if (137 > 137 - 124)
					{
						base.Reader.Skip();
						goto IL_02b4;
					}
					goto IL_01d1;
				}
				goto IL_0afb;
				IL_0abd:
				base.Reader.Skip();
				return personality;
				IL_0a91:
				base.Reader.ReadStartElement();
				goto IL_0a9c;
			}
			return null;
		}

		private WebConnectionResult ႳႭႷ(string Ⴍ)
		{
			int num = 8;
			string a = default(string);
			while (true)
			{
				switch (num)
				{
				default:
					num = (((a = Ⴍ) != null) ? 1 : 7);
					break;
				case 1:
					num = ((a == ႥႷႭ.Ⴍ.ႰႷ(1821394695)) ? 9 : 5);
					break;
				case 5:
					num = ((a == ႥႷႭ.Ⴓ.ႰႷ(1821394772)) ? 10 : 0);
					break;
				case 0:
					num = ((a == ႥႷႭ.Ⴍ.ႰႷ(1821394689)) ? 2 : 6);
					break;
				case 6:
					num = ((a == ႥႷႭ.Ⴓ.ႰႷ(1821394773)) ? 4 : 3);
					break;
				case 3:
					num = 7;
					break;
				case 9:
					return WebConnectionResult.Unknown;
				case 10:
					return WebConnectionResult.Connected;
				case 2:
					return WebConnectionResult.Failed;
				case 4:
					return WebConnectionResult.AccessDenied;
				case 7:
					throw CreateUnknownConstantException(Ⴍ, typeof(WebConnectionResult));
				}
			}
		}

		private PushButtonAction ႳႭႥ(string Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0023, IL_0027, IL_0075, IL_0096
			string a;
			if ((a = Ⴍ) != null)
			{
				if (913 >= 913 - 646)
				{
					while (true)
					{
						if (a == ႥႷႭ.Ⴓ.ႰႷ(1821394729))
						{
							return PushButtonAction.Mute;
						}
						if (6 >= 6 - 3)
						{
							do
							{
								if (a == ႥႷႭ.Ⴍ.ႰႷ(1821394780))
								{
									return PushButtonAction.SurpriseMe;
								}
							}
							while (736 < 736 - 59);
						}
						if (a == ႥႷႭ.Ⴓ.ႰႷ(1821394731))
						{
							break;
						}
						if ((418 + 418 * 418) % 2 == 0)
						{
							goto IL_002b;
						}
					}
				}
				return PushButtonAction.ChooseAction;
			}
			goto IL_002b;
			IL_002b:
			throw CreateUnknownConstantException(Ⴍ, typeof(PushButtonAction));
		}

		private ContentFileEntry ႷႷ(bool Ⴍ, bool Ⴄ)
		{
			int num = 23;
			bool flag = default(bool);
			XmlQualifiedName xmlQualifiedName = default(XmlQualifiedName);
			ContentFileEntry contentFileEntry = default(ContentFileEntry);
			bool[] array = default(bool[]);
			int whileIterations = default(int);
			int readerCount = default(int);
			while (true)
			{
				object obj;
				switch (num)
				{
				default:
					num = (Ⴄ ? 31 : 7);
					break;
				case 7:
					obj = null;
					goto IL_00a7;
				case 31:
					obj = GetXsiType();
					goto IL_00a7;
				case 9:
					flag = ReadNull();
					num = 11;
					break;
				case 11:
					num = ((!Ⴄ) ? 5 : 14);
					break;
				case 14:
					num = ((xmlQualifiedName == null) ? 5 : 18);
					break;
				case 18:
					num = (((object)xmlQualifiedName.Name != ႳႨႷ) ? 21 : 0);
					break;
				case 0:
					num = (((object)xmlQualifiedName.Namespace == this.m_ႰႷ) ? 5 : 21);
					break;
				case 21:
					throw CreateUnknownTypeException(xmlQualifiedName);
				case 5:
					num = ((!flag) ? 27 : 22);
					break;
				case 22:
					return null;
				case 27:
					contentFileEntry = new ContentFileEntry();
					array = new bool[2];
					num = 4;
					break;
				case 3:
					num = (array[0] ? 19 : 32);
					break;
				case 32:
					num = (((object)base.Reader.LocalName != this.m_ႷႷ) ? 19 : 24);
					break;
				case 24:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 19 : 20);
					break;
				case 20:
					contentFileEntry.FileName = base.Reader.Value;
					array[0] = true;
					num = 4;
					break;
				case 19:
					num = (array[1] ? 12 : 2);
					break;
				case 2:
					num = (((object)base.Reader.LocalName != this.m_ႷႭ) ? 12 : 13);
					break;
				case 13:
					num = (((object)base.Reader.NamespaceURI != this.m_ႰႷ) ? 12 : 8);
					break;
				case 8:
					contentFileEntry.UpdateDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
					array[1] = true;
					num = 4;
					break;
				case 12:
					num = (IsXmlnsAttribute(base.Reader.Name) ? 4 : 25);
					break;
				case 25:
					UnknownNode(contentFileEntry, ႥႷႭ.Ⴍ.ႰႷ(1821394781));
					goto case 4;
				case 4:
					num = (base.Reader.MoveToNextAttribute() ? 3 : 29);
					break;
				case 29:
					base.Reader.MoveToElement();
					num = ((!base.Reader.IsEmptyElement) ? 1 : 15);
					break;
				case 15:
					base.Reader.Skip();
					return contentFileEntry;
				case 1:
					base.Reader.ReadStartElement();
					base.Reader.MoveToContent();
					whileIterations = 0;
					readerCount = base.ReaderCount;
					num = 10;
					break;
				case 17:
					num = ((base.Reader.NodeType != XmlNodeType.Element) ? 30 : 28);
					break;
				case 28:
					UnknownNode(contentFileEntry, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					num = 6;
					break;
				case 30:
					UnknownNode(contentFileEntry, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					goto case 6;
				case 6:
					base.Reader.MoveToContent();
					CheckReaderCount(ref whileIterations, ref readerCount);
					goto case 10;
				case 10:
					num = ((base.Reader.NodeType == XmlNodeType.EndElement) ? 26 : 16);
					break;
				case 16:
					num = ((base.Reader.NodeType != 0) ? 17 : 26);
					break;
				case 26:
					{
						ReadEndElement();
						return contentFileEntry;
					}
					IL_00a7:
					xmlQualifiedName = (XmlQualifiedName)obj;
					flag = false;
					num = ((!Ⴍ) ? 11 : 9);
					break;
				}
			}
		}

		private LevelLastChangeDirection ႳႭႰ(string Ⴀ)
		{
			//Discarded unreachable code: IL_0002, IL_003c, IL_0052, IL_0056, IL_0077
			string a;
			if ((a = Ⴀ) != null)
			{
				if ((973 + 973 * 973) % 2 == 0)
				{
					if (a == ႥႷႭ.Ⴓ.ႰႷ(1821394741))
					{
						return LevelLastChangeDirection.Increasing;
					}
					if (1016 > 1016 - 126)
					{
						if (!(a == ႥႷႭ.Ⴍ.ႰႷ(1821394783)))
						{
							if (780 >= 780 - 648)
							{
								goto IL_0004;
							}
						}
						return LevelLastChangeDirection.Decreasing;
					}
				}
			}
			goto IL_0004;
			IL_0004:
			throw CreateUnknownConstantException(Ⴀ, typeof(LevelLastChangeDirection));
		}

		private ChatmanFriendship ႷႥ(bool Ⴓ, bool Ⴅ)
		{
			//Discarded unreachable code: IL_0005, IL_002d, IL_0057, IL_0083, IL_00b6, IL_00e2, IL_010f, IL_013d, IL_0161, IL_0175, IL_01a2, IL_01ce, IL_01f0, IL_0220, IL_024e, IL_029b, IL_02c6, IL_02f6, IL_0317, IL_033b, IL_035c, IL_038c, IL_03b1, IL_03c9, IL_03f3, IL_0416, IL_0441, IL_0449, IL_047a, IL_04a7, IL_04cb, IL_04eb, IL_050a, IL_0517, IL_0535, IL_0557, IL_0578, IL_05a6
			if (Ⴅ)
			{
				goto IL_050f;
			}
			if (706 <= 706 - 657)
			{
				goto IL_00e7;
			}
			object obj = null;
			goto IL_051c;
			IL_03cb:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_0222;
			}
			ChatmanFriendship chatmanFriendship = default(ChatmanFriendship);
			if ((9 + 9 * 9) % 2 == 0)
			{
				chatmanFriendship.LastScoreDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
				goto IL_0332;
			}
			goto IL_01d0;
			IL_0332:
			bool[] array = default(bool[]);
			array[3] = true;
			goto IL_0034;
			IL_050f:
			obj = GetXsiType();
			goto IL_051c;
			IL_051c:
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			if (Ⴓ)
			{
				if (775 > 775 - 502)
				{
					goto IL_0253;
				}
				goto IL_050f;
			}
			goto IL_055c;
			IL_000a:
			UnknownNode(chatmanFriendship, ႥႷႭ.Ⴍ.ႰႷ(1821394776));
			if ((1018 + 1018 * 1018) % 2 == 0)
			{
				goto IL_0034;
			}
			goto IL_0332;
			IL_055c:
			if (Ⴅ)
			{
				if (255 <= 255 - 144)
				{
				}
				if (!(xmlQualifiedName == null))
				{
					if ((754 + 754 * 754) % 2 == 0)
					{
						if ((object)xmlQualifiedName.Name == ႳႳႰ)
						{
							if (false)
							{
								goto IL_000a;
							}
							if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
							{
								goto IL_0340;
							}
							if (306 < 306 - 295)
							{
								goto IL_01d0;
							}
						}
						throw CreateUnknownTypeException(xmlQualifiedName);
					}
					goto IL_04d0;
				}
			}
			goto IL_0340;
			IL_0114:
			if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
			{
				if (946 <= 946 - 932)
				{
					goto IL_0034;
				}
				goto IL_01d0;
			}
			goto IL_053a;
			IL_0222:
			if (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (611 > 611 - 198)
				{
					goto IL_000a;
				}
			}
			goto IL_0034;
			IL_01d0:
			chatmanFriendship.LevelChangeDirection = ႳႭႰ(base.Reader.Value);
			array[1] = true;
			goto IL_0034;
			IL_04d0:
			if (!array[1])
			{
				if (506 <= 506 - 219)
				{
					goto IL_0034;
				}
				goto IL_044e;
			}
			goto IL_053a;
			IL_053a:
			if (!array[2])
			{
				if (false)
				{
					goto IL_04ac;
				}
				if ((object)base.Reader.LocalName == ႳႣႭ)
				{
					if (895 > 895 - 246)
					{
						goto IL_00e7;
					}
					goto IL_0158;
				}
			}
			goto IL_03f8;
			IL_0253:
			flag = ReadNull();
			if (false)
			{
				goto IL_03cb;
			}
			goto IL_055c;
			IL_04ac:
			chatmanFriendship.LastLevel = XmlConvert.ToInt32(base.Reader.Value);
			array[0] = true;
			goto IL_0034;
			IL_044e:
			if ((object)base.Reader.LocalName == ႼႭ)
			{
				if (1013 < 1013 - 391)
				{
					goto IL_00c6;
				}
				goto IL_0114;
			}
			goto IL_053a;
			IL_0340:
			if (flag)
			{
				if (613 >= 613 - 401)
				{
					return null;
				}
			}
			chatmanFriendship = new ChatmanFriendship();
			goto IL_0169;
			IL_041b:
			base.Reader.MoveToContent();
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (257 < 257 - 86)
			{
				goto IL_0114;
			}
			goto IL_047f;
			IL_00e7:
			if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
			{
				if (false)
				{
					goto IL_0034;
				}
				chatmanFriendship.Score = XmlConvert.ToInt32(base.Reader.Value);
				goto IL_0158;
			}
			goto IL_03f8;
			IL_01a7:
			UnknownNode(chatmanFriendship, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
			if (311 <= 311 - 159)
			{
				goto IL_0034;
			}
			goto IL_041b;
			IL_0169:
			array = new bool[4];
			goto IL_0034;
			IL_0034:
			while (base.Reader.MoveToNextAttribute())
			{
				while (!array[0])
				{
					if ((335 + 335 * 335) % 2 == 0)
					{
						if ((object)base.Reader.LocalName != ႥႭ)
						{
							break;
						}
						if ((468 + 468 * 468) % 2 == 0)
						{
							if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
							{
								break;
							}
							if (false)
							{
								continue;
							}
							goto IL_04ac;
						}
						goto IL_0034;
					}
					goto IL_0169;
				}
				goto IL_04d0;
				IL_0034:;
			}
			if (831 <= 831 - 377)
			{
				goto IL_00d5;
			}
			base.Reader.MoveToElement();
			if (base.Reader.IsEmptyElement)
			{
				if (false)
				{
					goto IL_0169;
				}
				base.Reader.Skip();
				return chatmanFriendship;
			}
			base.Reader.ReadStartElement();
			goto IL_00c6;
			IL_047f:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (464 <= 464 - 404)
				{
					goto IL_0222;
				}
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType != XmlNodeType.Element)
					{
						goto IL_01a7;
					}
					if (false)
					{
						goto IL_044e;
					}
					UnknownNode(chatmanFriendship, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					goto IL_041b;
				}
				if (887 < 887 - 831)
				{
					goto IL_0253;
				}
			}
			ReadEndElement();
			return chatmanFriendship;
			IL_00c6:
			base.Reader.MoveToContent();
			whileIterations = 0;
			goto IL_00d5;
			IL_0158:
			array[2] = true;
			goto IL_0034;
			IL_00d5:
			readerCount = base.ReaderCount;
			goto IL_047f;
			IL_03f8:
			if (!array[3])
			{
				if (1016 < 1016 - 948)
				{
					goto IL_01a7;
				}
				if ((object)base.Reader.LocalName == Ⴄ)
				{
					if (159 >= 159 - 71)
					{
						goto IL_03cb;
					}
					goto IL_041b;
				}
			}
			goto IL_0222;
		}

		private ChatmanBrainPower ႷႰ(bool Ⴓ, bool Ⴅ)
		{
			//Discarded unreachable code: IL_0022, IL_003a, IL_0066, IL_008e, IL_00b9, IL_00d7, IL_00f9, IL_0101, IL_012d, IL_015e, IL_0186, IL_01a9, IL_01c3, IL_01e2, IL_020b, IL_0233, IL_0257, IL_028c, IL_02b7, IL_02ea, IL_0314, IL_0344, IL_0362, IL_0386, IL_03b0, IL_03dd, IL_040d, IL_0424, IL_042e, IL_044f, IL_0479, IL_049b, IL_04bc, IL_04e7
			object obj;
			if (!Ⴅ)
			{
				if (309 <= 309 - 298)
				{
					goto IL_0388;
				}
				obj = null;
			}
			else
			{
				obj = GetXsiType();
			}
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			if (!Ⴓ)
			{
				goto IL_0271;
			}
			if (553 <= 553 - 511)
			{
				goto IL_02be;
			}
			goto IL_047e;
			IL_0319:
			if ((object)base.Reader.LocalName != ႥႷ)
			{
				goto IL_01c8;
			}
			if (false)
			{
				goto IL_0418;
			}
			goto IL_0451;
			IL_02bc:
			return null;
			IL_0132:
			base.Reader.MoveToElement();
			goto IL_013e;
			IL_0367:
			ChatmanBrainPower chatmanBrainPower = default(ChatmanBrainPower);
			chatmanBrainPower.ChitChatCount = XmlConvert.ToInt32(base.Reader.Value);
			bool[] array = default(bool[]);
			array[0] = true;
			goto IL_0210;
			IL_0388:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (904 < 904 - 828)
				{
					goto IL_0319;
				}
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType == XmlNodeType.Element)
					{
						if (false)
						{
							goto IL_0163;
						}
						UnknownNode(chatmanBrainPower, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					}
					else
					{
						UnknownNode(chatmanBrainPower, ႥႷႭ.Ⴍ.ႰႷ(1821394853));
						if (97 <= 97 - 92)
						{
							goto IL_0132;
						}
					}
					goto IL_0093;
				}
				if (false)
				{
					goto IL_0367;
				}
			}
			ReadEndElement();
			goto IL_0262;
			IL_0271:
			if (Ⴅ)
			{
				if ((204 + 204 * 204) % 2 == 0)
				{
					goto IL_00be;
				}
			}
			goto IL_01ae;
			IL_0093:
			base.Reader.MoveToContent();
			int whileIterations = default(int);
			int readerCount = default(int);
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (90 < 90 - 61)
			{
				goto IL_0262;
			}
			goto IL_0388;
			IL_01ae:
			if (flag)
			{
				if (false)
				{
					goto IL_0163;
				}
				goto IL_02bc;
			}
			chatmanBrainPower = new ChatmanBrainPower();
			goto IL_0418;
			IL_047e:
			flag = ReadNull();
			if (531 >= 531 - 224)
			{
				goto IL_0271;
			}
			goto IL_0319;
			IL_02be:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_0163;
			}
			if (297 <= 297 - 242)
			{
				goto IL_0210;
			}
			chatmanBrainPower.DateChatmanWasLastTaught = XmlSerializationReader.ToDateTime(base.Reader.Value);
			goto IL_04b3;
			IL_0418:
			array = new bool[3];
			goto IL_0210;
			IL_0210:
			if (base.Reader.MoveToNextAttribute())
			{
				if (!array[0])
				{
					if (false)
					{
						goto IL_02bc;
					}
					if ((object)base.Reader.LocalName == ႥႼ)
					{
						if (false)
						{
							goto IL_0093;
						}
						if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
						{
							if ((562 + 562 * 562) % 2 == 0)
							{
								goto IL_0367;
							}
						}
					}
				}
				if (array[1])
				{
					goto IL_01c8;
				}
				if ((676 + 676 * 676) % 2 == 0)
				{
					goto IL_0319;
				}
				goto IL_0367;
			}
			if (435 <= 435 - 72)
			{
				goto IL_00be;
			}
			goto IL_0132;
			IL_01c8:
			if (!array[2])
			{
				if (false)
				{
					goto IL_0132;
				}
				if ((object)base.Reader.LocalName == this.m_ႰႥ)
				{
					if ((69 + 69 * 69) % 2 == 0)
					{
						goto IL_02be;
					}
					goto IL_047e;
				}
			}
			goto IL_0163;
			IL_00be:
			if (xmlQualifiedName == null)
			{
				goto IL_01ae;
			}
			if (126 >= 126 - 42)
			{
				if ((object)xmlQualifiedName.Name == ႳႥႨ)
				{
					if (false)
					{
						goto IL_01c8;
					}
					if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
					{
						goto IL_01ae;
					}
					if (false)
					{
						goto IL_02be;
					}
				}
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			goto IL_0388;
			IL_0262:
			return chatmanBrainPower;
			IL_0163:
			if (!IsXmlnsAttribute(base.Reader.Name))
			{
				if (314 <= 314 - 115)
				{
					goto IL_013e;
				}
				UnknownNode(chatmanBrainPower, ႥႷႭ.Ⴍ.ႰႷ(1821394777));
				if (707 <= 707 - 206)
				{
					goto IL_04b3;
				}
			}
			goto IL_0210;
			IL_013e:
			if (!base.Reader.IsEmptyElement)
			{
				base.Reader.ReadStartElement();
				base.Reader.MoveToContent();
				whileIterations = 0;
				readerCount = base.ReaderCount;
				goto IL_0388;
			}
			if (558 <= 558 - 58)
			{
				goto IL_0451;
			}
			base.Reader.Skip();
			return chatmanBrainPower;
			IL_0451:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_01c8;
			}
			if ((122 + 122 * 122) % 2 == 0)
			{
				chatmanBrainPower.WordCount = XmlConvert.ToInt32(base.Reader.Value);
				array[1] = true;
				goto IL_0210;
			}
			goto IL_0271;
			IL_04b3:
			array[2] = true;
			goto IL_0210;
		}

		private Chatman ႷႠ(bool Ⴓ, bool Ⴅ)
		{
			//Discarded unreachable code: IL_0005, IL_0036, IL_005b, IL_0083, IL_00a4, IL_00d5, IL_00fb, IL_012b, IL_014f, IL_0174, IL_019f, IL_01cd, IL_01fd, IL_0216, IL_023b, IL_025b, IL_0280, IL_02ae, IL_02de, IL_02ff, IL_0325, IL_0350, IL_0386, IL_03ad, IL_03d3, IL_0404, IL_0432, IL_0458, IL_0488, IL_04b3, IL_04e4, IL_050a, IL_0534, IL_0559, IL_0589, IL_05ba, IL_05ea, IL_0602, IL_0627, IL_0657, IL_067c, IL_06a9, IL_06da, IL_06f8, IL_071e, IL_073e, IL_0764, IL_0794, IL_07c2, IL_07e8, IL_0819, IL_083f, IL_0863, IL_0894, IL_08b5, IL_08da, IL_090b, IL_093c, IL_0967, IL_0998, IL_09bd, IL_09e9, IL_0a1a, IL_0a40, IL_0a5f, IL_0a8d, IL_0ab3, IL_0ae3, IL_0b04, IL_0b35, IL_0b55, IL_0b7a, IL_0ba7, IL_0bd7, IL_0bf8, IL_0c1c, IL_0c4a, IL_0c69, IL_0c8a, IL_0cb7, IL_0ce7, IL_0cf2, IL_0d14, IL_0d67, IL_0d87, IL_0daa, IL_0dce, IL_0df9, IL_0e17, IL_0e48, IL_0e76, IL_0e83, IL_0ea1, IL_0ec7, IL_0ef7, IL_0f1d, IL_0f4b, IL_0f75, IL_0fc6, IL_0fe7, IL_1018, IL_103a, IL_1065, IL_1095, IL_10b6, IL_10df, IL_110f, IL_113a, IL_114a, IL_117a, IL_11a9, IL_11be, IL_11dc, IL_1209, IL_1237, IL_125e, IL_127f, IL_12aa, IL_12d8, IL_1308, IL_132c, IL_135d, IL_138b, IL_13a9, IL_13e0, IL_1411, IL_143f, IL_1461, IL_1482, IL_14b3, IL_14d3, IL_1501, IL_152e, IL_155e, IL_158e, IL_15b3, IL_15e1, IL_1607, IL_1629, IL_1644, IL_1672, IL_16a3, IL_16ce, IL_16fe, IL_171d, IL_174e, IL_1773, IL_179e, IL_17cc, IL_17fc, IL_1826, IL_1854, IL_1884, IL_18a9, IL_18d7, IL_18f8, IL_1925, IL_1945, IL_1969, IL_1994, IL_19b9, IL_19e6, IL_1a11, IL_1a3d, IL_1a61, IL_1a7a, IL_1a9f, IL_1ac2, IL_1af0, IL_1b05, IL_1b2f, IL_1b4e, IL_1b6e, IL_1b83, IL_1ba1, IL_1bc7, IL_1bf8, IL_1c26, IL_1c53, IL_1c77, IL_1c96, IL_1cc7, IL_1ced, IL_1d18, IL_1d48, IL_1d6e, IL_1d94, IL_1db7, IL_1ddb, IL_1e09, IL_1e2f, IL_1e5d, IL_1e8e, IL_1e9e, IL_1ec2, IL_1ee8, IL_1f02, IL_1f27, IL_1f4b, IL_1f6c, IL_1f92
			object obj;
			if (!Ⴅ)
			{
				if (908 < 908 - 472)
				{
					goto IL_0060;
				}
				obj = null;
			}
			else
			{
				obj = GetXsiType();
			}
			XmlQualifiedName xmlQualifiedName = (XmlQualifiedName)obj;
			bool flag = false;
			if (!Ⴓ)
			{
				goto IL_11c3;
			}
			if (733 < 733 - 103)
			{
				goto IL_0361;
			}
			goto IL_1c7c;
			IL_0a45:
			bool[] array = default(bool[]);
			if (!array[25])
			{
				if (629 > 629 - 22)
				{
					goto IL_09ee;
				}
				goto IL_1487;
			}
			goto IL_1a42;
			IL_1a42:
			Chatman chatman = default(Chatman);
			if (!array[26])
			{
				if (false)
				{
					goto IL_0ae8;
				}
				if ((object)base.Reader.LocalName == ႳႭႼ)
				{
					if (750 <= 750 - 488)
					{
						goto IL_05bf;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (404 < 404 - 320)
						{
							goto IL_01d2;
						}
						chatman.DontProduceActionsStartHour = XmlConvert.ToInt32(base.Reader.Value);
						array[26] = true;
						goto IL_0fa6;
					}
				}
			}
			goto IL_1ea3;
			IL_113f:
			array[20] = true;
			goto IL_01d2;
			IL_18fd:
			List<ContentFileEntry> processedContentFiles = chatman.ProcessedContentFiles;
			if (!base.Reader.IsEmptyElement)
			{
				base.Reader.ReadStartElement();
				goto IL_09cd;
			}
			if (68 > 68 - 30)
			{
				base.Reader.Skip();
				goto IL_01d2;
			}
			goto IL_0844;
			IL_0c6e:
			chatman.UserLanguage = base.Reader.Value;
			goto IL_0c7f;
			IL_11c3:
			if (Ⴅ)
			{
				if (274 >= 274 - 47)
				{
					goto IL_0130;
				}
				goto IL_0202;
			}
			goto IL_18dc;
			IL_0ae8:
			chatman.ChatmanName = base.Reader.Value;
			goto IL_0af9;
			IL_18dc:
			if (!flag)
			{
				chatman = new Chatman();
				goto IL_0ed2;
			}
			if (991 >= 991 - 297)
			{
				goto IL_0b7f;
			}
			goto IL_1703;
			IL_0af9:
			array[11] = true;
			goto IL_0fa6;
			IL_06ed:
			array[15] = true;
			goto IL_01d2;
			IL_0ed2:
			string[] array2 = null;
			int num = 0;
			goto IL_0ed7;
			IL_0ed7:
			if (chatman.ProcessedContentFiles == null)
			{
				if (false)
				{
					goto IL_19eb;
				}
				chatman.ProcessedContentFiles = new List<ContentFileEntry>();
				if (342 <= 342 - 307)
				{
					goto IL_0130;
				}
			}
			_ = chatman.ProcessedContentFiles;
			goto IL_1ef4;
			IL_038b:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (110 > 110 - 61)
				{
					goto IL_050f;
				}
				goto IL_1114;
			}
			goto IL_1e93;
			IL_1b53:
			chatman.UserCountry = base.Reader.Value;
			goto IL_1b64;
			IL_0130:
			if (!(xmlQualifiedName == null))
			{
				if (690 <= 690 - 127)
				{
					goto IL_050f;
				}
				if ((object)xmlQualifiedName.Name == ႠႳ)
				{
					if (43 < 43 - 9)
					{
						goto IL_1ac7;
					}
					if ((object)xmlQualifiedName.Namespace == this.m_ႰႷ)
					{
						goto IL_18dc;
					}
					if (103 <= 103 - 4)
					{
						goto IL_1f07;
					}
				}
				throw CreateUnknownTypeException(xmlQualifiedName);
			}
			goto IL_18dc;
			IL_1114:
			if ((object)base.Reader.LocalName == ႷႼ)
			{
				if (615 <= 615 - 17)
				{
					goto IL_10e4;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if ((320 + 320 * 320) % 2 == 0)
					{
						goto IL_192a;
					}
					goto IL_1ce2;
				}
			}
			goto IL_02e3;
			IL_1ea3:
			if (!array[27])
			{
				if (false)
				{
					goto IL_0fa6;
				}
				if ((object)base.Reader.LocalName == this.m_ႷႳ)
				{
					if (99 <= 99 - 11)
					{
						goto IL_10e4;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (14 >= 14 - 4)
						{
							goto IL_0743;
						}
						goto IL_0fa6;
					}
				}
			}
			if (!array[28])
			{
				if (983 <= 983 - 404)
				{
					goto IL_1bfd;
				}
				if ((object)base.Reader.LocalName == ႳႷႥ)
				{
					if (145 >= 145 - 32)
					{
						goto IL_05bf;
					}
					goto IL_1d1d;
				}
			}
			goto IL_1444;
			IL_0799:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_003b;
			}
			if (454 >= 454 - 89)
			{
				chatman.WebUserName = base.Reader.Value;
			}
			array[30] = true;
			goto IL_0fa6;
			IL_0713:
			array[24] = true;
			goto IL_0fa6;
			IL_054f:
			array[1] = true;
			goto IL_01d2;
			IL_10e4:
			if ((object)base.Reader.LocalName == this.m_ႨႭ)
			{
				if (false)
				{
					goto IL_054f;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (910 > 910 - 129)
					{
						goto IL_081e;
					}
					goto IL_113f;
				}
			}
			goto IL_0daf;
			IL_09cd:
			base.Reader.MoveToContent();
			int whileIterations = 0;
			int readerCount = base.ReaderCount;
			goto IL_038b;
			IL_1ef4:
			array = new bool[39];
			goto IL_0fa6;
			IL_0fa6:
			if (base.Reader.MoveToNextAttribute())
			{
				goto IL_0dfe;
			}
			if (52 >= 52 - 41)
			{
				goto IL_0355;
			}
			goto IL_10ab;
			IL_032a:
			do
			{
				chatman.IsAutoMuted = XmlConvert.ToBoolean(base.Reader.ReadElementString());
			}
			while (708 <= 708 - 39);
			goto IL_113f;
			IL_0dfe:
			if (array[3])
			{
				goto IL_1390;
			}
			if (622 > 622 - 35)
			{
				goto IL_0e4d;
			}
			goto IL_1cf2;
			IL_1b64:
			array[8] = true;
			goto IL_0fa6;
			IL_1390:
			if (!array[5])
			{
				if (105 <= 105 - 54)
				{
					goto IL_01d2;
				}
				goto IL_08df;
			}
			goto IL_1f2c;
			IL_1ba6:
			chatman.LastVolume = XmlConvert.ToInt16(base.Reader.Value);
			goto IL_1bbc;
			IL_1f2c:
			if (!array[6])
			{
				if (219 > 219 - 189)
				{
					goto IL_0179;
				}
				goto IL_0ed7;
			}
			goto IL_194a;
			IL_1ce2:
			array[23] = true;
			goto IL_0fa6;
			IL_194a:
			if (array[7])
			{
				goto IL_02e3;
			}
			if (967 >= 967 - 483)
			{
				goto IL_1114;
			}
			goto IL_11e1;
			IL_192a:
			chatman.ZipCode = base.Reader.Value;
			array[7] = true;
			goto IL_0fa6;
			IL_02e3:
			if (array[8])
			{
				goto IL_0154;
			}
			if (577 < 577 - 122)
			{
				goto IL_0260;
			}
			goto IL_0868;
			IL_05bf:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_1444;
			}
			if ((880 + 880 * 880) % 2 == 0)
			{
				goto IL_0efc;
			}
			goto IL_1d99;
			IL_0154:
			if (!array[9])
			{
				if (337 <= 337 - 231)
				{
					goto IL_01d2;
				}
				if ((object)base.Reader.LocalName == this.Ⴅ)
				{
					if (61 <= 61 - 51)
					{
						goto IL_0fa6;
					}
					goto IL_1cf2;
				}
			}
			goto IL_160c;
			IL_050f:
			if (base.Reader.NodeType != 0)
			{
				if (base.Reader.NodeType != XmlNodeType.Element)
				{
					UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394769));
					if (90 >= 90 - 65)
					{
						goto IL_058e;
					}
					goto IL_123c;
				}
				if (false)
				{
					goto IL_0607;
				}
				if ((object)base.Reader.LocalName != ႠႭ)
				{
					goto IL_05ef;
				}
				if (590 < 590 - 290)
				{
					goto IL_0fa6;
				}
				goto IL_096c;
			}
			if (false)
			{
				goto IL_15b8;
			}
			goto IL_1e93;
			IL_1444:
			if (array[29])
			{
				goto IL_0daf;
			}
			if (170 <= 170 - 49)
			{
				goto IL_0e4d;
			}
			goto IL_10e4;
			IL_0d8c:
			if (!array[2])
			{
				if (false)
				{
					goto IL_0f22;
				}
				if ((object)base.Reader.LocalName == ႳႷႠ)
				{
					if (684 <= 684 - 329)
					{
						goto IL_0fa6;
					}
					goto IL_1487;
				}
			}
			goto IL_0bfd;
			IL_1cf2:
			if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
			{
				if (96 < 96 - 39)
				{
					goto IL_0c8f;
				}
				goto IL_123c;
			}
			goto IL_160c;
			IL_0daf:
			if (!array[30])
			{
				if (false)
				{
					goto IL_09cd;
				}
				if ((object)base.Reader.LocalName == ႳႨႨ)
				{
					if (764 > 764 - 488)
					{
						goto IL_0799;
					}
					goto IL_0f85;
				}
			}
			goto IL_003b;
			IL_160c:
			if (array[10])
			{
				goto IL_0844;
			}
			if (168 <= 168 - 118)
			{
				goto IL_0ed2;
			}
			goto IL_1d1d;
			IL_15b8:
			if ((object)base.Reader.LocalName != ႳႰႠ)
			{
				goto IL_0c4f;
			}
			if (150 > 150 - 106)
			{
				goto IL_0f22;
			}
			goto IL_1703;
			IL_0844:
			if (!array[11])
			{
				if (false)
				{
					goto IL_09ee;
				}
				if ((object)base.Reader.LocalName == this.m_ႰႤ)
				{
					if (false)
					{
						goto IL_06ed;
					}
					goto IL_07ed;
				}
			}
			goto IL_1703;
			IL_03b2:
			chatman.LastContentUpdateDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
			array[36] = true;
			goto IL_0fa6;
			IL_0c7f:
			array[38] = true;
			goto IL_0fa6;
			IL_003b:
			if (!array[31])
			{
				if (333 >= 333 - 183 && (object)base.Reader.LocalName == ႳႥႷ)
				{
					if (372 <= 372 - 59)
					{
						goto IL_0681;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if ((928 + 928 * 928) % 2 == 0)
						{
							chatman.ProductNumber = base.Reader.Value;
							array[31] = true;
							goto IL_0fa6;
						}
						goto IL_099d;
					}
				}
			}
			goto IL_1f07;
			IL_1703:
			if (!array[12])
			{
				if (354 <= 354 - 61)
				{
					goto IL_0fa4;
				}
				if ((object)base.Reader.LocalName == ႠႷ)
				{
					if (123 > 123 - 119)
					{
						if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
						{
							goto IL_099d;
						}
						if (12 <= 12 - 4)
						{
							goto IL_096c;
						}
						chatman.ChatmanBirthDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
						array[12] = true;
					}
					goto IL_0fa6;
				}
			}
			goto IL_099d;
			IL_0f22:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_0c4f;
			}
			if (412 <= 412 - 122)
			{
				goto IL_0355;
			}
			goto IL_15e6;
			IL_0355:
			base.Reader.MoveToElement();
			goto IL_0361;
			IL_0361:
			if (base.Reader.IsEmptyElement)
			{
				if (false)
				{
					goto IL_058e;
				}
				base.Reader.Skip();
				goto IL_0f85;
			}
			base.Reader.ReadStartElement();
			base.Reader.MoveToContent();
			goto IL_1a2d;
			IL_096c:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_05ef;
			}
			if (444 <= 444 - 217)
			{
				goto IL_1d99;
			}
			if (processedContentFiles == null)
			{
				if (false)
				{
					goto IL_18fd;
				}
				base.Reader.Skip();
			}
			else
			{
				processedContentFiles.Add(ႷႷ(Ⴍ: true, Ⴄ: true));
			}
			goto IL_058e;
			IL_0743:
			chatman.DontProduceActionsStartMinute = XmlConvert.ToInt32(base.Reader.Value);
			array[27] = true;
			goto IL_0fa6;
			IL_0f85:
			chatman.PromotionalText = (string[])ShrinkArray(array2, num, typeof(string), isNullable: true);
			goto IL_0fa4;
			IL_099d:
			if (!array[13])
			{
				if (668 <= 668 - 614)
				{
					goto IL_0fa6;
				}
				if ((object)base.Reader.LocalName == ႤႥ)
				{
					if (false)
					{
						goto IL_1889;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if ((568 + 568 * 568) % 2 == 0)
						{
							chatman.ActivePersonalityId = XmlConvert.ToGuid(base.Reader.Value);
							array[13] = true;
							goto IL_0fa6;
						}
						goto IL_07ed;
					}
				}
			}
			if (!array[14])
			{
				if (515 <= 515 - 10)
				{
					goto IL_0fa6;
				}
				if ((object)base.Reader.LocalName == ႥႰ)
				{
					if (130 < 130 - 9)
					{
						goto IL_0e4d;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if ((306 + 306 * 306) % 2 == 0)
						{
							chatman.LastUseDate = XmlSerializationReader.ToDateTime(base.Reader.Value);
							array[14] = true;
							goto IL_0fa6;
						}
						goto IL_1b53;
					}
				}
			}
			goto IL_0260;
			IL_0fa4:
			return chatman;
			IL_0c4f:
			if (!array[33])
			{
				if (107 < 107 - 50)
				{
					goto IL_0202;
				}
				if ((object)base.Reader.LocalName == this.m_ႳႨ)
				{
					if (595 <= 595 - 329)
					{
						goto IL_0e4d;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (544 > 544 - 53)
						{
							chatman.Credentials = base.Reader.Value;
							goto IL_10ab;
						}
						goto IL_020f;
					}
				}
			}
			if (!array[34])
			{
				if (false)
				{
					goto IL_0060;
				}
				if ((object)base.Reader.LocalName == this.m_ႳႼ)
				{
					if (587 >= 587 - 227)
					{
						goto IL_1bfd;
					}
					goto IL_01d2;
				}
			}
			goto IL_1c58;
			IL_04b8:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_101d;
			}
			if (933 > 933 - 131)
			{
				goto IL_1b88;
			}
			goto IL_1ef4;
			IL_05ef:
			UnknownNode(null, ႥႷႭ.Ⴓ.ႰႷ(1821394769));
			goto IL_058e;
			IL_0e4d:
			if ((object)base.Reader.LocalName == Ⴜ)
			{
				if (955 <= 955 - 38)
				{
					goto IL_1703;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (false)
					{
						goto IL_1b88;
					}
					chatman.UserName = base.Reader.Value;
					array[3] = true;
					goto IL_0fa6;
				}
			}
			goto IL_1390;
			IL_07ed:
			if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
			{
				if (812 <= 812 - 690)
				{
					goto IL_08df;
				}
				goto IL_0ae8;
			}
			goto IL_1703;
			IL_0060:
			if (!base.Reader.IsEmptyElement)
			{
				goto IL_032a;
			}
			if (398 >= 398 - 26)
			{
				goto IL_1b73;
			}
			goto IL_1ba6;
			IL_08df:
			if ((object)base.Reader.LocalName == ႠႼ)
			{
				if (211 < 211 - 143)
				{
					goto IL_0c7f;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (149 >= 149 - 101)
					{
						chatman.ProfileImage = base.Reader.Value;
						array[5] = true;
						goto IL_0fa6;
					}
					goto IL_18dc;
				}
			}
			goto IL_1f2c;
			IL_1bfd:
			if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
			{
				if (973 >= 973 - 584)
				{
					chatman.LastMoodUsedInNewAction = XmlConvert.ToGuid(base.Reader.Value);
					array[34] = true;
				}
				goto IL_0fa6;
			}
			goto IL_1c58;
			IL_058e:
			base.Reader.MoveToContent();
			CheckReaderCount(ref whileIterations, ref readerCount);
			if (962 > 962 - 541)
			{
				goto IL_038b;
			}
			goto IL_0ed2;
			IL_1487:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_0bfd;
			}
			if (627 >= 627 - 304)
			{
				goto IL_0607;
			}
			goto IL_0cf7;
			IL_1c58:
			if (!array[35])
			{
				if (false)
				{
					goto IL_119e;
				}
				if ((object)base.Reader.LocalName == ႳႷႤ)
				{
					if (845 < 845 - 473)
					{
						goto IL_0713;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if ((893 + 893 * 893) % 2 == 0)
						{
							chatman.LastMoodUsedInNewWords = XmlConvert.ToGuid(base.Reader.Value);
							array[35] = true;
							goto IL_0fa6;
						}
						goto IL_0f85;
					}
				}
			}
			if (!array[36])
			{
				if (false)
				{
					goto IL_0ed2;
				}
				if ((object)base.Reader.LocalName == ႳႥႰ)
				{
					if (475 < 475 - 363)
					{
						goto IL_09ee;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (298 < 298 - 196)
						{
							goto IL_0fa6;
						}
						goto IL_03b2;
					}
				}
			}
			if (!array[38])
			{
				if (false)
				{
					goto IL_1ccc;
				}
				if ((object)base.Reader.LocalName == Ⴈ)
				{
					if (312 <= 312 - 209)
					{
						goto IL_0fa6;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (449 < 449 - 11)
						{
							goto IL_01de;
						}
						goto IL_0c6e;
					}
				}
			}
			if (IsXmlnsAttribute(base.Reader.Name))
			{
				goto IL_0fa6;
			}
			if ((813 + 813 * 813) % 2 == 0)
			{
				goto IL_0d40;
			}
			goto IL_1d1d;
			IL_123c:
			chatman.UserGender = ႰႷ(base.Reader.Value);
			array[9] = true;
			goto IL_0fa6;
			IL_1f07:
			if (array[32])
			{
				goto IL_0c4f;
			}
			if (820 < 820 - 720)
			{
				goto IL_09ee;
			}
			goto IL_15b8;
			IL_1e93:
			ReadEndElement();
			goto IL_01d2;
			IL_01d2:
			base.Reader.MoveToContent();
			goto IL_01de;
			IL_10ab:
			array[33] = true;
			goto IL_0fa6;
			IL_1a2d:
			int whileIterations2 = 0;
			int readerCount2 = base.ReaderCount;
			goto IL_11e1;
			IL_01de:
			CheckReaderCount(ref whileIterations2, ref readerCount2);
			if (false)
			{
				goto IL_0ed2;
			}
			goto IL_11e1;
			IL_11e1:
			if (base.Reader.NodeType != XmlNodeType.EndElement)
			{
				if (605 < 605 - 237)
				{
					goto IL_01de;
				}
				if (base.Reader.NodeType != 0)
				{
					if (base.Reader.NodeType != XmlNodeType.Element)
					{
						UnknownNode(chatman, ႥႷႭ.Ⴍ.ႰႷ(1821394596));
						if (132 > 132 - 62)
						{
							goto IL_01d2;
						}
						goto IL_0681;
					}
					if (false)
					{
						goto IL_1ea3;
					}
					if ((object)base.Reader.LocalName != ႳႷႣ)
					{
						goto IL_1aa4;
					}
					if (634 > 634 - 603)
					{
						goto IL_062c;
					}
				}
				else if (false)
				{
					goto IL_062c;
				}
			}
			chatman.PromotionalText = (string[])ShrinkArray(array2, num, typeof(string), isNullable: true);
			ReadEndElement();
			goto IL_0d3e;
			IL_0260:
			if (!array[17])
			{
				if (1016 <= 1016 - 831)
				{
					goto IL_0fa6;
				}
				if ((object)base.Reader.LocalName == ႼႤ)
				{
					if (220 < 220 - 106)
					{
						goto IL_0d40;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if ((669 + 669 * 669) % 2 == 0)
						{
							chatman.EngineVersion = base.Reader.Value;
							array[17] = true;
							goto IL_0fa6;
						}
						goto IL_1c58;
					}
				}
			}
			if (!array[18])
			{
				if (899 <= 899 - 775)
				{
					goto IL_0d8c;
				}
				if ((object)base.Reader.LocalName == ႳႣႠ)
				{
					if (349 < 349 - 37)
					{
						goto IL_0c8f;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (false)
						{
							goto IL_0dfe;
						}
						goto IL_1ba6;
					}
				}
			}
			if (!array[19])
			{
				if (908 < 908 - 608)
				{
					goto IL_01d2;
				}
				if ((object)base.Reader.LocalName == ႳႣႨ)
				{
					if (1003 < 1003 - 848)
					{
						goto IL_0941;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (false)
						{
							goto IL_1c7c;
						}
						chatman.Mute = XmlConvert.ToBoolean(base.Reader.Value);
						array[19] = true;
						goto IL_0fa6;
					}
				}
			}
			if (!array[22])
			{
				if (256 < 256 - 169)
				{
					goto IL_0a45;
				}
				if ((object)base.Reader.LocalName == Ⴀ)
				{
					if (false)
					{
						goto IL_10ab;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (593 <= 593 - 352)
						{
							goto IL_1b73;
						}
						chatman.PushButtonAction = ႳႭႥ(base.Reader.Value);
						goto IL_119e;
					}
				}
			}
			if (array[23])
			{
				goto IL_1889;
			}
			if (994 >= 994 - 139)
			{
				goto IL_0941;
			}
			goto IL_192a;
			IL_119e:
			array[22] = true;
			goto IL_0fa6;
			IL_1ac7:
			if ((object)base.Reader.LocalName == this.Ⴓ)
			{
				if (133 < 133 - 67)
				{
					goto IL_0efc;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (862 > 862 - 30)
					{
						chatman.PushButtonActionID = XmlConvert.ToGuid(base.Reader.Value);
						goto IL_0713;
					}
					goto IL_0fa6;
				}
			}
			goto IL_0a45;
			IL_0b7f:
			return null;
			IL_062c:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_1aa4;
			}
			if ((858 + 858 * 858) % 2 == 0)
			{
				if (ReadNull())
				{
					if (24 > 24 - 18)
					{
						goto IL_0c8f;
					}
					goto IL_1d1d;
				}
				array2 = (string[])EnsureArrayIndex(array2, num, typeof(string));
				array2[num++] = base.Reader.ReadElementString();
				goto IL_01d2;
			}
			goto IL_15e6;
			IL_0efc:
			chatman.DontProduceActionsEndHour = XmlConvert.ToInt32(base.Reader.Value);
			array[28] = true;
			goto IL_0fa6;
			IL_0d7d:
			array[6] = true;
			goto IL_0fa6;
			IL_0607:
			chatman.PassL = XmlConvert.ToInt32(base.Reader.ReadElementString());
			array[2] = true;
			goto IL_01d2;
			IL_1d1d:
			if ((object)base.Reader.LocalName == ႳႣႤ)
			{
				if (false)
				{
					goto IL_0daf;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (88 <= 88 - 13)
					{
						goto IL_0a35;
					}
					chatman.NumberOfCredits = XmlConvert.ToInt32(base.Reader.Value);
					array[10] = true;
					goto IL_0fa6;
				}
			}
			goto IL_0844;
			IL_020f:
			array[4] = true;
			goto IL_01d2;
			IL_081e:
			chatman.DontProduceActionsEndMinute = XmlConvert.ToInt32(base.Reader.Value);
			array[29] = true;
			goto IL_0fa6;
			IL_0cf7:
			if (!array[15])
			{
				if (174 < 174 - 32)
				{
					goto IL_0c6e;
				}
				if ((object)base.Reader.LocalName == ႳႥႭ)
				{
					if (false)
					{
						goto IL_0799;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (604 >= 604 - 258)
						{
							chatman.BrainPower = ႷႰ(Ⴓ: false, Ⴅ: true);
							goto IL_06ed;
						}
						goto IL_0ed7;
					}
				}
			}
			if (!array[16])
			{
				if (false)
				{
					goto IL_1ac7;
				}
				if ((object)base.Reader.LocalName == ႨႤ)
				{
					if (340 > 340 - 58)
					{
						goto IL_04b8;
					}
					goto IL_1e93;
				}
			}
			goto IL_101d;
			IL_0d3e:
			return chatman;
			IL_101d:
			if (!array[20])
			{
				if (488 < 488 - 92)
				{
					goto IL_0e4d;
				}
				if ((object)base.Reader.LocalName == ႤႣ)
				{
					if (false)
					{
						goto IL_032a;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (266 >= 266 - 60)
						{
							goto IL_0060;
						}
						goto IL_058e;
					}
				}
			}
			if (!array[21])
			{
				if (917 <= 917 - 251)
				{
					goto IL_1ac7;
				}
				if ((object)base.Reader.LocalName == ႨႰ)
				{
					if (131 <= 131 - 93)
					{
						goto IL_0d7d;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if (804 > 804 - 427)
						{
							chatman.LastAutoMuteDate = XmlSerializationReader.ToDateTime(base.Reader.ReadElementString());
							goto IL_0a35;
						}
						goto IL_1ac7;
					}
				}
			}
			if ((object)base.Reader.LocalName == ႳႣႰ)
			{
				if (541 < 541 - 91)
				{
					goto IL_0b7f;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if ((990 + 990 * 990) % 2 == 0)
					{
						if (ReadNull())
						{
							goto IL_01d2;
						}
						if (290 < 290 - 108)
						{
							goto IL_0743;
						}
						goto IL_1d99;
					}
					goto IL_03b2;
				}
			}
			UnknownNode(chatman, ႥႷႭ.Ⴍ.ႰႷ(1821394596));
			goto IL_01d2;
			IL_1aa4:
			if (array[1])
			{
				goto IL_0d8c;
			}
			if ((888 + 888 * 888) % 2 == 0)
			{
				goto IL_0681;
			}
			goto IL_1a2d;
			IL_19eb:
			if ((object)base.Reader.NamespaceURI != this.m_ႰႷ)
			{
				goto IL_1a42;
			}
			if (463 > 463 - 96)
			{
				chatman.DontProduceActions = XmlConvert.ToBoolean(base.Reader.Value);
				array[25] = true;
				goto IL_0fa6;
			}
			goto IL_1b64;
			IL_0a35:
			array[21] = true;
			goto IL_01d2;
			IL_1e62:
			if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
			{
				if (503 > 503 - 347)
				{
					chatman.UserCity = base.Reader.Value;
					goto IL_0d7d;
				}
				goto IL_0868;
			}
			goto IL_194a;
			IL_15e6:
			chatman.SubscriptionLevel = XmlConvert.ToInt32(base.Reader.Value);
			array[32] = true;
			goto IL_0fa6;
			IL_1c7c:
			flag = ReadNull();
			if (172 < 172 - 18)
			{
				goto IL_0fa6;
			}
			goto IL_11c3;
			IL_0202:
			chatman.UserBirthDate = ႳႭႠ(Ⴓ: true);
			goto IL_020f;
			IL_09ee:
			if ((object)base.Reader.LocalName == ႰႨ)
			{
				if (386 <= 386 - 283)
				{
					goto IL_0260;
				}
				goto IL_19eb;
			}
			goto IL_1a42;
			IL_0bfd:
			if (!array[4])
			{
				if (472 <= 472 - 386)
				{
					goto IL_1703;
				}
				if ((object)base.Reader.LocalName == ႷႤ)
				{
					if (760 < 760 - 726)
					{
						goto IL_081e;
					}
					if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
					{
						if ((993 + 993 * 993) % 2 == 0)
						{
							goto IL_0202;
						}
						goto IL_0d3e;
					}
				}
			}
			goto IL_0cf7;
			IL_0681:
			if ((object)base.Reader.LocalName == ႳႥႣ)
			{
				if (967 <= 967 - 7)
				{
					goto IL_0179;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (559 >= 559 - 44)
					{
						chatman.PromotionalTextLastUpdate = XmlSerializationReader.ToDateTime(base.Reader.ReadElementString());
						goto IL_054f;
					}
					goto IL_058e;
				}
			}
			goto IL_0d8c;
			IL_1b73:
			base.Reader.Skip();
			goto IL_113f;
			IL_0179:
			if ((object)base.Reader.LocalName != this.m_ႳႭႳ)
			{
				goto IL_194a;
			}
			if (17 <= 17 - 15)
			{
				goto IL_1aa4;
			}
			goto IL_1e62;
			IL_0c8f:
			array2 = (string[])EnsureArrayIndex(array2, num, typeof(string));
			array2[num++] = null;
			goto IL_01d2;
			IL_1b88:
			chatman.Friendship = ႷႥ(Ⴓ: false, Ⴅ: true);
			array[16] = true;
			goto IL_01d2;
			IL_1ccc:
			chatman.PushButtonActionPersonalityID = XmlConvert.ToGuid(base.Reader.Value);
			goto IL_1ce2;
			IL_0d40:
			UnknownNode(chatman, ႥႷႭ.Ⴓ.ႰႷ(1821394775));
			if (1014 > 1014 - 425)
			{
				goto IL_0fa6;
			}
			goto IL_1d99;
			IL_0941:
			if ((object)base.Reader.LocalName == ႼႰ)
			{
				if (118 <= 118 - 85)
				{
					goto IL_0af9;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if (false)
					{
						goto IL_1bbc;
					}
					goto IL_1ccc;
				}
			}
			goto IL_1889;
			IL_1d99:
			if (chatman.ProcessedContentFiles == null)
			{
				if (825 < 825 - 36)
				{
					goto IL_1bbc;
				}
				chatman.ProcessedContentFiles = new List<ContentFileEntry>();
				if (false)
				{
					goto IL_020f;
				}
			}
			goto IL_18fd;
			IL_1bbc:
			array[18] = true;
			goto IL_0fa6;
			IL_0868:
			if ((object)base.Reader.LocalName == this.m_ႳႭႨ)
			{
				if (823 < 823 - 142)
				{
					goto IL_0cf7;
				}
				if ((object)base.Reader.NamespaceURI == this.m_ႰႷ)
				{
					if ((976 + 976 * 976) % 2 == 0)
					{
						goto IL_1b53;
					}
					goto IL_1e62;
				}
			}
			goto IL_0154;
			IL_1889:
			if (array[24])
			{
				goto IL_0a45;
			}
			if (955 < 955 - 889)
			{
				goto IL_04b8;
			}
			goto IL_1ac7;
		}

		private DateTime? ႳႭႠ(bool Ⴓ)
		{
			int num = 0;
			DateTime? result = default(DateTime?);
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					result = null;
					num2 = (ReadNull() ? 1 : 2);
					break;
				case 1:
					return result;
				case 2:
					return XmlSerializationReader.ToDateTime(base.Reader.ReadElementString());
				}
				num = num2;
			}
		}

		protected override void InitCallbacks()
		{
		}

		protected override void InitIDs()
		{
			Ⴍ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394863));
			Ⴓ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394778));
			Ⴈ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394699));
			Ⴃ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394779));
			Ⴗ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394768));
			Ⴅ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394709));
			Ⴐ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394821));
			Ⴀ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394860));
			Ⴄ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394770));
			Ⴜ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394703));
			ႳႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394771));
			ႳႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394856));
			this.m_ႳႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394780));
			this.m_ႳႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394597));
			this.m_ႳႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394894));
			this.m_ႳႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394726));
			this.m_ႳႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394823));
			this.m_ႳႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394818));
			this.m_ႳႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394722));
			this.m_ႳႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394785));
			this.m_ႨႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394781));
			ႨႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394817));
			ႨႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394871));
			this.m_ႨႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394906));
			ႨႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394872));
			ႨႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394897));
			ႨႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394782));
			ႨႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394598));
			ႨႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394717));
			this.m_ႨႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394599));
			this.m_ႣႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394783));
			this.m_ႣႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394745));
			this.m_ႣႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394877));
			this.m_ႣႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394854));
			this.m_ႣႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394916));
			this.m_ႣႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394850));
			this.m_ႣႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394838));
			this.m_ႣႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394910));
			this.m_ႣႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394938));
			this.m_ႣႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394864));
			this.m_ႷႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394836));
			this.m_ႷႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394713));
			this.m_ႷႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394858));
			this.m_ႷႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394592));
			this.m_ႷႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394724));
			this.m_ႷႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394908));
			this.m_ႷႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394886));
			this.m_ႷႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394751));
			ႷႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394705));
			ႷႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394698));
			ႥႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394776));
			ႥႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394852));
			ႥႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394777));
			ႥႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394593));
			ႥႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394778));
			ႥႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394747));
			ႥႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394933));
			ႥႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394903));
			ႥႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394876));
			ႥႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394594));
			ႰႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394833));
			ႰႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394730));
			ႰႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394779));
			ႰႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394739));
			this.m_ႰႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394852));
			this.m_ႰႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394604));
			this.m_ႰႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394725));
			this.m_ႰႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394600));
			this.m_ႰႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394750));
			this.m_ႰႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394612));
			ႠႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394604));
			ႠႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394855));
			ႠႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394830));
			ႠႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394610));
			ႠႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394751));
			ႠႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394909));
			ႠႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394869));
			ႠႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394839));
			ႠႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394614));
			ႠႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394696));
			ႤႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394609));
			ႤႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394564));
			ႤႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394621));
			ႤႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394567));
			ႤႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394855));
			ႤႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394704));
			ႤႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394618));
			ႤႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394694));
			ႤႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394565));
			ႤႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394575));
			ႼႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394736));
			ႼႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394750));
			ႼႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394857));
			ႼႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394819));
			ႼႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394929));
			ႼႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394723));
			ႼႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394574));
			ႼႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394735));
			ႼႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394910));
			ႼႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394865));
			this.m_ႳႭႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394866));
			this.m_ႳႭႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394697));
			this.m_ႳႭႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394581));
			this.m_ႳႭႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394589));
			this.m_ႳႭႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394879));
			this.m_ႳႭႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394915));
			this.m_ႳႭႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394930));
			this.m_ႳႭႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394898));
			ႳႭႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394884));
			ႳႭႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394662));
			ႳႳႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394936));
			ႳႳႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394692));
			ႳႳႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394660));
			ႳႳႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394669));
			ႳႳႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394828));
			ႳႳႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394665));
			ႳႳႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394850));
			ႳႳႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394905));
			ႳႳႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394728));
			ႳႳႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394912));
			ႳႨႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394664));
			ႳႨႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394822));
			ႳႨႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394689));
			ႳႨႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394724));
			ႳႨႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394860));
			ႳႨႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394899));
			ႳႨႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394875));
			ႳႨႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394680));
			ႳႨႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394732));
			ႳႨႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394870));
			ႳႣႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394737));
			ႳႣႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394629));
			ႳႣႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394729));
			ႳႣႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394834));
			ႳႣႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394680));
			ႳႣႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394868));
			ႳႣႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394713));
			ႳႣႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394706));
			ႳႣႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394629));
			ႳႣႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394825));
			ႳႷႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394832));
			ႳႷႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394838));
			ႳႷႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394862));
			ႳႷႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394638));
			ႳႷႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394630));
			ႳႷႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394639));
			ႳႷႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394932));
			ႳႷႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394632));
			ႳႷႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394696));
			ႳႷႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394827));
			ႳႥႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394707));
			ႳႥႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394633));
			ႳႥႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394849));
			ႳႥႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394792));
			ႳႥႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394691));
			ႳႥႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394820));
			ႳႥႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394631));
			ႳႥႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394634));
			ႳႥႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394839));
			ႳႥႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394728));
			ႳႰႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394867));
			ႳႰႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394831));
			ႳႰႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394829));
			ႳႰႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394816));
			ႳႰႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394873));
			ႳႰႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394693));
			ႳႰႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394726));
			ႳႰႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394635));
			ႳႰႤ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394874));
			ႳႰႼ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394644));
			ႳႠႭ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394624));
			ႳႠႳ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394833));
			ႳႠႨ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394733));
			ႳႠႣ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394859));
			ႳႠႷ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394878));
			ႳႠႥ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394733));
			ႳႠႰ = base.Reader.NameTable.Add(ႥႷႭ.Ⴓ.ႰႷ(1821394918));
			ႳႠႠ = base.Reader.NameTable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394826));
		}
	}
	public class XmlSerializationWriter1 : XmlSerializationWriter
	{
		public void Write44_ConstraintFilterDefinition(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394852), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 0:
					TopLevelElement();
					ႠႰ(ႥႷႭ.Ⴓ.ႰႷ(1821394853), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (ConstraintFilterDefinition)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write45_ArrayOfPersonality(object o)
		{
			int num = 0;
			ႭႥႰ.Ⴈ ⴈ = default(ႭႥႰ.Ⴈ);
			int num2 = default(int);
			while (true)
			{
				switch (num)
				{
				default:
					WriteStartDocument();
					num = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394854), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					return;
				case 1:
					TopLevelElement();
					ⴈ = (ႭႥႰ.Ⴈ)o;
					num = ((ⴈ != null) ? 5 : 7);
					break;
				case 7:
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394854), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 5:
					WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394854), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
					num2 = 0;
					num = 4;
					break;
				case 3:
					ႠႤ(ႥႷႭ.Ⴓ.ႰႷ(1821394855), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ⴈ.ႰႷ(num2), Ⴃ: true, Ⴗ: false);
					num2++;
					num = 4;
					break;
				case 4:
					num = ((num2 < ((ICollection)ⴈ).Count) ? 3 : 6);
					break;
				case 6:
					WriteEndElement();
					return;
				}
			}
		}

		public void Write46_Chatman(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 2 : 0);
					break;
				case 0:
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394855), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 2:
					TopLevelElement();
					ႰႷ(ႥႷႭ.Ⴓ.ႰႷ(1821394848), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (Chatman)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write47_ChatmanBrainPower(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 0);
					break;
				case 0:
					WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394849), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					return;
				case 1:
					TopLevelElement();
					ႠႼ(ႥႷႭ.Ⴍ.ႰႷ(1821394848), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (ChatmanBrainPower)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write48_ChatmanFriendship(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001d
			do
			{
				WriteStartDocument();
				if (o != null)
				{
					TopLevelElement();
					ႠႣ(ႥႷႭ.Ⴓ.ႰႷ(1821394850), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (ChatmanFriendship)o, Ⴃ: true, Ⴗ: false);
					return;
				}
			}
			while (996 <= 996 - 615);
			WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394849), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
		}

		public void Write49_LevelLastChangeDirection(object o)
		{
			//Discarded unreachable code: IL_001a
			WriteStartDocument();
			if (o == null)
			{
				if ((257 + 257 * 257) % 2 == 0)
				{
					WriteEmptyTag(ႥႷႭ.Ⴓ.ႰႷ(1821394851), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				}
			}
			else
			{
				WriteElementString(ႥႷႭ.Ⴍ.ႰႷ(1821394850), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႳႷႣ((LevelLastChangeDirection)o));
			}
		}

		public void Write50_ContentFileEntry(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001d
			WriteStartDocument();
			if (o == null)
			{
				if (691 > 691 - 453)
				{
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394851), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
				}
			}
			else
			{
				TopLevelElement();
				ႠႨ(ႥႷႭ.Ⴓ.ႰႷ(1821394860), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (ContentFileEntry)o, Ⴃ: true, Ⴗ: false);
			}
		}

		public void Write51_PushButtonAction(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteEmptyTag(ႥႷႭ.Ⴓ.ႰႷ(1821394861), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					return;
				case 0:
					WriteElementString(ႥႷႭ.Ⴍ.ႰႷ(1821394860), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႳႷႨ((PushButtonAction)o));
					return;
				}
				num = num2;
			}
		}

		public void Write52_WebConnectionResult(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteEmptyTag(ႥႷႭ.Ⴍ.ႰႷ(1821394861), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 0:
					WriteElementString(ႥႷႭ.Ⴓ.ႰႷ(1821394862), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ႳႷႤ((WebConnectionResult)o));
					return;
				}
				num = num2;
			}
		}

		public void Write53_Personality(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001d
			WriteStartDocument();
			do
			{
				if (o != null)
				{
					TopLevelElement();
					ႠႤ(ႥႷႭ.Ⴍ.ႰႷ(1821394862), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (Personality)o, Ⴃ: true, Ⴗ: false);
					return;
				}
			}
			while (622 < 622 - 567);
			WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394855), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		public void Write54_SerialNumberProducer(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 2 : 0);
					break;
				case 0:
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394863), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 2:
					TopLevelElement();
					ႠႥ(ႥႷႭ.Ⴓ.ႰႷ(1821394863), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (Personality.Ⴄ)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write55_PersonalityStatus(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001c
			do
			{
				WriteStartDocument();
				if (o != null)
				{
					WriteElementString(ႥႷႭ.Ⴍ.ႰႷ(1821394856), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႳႷႥ((PersonalityStatus)o));
					return;
				}
			}
			while (false);
			WriteEmptyTag(ႥႷႭ.Ⴓ.ႰႷ(1821394856), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		public void Write56_PersonalityDataFile(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001d
			WriteStartDocument();
			if (o == null)
			{
				if (1020 >= 1020 - 333)
				{
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394857), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
				}
			}
			else
			{
				TopLevelElement();
				ႠႭ(ႥႷႭ.Ⴓ.ႰႷ(1821394857), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (PersonalityDataFile)o, Ⴃ: true, Ⴗ: false);
			}
		}

		public void Write57_PersonalityData(object o)
		{
			//Discarded unreachable code: IL_0002
			WriteStartDocument();
			if (o == null)
			{
				if ((200 + 200 * 200) % 2 == 0)
				{
					WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394858), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				}
			}
			else
			{
				TopLevelElement();
				ႠႠ(ႥႷႭ.Ⴍ.ႰႷ(1821394858), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (PersonalityData)o, Ⴃ: true, Ⴗ: false);
			}
		}

		public void Write58_Scenario(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001c
			WriteStartDocument();
			if (o == null)
			{
				if ((478 + 478 * 478) % 2 == 0)
				{
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394859), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				}
			}
			else
			{
				TopLevelElement();
			}
			ႠႳ(ႥႷႭ.Ⴓ.ႰႷ(1821394859), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (Scenario)o, Ⴃ: true, Ⴗ: false);
		}

		public void Write59_ScenarioTextBase(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 0);
					break;
				case 0:
					WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394868), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					return;
				case 1:
					TopLevelElement();
					ႠႷ(ႥႷႭ.Ⴍ.ႰႷ(1821394868), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (ScenarioTextBase)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write60_ScenarioText(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0017
			do
			{
				WriteStartDocument();
				if (o != null)
				{
					TopLevelElement();
					ႳႼ(ႥႷႭ.Ⴓ.ႰႷ(1821394869), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (ScenarioText)o, Ⴃ: true, Ⴗ: false);
					return;
				}
			}
			while (110 < 110 - 45);
			WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394869), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
		}

		public void Write61_ScenarioIconText(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001c
			WriteStartDocument();
			if (o == null)
			{
				if ((828 + 828 * 828) % 2 == 0)
				{
					WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394870), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				}
			}
			else
			{
				TopLevelElement();
				ႳႣ(ႥႷႭ.Ⴍ.ႰႷ(1821394870), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (ScenarioIconText)o, Ⴃ: true, Ⴗ: false);
			}
		}

		public void Write62_ScenarioTextRelation(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteEmptyTag(ႥႷႭ.Ⴍ.ႰႷ(1821394871), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 0:
					WriteElementString(ႥႷႭ.Ⴓ.ႰႷ(1821394871), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ႳႷႰ((ScenarioTextRelation)o));
					return;
				}
				num = num2;
			}
		}

		public void Write63_ScenarioMood(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001d
			WriteStartDocument();
			do
			{
				if (o != null)
				{
					TopLevelElement();
					ႳႨ(ႥႷႭ.Ⴍ.ႰႷ(1821394864), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (ScenarioMood)o, Ⴃ: true, Ⴗ: false);
					return;
				}
			}
			while (616 <= 616 - 259);
			WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394864), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		public void Write64_ScenarioAction(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394865), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 1:
					TopLevelElement();
					ႳႤ(ႥႷႭ.Ⴓ.ႰႷ(1821394865), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (ScenarioAction)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write65_ScenarioUserAction(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394866), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					return;
				case 0:
					TopLevelElement();
					ႳႥ(ႥႷႭ.Ⴍ.ႰႷ(1821394866), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (ScenarioUserAction)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write66_Counter(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394867), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 0:
					TopLevelElement();
					ႳႭ(ႥႷႭ.Ⴓ.ႰႷ(1821394867), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (Counter)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write67_ActionUsage(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394876), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					return;
				case 0:
					TopLevelElement();
					ႳႰ(ႥႷႭ.Ⴍ.ႰႷ(1821394876), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (ActionUsage)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write68_ChatmanAction(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0017
			WriteStartDocument();
			if (o == null)
			{
				if (82 >= 82 - 64)
				{
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394877), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				}
			}
			TopLevelElement();
			ႳႠ(ႥႷႭ.Ⴓ.ႰႷ(1821394877), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (ChatmanAction)o, Ⴃ: true, Ⴗ: false);
		}

		public void Write69_ActionChangeLog(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteEmptyTag(ႥႷႭ.Ⴓ.ႰႷ(1821394878), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					return;
				case 1:
					WriteElementString(ႥႷႭ.Ⴍ.ႰႷ(1821394878), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႳႷႠ((ActionChangeLog)o));
					return;
				}
				num = num2;
			}
		}

		public void Write70_ActionScope(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteEmptyTag(ႥႷႭ.Ⴍ.ႰႷ(1821394879), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 0:
					WriteElementString(ႥႷႭ.Ⴓ.ႰႷ(1821394879), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ႳႷႳ((ActionScope)o));
					return;
				}
				num = num2;
			}
		}

		public void Write71_QnAScenarioMatchActivity(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001c
			WriteStartDocument();
			if (o == null)
			{
				if ((477 + 477 * 477) % 2 == 0)
				{
					WriteEmptyTag(ႥႷႭ.Ⴓ.ႰႷ(1821394872), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					return;
				}
			}
			WriteElementString(ႥႷႭ.Ⴍ.ႰႷ(1821394872), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႳႷႷ((QnAScenarioMatchActivity)o));
		}

		public void Write72_HardwareAction(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 0);
					break;
				case 0:
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394873), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 1:
					TopLevelElement();
					ႳႳ(ႥႷႭ.Ⴓ.ႰႷ(1821394873), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (HardwareAction)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write73_CodeHardwareAction(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001c
			WriteStartDocument();
			if (o == null)
			{
				if ((602 + 602 * 602) % 2 == 0)
				{
					WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394874), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				}
			}
			else
			{
				TopLevelElement();
				ႳႷ(ႥႷႭ.Ⴍ.ႰႷ(1821394874), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (CodeHardwareAction)o, Ⴃ: true, Ⴗ: false);
			}
		}

		public void Write74_PauseHardwareAction(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001c
			WriteStartDocument();
			if (o == null)
			{
				if ((195 + 195 * 195) % 2 == 0)
				{
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394875), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
				}
			}
			else
			{
				TopLevelElement();
				Ⴜ(ႥႷႭ.Ⴓ.ႰႷ(1821394875), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (PauseHardwareAction)o, Ⴃ: true, Ⴗ: false);
			}
		}

		public void Write75_SoundHardwareAction(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394820), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					return;
				case 2:
					TopLevelElement();
					Ⴃ(ႥႷႭ.Ⴍ.ႰႷ(1821394820), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (SoundHardwareAction)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write76_DataFileLocation(object o)
		{
			//Discarded unreachable code: IL_0002
			WriteStartDocument();
			if (o == null)
			{
				if (540 <= 540 - 459)
				{
				}
				WriteEmptyTag(ႥႷႭ.Ⴍ.ႰႷ(1821394821), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
			}
			else
			{
				WriteElementString(ႥႷႭ.Ⴓ.ႰႷ(1821394821), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ႰႼ((DataFileLocation)o));
			}
		}

		public void Write77_ChitChatLists(object o)
		{
			int num = 2;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 0);
					break;
				case 1:
					WriteEmptyTag(ႥႷႭ.Ⴓ.ႰႷ(1821394822), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					return;
				case 0:
					WriteElementString(ႥႷႭ.Ⴍ.ႰႷ(1821394822), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႰႤ((Ⴄ)o));
					return;
				}
				num = num2;
			}
		}

		public void Write78_MoodList(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394823), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 0:
					TopLevelElement();
					Ⴈ(ႥႷႭ.Ⴓ.ႰႷ(1821394823), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (MoodListContainer)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write79_Mood(object o)
		{
			int num = 1;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 2 : 0);
					break;
				case 2:
					WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394816), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					return;
				case 0:
					TopLevelElement();
					Ⴓ(ႥႷႭ.Ⴍ.ႰႷ(1821394816), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (Mood)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write80_MoodCounter(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001a
			WriteStartDocument();
			if (o == null)
			{
				if (221 >= 221 - 92)
				{
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394817), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
				}
			}
			else
			{
				TopLevelElement();
				Ⴄ(ႥႷႭ.Ⴓ.ႰႷ(1821394817), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (MoodCounter)o, Ⴃ: true, Ⴗ: false);
			}
		}

		public void Write81_MoodLevel(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0019
			WriteStartDocument();
			if (o == null)
			{
				if ((27 + 27 * 27) % 2 == 0)
				{
					WriteEmptyTag(ႥႷႭ.Ⴓ.ႰႷ(1821394818), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				}
			}
			else
			{
				WriteElementString(ႥႷႭ.Ⴍ.ႰႷ(1821394818), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႰႥ((MoodLevel)o));
			}
		}

		public void Write82_MoodMatrix(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o != null) ? 1 : 2);
					break;
				case 2:
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394819), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 1:
					TopLevelElement();
					Ⴅ(ႥႷႭ.Ⴓ.ႰႷ(1821394819), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (MoodMatrix)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write83_Gender(object o)
		{
			//Discarded unreachable code: IL_0002, IL_001a
			WriteStartDocument();
			do
			{
				if (o != null)
				{
					WriteElementString(ႥႷႭ.Ⴍ.ႰႷ(1821394828), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႰႭ((Gender)o));
					return;
				}
			}
			while (152 < 152 - 98);
			WriteEmptyTag(ႥႷႭ.Ⴓ.ႰႷ(1821394828), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		public void Write84_MoodMatrixEntry(object o)
		{
			int num = 0;
			while (true)
			{
				int num2;
				switch (num)
				{
				default:
					WriteStartDocument();
					num2 = ((o == null) ? 1 : 2);
					break;
				case 1:
					WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394829), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					return;
				case 2:
					TopLevelElement();
					Ⴍ(ႥႷႭ.Ⴓ.ႰႷ(1821394829), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (MoodMatrixEntry)o, Ⴃ: true, Ⴗ: false);
					return;
				}
				num = num2;
			}
		}

		public void Write85_ArrayOfMood(object o)
		{
			//Discarded unreachable code: IL_0002, IL_002e, IL_004c, IL_0086, IL_00bf, IL_00f8
			WriteStartDocument();
			if (o != null)
			{
				TopLevelElement();
				Ⴀ ⴀ = (Ⴀ)o;
				if (ⴀ == null)
				{
					if (603 > 603 - 41)
					{
						WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394830), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
						return;
					}
				}
				WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394830), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
				int num = 0;
				while (num < ((ICollection)ⴀ).Count)
				{
					Ⴓ(ႥႷႭ.Ⴓ.ႰႷ(1821394816), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ⴀ.ႰႣ(num), Ⴃ: true, Ⴗ: false);
					num++;
					if (495 < 495 - 77)
					{
					}
				}
				if (233 > 233 - 93)
				{
					WriteEndElement();
					return;
				}
			}
			else if (175 < 175 - 141)
			{
				return;
			}
			WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394830), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
		}

		public void Write86_ActionProducerDefinition(object o)
		{
			//Discarded unreachable code: IL_0002, IL_0019
			WriteStartDocument();
			do
			{
				if (o != null)
				{
					TopLevelElement();
					Ⴗ(ႥႷႭ.Ⴓ.ႰႷ(1821394831), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (ActionProducerDefinition)o, Ⴃ: true, Ⴗ: false);
					return;
				}
			}
			while (170 <= 170 - 3);
			WriteNullTagLiteral(ႥႷႭ.Ⴍ.ႰႷ(1821394831), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
		}

		private void Ⴗ(string Ⴍ, string Ⴓ, ActionProducerDefinition Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 7;
			while (true)
			{
				switch (num)
				{
				case 5:
					return;
				default:
					num = ((Ⴈ == null) ? 1 : 8);
					continue;
				case 1:
					num = ((!Ⴃ) ? 5 : 2);
					continue;
				case 2:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 8:
					num = (Ⴗ ? 4 : 3);
					continue;
				case 3:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(ActionProducerDefinition)) ? 4 : 9);
					continue;
				}
				case 9:
					throw CreateUnknownTypeException(Ⴈ);
				case 4:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = (Ⴗ ? 6 : 0);
					continue;
				case 6:
					WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394831), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					break;
				case 0:
					break;
				}
				break;
			}
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394824), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.ID));
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394824), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.Parameters);
			WriteEndElement(Ⴈ);
		}

		private void Ⴓ(string Ⴍ, string Ⴓ, Mood Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0045, IL_007a, IL_00b7, IL_00dd, IL_011a, IL_0138, IL_0169, IL_018f, IL_01ce, IL_01f1, IL_021d, IL_025f, IL_029f, IL_02d6, IL_02f6, IL_0318, IL_033b, IL_0352, IL_0391, IL_03c3, IL_03e2, IL_0419, IL_0435, IL_0460, IL_0482, IL_04a4, IL_04e4, IL_0501, IL_052a, IL_0550, IL_058a, IL_05c4, IL_060c, IL_0646, IL_0677, IL_069b, IL_06bd, IL_06f7
			while (true)
			{
				if (Ⴈ != null)
				{
					goto IL_02fb;
				}
				if (383 > 383 - 98)
				{
				}
				goto IL_03c9;
				IL_022a:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394837), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.EngineVersion);
				if (false)
				{
					goto IL_00e2;
				}
				goto IL_031d;
				IL_02fb:
				if (!Ⴗ)
				{
					if (1010 >= 1010 - 591)
					{
					}
					Type type = Ⴈ.GetType();
					if ((object)type != typeof(Mood))
					{
						if (36 >= 36 - 9)
						{
							throw CreateUnknownTypeException(Ⴈ);
						}
						goto IL_016e;
					}
				}
				goto IL_0506;
				IL_004a:
				if (Ⴈ.EngineVersion != ႥႷႭ.Ⴓ.ႰႷ(1821394837))
				{
					if (929 <= 929 - 261)
					{
						goto IL_0194;
					}
					goto IL_022a;
				}
				goto IL_031d;
				IL_03c9:
				if (!Ⴃ)
				{
					return;
				}
				if ((305 + 305 * 305) % 2 == 0)
				{
					goto IL_033d;
				}
				goto IL_0487;
				IL_031d:
				if (Ⴈ.Priority == 0)
				{
					goto IL_016e;
				}
				if (191 <= 191 - 161)
				{
					goto IL_0393;
				}
				goto IL_06c2;
				IL_00e2:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394834), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.Group));
				if (567 >= 567 - 31)
				{
					break;
				}
				goto IL_04e9;
				IL_0506:
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				if (Ⴗ)
				{
					if ((999 + 999 * 999) % 2 == 0)
					{
						goto IL_0393;
					}
					goto IL_0555;
				}
				goto IL_05c9;
				IL_0393:
				WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394816), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
				if (527 < 527 - 218)
				{
					goto IL_033d;
				}
				goto IL_05c9;
				IL_05c9:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394825), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.ID));
				goto IL_05ee;
				IL_05ee:
				if (Ⴈ.Name == null)
				{
					goto IL_04e9;
				}
				if (359 <= 359 - 186)
				{
					continue;
				}
				goto IL_067c;
				IL_016e:
				if (Ⴈ.ImageFileName != null)
				{
					if (738 <= 738 - 152)
					{
						goto IL_06c2;
					}
					if (Ⴈ.ImageFileName.Length != 0)
					{
						if (339 > 339 - 316)
						{
							goto IL_0555;
						}
						goto IL_06a0;
					}
				}
				goto IL_00bc;
				IL_04e9:
				if (Ⴈ.Description != null)
				{
					if (94 < 94 - 40)
					{
						goto IL_013d;
					}
					goto IL_0465;
				}
				goto IL_0487;
				IL_06a0:
				if (!Ⴈ.NotSelectable)
				{
					goto IL_041e;
				}
				if ((96 + 96 * 96) % 2 == 0)
				{
					goto IL_0194;
				}
				goto IL_0555;
				IL_0487:
				if (Ⴈ.WebID == 0)
				{
					goto IL_01d3;
				}
				if ((79 + 79 * 79) % 2 == 0)
				{
					goto IL_0357;
				}
				goto IL_067c;
				IL_06c2:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394838), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.Priority));
				if (59 > 59 - 47)
				{
					goto IL_016e;
				}
				goto IL_058f;
				IL_01d3:
				if (Ⴈ.Ordinal != 0)
				{
					if (964 >= 964 - 148)
					{
						goto IL_0264;
					}
					goto IL_0357;
				}
				goto IL_064b;
				IL_058f:
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394825), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Description);
				if ((239 + 239 * 239) % 2 == 0)
				{
				}
				goto IL_0487;
				IL_0357:
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394826), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.WebID));
				if ((169 + 169 * 169) % 2 == 0)
				{
					goto IL_01d3;
				}
				goto IL_0264;
				IL_0264:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394827), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.Ordinal));
				if (905 > 905 - 718)
				{
					goto IL_064b;
				}
				goto IL_067c;
				IL_067c:
				if (Ⴈ.Name.Length == 0)
				{
					goto IL_04e9;
				}
				if (23 > 23 - 2)
				{
					goto IL_03e4;
				}
				goto IL_05ee;
				IL_00bc:
				if (!Ⴈ.IsVisible)
				{
					if (958 < 958 - 373)
					{
						goto IL_0506;
					}
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394832), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.IsVisible));
					if (282 <= 282 - 57)
					{
						goto IL_05c9;
					}
				}
				if (Ⴈ.NoIntensity)
				{
					if (254 <= 254 - 117)
					{
						goto IL_02fb;
					}
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394838), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.NoIntensity));
					if (462 < 462 - 151)
					{
						goto IL_004a;
					}
				}
				goto IL_06a0;
				IL_064b:
				if (Ⴈ.Author != ႥႷႭ.Ⴍ.ႰႷ(1821394836))
				{
					if (false)
					{
						goto IL_03c9;
					}
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394827), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Author);
					if (132 <= 132 - 115)
					{
						goto IL_03e4;
					}
				}
				goto IL_013d;
				IL_033d:
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if (100 >= 100 - 48)
				{
					return;
				}
				goto IL_00e2;
				IL_0555:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394839), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.ImageFileName);
				if ((791 + 791 * 791) % 2 == 0)
				{
					goto IL_00bc;
				}
				goto IL_06a0;
				IL_03e4:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394826), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.Name);
				if (false)
				{
					goto IL_00bc;
				}
				goto IL_04e9;
				IL_013d:
				if (Ⴈ.UpdateDate != new DateTime(0L))
				{
					if (false)
					{
						goto IL_0465;
					}
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394836), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlSerializationWriter.FromDateTime(Ⴈ.UpdateDate));
					if (913 < 913 - 472)
					{
						goto IL_03c9;
					}
				}
				goto IL_004a;
				IL_041e:
				while (true)
				{
					if (Ⴈ.IsReadOnly)
					{
						if (107 < 107 - 6)
						{
							break;
						}
						WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394839), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.IsReadOnly));
						if (110 < 110 - 68)
						{
							goto IL_022a;
						}
					}
					if (Ⴈ.Group == 0)
					{
						goto end_IL_011f;
					}
					if (523 <= 523 - 388)
					{
						continue;
					}
					goto IL_00e2;
				}
				goto IL_03c9;
				IL_0465:
				if (Ⴈ.Description.Length == 0)
				{
					goto IL_0487;
				}
				if (29 < 29 - 9)
				{
					goto IL_013d;
				}
				goto IL_058f;
				IL_0194:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394833), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.NotSelectable));
				if ((839 + 839 * 839) % 2 == 0)
				{
					goto IL_041e;
				}
				goto IL_0506;
				continue;
				end_IL_011f:
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private void Ⴍ(string Ⴍ, string Ⴓ, MoodMatrixEntry Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0002, IL_0035, IL_004d, IL_0084, IL_00b7, IL_00d0, IL_00fa, IL_0117, IL_018b, IL_01b8
			if (Ⴈ == null)
			{
				if (197 > 197 - 112)
				{
					if (!Ⴃ)
					{
						return;
					}
					if (673 <= 673 - 582)
					{
						return;
					}
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					if (848 >= 848 - 251)
					{
						return;
					}
					goto IL_013e;
				}
			}
			else
			{
				Type type = default(Type);
				while (true)
				{
					if (!Ⴗ)
					{
						if (639 < 639 - 410)
						{
							break;
						}
						type = Ⴈ.GetType();
						goto IL_000f;
					}
					goto IL_0190;
					IL_0190:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					if (Ⴗ)
					{
						if (878 <= 878 - 701)
						{
							continue;
						}
						WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394829), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
						if (955 < 955 - 701)
						{
							goto IL_000f;
						}
					}
					goto IL_0119;
					IL_000f:
					if ((object)type != typeof(MoodMatrixEntry))
					{
						goto IL_001f;
					}
					goto IL_0190;
				}
			}
			goto IL_004f;
			IL_004f:
			WriteEndElement(Ⴈ);
			return;
			IL_001f:
			if (1014 <= 1014 - 784)
			{
				goto IL_0163;
			}
			throw CreateUnknownTypeException(Ⴈ);
			IL_0163:
			if (Ⴈ.Correlation != 0.0)
			{
				if (371 < 371 - 118)
				{
					return;
				}
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394833), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.Correlation));
				if (73 <= 73 - 49)
				{
					return;
				}
			}
			goto IL_004f;
			IL_013e:
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394835), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.ToMood));
			goto IL_0163;
			IL_0119:
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394832), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.FromMood));
			goto IL_013e;
		}

		private string ႰႭ(Gender Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0026, IL_0035, IL_0068
			string text = null;
			switch (Ⴍ)
			{
			default:
				if (895 >= 895 - 585)
				{
				}
				throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႥႷႭ.Ⴍ.ႰႷ(1821394846));
			case Gender.Male:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394844);
			case Gender.Female:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394845);
			}
		}

		private void Ⴅ(string Ⴍ, string Ⴓ, MoodMatrix Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0002, IL_001d, IL_003b, IL_006a, IL_009c, IL_00db, IL_00f7, IL_011f, IL_0146, IL_015e, IL_0178, IL_01ad, IL_0242
			if (Ⴈ == null)
			{
				if (227 <= 227 - 139)
				{
					goto IL_01d5;
				}
				if (!Ⴃ)
				{
					return;
				}
				if (139 > 139 - 102)
				{
					goto IL_0160;
				}
			}
			while (!Ⴗ)
			{
				if (false)
				{
					continue;
				}
				goto IL_0040;
			}
			goto IL_0121;
			IL_01d5:
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394834), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.MinAge));
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394847), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.MaxAge));
			List<MoodMatrixEntry> moodMatrixEntries = Ⴈ.MoodMatrixEntries;
			goto IL_0226;
			IL_0160:
			WriteNullTagLiteral(Ⴍ, Ⴓ);
			if (250 <= 250 - 91)
			{
				goto IL_0226;
			}
			return;
			IL_01af:
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394828), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ႰႭ(Ⴈ.Gender));
			goto IL_01d5;
			IL_0047:
			Type type = default(Type);
			if ((object)type != typeof(MoodMatrix))
			{
				if (163 <= 163 - 71)
				{
				}
				throw CreateUnknownTypeException(Ⴈ);
			}
			goto IL_0121;
			IL_0226:
			if (moodMatrixEntries != null)
			{
				if (405 < 405 - 182)
				{
					goto IL_01af;
				}
				WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394835), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
				int num = 0;
				while (num < ((ICollection)moodMatrixEntries).Count)
				{
					this.Ⴍ(ႥႷႭ.Ⴓ.ႰႷ(1821394829), ႥႷႭ.Ⴍ.ႰႷ(1821394853), moodMatrixEntries[num], Ⴃ: true, Ⴗ: false);
					num++;
					if (474 >= 474 - 307)
					{
						continue;
					}
					goto IL_0047;
				}
				if (428 < 428 - 386)
				{
					goto IL_0121;
				}
				WriteEndElement();
				if (969 <= 969 - 611)
				{
					return;
				}
			}
			WriteEndElement(Ⴈ);
			return;
			IL_0040:
			type = Ⴈ.GetType();
			goto IL_0047;
			IL_0121:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			if (Ⴗ)
			{
				if (963 < 963 - 341)
				{
					goto IL_0160;
				}
				do
				{
					WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394819), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				}
				while (563 <= 563 - 459);
			}
			goto IL_01af;
		}

		private string ႰႥ(MoodLevel Ⴍ)
		{
			int num = 5;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 8:
					num = 1;
					continue;
				case 4:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394840);
					num = 2;
					continue;
				case 6:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394841);
					num = 2;
					continue;
				case 3:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394842);
					num = 2;
					continue;
				case 0:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394843);
					num = 2;
					continue;
				case 7:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394916);
					num = 2;
					continue;
				case 1:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႥႷႭ.Ⴍ.ႰႷ(1821394917));
				case 2:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 8;
					break;
				case MoodLevel.Unset:
					num2 = 4;
					break;
				case MoodLevel.ABit:
					num2 = 6;
					break;
				case MoodLevel.ALittle:
					num2 = 3;
					break;
				case MoodLevel.Pretty:
					num2 = 0;
					break;
				case MoodLevel.Very:
					num2 = 7;
					break;
				}
				num = num2;
			}
		}

		private void Ⴄ(string Ⴍ, string Ⴓ, MoodCounter Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0064, IL_008a, IL_00d1, IL_00ef, IL_011c, IL_0134, IL_016e, IL_0191, IL_01b3, IL_01d5, IL_0215, IL_023d, IL_0259, IL_0295, IL_02c1, IL_02ec, IL_032c, IL_0369, IL_039a, IL_0401
			Type type = default(Type);
			while (true)
			{
				if (Ⴈ == null)
				{
					if (55 < 55 - 40)
					{
						goto IL_0375;
					}
					if (!Ⴃ)
					{
						return;
					}
					if (false)
					{
						goto IL_00b1;
					}
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					if (977 > 977 - 204)
					{
						return;
					}
				}
				goto IL_0243;
				IL_01df:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394918), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.DailyAverage));
				if (202 <= 202 - 6)
				{
					continue;
				}
				goto IL_01b8;
				IL_0037:
				WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394817), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				if (723 > 723 - 481)
				{
					goto IL_0069;
				}
				goto IL_01b8;
				IL_008c:
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394824), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.ID));
				goto IL_00b1;
				IL_00b1:
				if (Ⴈ.Name != null)
				{
					if (false)
					{
						goto IL_000a;
					}
					if (Ⴈ.Name.Length != 0)
					{
						if (543 <= 543 - 469)
						{
							goto IL_036e;
						}
						WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394846), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Name);
						if (951 < 951 - 278)
						{
							goto IL_02f1;
						}
					}
				}
				while (Ⴈ.Description != null)
				{
					if (false)
					{
						continue;
					}
					goto IL_02c6;
				}
				goto IL_000a;
				IL_0243:
				if (Ⴗ)
				{
					goto IL_029a;
				}
				if (false)
				{
					goto IL_01b8;
				}
				goto IL_036e;
				IL_02f1:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394919), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlSerializationWriter.FromDateTime(Ⴈ.LastUseDate));
				if (607 > 607 - 226)
				{
					goto IL_008c;
				}
				goto IL_0243;
				IL_029a:
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				if (!Ⴗ)
				{
					goto IL_0069;
				}
				if ((783 + 783 * 783) % 2 == 0)
				{
					goto IL_0037;
				}
				goto IL_0139;
				IL_0139:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394912), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.Description);
				if ((754 + 754 * 754) % 2 == 0)
				{
					goto IL_000a;
				}
				goto IL_029a;
				IL_0069:
				if (Ⴈ.TotalCounter == 0)
				{
					goto IL_00f4;
				}
				if (1003 < 1003 - 401)
				{
					goto IL_029a;
				}
				goto IL_0331;
				IL_02c6:
				if (Ⴈ.Description.Length == 0)
				{
					goto IL_000a;
				}
				if (882 < 882 - 508)
				{
				}
				goto IL_0139;
				IL_00f4:
				if (Ⴈ.DailyAverage == 0.0)
				{
					goto IL_01b8;
				}
				if (689 >= 689 - 41)
				{
					goto IL_01df;
				}
				goto IL_029a;
				IL_036e:
				type = Ⴈ.GetType();
				goto IL_0375;
				IL_01b8:
				if (Ⴈ.DaysUsed != 0)
				{
					if (463 <= 463 - 8)
					{
						goto IL_0331;
					}
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394845), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.DaysUsed));
					if (false)
					{
						goto IL_029a;
					}
				}
				goto IL_03d5;
				IL_0375:
				if ((object)type != typeof(MoodCounter))
				{
					if ((1019 + 1019 * 1019) % 2 == 0)
					{
						break;
					}
					goto IL_01df;
				}
				goto IL_029a;
				IL_0331:
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394844), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.TotalCounter));
				if (678 > 678 - 386)
				{
					goto IL_00f4;
				}
				goto IL_03d5;
				IL_000a:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394913), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.NoIntensity));
				WriteEndElement(Ⴈ);
				return;
				IL_03d5:
				if (!(Ⴈ.LastUseDate != new DateTime(0L)))
				{
					goto IL_008c;
				}
				if (false)
				{
					goto IL_0037;
				}
				goto IL_02f1;
			}
			throw CreateUnknownTypeException(Ⴈ);
		}

		private void Ⴈ(string Ⴍ, string Ⴓ, MoodListContainer Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 12;
			List<Mood> moods = default(List<Mood>);
			int num2 = default(int);
			while (true)
			{
				switch (num)
				{
				case 5:
					return;
				default:
					num = ((Ⴈ == null) ? 1 : 6);
					continue;
				case 1:
					num = ((!Ⴃ) ? 5 : 13);
					continue;
				case 13:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 6:
					num = (Ⴗ ? 14 : 0);
					continue;
				case 0:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(MoodListContainer)) ? 14 : 9);
					continue;
				}
				case 9:
					throw CreateUnknownTypeException(Ⴈ);
				case 14:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 10 : 3);
					continue;
				case 3:
					WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394914), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					goto case 10;
				case 10:
					moods = Ⴈ.Moods;
					num = ((moods == null) ? 2 : 11);
					continue;
				case 11:
					WriteStartElement(ႥႷႭ.Ⴍ.ႰႷ(1821394915), ႥႷႭ.Ⴓ.ႰႷ(1821394852), null, writePrefixed: false);
					num2 = 0;
					num = 4;
					continue;
				case 8:
					this.Ⴓ(ႥႷႭ.Ⴍ.ႰႷ(1821394816), ႥႷႭ.Ⴓ.ႰႷ(1821394852), moods[num2], Ⴃ: true, Ⴗ: false);
					num2++;
					num = 4;
					continue;
				case 4:
					num = ((num2 < ((ICollection)moods).Count) ? 8 : 7);
					continue;
				case 7:
					WriteEndElement();
					break;
				case 2:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private string ႰႤ(Ⴄ Ⴍ)
		{
			//Discarded unreachable code: IL_0045, IL_0054, IL_00d1, IL_00e6, IL_00fb, IL_0105, IL_0117, IL_012c
			string result = null;
			switch (Ⴍ)
			{
			default:
				if (false)
				{
					break;
				}
				goto case ႭႥႰ.Ⴄ.Ⴈ | ႭႥႰ.Ⴄ.Ⴓ;
			case ႭႥႰ.Ⴄ.Ⴐ:
				result = ႥႷႭ.Ⴓ.ႰႷ(1821394847);
				break;
			case ႭႥႰ.Ⴄ.Ⴈ | ႭႥႰ.Ⴄ.Ⴓ:
			case ႭႥႰ.Ⴄ.Ⴈ | ႭႥႰ.Ⴄ.Ⴗ:
			case ႭႥႰ.Ⴄ.Ⴓ | ႭႥႰ.Ⴄ.Ⴗ:
			case ႭႥႰ.Ⴄ.Ⴈ | ႭႥႰ.Ⴄ.Ⴓ | ႭႥႰ.Ⴄ.Ⴗ:
				do
				{
					result = XmlSerializationWriter.FromEnum((long)Ⴍ, new string[5]
					{
						ႥႷႭ.Ⴍ.ႰႷ(1821394924),
						ႥႷႭ.Ⴍ.ႰႷ(1821394925),
						ႥႷႭ.Ⴍ.ႰႷ(1821394926),
						ႥႷႭ.Ⴍ.ႰႷ(1821394927),
						ႥႷႭ.Ⴍ.ႰႷ(1821394920)
					}, new long[5]
					{
						0L,
						1L,
						2L,
						4L,
						8L
					}, ႥႷႭ.Ⴍ.ႰႷ(1821394921));
				}
				while (127 <= 127 - 105);
				break;
			case ႭႥႰ.Ⴄ.Ⴓ:
				result = ႥႷႭ.Ⴓ.ႰႷ(1821394841);
				break;
			case ႭႥႰ.Ⴄ.Ⴈ:
				result = ႥႷႭ.Ⴓ.ႰႷ(1821394840);
				break;
			case ႭႥႰ.Ⴄ.Ⴅ:
				result = ႥႷႭ.Ⴓ.ႰႷ(1821394843);
				break;
			case ႭႥႰ.Ⴄ.Ⴗ:
				result = ႥႷႭ.Ⴓ.ႰႷ(1821394842);
				break;
			}
			return result;
		}

		private string ႰႼ(DataFileLocation Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_002f, IL_003e, IL_004d, IL_0051, IL_0080
			string result = null;
			switch (Ⴍ)
			{
			default:
				if (815 <= 815 - 271)
				{
					goto IL_0007;
				}
				throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႥႷႭ.Ⴍ.ႰႷ(1821394932));
			case DataFileLocation.MasterDataFile:
				result = ႥႷႭ.Ⴍ.ႰႷ(1821394922);
				goto IL_0007;
			case DataFileLocation.PersonalityDataFile:
				result = ႥႷႭ.Ⴍ.ႰႷ(1821394857);
				goto IL_0007;
			case DataFileLocation.UserDataFile:
				{
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394923);
					goto IL_0007;
				}
				IL_0007:
				return result;
			}
		}

		private void Ⴃ(string Ⴍ, string Ⴓ, SoundHardwareAction Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 4;
			while (true)
			{
				switch (num)
				{
				case 0:
					return;
				default:
					num = ((Ⴈ != null) ? 2 : 6);
					continue;
				case 6:
					num = (Ⴃ ? 1 : 0);
					continue;
				case 1:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 2:
					num = (Ⴗ ? 5 : 3);
					continue;
				case 3:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(SoundHardwareAction)) ? 5 : 9);
					continue;
				}
				case 9:
					throw CreateUnknownTypeException(Ⴈ);
				case 5:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 8 : 7);
					continue;
				case 7:
					WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394820), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					break;
				case 8:
					break;
				}
				break;
			}
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394916), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.Start));
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394933), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.FileName);
			WriteEndElement(Ⴈ);
		}

		private void Ⴜ(string Ⴍ, string Ⴓ, PauseHardwareAction Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0002, IL_006c, IL_00a0, IL_00b9, IL_00cf, IL_00f7, IL_0112, IL_013e
			if (Ⴈ != null)
			{
				goto IL_00a2;
			}
			if (849 < 849 - 281)
			{
				goto IL_0071;
			}
			if (Ⴃ)
			{
				if (327 < 327 - 79)
				{
					return;
				}
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if (767 >= 767 - 209)
				{
					return;
				}
				goto IL_00d8;
			}
			return;
			IL_00d8:
			Type type = default(Type);
			if ((object)type != typeof(PauseHardwareAction))
			{
				if (false)
				{
					return;
				}
				throw CreateUnknownTypeException(Ⴈ);
			}
			goto IL_0117;
			IL_0071:
			WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394875), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
			if ((714 + 714 * 714) % 2 == 0)
			{
				goto IL_0007;
			}
			goto IL_0122;
			IL_0007:
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394934), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.Start));
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394917), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.Duration));
			goto IL_0051;
			IL_0117:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			goto IL_0122;
			IL_00a2:
			if (!Ⴗ)
			{
				if (515 < 515 - 178)
				{
					goto IL_0051;
				}
				type = Ⴈ.GetType();
				goto IL_00d8;
			}
			goto IL_0117;
			IL_0122:
			if (!Ⴗ)
			{
				goto IL_0007;
			}
			if ((321 + 321 * 321) % 2 == 0)
			{
				goto IL_0071;
			}
			goto IL_00a2;
			IL_0051:
			WriteEndElement(Ⴈ);
		}

		private void ႳႷ(string Ⴍ, string Ⴓ, CodeHardwareAction Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0002, IL_0035, IL_0053, IL_0089, IL_00c3, IL_00dc, IL_0100, IL_0188, IL_01b1
			if (Ⴈ == null)
			{
				if (264 <= 264 - 238)
				{
					return;
				}
				goto IL_00c5;
			}
			Type type = default(Type);
			if (!Ⴗ)
			{
				if (153 >= 153 - 36)
				{
					type = Ⴈ.GetType();
					goto IL_000f;
				}
				goto IL_00e1;
			}
			goto IL_018d;
			IL_0167:
			if (Ⴈ.Parameter != 0)
			{
				if (794 <= 794 - 529)
				{
					goto IL_005d;
				}
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394918), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.Parameter));
				if (882 < 882 - 436)
				{
					goto IL_00c5;
				}
			}
			WriteEndElement(Ⴈ);
			return;
			IL_000f:
			if ((object)type == typeof(CodeHardwareAction))
			{
				goto IL_018d;
			}
			if (330 >= 330 - 293)
			{
				goto IL_00e1;
			}
			goto IL_0198;
			IL_005d:
			WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394874), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
			if (false)
			{
				return;
			}
			goto IL_011d;
			IL_00e1:
			throw CreateUnknownTypeException(Ⴈ);
			IL_018d:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			goto IL_0198;
			IL_0198:
			if (!Ⴗ)
			{
				goto IL_011d;
			}
			if ((321 + 321 * 321) % 2 == 0)
			{
				goto IL_005d;
			}
			goto IL_0167;
			IL_00c5:
			if (!Ⴃ)
			{
				return;
			}
			if (395 <= 395 - 102)
			{
				goto IL_000f;
			}
			WriteNullTagLiteral(Ⴍ, Ⴓ);
			if (138 > 138 - 70)
			{
				return;
			}
			goto IL_0142;
			IL_011d:
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394916), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.Start));
			goto IL_0142;
			IL_0142:
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394935), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.Code));
			goto IL_0167;
		}

		private void ႳႳ(string Ⴍ, string Ⴓ, HardwareAction Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_001a, IL_005a, IL_0088, IL_00bc, IL_00d1, IL_00ed, IL_011e, IL_013f, IL_0191, IL_01bb
			if (Ⴈ == null)
			{
				if ((134 + 134 * 134) % 2 == 0)
				{
					if (Ⴃ)
					{
						if (30 < 30 - 6)
						{
							return;
						}
						WriteNullTagLiteral(Ⴍ, Ⴓ);
						if (false)
						{
							goto IL_009c;
						}
						return;
					}
					return;
				}
			}
			else
			{
				if (Ⴗ)
				{
					goto IL_0123;
				}
				if (323 <= 323 - 178)
				{
					return;
				}
			}
			Type type = Ⴈ.GetType();
			if ((object)type != typeof(HardwareAction))
			{
				if ((886 + 886 * 886) % 2 == 0)
				{
					if ((object)type == typeof(PauseHardwareAction))
					{
						if (1004 >= 1004 - 441)
						{
							Ⴜ(Ⴍ, Ⴓ, (PauseHardwareAction)Ⴈ, Ⴃ, Ⴗ: true);
						}
						return;
					}
					goto IL_009c;
				}
			}
			goto IL_0123;
			IL_009c:
			while (true)
			{
				if ((object)type == typeof(SoundHardwareAction))
				{
					if (230 <= 230 - 187)
					{
						continue;
					}
				}
				else
				{
					if ((object)type != typeof(CodeHardwareAction))
					{
						break;
					}
					if (33 >= 33 - 3)
					{
						ႳႷ(Ⴍ, Ⴓ, (CodeHardwareAction)Ⴈ, Ⴃ, Ⴗ: true);
						return;
					}
				}
				this.Ⴃ(Ⴍ, Ⴓ, (SoundHardwareAction)Ⴈ, Ⴃ, Ⴗ: true);
				return;
			}
			throw CreateUnknownTypeException(Ⴈ);
			IL_0123:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			if (Ⴗ)
			{
				if (87 < 87 - 73)
				{
					return;
				}
				WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394873), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				if (false)
				{
					return;
				}
			}
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394916), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.Start));
			WriteEndElement(Ⴈ);
		}

		private string ႳႷႷ(QnAScenarioMatchActivity Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0014, IL_0026, IL_00f5, IL_010a, IL_011f, IL_0134, IL_0149, IL_015b, IL_0170, IL_0185, IL_019a, IL_01ac, IL_01be, IL_01d3, IL_01e8, IL_01fd, IL_0212, IL_0227, IL_023c, IL_0243, IL_0258, IL_026a, IL_027c, IL_0291, IL_02a6, IL_02bb, IL_02cd, IL_02df, IL_02f1, IL_0306, IL_031b, IL_0330, IL_0342, IL_0357, IL_036c, IL_0381, IL_0396
			string text = null;
			switch (Ⴍ)
			{
			case QnAScenarioMatchActivity.ConfirmWebSearchWithQ:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394912);
			case QnAScenarioMatchActivity.Personalities:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394882);
			default:
				if ((978 + 978 * 978) % 2 == 0)
				{
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႥႷႭ.Ⴍ.ႰႷ(1821394888));
				}
				goto case QnAScenarioMatchActivity.GoToFunnyWebsite;
			case QnAScenarioMatchActivity.HomeworkOrGamesOrCinema:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394894);
			case QnAScenarioMatchActivity.Cinema:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394931);
			case QnAScenarioMatchActivity.WhatsMyName:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394927);
			case QnAScenarioMatchActivity.ShowWeather:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394937);
			case QnAScenarioMatchActivity.TeachQOrSearchWebWithQ:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394925);
			case QnAScenarioMatchActivity.UserProfile:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394926);
			case QnAScenarioMatchActivity.ShowTv:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394938);
			case QnAScenarioMatchActivity.TeachQuestion:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394943);
			case QnAScenarioMatchActivity.ShowSports:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394920);
			case QnAScenarioMatchActivity.GoToRegistration:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394881);
			case QnAScenarioMatchActivity.ConfirmWebSearch:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394929);
			case QnAScenarioMatchActivity.ShowAllTeach:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394893);
			case QnAScenarioMatchActivity.PlayChitChat:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394928);
			case QnAScenarioMatchActivity.ShowApps:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394939);
			case QnAScenarioMatchActivity.ShowHomework:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394921);
			case QnAScenarioMatchActivity.RunWebSearch:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394919);
			case QnAScenarioMatchActivity.NewWords:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394940);
			case QnAScenarioMatchActivity.PlayGames:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394913);
			case QnAScenarioMatchActivity.ShowReminders:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394885);
			case QnAScenarioMatchActivity.WhatsTheTime:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394941);
			case QnAScenarioMatchActivity.TeachQOrSearchWeb:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394942);
			case QnAScenarioMatchActivity.ShowCinemaAndGames:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394886);
			case QnAScenarioMatchActivity.GoToMyChatman:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394915);
			case QnAScenarioMatchActivity.CheckAndPlayChitChat:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394930);
			case QnAScenarioMatchActivity.DownloadChitChat:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394892);
			case QnAScenarioMatchActivity.GoToFacebook:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394887);
			case QnAScenarioMatchActivity.AnswerQuestion:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394924);
			case QnAScenarioMatchActivity.GoToHomework:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394895);
			case QnAScenarioMatchActivity.GoToFunnyWebsite:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394880);
			case QnAScenarioMatchActivity.PromptYesNo:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394936);
			case QnAScenarioMatchActivity.NewChitChat:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394914);
			case QnAScenarioMatchActivity.ShowCredits:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394883);
			case QnAScenarioMatchActivity.UserProfileOrTeach:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394884);
			}
		}

		private string ႳႷႳ(ActionScope Ⴍ)
		{
			int num = 1;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 3:
					num = 5;
					continue;
				case 0:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394889);
					num = 2;
					continue;
				case 4:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394890);
					num = 2;
					continue;
				case 6:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394891);
					num = 2;
					continue;
				case 5:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႥႷႭ.Ⴍ.ႰႷ(1821394900));
				case 2:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 3;
					break;
				case ActionScope.Reactive:
					num2 = 0;
					break;
				case ActionScope.Proactive:
					num2 = 4;
					break;
				case ActionScope.Both:
					num2 = 6;
					break;
				}
				num = num2;
			}
		}

		private string ႳႷႠ(ActionChangeLog Ⴍ)
		{
			int num = 5;
			ActionChangeLog actionChangeLog = default(ActionChangeLog);
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 1:
					num = ((actionChangeLog == ActionChangeLog.Mood) ? 7 : 12);
					continue;
				case 12:
					num = ((actionChangeLog == ActionChangeLog.Actions) ? 3 : 11);
					continue;
				case 11:
					num = 0;
					continue;
				case 10:
					result = ႥႷႭ.Ⴓ.ႰႷ(1821394847);
					num = 4;
					continue;
				case 9:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394901);
					num = 4;
					continue;
				case 8:
					result = ႥႷႭ.Ⴓ.ႰႷ(1821394922);
					num = 4;
					continue;
				case 2:
					result = ႥႷႭ.Ⴓ.ႰႷ(1821394846);
					num = 4;
					continue;
				case 6:
					result = ႥႷႭ.Ⴓ.ႰႷ(1821394825);
					num = 4;
					continue;
				case 7:
					result = ႥႷႭ.Ⴓ.ႰႷ(1821394816);
					num = 4;
					continue;
				case 3:
					result = ႥႷႭ.Ⴓ.ႰႷ(1821394923);
					num = 4;
					continue;
				case 0:
					result = XmlSerializationWriter.FromEnum((long)Ⴍ, new string[7]
					{
						ႥႷႭ.Ⴍ.ႰႷ(1821394924),
						ႥႷႭ.Ⴍ.ႰႷ(1821394901),
						ႥႷႭ.Ⴍ.ႰႷ(1821394902),
						ႥႷႭ.Ⴍ.ႰႷ(1821394826),
						ႥႷႭ.Ⴍ.ႰႷ(1821394912),
						ႥႷႭ.Ⴍ.ႰႷ(1821394816),
						ႥႷႭ.Ⴍ.ႰႷ(1821394903)
					}, new long[7]
					{
						0L,
						1L,
						2L,
						4L,
						8L,
						16L,
						32L
					}, ႥႷႭ.Ⴍ.ႰႷ(1821394896));
					num = 4;
					continue;
				case 4:
					return result;
				}
				result = null;
				actionChangeLog = Ⴍ;
				int num2;
				switch (actionChangeLog)
				{
				default:
					num2 = 1;
					break;
				case ActionChangeLog.None:
					num2 = 10;
					break;
				case ActionChangeLog.Words:
					num2 = 9;
					break;
				case ActionChangeLog.Audio:
					num2 = 8;
					break;
				case ActionChangeLog.Words | ActionChangeLog.Audio:
					num2 = 0;
					break;
				case ActionChangeLog.Name:
					num2 = 2;
					break;
				case ActionChangeLog.Words | ActionChangeLog.Name:
					num2 = 0;
					break;
				case ActionChangeLog.Audio | ActionChangeLog.Name:
					num2 = 0;
					break;
				case ActionChangeLog.Words | ActionChangeLog.Audio | ActionChangeLog.Name:
					num2 = 0;
					break;
				case ActionChangeLog.Description:
					num2 = 6;
					break;
				}
				num = num2;
			}
		}

		private void ႳႠ(string Ⴍ, string Ⴓ, ChatmanAction Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 24;
			List<HardwareAction> actions = default(List<HardwareAction>);
			int num2 = default(int);
			HardwareAction hardwareAction = default(HardwareAction);
			while (true)
			{
				switch (num)
				{
				case 37:
					return;
				default:
					num = ((Ⴈ != null) ? 30 : 10);
					continue;
				case 10:
					num = ((!Ⴃ) ? 37 : 26);
					continue;
				case 26:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 30:
					num = (Ⴗ ? 21 : 47);
					continue;
				case 47:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(ChatmanAction)) ? 21 : 33);
					continue;
				}
				case 33:
					throw CreateUnknownTypeException(Ⴈ);
				case 21:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 5 : 31);
					continue;
				case 31:
					WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394877), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					goto case 5;
				case 5:
					num = ((Ⴈ.TotalCounter == 0) ? 48 : 41);
					continue;
				case 41:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394897), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.TotalCounter));
					goto case 48;
				case 48:
					num = ((Ⴈ.DailyAverage == 0.0) ? 55 : 58);
					continue;
				case 58:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394932), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.DailyAverage));
					goto case 55;
				case 55:
					num = ((Ⴈ.DaysUsed == 0) ? 51 : 25);
					continue;
				case 25:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394898), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.DaysUsed));
					goto case 51;
				case 51:
					num = ((Ⴈ.LastUseDate != new DateTime(0L)) ? 36 : 0);
					continue;
				case 36:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394933), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlSerializationWriter.FromDateTime(Ⴈ.LastUseDate));
					goto case 0;
				case 0:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394825), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.ID));
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394846), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Name);
					num = ((Ⴈ.Description == null) ? 13 : 44);
					continue;
				case 44:
					num = ((Ⴈ.Description.Length == 0) ? 13 : 39);
					continue;
				case 39:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394912), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.Description);
					goto case 13;
				case 13:
					num = ((Ⴈ.Author == null) ? 20 : 16);
					continue;
				case 16:
					num = ((Ⴈ.Author.Length == 0) ? 20 : 6);
					continue;
				case 6:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394827), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Author);
					goto case 20;
				case 20:
					num = ((Ⴈ.Reference == null) ? 1 : 17);
					continue;
				case 17:
					num = ((Ⴈ.Reference.Length == 0) ? 1 : 56);
					continue;
				case 56:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394899), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.Reference);
					goto case 1;
				case 1:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394908), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.MoodID));
					num = ((Ⴈ.Intensity == 1) ? 50 : 7);
					continue;
				case 7:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394909), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.Intensity));
					goto case 50;
				case 50:
					num = ((!(Ⴈ.CreationDate != new DateTime(633478752000000000L))) ? 3 : 53);
					continue;
				case 53:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394910), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlSerializationWriter.FromDateTime(Ⴈ.CreationDate));
					goto case 3;
				case 3:
					num = ((!Ⴈ.IsPrivate) ? 45 : 14);
					continue;
				case 14:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394934), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.IsPrivate));
					goto case 45;
				case 45:
					num = ((!Ⴈ.IsExcluded) ? 32 : 42);
					continue;
				case 42:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394911), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.IsExcluded));
					goto case 32;
				case 32:
					num = ((Ⴈ.Scope == ActionScope.Reactive) ? 40 : 43);
					continue;
				case 43:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394935), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ႳႷႳ(Ⴈ.Scope));
					goto case 40;
				case 40:
					num = ((Ⴈ.SpecialActionCode == 0) ? 59 : 57);
					continue;
				case 57:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394928), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.SpecialActionCode));
					goto case 59;
				case 59:
					num = ((Ⴈ.SerialNumberUsedForDownload == null) ? 11 : 34);
					continue;
				case 34:
					num = ((Ⴈ.SerialNumberUsedForDownload.Length == 0) ? 11 : 19);
					continue;
				case 19:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394929), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.SerialNumberUsedForDownload);
					goto case 11;
				case 11:
					num = ((!Ⴈ.IsMy) ? 46 : 35);
					continue;
				case 35:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394930), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.IsMy));
					goto case 46;
				case 46:
					num = ((Ⴈ.ChangeLog == 0) ? 28 : 4);
					continue;
				case 4:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394904), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.ChangeLog));
					goto case 28;
				case 28:
					actions = Ⴈ.Actions;
					num = ((actions == null) ? 29 : 54);
					continue;
				case 54:
					WriteStartElement(ႥႷႭ.Ⴍ.ႰႷ(1821394903), ႥႷႭ.Ⴓ.ႰႷ(1821394852), null, writePrefixed: false);
					num2 = 0;
					num = 2;
					continue;
				case 49:
					hardwareAction = actions[num2];
					num = ((hardwareAction == null) ? 8 : 12);
					continue;
				case 12:
					num = ((!(hardwareAction is PauseHardwareAction)) ? 9 : 52);
					continue;
				case 52:
					Ⴜ(ႥႷႭ.Ⴍ.ႰႷ(1821394905), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (PauseHardwareAction)hardwareAction, Ⴃ: true, Ⴗ: false);
					num = 8;
					continue;
				case 9:
					num = ((!(hardwareAction is SoundHardwareAction)) ? 27 : 15);
					continue;
				case 15:
					this.Ⴃ(ႥႷႭ.Ⴍ.ႰႷ(1821394906), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (SoundHardwareAction)hardwareAction, Ⴃ: true, Ⴗ: false);
					num = 8;
					continue;
				case 27:
					num = ((!(hardwareAction is CodeHardwareAction)) ? 22 : 23);
					continue;
				case 23:
					ႳႷ(ႥႷႭ.Ⴍ.ႰႷ(1821394935), ႥႷႭ.Ⴓ.ႰႷ(1821394852), (CodeHardwareAction)hardwareAction, Ⴃ: true, Ⴗ: false);
					num = 8;
					continue;
				case 22:
					num = ((hardwareAction == null) ? 8 : 18);
					continue;
				case 18:
					throw CreateUnknownTypeException(hardwareAction);
				case 8:
					num2++;
					num = 2;
					continue;
				case 2:
					num = ((num2 < ((ICollection)actions).Count) ? 49 : 38);
					continue;
				case 38:
					WriteEndElement();
					break;
				case 29:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private void ႳႰ(string Ⴍ, string Ⴓ, ActionUsage Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0044, IL_0069, IL_0089, IL_00df, IL_0109, IL_0137, IL_015a, IL_0196, IL_01d0, IL_020e, IL_0233, IL_0261, IL_027d, IL_02a0, IL_02e7, IL_0302
			while (true)
			{
				if (Ⴈ != null)
				{
					goto IL_0144;
				}
				if (1000 <= 1000 - 579)
				{
					continue;
				}
				goto IL_0267;
				IL_0267:
				if (!Ⴃ)
				{
					return;
				}
				if ((964 + 964 * 964) % 2 == 0)
				{
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					if (146 >= 146 - 88)
					{
						return;
					}
					goto IL_0144;
				}
				break;
				IL_0144:
				while (true)
				{
					if (Ⴗ)
					{
						goto IL_00b8;
					}
					if ((839 + 839 * 839) % 2 == 0)
					{
						Type type = Ⴈ.GetType();
						if ((object)type == typeof(ActionUsage))
						{
							goto IL_00b8;
						}
						if (false)
						{
							break;
						}
						if ((object)type == typeof(ChatmanAction))
						{
							if (719 > 719 - 671)
							{
								goto end_IL_02e9;
							}
							goto IL_00e1;
						}
					}
					goto IL_013c;
					IL_0282:
					if (Ⴈ.DaysUsed != 0)
					{
						if (1004 < 1004 - 896)
						{
							goto IL_000a;
						}
						do
						{
							WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394898), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.DaysUsed));
						}
						while (231 <= 231 - 190);
					}
					while (true)
					{
						if (Ⴈ.LastUseDate != new DateTime(0L))
						{
							if (false)
							{
								continue;
							}
							WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394933), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlSerializationWriter.FromDateTime(Ⴈ.LastUseDate));
							if (false)
							{
								break;
							}
						}
						WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394825), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.ID));
						WriteEndElement(Ⴈ);
						return;
					}
					continue;
					IL_000a:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394897), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.TotalCounter));
					if ((758 + 758 * 758) % 2 == 0)
					{
						goto IL_00e1;
					}
					goto IL_0213;
					IL_0213:
					if (Ⴈ.TotalCounter != 0)
					{
						if ((337 + 337 * 337) % 2 == 0)
						{
							goto IL_000a;
						}
						goto IL_00b8;
					}
					goto IL_00e1;
					IL_013c:
					throw CreateUnknownTypeException(Ⴈ);
					IL_00e1:
					if (Ⴈ.DailyAverage != 0.0)
					{
						if (885 > 885 - 576)
						{
							WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394932), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.DailyAverage));
							if ((383 + 383 * 383) % 2 == 0)
							{
								goto IL_0282;
							}
						}
						goto IL_013c;
					}
					goto IL_0282;
					IL_00b8:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					if (Ⴗ)
					{
						if (false)
						{
							goto IL_0267;
						}
						WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394876), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
						if (637 < 637 - 593)
						{
							goto IL_00e1;
						}
					}
					goto IL_0213;
				}
				continue;
				end_IL_02e9:
				break;
			}
			ႳႠ(Ⴍ, Ⴓ, (ChatmanAction)Ⴈ, Ⴃ, Ⴗ: true);
		}

		private void ႳႭ(string Ⴍ, string Ⴓ, Counter Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 12;
			Type type = default(Type);
			while (true)
			{
				switch (num)
				{
				case 13:
					return;
				default:
					num = ((Ⴈ != null) ? 5 : 6);
					continue;
				case 6:
					num = ((!Ⴃ) ? 13 : 9);
					continue;
				case 9:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 5:
					num = (Ⴗ ? 7 : 20);
					continue;
				case 20:
					type = Ⴈ.GetType();
					num = (((object)type == typeof(Counter)) ? 7 : 8);
					continue;
				case 8:
					num = (((object)type != typeof(ActionUsage)) ? 10 : 18);
					continue;
				case 18:
					ႳႰ(Ⴍ, Ⴓ, (ActionUsage)Ⴈ, Ⴃ, Ⴗ: true);
					return;
				case 10:
					num = (((object)type != typeof(ChatmanAction)) ? 21 : 23);
					continue;
				case 23:
					ႳႠ(Ⴍ, Ⴓ, (ChatmanAction)Ⴈ, Ⴃ, Ⴗ: true);
					return;
				case 21:
					num = (((object)type != typeof(MoodCounter)) ? 2 : 19);
					continue;
				case 19:
					Ⴄ(Ⴍ, Ⴓ, (MoodCounter)Ⴈ, Ⴃ, Ⴗ: true);
					return;
				case 2:
					throw CreateUnknownTypeException(Ⴈ);
				case 7:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 1 : 22);
					continue;
				case 22:
					WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394867), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					goto case 1;
				case 1:
					num = ((Ⴈ.TotalCounter == 0) ? 4 : 3);
					continue;
				case 3:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394844), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.TotalCounter));
					goto case 4;
				case 4:
					num = ((Ⴈ.DailyAverage == 0.0) ? 11 : 14);
					continue;
				case 14:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394918), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.DailyAverage));
					goto case 11;
				case 11:
					num = ((Ⴈ.DaysUsed == 0) ? 15 : 17);
					continue;
				case 17:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394845), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.DaysUsed));
					goto case 15;
				case 15:
					num = ((!(Ⴈ.LastUseDate != new DateTime(0L))) ? 16 : 0);
					continue;
				case 0:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394919), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlSerializationWriter.FromDateTime(Ⴈ.LastUseDate));
					break;
				case 16:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private void ႳႥ(string Ⴍ, string Ⴓ, ScenarioUserAction Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0030, IL_004d, IL_0083, IL_00b5, IL_00f9, IL_012b, IL_0157, IL_0193, IL_01b4, IL_01d9, IL_01e2, IL_0217, IL_0258, IL_0291, IL_02b0, IL_02cf, IL_02f1, IL_0339, IL_035e, IL_037c
			if (Ⴈ != null)
			{
				goto IL_0296;
			}
			if (1011 < 1011 - 49)
			{
				goto IL_01e4;
			}
			goto IL_02b5;
			IL_01e4:
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394931), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.AnswerText);
			if (714 <= 714 - 54)
			{
				goto IL_0130;
			}
			goto IL_02d1;
			IL_0296:
			if (!Ⴗ)
			{
				if (407 <= 407 - 114)
				{
					return;
				}
				Type type = Ⴈ.GetType();
				if ((object)type != typeof(ScenarioUserAction))
				{
					if ((476 + 476 * 476) % 2 == 0)
					{
						goto IL_01b9;
					}
					goto IL_02d8;
				}
			}
			goto IL_0130;
			IL_02d1:
			List<ScenarioAction> actions = Ⴈ.Actions;
			goto IL_02d8;
			IL_02d8:
			if (actions == null)
			{
				goto IL_004f;
			}
			if (777 >= 777 - 416)
			{
				goto IL_01de;
			}
			goto IL_0296;
			IL_01c1:
			WriteNullTagLiteral(Ⴍ, Ⴓ);
			if (97 > 97 - 51)
			{
				return;
			}
			goto IL_025a;
			IL_0130:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			if (Ⴗ)
			{
				if (false)
				{
					goto IL_01de;
				}
				WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394866), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				if (570 <= 570 - 115)
				{
					goto IL_02b5;
				}
			}
			goto IL_02f6;
			IL_01de:
			int num = 0;
			goto IL_0198;
			IL_0198:
			while (num < ((ICollection)actions).Count)
			{
				ႳႤ(ႥႷႭ.Ⴓ.ႰႷ(1821394940), ႥႷႭ.Ⴍ.ႰႷ(1821394853), actions[num], Ⴃ: false, Ⴗ: false);
				num++;
				if (566 < 566 - 262)
				{
					return;
				}
			}
			if (917 >= 917 - 593)
			{
				goto IL_004f;
			}
			goto IL_01c1;
			IL_02b5:
			if (!Ⴃ)
			{
				return;
			}
			if (365 > 365 - 191)
			{
				goto IL_01c1;
			}
			goto IL_02f6;
			IL_01b9:
			throw CreateUnknownTypeException(Ⴈ);
			IL_02f6:
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394824), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.ID));
			if (Ⴈ.SpecialCode == 0)
			{
				goto IL_00bb;
			}
			if (1006 >= 1006 - 465)
			{
				goto IL_025a;
			}
			goto IL_02d8;
			IL_004f:
			WriteEndElement(Ⴈ);
			return;
			IL_00bb:
			if (Ⴈ.Data != null)
			{
				if (980 <= 980 - 407)
				{
					goto IL_0198;
				}
				if (Ⴈ.Data.Length != 0)
				{
					if (45 < 45 - 36)
					{
						goto IL_025a;
					}
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394724), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.Data);
					if (511 > 511 - 363)
					{
					}
				}
			}
			if (Ⴈ.RequestedActivity != 0)
			{
				if (false)
				{
					goto IL_025a;
				}
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394725), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႳႷႷ(Ⴈ.RequestedActivity));
				if (926 < 926 - 847)
				{
					goto IL_02f6;
				}
			}
			if (Ⴈ.AnswerText != null)
			{
				if (664 < 664 - 517)
				{
					return;
				}
				if (Ⴈ.AnswerText.Length != 0)
				{
					if (454 > 454 - 240)
					{
						goto IL_01e4;
					}
					goto IL_02f6;
				}
			}
			goto IL_02d1;
			IL_025a:
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394907), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.SpecialCode));
			if (470 >= 470 - 7)
			{
				goto IL_00bb;
			}
			goto IL_01b9;
		}

		private void ႳႤ(string Ⴍ, string Ⴓ, ScenarioAction Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 6;
			Type type = default(Type);
			List<ScenarioAction> actions = default(List<ScenarioAction>);
			int num2 = default(int);
			while (true)
			{
				switch (num)
				{
				case 19:
					return;
				default:
					num = ((Ⴈ != null) ? 8 : 9);
					break;
				case 9:
					num = ((!Ⴃ) ? 19 : 17);
					break;
				case 17:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 8:
					num = (Ⴗ ? 18 : 21);
					break;
				case 21:
					type = Ⴈ.GetType();
					num = (((object)type == typeof(ScenarioAction)) ? 18 : 7);
					break;
				case 7:
					num = (((object)type != typeof(ScenarioUserAction)) ? 22 : 3);
					break;
				case 3:
					ႳႥ(Ⴍ, Ⴓ, (ScenarioUserAction)Ⴈ, Ⴃ, Ⴗ: true);
					return;
				case 22:
					throw CreateUnknownTypeException(Ⴈ);
				case 18:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 5 : 4);
					break;
				case 4:
					WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394865), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					goto case 5;
				case 5:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394824), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.ID));
					num = ((Ⴈ.SpecialCode == 0) ? 11 : 10);
					break;
				case 10:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394907), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.SpecialCode));
					goto case 11;
				case 11:
					num = ((Ⴈ.Data == null) ? 14 : 0);
					break;
				case 0:
					num = ((Ⴈ.Data.Length == 0) ? 14 : 15);
					break;
				case 15:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394724), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.Data);
					goto case 14;
				case 14:
					num = ((Ⴈ.RequestedActivity == QnAScenarioMatchActivity.PlayChitChat) ? 13 : 12);
					break;
				case 12:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394725), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႳႷႷ(Ⴈ.RequestedActivity));
					goto case 13;
				case 13:
					actions = Ⴈ.Actions;
					num = ((actions != null) ? 1 : 2);
					break;
				case 1:
					num2 = 0;
					num = 16;
					break;
				case 20:
					ႳႤ(ႥႷႭ.Ⴍ.ႰႷ(1821394726), ႥႷႭ.Ⴓ.ႰႷ(1821394852), actions[num2], Ⴃ: false, Ⴗ: false);
					num2++;
					num = 16;
					break;
				case 16:
					num = ((num2 < ((ICollection)actions).Count) ? 20 : 2);
					break;
				case 2:
					WriteEndElement(Ⴈ);
					return;
				}
			}
		}

		private void ႳႨ(string Ⴍ, string Ⴓ, ScenarioMood Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 5;
			while (true)
			{
				switch (num)
				{
				case 7:
					return;
				default:
					num = ((Ⴈ != null) ? 1 : 11);
					continue;
				case 11:
					num = ((!Ⴃ) ? 7 : 10);
					continue;
				case 10:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 1:
					num = (Ⴗ ? 9 : 8);
					continue;
				case 8:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(ScenarioMood)) ? 9 : 2);
					continue;
				}
				case 2:
					throw CreateUnknownTypeException(Ⴈ);
				case 9:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 4 : 3);
					continue;
				case 3:
					WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394864), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					goto case 4;
				case 4:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394824), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.ID));
					num = ((Ⴈ.ActionMoodID == null) ? 12 : 0);
					continue;
				case 0:
					num = ((Ⴈ.ActionMoodID.Length == 0) ? 12 : 6);
					continue;
				case 6:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394941), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.ActionMoodID);
					break;
				case 12:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private string ႳႷႰ(ScenarioTextRelation Ⴍ)
		{
			int num = 2;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 3:
					num = 4;
					continue;
				case 0:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394727);
					num = 5;
					continue;
				case 1:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394720);
					num = 5;
					continue;
				case 4:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႥႷႭ.Ⴍ.ႰႷ(1821394721));
				case 5:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 3;
					break;
				case ScenarioTextRelation.Include:
					num2 = 0;
					break;
				case ScenarioTextRelation.Exclude:
					num2 = 1;
					break;
				}
				num = num2;
			}
		}

		private void ႳႣ(string Ⴍ, string Ⴓ, ScenarioIconText Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0037, IL_0066, IL_00a5, IL_00c9, IL_0108, IL_0149, IL_0181, IL_01a3, IL_01df, IL_0211, IL_023b, IL_025b, IL_0277, IL_0297, IL_02d7, IL_0313, IL_033a, IL_0381, IL_0397, IL_03b9, IL_03d8, IL_03fa, IL_0417, IL_043b, IL_0463, IL_0482, IL_04a5, IL_04c3
			int num = default(int);
			List<ScenarioAction> actions = default(List<ScenarioAction>);
			while (true)
			{
				if (Ⴈ != null)
				{
					goto IL_0383;
				}
				if (672 <= 672 - 56 || !Ⴃ)
				{
					return;
				}
				if (132 > 132 - 123)
				{
					goto IL_039c;
				}
				goto IL_0487;
				IL_03fc:
				if (Ⴈ.HasStar)
				{
					if (144 <= 144 - 113)
					{
						goto IL_03be;
					}
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394936), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.HasStar));
					if (false)
					{
						goto IL_033f;
					}
				}
				goto IL_0487;
				IL_045c:
				num = 0;
				goto IL_00ab;
				IL_00ab:
				if (num < ((ICollection)actions).Count)
				{
					goto IL_010d;
				}
				if (false)
				{
					goto IL_0186;
				}
				WriteEndElement();
				if (false)
				{
					continue;
				}
				goto IL_01a5;
				IL_0383:
				if (!Ⴗ)
				{
					if (32 < 32 - 16)
					{
						goto IL_03dd;
					}
					Type type = Ⴈ.GetType();
					if ((object)type != typeof(ScenarioIconText))
					{
						if (639 > 639 - 241)
						{
							break;
						}
						goto IL_045c;
					}
				}
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				goto IL_0221;
				IL_00ce:
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394722), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.TopPhraseID));
				if (false)
				{
					continue;
				}
				goto IL_0186;
				IL_0186:
				if (Ⴈ.RequireAdditionalPhrase)
				{
					if (false)
					{
						goto IL_010d;
					}
					do
					{
						WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394937), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.RequireAdditionalPhrase));
					}
					while (38 <= 38 - 27);
				}
				if (Ⴈ.MatchWord == null)
				{
					goto IL_025d;
				}
				if (687 <= 687 - 114)
				{
					goto IL_039c;
				}
				goto IL_03dd;
				IL_03be:
				actions = Ⴈ.Actions;
				if (actions == null)
				{
					goto IL_01a5;
				}
				if (407 < 407 - 26)
				{
					break;
				}
				WriteStartElement(ႥႷႭ.Ⴍ.ႰႷ(1821394903), ႥႷႭ.Ⴓ.ႰႷ(1821394852), null, writePrefixed: false);
				goto IL_045c;
				IL_0487:
				while (Ⴈ.TopPhraseID != 0)
				{
					if (797 < 797 - 463)
					{
						continue;
					}
					goto IL_00ce;
				}
				goto IL_0186;
				IL_0221:
				if (Ⴗ)
				{
					if (478 < 478 - 468)
					{
						goto IL_01e1;
					}
					WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394870), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					if (741 < 741 - 77)
					{
						goto IL_00ab;
					}
				}
				goto IL_033f;
				IL_010d:
				ႳႤ(ႥႷႭ.Ⴍ.ႰႷ(1821394726), ႥႷႭ.Ⴓ.ႰႷ(1821394852), actions[num], Ⴃ: true, Ⴗ: false);
				num++;
				if ((855 + 855 * 855) % 2 == 0)
				{
					goto IL_00ab;
				}
				goto IL_03be;
				IL_029c:
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394943), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ႳႷႰ(Ⴈ.Relation));
				if (false)
				{
					goto IL_0221;
				}
				goto IL_03fc;
				IL_033f:
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394824), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.ID));
				if (Ⴈ.Data != null)
				{
					if (false)
					{
						goto IL_0487;
					}
					if (Ⴈ.Data.Length != 0)
					{
						if (false)
						{
							goto IL_0383;
						}
						WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394942), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Data);
						if (335 < 335 - 197)
						{
							goto IL_0186;
						}
					}
				}
				goto IL_0468;
				IL_01a5:
				WriteEndElement(Ⴈ);
				return;
				IL_039c:
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if ((321 + 321 * 321) % 2 == 0)
				{
					return;
				}
				goto IL_0468;
				IL_03dd:
				while (Ⴈ.MatchWord.Length != 0)
				{
					if (33 < 33 - 14)
					{
						continue;
					}
					goto IL_01e1;
				}
				goto IL_025d;
				IL_01e1:
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394938), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.MatchWord);
				if (834 < 834 - 145)
				{
					goto IL_0221;
				}
				goto IL_025d;
				IL_0468:
				if (Ⴈ.Relation != 0)
				{
					if ((67 + 67 * 67) % 2 == 0)
					{
						goto IL_029c;
					}
					goto IL_03dd;
				}
				goto IL_03fc;
				IL_025d:
				if (Ⴈ.Deleted)
				{
					if (false)
					{
						return;
					}
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394939), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.Deleted));
					if (false)
					{
						goto IL_029c;
					}
				}
				goto IL_03be;
			}
			throw CreateUnknownTypeException(Ⴈ);
		}

		private void ႳႼ(string Ⴍ, string Ⴓ, ScenarioText Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 12;
			List<ScenarioAction> actions = default(List<ScenarioAction>);
			int num2 = default(int);
			while (true)
			{
				switch (num)
				{
				case 15:
					return;
				default:
					num = ((Ⴈ != null) ? 28 : 13);
					continue;
				case 13:
					num = ((!Ⴃ) ? 15 : 11);
					continue;
				case 11:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 28:
					num = (Ⴗ ? 6 : 0);
					continue;
				case 0:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(ScenarioText)) ? 6 : 21);
					continue;
				}
				case 21:
					throw CreateUnknownTypeException(Ⴈ);
				case 6:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 5 : 10);
					continue;
				case 10:
					WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394869), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					goto case 5;
				case 5:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394825), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.ID));
					num = ((Ⴈ.Data == null) ? 30 : 23);
					continue;
				case 23:
					num = ((Ⴈ.Data.Length != 0) ? 1 : 30);
					continue;
				case 1:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394724), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.Data);
					goto case 30;
				case 30:
					num = ((Ⴈ.Relation == ScenarioTextRelation.Include) ? 3 : 17);
					continue;
				case 17:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394723), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႳႷႰ(Ⴈ.Relation));
					goto case 3;
				case 3:
					num = ((!Ⴈ.HasStar) ? 9 : 26);
					continue;
				case 26:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394732), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.HasStar));
					goto case 9;
				case 9:
					num = ((Ⴈ.TopPhraseID == 0) ? 4 : 16);
					continue;
				case 16:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394884), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.TopPhraseID));
					goto case 4;
				case 4:
					num = ((!Ⴈ.RequireAdditionalPhrase) ? 8 : 25);
					continue;
				case 25:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394733), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.RequireAdditionalPhrase));
					goto case 8;
				case 8:
					num = ((Ⴈ.MatchWord == null) ? 7 : 14);
					continue;
				case 14:
					num = ((Ⴈ.MatchWord.Length == 0) ? 7 : 22);
					continue;
				case 22:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394734), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.MatchWord);
					goto case 7;
				case 7:
					num = ((!Ⴈ.Deleted) ? 2 : 18);
					continue;
				case 18:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394735), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.Deleted));
					goto case 2;
				case 2:
					actions = Ⴈ.Actions;
					num = ((actions == null) ? 19 : 27);
					continue;
				case 27:
					WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394923), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
					num2 = 0;
					num = 20;
					continue;
				case 29:
					ႳႤ(ႥႷႭ.Ⴓ.ႰႷ(1821394940), ႥႷႭ.Ⴍ.ႰႷ(1821394853), actions[num2], Ⴃ: true, Ⴗ: false);
					num2++;
					num = 20;
					continue;
				case 20:
					num = ((num2 < ((ICollection)actions).Count) ? 29 : 24);
					continue;
				case 24:
					WriteEndElement();
					break;
				case 19:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private void ႠႷ(string Ⴍ, string Ⴓ, ScenarioTextBase Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_003f, IL_007b, IL_00b7, IL_00db, IL_00fd, IL_0131, IL_0154, IL_017c, IL_01b9, IL_01de, IL_0203, IL_0226, IL_0273, IL_02e5, IL_0307, IL_0336, IL_0375, IL_0396, IL_03cb, IL_03f4, IL_0410, IL_0450, IL_047a, IL_04a0, IL_04d2, IL_04f7, IL_0522, IL_0544, IL_0561
			if (Ⴈ != null)
			{
				if (Ⴗ)
				{
					goto IL_03d0;
				}
				if (368 >= 368 - 271)
				{
					goto IL_030c;
				}
				goto IL_04fc;
			}
			if (false)
			{
				goto IL_000a;
			}
			goto IL_020d;
			IL_029a:
			ႳႣ(Ⴍ, Ⴓ, (ScenarioIconText)Ⴈ, Ⴃ, Ⴗ: true);
			return;
			IL_00e0:
			if (Ⴈ.RequireAdditionalPhrase)
			{
				if (311 <= 311 - 4)
				{
					goto IL_0455;
				}
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394937), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.RequireAdditionalPhrase));
				if (813 <= 813 - 357)
				{
					goto IL_00bc;
				}
			}
			goto IL_01be;
			IL_01be:
			if (Ⴈ.MatchWord == null)
			{
				goto IL_02ea;
			}
			if (false)
			{
				return;
			}
			goto IL_0455;
			IL_03d0:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			if (!Ⴗ)
			{
				goto IL_0230;
			}
			if (false)
			{
				goto IL_0228;
			}
			goto IL_039b;
			IL_0136:
			if (Ⴈ.TopPhraseID == 0)
			{
				goto IL_00e0;
			}
			if (876 > 876 - 490)
			{
				goto IL_0080;
			}
			goto IL_039b;
			IL_0230:
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394824), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.ID));
			if (Ⴈ.Data == null)
			{
				goto IL_047f;
			}
			if (742 < 742 - 96)
			{
				goto IL_0455;
			}
			goto IL_04fc;
			IL_04d7:
			List<ScenarioAction> actions = Ⴈ.Actions;
			if (actions != null)
			{
				if (213 <= 213 - 106)
				{
					goto IL_01be;
				}
				goto IL_01e0;
			}
			goto IL_0228;
			IL_04fc:
			if (Ⴈ.Data.Length != 0)
			{
				if (789 <= 789 - 143)
				{
					goto IL_0436;
				}
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394942), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Data);
				if (11 > 11 - 1)
				{
				}
			}
			goto IL_047f;
			IL_039b:
			WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394868), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
			if (616 < 616 - 300)
			{
				goto IL_00bc;
			}
			goto IL_0230;
			IL_0080:
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394722), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.TopPhraseID));
			if (false)
			{
				return;
			}
			goto IL_00e0;
			IL_047f:
			if (Ⴈ.Relation != 0)
			{
				if (436 <= 436 - 379)
				{
					goto IL_0205;
				}
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394943), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ႳႷႰ(Ⴈ.Relation));
				if (357 <= 357 - 178)
				{
					goto IL_030c;
				}
			}
			if (!Ⴈ.HasStar)
			{
				goto IL_0136;
			}
			if ((433 + 433 * 433) % 2 == 0)
			{
				goto IL_0044;
			}
			goto IL_04d7;
			IL_0436:
			int num = num + 1;
			if (335 >= 335 - 305)
			{
				goto IL_00bc;
			}
			goto IL_0205;
			IL_01e0:
			WriteStartElement(ႥႷႭ.Ⴍ.ႰႷ(1821394903), ႥႷႭ.Ⴓ.ႰႷ(1821394852), null, writePrefixed: false);
			num = 0;
			goto IL_00bc;
			IL_030c:
			Type type = Ⴈ.GetType();
			if ((object)type != typeof(ScenarioTextBase))
			{
				if (287 < 287 - 60)
				{
					goto IL_0080;
				}
				if ((object)type == typeof(ScenarioText))
				{
					if (912 <= 912 - 857)
					{
						goto IL_020d;
					}
					ႳႼ(Ⴍ, Ⴓ, (ScenarioText)Ⴈ, Ⴃ, Ⴗ: true);
					return;
				}
				if ((object)type != typeof(ScenarioIconText))
				{
					goto IL_0205;
				}
				if (false)
				{
					goto IL_0136;
				}
				goto IL_029a;
			}
			goto IL_03d0;
			IL_00bc:
			if (num >= ((ICollection)actions).Count)
			{
				if (128 < 128 - 36)
				{
					return;
				}
				WriteEndElement();
				if (879 >= 879 - 246)
				{
					goto IL_0228;
				}
				return;
			}
			goto IL_0413;
			IL_0455:
			if (Ⴈ.MatchWord.Length != 0)
			{
				if ((856 + 856 * 856) % 2 == 0)
				{
					goto IL_000a;
				}
				goto IL_0205;
			}
			goto IL_02ea;
			IL_0205:
			throw CreateUnknownTypeException(Ⴈ);
			IL_020d:
			if (!Ⴃ)
			{
				return;
			}
			if (false)
			{
				goto IL_029a;
			}
			WriteNullTagLiteral(Ⴍ, Ⴓ);
			if (915 >= 915 - 521)
			{
				return;
			}
			goto IL_01e0;
			IL_0413:
			ႳႤ(ႥႷႭ.Ⴍ.ႰႷ(1821394726), ႥႷႭ.Ⴓ.ႰႷ(1821394852), actions[num], Ⴃ: true, Ⴗ: false);
			goto IL_0436;
			IL_0044:
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394936), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.HasStar));
			if ((45 + 45 * 45) % 2 == 0)
			{
				goto IL_0136;
			}
			goto IL_01be;
			IL_02ea:
			if (Ⴈ.Deleted)
			{
				if (false)
				{
					goto IL_0230;
				}
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394939), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.Deleted));
				if (false)
				{
					goto IL_0044;
				}
			}
			goto IL_04d7;
			IL_000a:
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394938), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.MatchWord);
			if ((926 + 926 * 926) % 2 == 0)
			{
				goto IL_02ea;
			}
			goto IL_0413;
			IL_0228:
			WriteEndElement(Ⴈ);
		}

		private void ႠႳ(string Ⴍ, string Ⴓ, Scenario Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 7;
			List<ScenarioMood> moods = default(List<ScenarioMood>);
			int num4 = default(int);
			List<ScenarioAction> actions = default(List<ScenarioAction>);
			int num3 = default(int);
			ScenarioAction scenarioAction = default(ScenarioAction);
			List<ScenarioTextBase> texts = default(List<ScenarioTextBase>);
			int num2 = default(int);
			ScenarioTextBase scenarioTextBase = default(ScenarioTextBase);
			while (true)
			{
				switch (num)
				{
				case 23:
					return;
				default:
					num = ((Ⴈ != null) ? 9 : 10);
					continue;
				case 10:
					num = ((!Ⴃ) ? 23 : 28);
					continue;
				case 28:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 9:
					num = (Ⴗ ? 19 : 4);
					continue;
				case 4:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(Scenario)) ? 19 : 26);
					continue;
				}
				case 26:
					throw CreateUnknownTypeException(Ⴈ);
				case 19:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 44 : 32);
					continue;
				case 32:
					WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394859), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					goto case 44;
				case 44:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394825), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.ID));
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394825), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Description);
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394885), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ႳႷႭ(Ⴈ.EventType));
					num = ((!Ⴈ.HighPriority) ? 36 : 22);
					continue;
				case 22:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394886), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.HighPriority));
					goto case 36;
				case 36:
					num = ((!Ⴈ.IsInternal) ? 1 : 34);
					continue;
				case 34:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394728), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.IsInternal));
					goto case 1;
				case 1:
					num = ((!Ⴈ.IsQnA) ? 38 : 17);
					continue;
				case 17:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394887), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.IsQnA));
					goto case 38;
				case 38:
					num = ((!Ⴈ.IsUserQnA) ? 48 : 15);
					continue;
				case 15:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394729), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.IsUserQnA));
					goto case 48;
				case 48:
					num = ((!Ⴈ.DontOverrideDanger) ? 3 : 25);
					continue;
				case 25:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394880), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.DontOverrideDanger));
					goto case 3;
				case 3:
					WriteElementString(ႥႷႭ.Ⴍ.ႰႷ(1821394730), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.originalScenarioID);
					moods = Ⴈ.Moods;
					num = ((moods == null) ? 33 : 43);
					continue;
				case 43:
					WriteStartElement(ႥႷႭ.Ⴍ.ႰႷ(1821394915), ႥႷႭ.Ⴓ.ႰႷ(1821394852), null, writePrefixed: false);
					num4 = 0;
					num = 46;
					continue;
				case 45:
					ႳႨ(ႥႷႭ.Ⴍ.ႰႷ(1821394816), ႥႷႭ.Ⴓ.ႰႷ(1821394852), moods[num4], Ⴃ: true, Ⴗ: false);
					num4++;
					num = 46;
					continue;
				case 46:
					num = ((num4 < ((ICollection)moods).Count) ? 45 : 42);
					continue;
				case 42:
					WriteEndElement();
					goto case 33;
				case 33:
					actions = Ⴈ.Actions;
					num = ((actions == null) ? 27 : 37);
					continue;
				case 37:
					WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394923), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
					num3 = 0;
					num = 8;
					continue;
				case 29:
					scenarioAction = actions[num3];
					num = ((scenarioAction == null) ? 41 : 40);
					continue;
				case 40:
					num = ((!(scenarioAction is ScenarioUserAction)) ? 2 : 31);
					continue;
				case 31:
					ႳႥ(ႥႷႭ.Ⴓ.ႰႷ(1821394881), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (ScenarioUserAction)scenarioAction, Ⴃ: true, Ⴗ: false);
					num = 41;
					continue;
				case 2:
					num = ((scenarioAction == null) ? 12 : 21);
					continue;
				case 21:
					ႳႤ(ႥႷႭ.Ⴍ.ႰႷ(1821394726), ႥႷႭ.Ⴓ.ႰႷ(1821394852), scenarioAction, Ⴃ: true, Ⴗ: false);
					num = 41;
					continue;
				case 12:
					num = ((scenarioAction == null) ? 41 : 14);
					continue;
				case 14:
					throw CreateUnknownTypeException(scenarioAction);
				case 41:
					num3++;
					num = 8;
					continue;
				case 8:
					num = ((num3 < ((ICollection)actions).Count) ? 29 : 6);
					continue;
				case 6:
					WriteEndElement();
					goto case 27;
				case 27:
					texts = Ⴈ.Texts;
					num = ((texts == null) ? 24 : 5);
					continue;
				case 5:
					WriteStartElement(ႥႷႭ.Ⴍ.ႰႷ(1821394731), ႥႷႭ.Ⴓ.ႰႷ(1821394852), null, writePrefixed: false);
					num2 = 0;
					num = 47;
					continue;
				case 35:
					scenarioTextBase = texts[num2];
					num = ((scenarioTextBase == null) ? 20 : 16);
					continue;
				case 16:
					num = ((!(scenarioTextBase is ScenarioIconText)) ? 18 : 39);
					continue;
				case 39:
					ႳႣ(ႥႷႭ.Ⴓ.ႰႷ(1821394883), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (ScenarioIconText)scenarioTextBase, Ⴃ: true, Ⴗ: false);
					num = 20;
					continue;
				case 18:
					num = ((!(scenarioTextBase is ScenarioText)) ? 11 : 0);
					continue;
				case 0:
					ႳႼ(ႥႷႭ.Ⴓ.ႰႷ(1821394894), ႥႷႭ.Ⴍ.ႰႷ(1821394853), (ScenarioText)scenarioTextBase, Ⴃ: true, Ⴗ: false);
					num = 20;
					continue;
				case 11:
					num = ((scenarioTextBase == null) ? 20 : 13);
					continue;
				case 13:
					throw CreateUnknownTypeException(scenarioTextBase);
				case 20:
					num2++;
					num = 47;
					continue;
				case 47:
					num = ((num2 < ((ICollection)texts).Count) ? 35 : 30);
					continue;
				case 30:
					WriteEndElement();
					break;
				case 24:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private string ႳႷႭ(EventType Ⴍ)
		{
			//Discarded unreachable code: IL_0005, IL_001a, IL_002f, IL_0041, IL_0053, IL_0085, IL_0097, IL_00a9, IL_00bd, IL_00cf, IL_00de, IL_00f0, IL_0102, IL_0114, IL_0126, IL_013b, IL_0150, IL_0175, IL_0187, IL_0199, IL_01ae, IL_01c3, IL_01d8, IL_01df, IL_01f1, IL_0203, IL_02b8
			string text = null;
			switch (Ⴍ)
			{
			case EventType.IMSessionStarted:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394893);
			case EventType.IMSessionWindowEndMove:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394902);
			case EventType.IMFileSent:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394738);
			case EventType.IMTextIn:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394736);
			case (EventType)23:
			case (EventType)24:
			case (EventType)25:
			case (EventType)26:
			case (EventType)27:
			case (EventType)28:
			case (EventType)29:
				throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႥႷႭ.Ⴓ.ႰႷ(1821394906));
			case EventType.IMSoftwareConnectionFailed:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394911);
			case EventType.IMLogin:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394892);
			case EventType.IMVideoInvitationReceived:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394900);
			case EventType.IMSessionEnded:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394743);
			case EventType.IMTextOut:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394888);
			case EventType.IMUrlSent:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394896);
			case EventType.IMFileReceived:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394890);
			case EventType.IMSessionWindowActivate:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394897);
			case EventType.ContactStatusChanged:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394741);
			case EventType.IMSoftwareConnectionRefused:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394905);
			case EventType.IMSessionWindowDeactivate:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394898);
			case EventType.IMSessionWindowStartMove:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394901);
			case EventType.IMTextTyped:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394895);
			case EventType.IMMyStatusChange:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394882);
			case EventType.IMAppShutdown:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394740);
			case EventType.IMSoftwareConnectionOK:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394899);
			case EventType.IMUrlReceived:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394903);
			case EventType.IMNudgeReceived:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394889);
			case EventType.IMSignout:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394742);
			case EventType.IMSoftwareConnectionPending:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394909);
			case EventType.IMNudgeSent:
				return ႥႷႭ.Ⴍ.ႰႷ(1821394737);
			case EventType.IMAudioVideoInvitationReceived:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394891);
			default:
				if (125 >= 125 - 122)
				{
					goto case (EventType)23;
				}
				goto case EventType.IMSessionWindowActivate;
			}
		}

		private void ႠႠ(string Ⴍ, string Ⴓ, PersonalityData Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 22;
			List<Scenario> scenarios = default(List<Scenario>);
			int num6 = default(int);
			List<ChatmanAction> actions = default(List<ChatmanAction>);
			int num3 = default(int);
			List<MoodMatrix> moodMatrixes = default(List<MoodMatrix>);
			int num5 = default(int);
			List<ConstraintFilterDefinition> constraintFilters = default(List<ConstraintFilterDefinition>);
			int num4 = default(int);
			List<ActionProducerDefinition> actionProducers = default(List<ActionProducerDefinition>);
			int num2 = default(int);
			while (true)
			{
				switch (num)
				{
				case 13:
					return;
				default:
					num = ((Ⴈ != null) ? 30 : 34);
					continue;
				case 34:
					num = ((!Ⴃ) ? 13 : 18);
					continue;
				case 18:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 30:
					num = (Ⴗ ? 20 : 26);
					continue;
				case 26:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(PersonalityData)) ? 20 : 5);
					continue;
				}
				case 5:
					throw CreateUnknownTypeException(Ⴈ);
				case 20:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = (Ⴗ ? 19 : 0);
					continue;
				case 19:
					WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394858), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					goto case 0;
				case 0:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394739), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.SupportedHardwareModel);
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394748), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.Converted));
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394908), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Version);
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394910), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.EngineVersion);
					scenarios = Ⴈ.Scenarios;
					num = ((scenarios == null) ? 7 : 6);
					continue;
				case 6:
					WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394904), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
					num6 = 0;
					num = 31;
					continue;
				case 17:
					ႠႳ(ႥႷႭ.Ⴓ.ႰႷ(1821394859), ႥႷႭ.Ⴍ.ႰႷ(1821394853), scenarios[num6], Ⴃ: true, Ⴗ: false);
					num6++;
					num = 31;
					continue;
				case 31:
					num = ((num6 < ((ICollection)scenarios).Count) ? 17 : 8);
					continue;
				case 8:
					WriteEndElement();
					goto case 7;
				case 7:
					actions = Ⴈ.Actions;
					num = ((actions == null) ? 21 : 10);
					continue;
				case 10:
					WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394923), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
					num3 = 0;
					num = 11;
					continue;
				case 15:
					ႳႠ(ႥႷႭ.Ⴍ.ႰႷ(1821394726), ႥႷႭ.Ⴓ.ႰႷ(1821394852), actions[num3], Ⴃ: true, Ⴗ: false);
					num3++;
					num = 11;
					continue;
				case 11:
					num = ((num3 < ((ICollection)actions).Count) ? 15 : 2);
					continue;
				case 2:
					WriteEndElement();
					goto case 21;
				case 21:
					moodMatrixes = Ⴈ.MoodMatrixes;
					num = ((moodMatrixes == null) ? 24 : 4);
					continue;
				case 4:
					WriteStartElement(ႥႷႭ.Ⴍ.ႰႷ(1821394749), ႥႷႭ.Ⴓ.ႰႷ(1821394852), null, writePrefixed: false);
					num5 = 0;
					num = 25;
					continue;
				case 23:
					Ⴅ(ႥႷႭ.Ⴓ.ႰႷ(1821394819), ႥႷႭ.Ⴍ.ႰႷ(1821394853), moodMatrixes[num5], Ⴃ: true, Ⴗ: false);
					num5++;
					num = 25;
					continue;
				case 25:
					num = ((num5 < ((ICollection)moodMatrixes).Count) ? 23 : 14);
					continue;
				case 14:
					WriteEndElement();
					goto case 24;
				case 24:
					constraintFilters = Ⴈ.ConstraintFilters;
					num = ((constraintFilters == null) ? 3 : 16);
					continue;
				case 16:
					WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394907), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
					num4 = 0;
					num = 28;
					continue;
				case 33:
					ႠႰ(ႥႷႭ.Ⴍ.ႰႷ(1821394750), ႥႷႭ.Ⴓ.ႰႷ(1821394852), constraintFilters[num4], Ⴃ: true, Ⴗ: false);
					num4++;
					num = 28;
					continue;
				case 28:
					num = ((num4 < ((ICollection)constraintFilters).Count) ? 33 : 29);
					continue;
				case 29:
					WriteEndElement();
					goto case 3;
				case 3:
					actionProducers = Ⴈ.ActionProducers;
					num = ((actionProducers == null) ? 9 : 32);
					continue;
				case 32:
					WriteStartElement(ႥႷႭ.Ⴍ.ႰႷ(1821394751), ႥႷႭ.Ⴓ.ႰႷ(1821394852), null, writePrefixed: false);
					num2 = 0;
					num = 27;
					continue;
				case 12:
					this.Ⴗ(ႥႷႭ.Ⴓ.ႰႷ(1821394726), ႥႷႭ.Ⴍ.ႰႷ(1821394853), actionProducers[num2], Ⴃ: true, Ⴗ: false);
					num2++;
					num = 27;
					continue;
				case 27:
					num = ((num2 >= ((ICollection)actionProducers).Count) ? 1 : 12);
					continue;
				case 1:
					WriteEndElement();
					break;
				case 9:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private void ႠႰ(string Ⴍ, string Ⴓ, ConstraintFilterDefinition Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 3;
			while (true)
			{
				switch (num)
				{
				case 7:
					return;
				default:
					num = ((Ⴈ != null) ? 9 : 8);
					continue;
				case 8:
					num = ((!Ⴃ) ? 7 : 6);
					continue;
				case 6:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 9:
					num = (Ⴗ ? 1 : 4);
					continue;
				case 4:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(ConstraintFilterDefinition)) ? 1 : 0);
					continue;
				}
				case 0:
					throw CreateUnknownTypeException(Ⴈ);
				case 1:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 2 : 5);
					continue;
				case 5:
					WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394853), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					break;
				case 2:
					break;
				}
				break;
			}
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394824), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.ID));
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394824), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.Parameters);
			WriteEndElement(Ⴈ);
		}

		private void ႠႭ(string Ⴍ, string Ⴓ, PersonalityDataFile Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 4;
			while (true)
			{
				switch (num)
				{
				case 6:
					return;
				default:
					num = ((Ⴈ != null) ? 5 : 3);
					continue;
				case 3:
					num = ((!Ⴃ) ? 6 : 11);
					continue;
				case 11:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 5:
					num = (Ⴗ ? 12 : 2);
					continue;
				case 2:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type != typeof(PersonalityDataFile)) ? 1 : 12);
					continue;
				}
				case 1:
					throw CreateUnknownTypeException(Ⴈ);
				case 12:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 8 : 7);
					continue;
				case 7:
					WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394857), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					goto case 8;
				case 8:
					num = ((Ⴈ.FileName == null) ? 14 : 9);
					continue;
				case 9:
					num = ((Ⴈ.FileName.Length == 0) ? 14 : 0);
					continue;
				case 0:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394724), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.FileName);
					goto case 14;
				case 14:
					num = ((Ⴈ.FileRelevance == DataFileLocation.PersonalityDataFile) ? 10 : 13);
					continue;
				case 13:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394725), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ႰႼ(Ⴈ.FileRelevance));
					break;
				case 10:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private string ႳႷႥ(PersonalityStatus Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0035, IL_0044, IL_0067
			string result = null;
			switch (Ⴍ)
			{
			case PersonalityStatus.Loaded:
				result = ႥႷႭ.Ⴓ.ႰႷ(1821394720);
				goto IL_0011;
			case PersonalityStatus.Unloaded:
				result = ႥႷႭ.Ⴓ.ႰႷ(1821394727);
				goto IL_0011;
			default:
				{
					if ((202 + 202 * 202) % 2 == 0)
					{
						throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႥႷႭ.Ⴓ.ႰႷ(1821394721));
					}
					goto IL_0011;
				}
				IL_0011:
				return result;
			}
		}

		private void ႠႥ(string Ⴍ, string Ⴓ, Personality.Ⴄ Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 1;
			while (true)
			{
				switch (num)
				{
				case 6:
					return;
				default:
					num = ((Ⴈ != null) ? 9 : 4);
					continue;
				case 4:
					num = ((!Ⴃ) ? 6 : 7);
					continue;
				case 7:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 9:
					num = (Ⴗ ? 8 : 3);
					continue;
				case 3:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(Personality.Ⴄ)) ? 8 : 0);
					continue;
				}
				case 0:
					throw CreateUnknownTypeException(Ⴈ);
				case 8:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 2 : 5);
					continue;
				case 5:
					WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394863), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					break;
				case 2:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		private void ႠႤ(string Ⴍ, string Ⴓ, Personality Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0050, IL_007a, IL_00ea, IL_012d, IL_0193, IL_01b3, IL_01dc, IL_021c, IL_0244, IL_0268, IL_028a, IL_02b3, IL_02d5, IL_031b, IL_0342, IL_036a, IL_03a7, IL_03d8, IL_03f6, IL_041b, IL_0456, IL_0487, IL_04b1, IL_04da, IL_04f3, IL_0533, IL_0553, IL_0571, IL_0592, IL_05ca, IL_05f0, IL_0613, IL_0646, IL_066b, IL_0693, IL_06b9, IL_06f3, IL_0728, IL_0757, IL_0772, IL_0793, IL_07d3, IL_080d, IL_082e, IL_0867, IL_08a7, IL_08c8
			if (Ⴈ == null)
			{
				if (692 > 692 - 477)
				{
					if (Ⴃ)
					{
						if (false)
						{
							goto IL_03d0;
						}
						goto IL_0535;
					}
					return;
				}
			}
			goto IL_04df;
			IL_02ff:
			int num = num + 1;
			if (1008 <= 1008 - 396)
			{
				goto IL_048c;
			}
			goto IL_05cf;
			IL_0198:
			if (Ⴈ.IsReadOnly)
			{
				if (522 < 522 - 83)
				{
					goto IL_0132;
				}
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394839), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.IsReadOnly));
				if (614 <= 614 - 567)
				{
					goto IL_03b4;
				}
			}
			if (!Ⴈ.IgnoreInternalScenarios)
			{
				goto IL_026d;
			}
			if ((763 + 763 * 763) % 2 == 0)
			{
				goto IL_036f;
			}
			goto IL_072d;
			IL_04be:
			List<PersonalityDataFile> dataFiles = default(List<PersonalityDataFile>);
			if (dataFiles == null)
			{
				goto IL_03ac;
			}
			if (false)
			{
				goto IL_0203;
			}
			goto IL_03b4;
			IL_04df:
			if (Ⴗ)
			{
				goto IL_048c;
			}
			if (49 < 49 - 30)
			{
				goto IL_0597;
			}
			goto IL_072d;
			IL_03ac:
			WriteEndElement(Ⴈ);
			return;
			IL_048c:
			WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
			if (!Ⴗ)
			{
				goto IL_000a;
			}
			if (745 > 745 - 79)
			{
				WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394855), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				if (280 >= 280 - 237)
				{
					goto IL_000a;
				}
			}
			goto IL_02da;
			IL_04b6:
			dataFiles = Ⴈ.DataFiles;
			goto IL_04be;
			IL_03b4:
			WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394728), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
			goto IL_03d0;
			IL_000a:
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394824), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.ID));
			goto IL_002f;
			IL_002f:
			if (Ⴈ.Name != null)
			{
				if (497 <= 497 - 308)
				{
					goto IL_0198;
				}
				if (Ⴈ.Name.Length != 0)
				{
					if (963 <= 963 - 341)
					{
						goto IL_02ff;
					}
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394846), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Name);
					if (false)
					{
						goto IL_03b4;
					}
				}
			}
			if (Ⴈ.Description != null)
			{
				if (4 <= 4 - 3)
				{
					goto IL_04df;
				}
				if (Ⴈ.Description.Length != 0)
				{
					if (false)
					{
						goto IL_0535;
					}
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394912), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.Description);
					if (381 < 381 - 352)
					{
						goto IL_028f;
					}
				}
			}
			if (Ⴈ.Author != null)
			{
				if (false)
				{
					goto IL_0777;
				}
				if (Ⴈ.Author.Length != 0)
				{
					if (false)
					{
						goto IL_02da;
					}
					goto IL_0597;
				}
			}
			goto IL_045b;
			IL_03d0:
			int num2 = 0;
			goto IL_0698;
			IL_0698:
			if (num2 < ((ICollection)dataFiles).Count)
			{
				ႠႭ(ႥႷႭ.Ⴍ.ႰႷ(1821394694), ႥႷႭ.Ⴓ.ႰႷ(1821394852), dataFiles[num2], Ⴃ: true, Ⴗ: false);
				goto IL_0114;
			}
			if (855 <= 855 - 26)
			{
				goto IL_0203;
			}
			goto IL_0576;
			IL_026d:
			int[] decorationImages = Ⴈ.DecorationImages;
			if (decorationImages == null)
			{
				goto IL_0347;
			}
			if (90 <= 90 - 47)
			{
				goto IL_04be;
			}
			goto IL_0670;
			IL_0114:
			do
			{
				num2++;
			}
			while (597 < 597 - 581);
			goto IL_0698;
			IL_072d:
			Type type = Ⴈ.GetType();
			if ((object)type == typeof(Personality))
			{
				goto IL_048c;
			}
			if (430 > 430 - 308)
			{
				throw CreateUnknownTypeException(Ⴈ);
			}
			goto IL_0777;
			IL_0347:
			List<MoodCounter> stateMoodCounterList = Ⴈ.StateMoodCounterList;
			if (stateMoodCounterList == null)
			{
				goto IL_0055;
			}
			if (790 >= 790 - 384)
			{
				goto IL_028f;
			}
			goto IL_05f5;
			IL_0203:
			int num3 = num3 + 1;
			if (false)
			{
				goto IL_0597;
			}
			goto IL_05f5;
			IL_028f:
			WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394735), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
			int num4 = 0;
			goto IL_0221;
			IL_0535:
			WriteNullTagLiteral(Ⴍ, Ⴓ);
			if (430 >= 430 - 226)
			{
				return;
			}
			goto IL_0132;
			IL_0221:
			if (num4 < ((ICollection)stateMoodCounterList).Count)
			{
				goto IL_0132;
			}
			if (452 < 452 - 301)
			{
				goto IL_048c;
			}
			goto IL_0777;
			IL_0670:
			WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394733), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
			goto IL_068c;
			IL_05f5:
			if (num3 < decorationImages.Length)
			{
				WriteElementStringRaw(ႥႷႭ.Ⴓ.ႰႷ(1821394734), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(decorationImages[num3]));
				goto IL_0203;
			}
			if ((691 + 691 * 691) % 2 == 0)
			{
				WriteEndElement();
				if (838 <= 838 - 168)
				{
					goto IL_00c9;
				}
				goto IL_0347;
			}
			goto IL_0798;
			IL_0777:
			WriteEndElement();
			if (358 > 358 - 180)
			{
				goto IL_0055;
			}
			goto IL_05f5;
			IL_0132:
			Ⴄ(ႥႷႭ.Ⴍ.ႰႷ(1821394817), ႥႷႭ.Ⴓ.ႰႷ(1821394852), stateMoodCounterList[num4], Ⴃ: true, Ⴗ: false);
			num4++;
			if ((831 + 831 * 831) % 2 == 0)
			{
				goto IL_0221;
			}
			goto IL_068c;
			IL_045b:
			if (Ⴈ.Language != ႥႷႭ.Ⴍ.ႰႷ(1821394744))
			{
				if (414 < 414 - 5)
				{
					goto IL_0670;
				}
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394722), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Language);
				if (false)
				{
					goto IL_002f;
				}
			}
			if (Ⴈ.IconColorSchemeIndex != 1)
			{
				if (708 < 708 - 59)
				{
					goto IL_00c9;
				}
				WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394745), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.IconColorSchemeIndex));
				if (60 <= 60 - 8)
				{
					goto IL_0777;
				}
			}
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394723), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlSerializationWriter.FromDateTime(Ⴈ.CreationDate));
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394746), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlSerializationWriter.FromDateTime(Ⴈ.UpdateDate));
			goto IL_00c9;
			IL_0055:
			List<ActionUsage> actionUsages = Ⴈ.ActionUsages;
			if (actionUsages != null)
			{
				if (933 >= 933 - 745)
				{
					WriteStartElement(ႥႷႭ.Ⴍ.ႰႷ(1821394693), ႥႷႭ.Ⴓ.ႰႷ(1821394852), null, writePrefixed: false);
					goto IL_01d4;
				}
				goto IL_036f;
			}
			goto IL_04b6;
			IL_0576:
			WriteEndElement();
			if (661 < 661 - 566)
			{
				goto IL_0055;
			}
			goto IL_03ac;
			IL_068c:
			num3 = 0;
			goto IL_05f5;
			IL_01d4:
			num = 0;
			goto IL_05cf;
			IL_05cf:
			if (num < ((ICollection)actionUsages).Count)
			{
				goto IL_02da;
			}
			if (737 < 737 - 38)
			{
				goto IL_0114;
			}
			WriteEndElement();
			if ((495 + 495 * 495) % 2 == 0)
			{
				goto IL_04b6;
			}
			goto IL_0597;
			IL_0798:
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394747), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.IsPrivate));
			if (603 > 603 - 331)
			{
				goto IL_0198;
			}
			goto IL_0597;
			IL_00c9:
			if (Ⴈ.IsHidden)
			{
				if (729 <= 729 - 295)
				{
					goto IL_0576;
				}
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394732), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.IsHidden));
				if (1002 < 1002 - 479)
				{
					goto IL_0221;
				}
			}
			if (!Ⴈ.IsPrivate)
			{
				goto IL_0198;
			}
			if (false)
			{
				goto IL_01d4;
			}
			goto IL_0798;
			IL_036f:
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394692), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.IgnoreInternalScenarios));
			if (696 >= 696 - 585)
			{
				goto IL_026d;
			}
			goto IL_03d0;
			IL_02da:
			ႳႰ(ႥႷႭ.Ⴓ.ႰႷ(1821394876), ႥႷႭ.Ⴍ.ႰႷ(1821394853), actionUsages[num], Ⴃ: true, Ⴗ: false);
			goto IL_02ff;
			IL_0597:
			WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394827), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Author);
			if (168 < 168 - 115)
			{
				goto IL_036f;
			}
			goto IL_045b;
		}

		private string ႳႷႤ(WebConnectionResult Ⴍ)
		{
			int num = 2;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 4:
					num = 0;
					continue;
				case 7:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394695);
					num = 6;
					continue;
				case 3:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394688);
					num = 6;
					continue;
				case 1:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394689);
					num = 6;
					continue;
				case 5:
					result = ႥႷႭ.Ⴍ.ႰႷ(1821394690);
					num = 6;
					continue;
				case 0:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႥႷႭ.Ⴍ.ႰႷ(1821394691));
				case 6:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 4;
					break;
				case WebConnectionResult.Unknown:
					num2 = 7;
					break;
				case WebConnectionResult.Connected:
					num2 = 3;
					break;
				case WebConnectionResult.Failed:
					num2 = 1;
					break;
				case WebConnectionResult.AccessDenied:
					num2 = 5;
					break;
				}
				num = num2;
			}
		}

		private string ႳႷႨ(PushButtonAction Ⴍ)
		{
			//Discarded unreachable code: IL_0002, IL_0006, IL_0015, IL_0053, IL_007b
			string text = null;
			switch (Ⴍ)
			{
			case PushButtonAction.ChooseAction:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394731);
			case PushButtonAction.Mute:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394729);
			case PushButtonAction.SurpriseMe:
				return ႥႷႭ.Ⴓ.ႰႷ(1821394730);
			default:
				if (590 >= 590 - 313)
				{
				}
				throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႥႷႭ.Ⴓ.ႰႷ(1821394740));
			}
		}

		private void ႠႨ(string Ⴍ, string Ⴓ, ContentFileEntry Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 8;
			while (true)
			{
				switch (num)
				{
				case 2:
					return;
				default:
					num = ((Ⴈ != null) ? 1 : 6);
					continue;
				case 6:
					num = ((!Ⴃ) ? 2 : 9);
					continue;
				case 9:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 1:
					num = (Ⴗ ? 5 : 0);
					continue;
				case 0:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(ContentFileEntry)) ? 5 : 3);
					continue;
				}
				case 3:
					throw CreateUnknownTypeException(Ⴈ);
				case 5:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 4 : 7);
					continue;
				case 7:
					WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394851), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					break;
				case 4:
					break;
				}
				break;
			}
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394933), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.FileName);
			WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394746), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlSerializationWriter.FromDateTime(Ⴈ.UpdateDate));
			WriteEndElement(Ⴈ);
		}

		private string ႳႷႣ(LevelLastChangeDirection Ⴍ)
		{
			int num = 5;
			string result = default(string);
			while (true)
			{
				switch (num)
				{
				case 0:
					num = 4;
					continue;
				case 2:
					result = ႥႷႭ.Ⴓ.ႰႷ(1821394741);
					num = 3;
					continue;
				case 1:
					result = ႥႷႭ.Ⴓ.ႰႷ(1821394742);
					num = 3;
					continue;
				case 4:
					throw CreateInvalidEnumValueException(((long)Ⴍ).ToString(CultureInfo.InvariantCulture), ႥႷႭ.Ⴓ.ႰႷ(1821394743));
				case 3:
					return result;
				}
				result = null;
				int num2;
				switch (Ⴍ)
				{
				default:
					num2 = 0;
					break;
				case LevelLastChangeDirection.Increasing:
					num2 = 2;
					break;
				case LevelLastChangeDirection.Decreasing:
					num2 = 1;
					break;
				}
				num = num2;
			}
		}

		private void ႠႣ(string Ⴍ, string Ⴓ, ChatmanFriendship Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_002b, IL_0053, IL_0070, IL_0097, IL_00b6, IL_00dc, IL_0116, IL_014a, IL_0176, IL_0196, IL_0204, IL_0238, IL_0253
			while (true)
			{
				if (Ⴈ != null)
				{
					while (true)
					{
						if (Ⴗ)
						{
							goto IL_0075;
						}
						if (316 < 316 - 149)
						{
							return;
						}
						goto IL_014c;
						IL_014c:
						while (true)
						{
							Type type = Ⴈ.GetType();
							if ((object)type == typeof(ChatmanFriendship))
							{
								break;
							}
							if (341 > 341 - 160)
							{
								goto end_IL_023d;
							}
						}
						goto IL_0075;
						IL_0075:
						while (true)
						{
							WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
							if (!Ⴗ)
							{
								break;
							}
							if (763 <= 763 - 483)
							{
								continue;
							}
							goto IL_020e;
						}
						goto IL_0030;
						IL_020e:
						WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394849), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
						if (689 <= 689 - 17)
						{
							break;
						}
						goto IL_0030;
						IL_0030:
						if (Ⴈ.LastLevel == 65)
						{
							goto IL_00bb;
						}
						if (651 > 651 - 502)
						{
							goto IL_00e1;
						}
						goto IL_014c;
						IL_00e1:
						WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394700), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.LastLevel));
						if (555 <= 555 - 109)
						{
							continue;
						}
						goto IL_00bb;
						IL_00bb:
						if (Ⴈ.LevelChangeDirection != 0)
						{
							if (368 > 368 - 339)
							{
								WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394736), ႥႷႭ.Ⴍ.ႰႷ(1821394853), ႳႷႣ(Ⴈ.LevelChangeDirection));
								if (665 < 665 - 481)
								{
									goto IL_014c;
								}
							}
						}
						if (Ⴈ.Score != 0)
						{
							if (896 < 896 - 883)
							{
								goto IL_0178;
							}
							WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394737), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.Score));
							if (345 <= 345 - 90)
							{
								goto IL_00e1;
							}
						}
						WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394701), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlSerializationWriter.FromDateTime(Ⴈ.LastScoreDate));
						WriteEndElement(Ⴈ);
						return;
					}
					continue;
				}
				if (199 > 199 - 29)
				{
					if (!Ⴃ)
					{
						return;
					}
					if (650 >= 650 - 537)
					{
						goto IL_0178;
					}
					return;
				}
				break;
				IL_0178:
				WriteNullTagLiteral(Ⴍ, Ⴓ);
				if (325 < 325 - 296)
				{
				}
				return;
				continue;
				end_IL_023d:
				break;
			}
			throw CreateUnknownTypeException(Ⴈ);
		}

		private void ႠႼ(string Ⴍ, string Ⴓ, ChatmanBrainPower Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			//Discarded unreachable code: IL_0005, IL_0034, IL_0056, IL_0090, IL_00aa, IL_00c9, IL_00f2, IL_0112, IL_0176, IL_019f, IL_01cb, IL_01e5
			Type type = default(Type);
			while (true)
			{
				if (Ⴈ != null)
				{
					if (Ⴗ)
					{
						goto IL_01a4;
					}
					if (false)
					{
						continue;
					}
					type = Ⴈ.GetType();
				}
				else if ((737 + 737 * 737) % 2 == 0)
				{
					if (!Ⴃ)
					{
						return;
					}
					if (932 < 932 - 271)
					{
						goto IL_000b;
					}
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					if (128 > 128 - 120)
					{
						return;
					}
					goto IL_0039;
				}
				if ((object)type != typeof(ChatmanBrainPower))
				{
					if (225 < 225 - 22)
					{
						break;
					}
					throw CreateUnknownTypeException(Ⴈ);
				}
				goto IL_01a4;
				IL_01a4:
				WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
				if (Ⴗ)
				{
					if ((791 + 791 * 791) % 2 == 0)
					{
						goto IL_000b;
					}
					goto IL_0039;
				}
				goto IL_0092;
				IL_0039:
				if (Ⴈ.WordCount != 0)
				{
					if (false)
					{
						break;
					}
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394702), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.WordCount));
					if (451 <= 451 - 56)
					{
						continue;
					}
				}
				WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394739), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlSerializationWriter.FromDateTime(Ⴈ.DateChatmanWasLastTaught));
				break;
				IL_000b:
				WriteXsiType(ႥႷႭ.Ⴓ.ႰႷ(1821394849), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
				if (false)
				{
					break;
				}
				goto IL_0092;
				IL_0092:
				if (Ⴈ.ChitChatCount != 0)
				{
					if (113 < 113 - 78)
					{
						break;
					}
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394738), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.ChitChatCount));
					if (193 <= 193 - 14)
					{
						return;
					}
				}
				goto IL_0039;
			}
			WriteEndElement(Ⴈ);
		}

		private void ႰႷ(string Ⴍ, string Ⴓ, Chatman Ⴈ, bool Ⴃ, bool Ⴗ)
		{
			int num = 7;
			string[] promotionalText = default(string[]);
			int num3 = default(int);
			List<ContentFileEntry> processedContentFiles = default(List<ContentFileEntry>);
			int num2 = default(int);
			while (true)
			{
				switch (num)
				{
				case 13:
					return;
				default:
					num = ((Ⴈ != null) ? 8 : 6);
					continue;
				case 6:
					num = ((!Ⴃ) ? 13 : 16);
					continue;
				case 16:
					WriteNullTagLiteral(Ⴍ, Ⴓ);
					return;
				case 8:
					num = (Ⴗ ? 4 : 14);
					continue;
				case 14:
				{
					Type type = Ⴈ.GetType();
					num = (((object)type == typeof(Chatman)) ? 4 : 20);
					continue;
				}
				case 20:
					throw CreateUnknownTypeException(Ⴈ);
				case 4:
					WriteStartElement(Ⴍ, Ⴓ, Ⴈ, writePrefixed: false, null);
					num = ((!Ⴗ) ? 24 : 18);
					continue;
				case 18:
					WriteXsiType(ႥႷႭ.Ⴍ.ႰႷ(1821394855), ႥႷႭ.Ⴓ.ႰႷ(1821394852));
					goto case 24;
				case 24:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394703), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.UserName);
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394696), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.ProfileImage);
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394697), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.UserCity);
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394698), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.ZipCode);
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394708), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.UserCountry);
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394709), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႰႭ(Ⴈ.UserGender));
					num = ((Ⴈ.NumberOfCredits == 100) ? 15 : 2);
					continue;
				case 2:
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394710), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.NumberOfCredits));
					goto case 15;
				case 15:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394750), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.ChatmanName);
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394751), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlSerializationWriter.FromDateTime(Ⴈ.ChatmanBirthDate));
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394704), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.ActivePersonalityId));
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394933), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlSerializationWriter.FromDateTime(Ⴈ.LastUseDate));
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394837), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.EngineVersion);
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394706), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.LastVolume));
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394729), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.Mute));
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394860), ႥႷႭ.Ⴓ.ႰႷ(1821394852), ႳႷႨ(Ⴈ.PushButtonAction));
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394717), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.PushButtonActionPersonalityID));
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394747), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.PushButtonActionID));
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394719), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.DontProduceActions));
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394693), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.DontProduceActionsStartHour));
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394713), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.DontProduceActionsStartMinute));
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394695), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.DontProduceActionsEndHour));
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394715), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.DontProduceActionsEndMinute));
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394689), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.WebUserName);
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394691), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.ProductNumber);
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394701), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.SubscriptionLevel));
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394791), ႥႷႭ.Ⴓ.ႰႷ(1821394852), Ⴈ.Credentials);
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394785), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlConvert.ToString(Ⴈ.LastMoodUsedInNewAction));
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394696), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.LastMoodUsedInNewWords));
					WriteAttribute(ႥႷႭ.Ⴍ.ႰႷ(1821394787), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlSerializationWriter.FromDateTime(Ⴈ.LastContentUpdateDate));
					num = ((!(Ⴈ.UserLanguage != ႥႷႭ.Ⴍ.ႰႷ(1821394797))) ? 11 : 19);
					continue;
				case 19:
					WriteAttribute(ႥႷႭ.Ⴓ.ႰႷ(1821394699), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.UserLanguage);
					goto case 11;
				case 11:
					promotionalText = Ⴈ.PromotionalText;
					num = ((promotionalText == null) ? 9 : 26);
					continue;
				case 26:
					num3 = 0;
					num = 25;
					continue;
				case 5:
					WriteNullableStringLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394708), ႥႷႭ.Ⴍ.ႰႷ(1821394853), promotionalText[num3]);
					num3++;
					num = 25;
					continue;
				case 25:
					num = ((num3 < promotionalText.Length) ? 5 : 9);
					continue;
				case 9:
					WriteElementStringRaw(ႥႷႭ.Ⴍ.ႰႷ(1821394792), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlSerializationWriter.FromDateTime(Ⴈ.PromotionalTextLastUpdate));
					WriteElementStringRaw(ႥႷႭ.Ⴓ.ႰႷ(1821394711), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.PassL));
					num = ((!Ⴈ.UserBirthDate.HasValue) ? 12 : 0);
					continue;
				case 0:
					WriteNullableStringLiteralRaw(ႥႷႭ.Ⴓ.ႰႷ(1821394705), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlSerializationWriter.FromDateTime(Ⴈ.UserBirthDate.Value));
					num = 22;
					continue;
				case 12:
					WriteNullTagLiteral(ႥႷႭ.Ⴓ.ႰႷ(1821394705), ႥႷႭ.Ⴍ.ႰႷ(1821394853));
					goto case 22;
				case 22:
					ႠႼ(ႥႷႭ.Ⴓ.ႰႷ(1821394707), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.BrainPower, Ⴃ: false, Ⴗ: false);
					ႠႣ(ႥႷႭ.Ⴓ.ႰႷ(1821394717), ႥႷႭ.Ⴍ.ႰႷ(1821394853), Ⴈ.Friendship, Ⴃ: false, Ⴗ: false);
					num = (Ⴈ.IsAutoMuted ? 1 : 23);
					continue;
				case 1:
					WriteElementStringRaw(ႥႷႭ.Ⴓ.ႰႷ(1821394719), ႥႷႭ.Ⴍ.ႰႷ(1821394853), XmlConvert.ToString(Ⴈ.IsAutoMuted));
					goto case 23;
				case 23:
					WriteElementStringRaw(ႥႷႭ.Ⴍ.ႰႷ(1821394806), ႥႷႭ.Ⴓ.ႰႷ(1821394852), XmlSerializationWriter.FromDateTime(Ⴈ.LastAutoMuteDate));
					processedContentFiles = Ⴈ.ProcessedContentFiles;
					num = ((processedContentFiles == null) ? 10 : 3);
					continue;
				case 3:
					WriteStartElement(ႥႷႭ.Ⴓ.ႰႷ(1821394713), ႥႷႭ.Ⴍ.ႰႷ(1821394853), null, writePrefixed: false);
					num2 = 0;
					num = 21;
					continue;
				case 17:
					ႠႨ(ႥႷႭ.Ⴍ.ႰႷ(1821394800), ႥႷႭ.Ⴓ.ႰႷ(1821394852), processedContentFiles[num2], Ⴃ: true, Ⴗ: false);
					num2++;
					num = 21;
					continue;
				case 21:
					num = ((num2 < ((ICollection)processedContentFiles).Count) ? 17 : 27);
					continue;
				case 27:
					WriteEndElement();
					break;
				case 10:
					break;
				}
				break;
			}
			WriteEndElement(Ⴈ);
		}

		protected override void InitCallbacks()
		{
		}
	}
	public abstract class XmlSerializer1 : XmlSerializer
	{
		protected override XmlSerializationReader CreateReader()
		{
			return new XmlSerializationReader1();
		}

		protected override XmlSerializationWriter CreateWriter()
		{
			return new XmlSerializationWriter1();
		}
	}
	public class XmlSerializerContract : XmlSerializerImplementation
	{
		private Hashtable Ⴃ;

		private Hashtable Ⴀ;

		private Hashtable Ⴄ;

		public override XmlSerializationReader Reader => new XmlSerializationReader1();

		public override XmlSerializationWriter Writer => new XmlSerializationWriter1();

		public override Hashtable ReadMethods
		{
			get
			{
				//Discarded unreachable code: IL_0005, IL_0023, IL_04b4, IL_04da
				if (Ⴃ != null)
				{
					goto IL_0028;
				}
				Hashtable hashtable = default(Hashtable);
				if (763 > 763 - 413)
				{
					hashtable = new Hashtable();
					hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394595)] = ႥႷႭ.Ⴓ.ႰႷ(1821394596);
					hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394605)] = ႥႷႭ.Ⴓ.ႰႷ(1821394597);
					hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394606)] = ႥႷႭ.Ⴓ.ႰႷ(1821394598);
					hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394607)] = ႥႷႭ.Ⴓ.ႰႷ(1821394599);
					hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394601)] = ႥႷႭ.Ⴓ.ႰႷ(1821394592);
					hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394602)] = ႥႷႭ.Ⴓ.ႰႷ(1821394593);
					hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394603)] = ႥႷႭ.Ⴓ.ႰႷ(1821394594);
					goto IL_00eb;
				}
				goto IL_030d;
				IL_030d:
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394573)] = ႥႷႭ.Ⴓ.ႰႷ(1821394566);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394574)] = ႥႷႭ.Ⴓ.ႰႷ(1821394567);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394568)] = ႥႷႭ.Ⴓ.ႰႷ(1821394560);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394569)] = ႥႷႭ.Ⴓ.ႰႷ(1821394561);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394570)] = ႥႷႭ.Ⴓ.ႰႷ(1821394562);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394571)] = ႥႷႭ.Ⴓ.ႰႷ(1821394563);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394580)] = ႥႷႭ.Ⴓ.ႰႷ(1821394572);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394581)] = ႥႷႭ.Ⴓ.ႰႷ(1821394573);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394582)] = ႥႷႭ.Ⴓ.ႰႷ(1821394575);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394583)] = ႥႷႭ.Ⴓ.ႰႷ(1821394568);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394576)] = ႥႷႭ.Ⴓ.ႰႷ(1821394569);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394577)] = ႥႷႭ.Ⴓ.ႰႷ(1821394570);
				while (true)
				{
					hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394578)] = ႥႷႭ.Ⴓ.ႰႷ(1821394571);
					hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394579)] = ႥႷႭ.Ⴓ.ႰႷ(1821394580);
					hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394588)] = ႥႷႭ.Ⴓ.ႰႷ(1821394582);
					if (Ⴃ != null)
					{
						break;
					}
					if (683 >= 683 - 677)
					{
						Ⴃ = hashtable;
						if ((998 + 998 * 998) % 2 == 0)
						{
							break;
						}
						continue;
					}
					goto IL_00eb;
				}
				goto IL_0028;
				IL_0028:
				return Ⴃ;
				IL_00eb:
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394613)] = ႥႷႭ.Ⴓ.ႰႷ(1821394595);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394614)] = ႥႷႭ.Ⴓ.ႰႷ(1821394605);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394615)] = ႥႷႭ.Ⴓ.ႰႷ(1821394606);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394608)] = ႥႷႭ.Ⴓ.ႰႷ(1821394607);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394609)] = ႥႷႭ.Ⴓ.ႰႷ(1821394600);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394611)] = ႥႷႭ.Ⴓ.ႰႷ(1821394601);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394620)] = ႥႷႭ.Ⴓ.ႰႷ(1821394602);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394621)] = ႥႷႭ.Ⴓ.ႰႷ(1821394603);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394622)] = ႥႷႭ.Ⴓ.ႰႷ(1821394612);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394623)] = ႥႷႭ.Ⴓ.ႰႷ(1821394613);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394616)] = ႥႷႭ.Ⴓ.ႰႷ(1821394615);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394617)] = ႥႷႭ.Ⴓ.ႰႷ(1821394608);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394618)] = ႥႷႭ.Ⴓ.ႰႷ(1821394610);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394619)] = ႥႷႭ.Ⴓ.ႰႷ(1821394611);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394565)] = ႥႷႭ.Ⴓ.ႰႷ(1821394620);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394566)] = ႥႷႭ.Ⴓ.ႰႷ(1821394622);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394560)] = ႥႷႭ.Ⴓ.ႰႷ(1821394623);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394561)] = ႥႷႭ.Ⴓ.ႰႷ(1821394616);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394562)] = ႥႷႭ.Ⴓ.ႰႷ(1821394617);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394563)] = ႥႷႭ.Ⴓ.ႰႷ(1821394619);
				hashtable[ႥႷႭ.Ⴍ.ႰႷ(1821394572)] = ႥႷႭ.Ⴓ.ႰႷ(1821394564);
				goto IL_030d;
			}
		}

		public override Hashtable WriteMethods
		{
			get
			{
				//Discarded unreachable code: IL_0005, IL_04ac, IL_04cb
				if (Ⴀ != null)
				{
					goto IL_0023;
				}
				Hashtable hashtable = default(Hashtable);
				if (602 > 602 - 8)
				{
					hashtable = new Hashtable();
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394583)] = ႥႷႭ.Ⴍ.ႰႷ(1821394590);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394576)] = ႥႷႭ.Ⴍ.ႰႷ(1821394591);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394577)] = ႥႷႭ.Ⴍ.ႰႷ(1821394584);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394578)] = ႥႷႭ.Ⴍ.ႰႷ(1821394585);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394579)] = ႥႷႭ.Ⴍ.ႰႷ(1821394586);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394588)] = ႥႷႭ.Ⴍ.ႰႷ(1821394587);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394589)] = ႥႷႭ.Ⴍ.ႰႷ(1821394660);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394590)] = ႥႷႭ.Ⴍ.ႰႷ(1821394661);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394591)] = ႥႷႭ.Ⴍ.ႰႷ(1821394663);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394584)] = ႥႷႭ.Ⴍ.ႰႷ(1821394656);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394585)] = ႥႷႭ.Ⴍ.ႰႷ(1821394657);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394586)] = ႥႷႭ.Ⴍ.ႰႷ(1821394658);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394587)] = ႥႷႭ.Ⴍ.ႰႷ(1821394659);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394661)] = ႥႷႭ.Ⴍ.ႰႷ(1821394668);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394662)] = ႥႷႭ.Ⴍ.ႰႷ(1821394670);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394663)] = ႥႷႭ.Ⴍ.ႰႷ(1821394671);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394656)] = ႥႷႭ.Ⴍ.ႰႷ(1821394664);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394657)] = ႥႷႭ.Ⴍ.ႰႷ(1821394666);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394658)] = ႥႷႭ.Ⴍ.ႰႷ(1821394667);
					hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394659)] = ႥႷႭ.Ⴍ.ႰႷ(1821394676);
					goto IL_0238;
				}
				goto IL_0474;
				IL_0474:
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394628)] = ႥႷႭ.Ⴍ.ႰႷ(1821394637);
				if (Ⴀ == null)
				{
					if (404 < 404 - 102)
					{
						goto IL_0238;
					}
					Ⴀ = hashtable;
					if (false)
					{
						goto IL_040c;
					}
				}
				goto IL_0023;
				IL_0023:
				return Ⴀ;
				IL_0238:
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394668)] = ႥႷႭ.Ⴍ.ႰႷ(1821394677);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394669)] = ႥႷႭ.Ⴍ.ႰႷ(1821394678);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394670)] = ႥႷႭ.Ⴍ.ႰႷ(1821394679);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394671)] = ႥႷႭ.Ⴍ.ႰႷ(1821394672);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394665)] = ႥႷႭ.Ⴍ.ႰႷ(1821394673);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394666)] = ႥႷႭ.Ⴍ.ႰႷ(1821394674);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394667)] = ႥႷႭ.Ⴍ.ႰႷ(1821394675);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394676)] = ႥႷႭ.Ⴍ.ႰႷ(1821394684);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394677)] = ႥႷႭ.Ⴍ.ႰႷ(1821394685);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394678)] = ႥႷႭ.Ⴍ.ႰႷ(1821394686);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394679)] = ႥႷႭ.Ⴍ.ႰႷ(1821394687);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394672)] = ႥႷႭ.Ⴍ.ႰႷ(1821394681);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394673)] = ႥႷႭ.Ⴍ.ႰႷ(1821394682);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394674)] = ႥႷႭ.Ⴍ.ႰႷ(1821394683);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394675)] = ႥႷႭ.Ⴍ.ႰႷ(1821394628);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394684)] = ႥႷႭ.Ⴍ.ႰႷ(1821394630);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394685)] = ႥႷႭ.Ⴍ.ႰႷ(1821394631);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394686)] = ႥႷႭ.Ⴍ.ႰႷ(1821394624);
				goto IL_040c;
				IL_040c:
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394687)] = ႥႷႭ.Ⴍ.ႰႷ(1821394625);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394681)] = ႥႷႭ.Ⴍ.ႰႷ(1821394626);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394682)] = ႥႷႭ.Ⴍ.ႰႷ(1821394627);
				hashtable[ႥႷႭ.Ⴓ.ႰႷ(1821394683)] = ႥႷႭ.Ⴍ.ႰႷ(1821394636);
				goto IL_0474;
			}
		}

		public override Hashtable TypedSerializers
		{
			get
			{
				int num = 0;
				Hashtable hashtable = default(Hashtable);
				while (true)
				{
					switch (num)
					{
					default:
						num = ((Ⴄ != null) ? 1 : 3);
						break;
					case 3:
						hashtable = new Hashtable();
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394582), new MoodCounterSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394566), new CounterSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394574), new CodeHardwareActionSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394579), new MoodListSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394562), new ActionChangeLogSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394611), new PersonalityDataFileSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394578), new MoodMatrixEntrySerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394608), new SerialNumberProducerSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394573), new HardwareActionSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394621), new ScenarioSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394576), new MoodMatrixSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394615), new PersonalitySerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394607), new ChatmanBrainPowerSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394588), new ActionProducerDefinitionSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394569), new SoundHardwareActionSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394561), new ChatmanActionSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394571), new ChitChatListsSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394622), new ScenarioTextBaseSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394616), new ScenarioIconTextSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394601), new ChatmanFriendshipSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394618), new ScenarioMoodSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394602), new LevelLastChangeDirectionSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394623), new ScenarioTextSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394620), new PersonalityDataSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394617), new ScenarioTextRelationSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394619), new ScenarioActionSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394603), new ContentFileEntrySerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394572), new QnAScenarioMatchActivitySerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394595), new ConstraintFilterDefinitionSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394570), new DataFileLocationSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394609), new PersonalityStatusSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394577), new GenderSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394580), new MoodListContainerSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394614), new WebConnectionResultSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394581), new MoodSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394563), new ActionScopeSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394560), new ActionUsageSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394605), new PersonalityListSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394613), new PushButtonActionSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394565), new ScenarioUserActionSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394606), new ChatmanSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394583), new MoodLevelSerializer());
						hashtable.Add(ႥႷႭ.Ⴍ.ႰႷ(1821394568), new PauseHardwareActionSerializer());
						num = ((Ⴄ != null) ? 1 : 2);
						break;
					case 2:
						Ⴄ = hashtable;
						num = 1;
						break;
					case 1:
						return Ⴄ;
					}
				}
			}
		}

		public override bool CanSerialize(Type type)
		{
			int num = 72;
			while (true)
			{
				switch (num)
				{
				default:
					num = (((object)type != typeof(ConstraintFilterDefinition)) ? 86 : 15);
					break;
				case 15:
					return true;
				case 86:
					num = (((object)type != typeof(ႭႥႰ.Ⴈ)) ? 85 : 25);
					break;
				case 25:
					return true;
				case 85:
					num = (((object)type != typeof(Chatman)) ? 39 : 36);
					break;
				case 36:
					return true;
				case 39:
					num = (((object)type != typeof(ChatmanBrainPower)) ? 57 : 84);
					break;
				case 84:
					return true;
				case 57:
					num = (((object)type != typeof(ChatmanFriendship)) ? 68 : 76);
					break;
				case 76:
					return true;
				case 68:
					num = (((object)type != typeof(LevelLastChangeDirection)) ? 35 : 38);
					break;
				case 38:
					return true;
				case 35:
					num = (((object)type != typeof(ContentFileEntry)) ? 78 : 49);
					break;
				case 49:
					return true;
				case 78:
					num = (((object)type != typeof(PushButtonAction)) ? 65 : 73);
					break;
				case 73:
					return true;
				case 65:
					num = (((object)type != typeof(WebConnectionResult)) ? 9 : 43);
					break;
				case 43:
					return true;
				case 9:
					num = (((object)type != typeof(Personality)) ? 19 : 2);
					break;
				case 2:
					return true;
				case 19:
					num = (((object)type != typeof(Personality.Ⴄ)) ? 11 : 23);
					break;
				case 23:
					return true;
				case 11:
					num = (((object)type != typeof(PersonalityStatus)) ? 82 : 55);
					break;
				case 55:
					return true;
				case 82:
					num = (((object)type != typeof(PersonalityDataFile)) ? 77 : 0);
					break;
				case 0:
					return true;
				case 77:
					num = (((object)type != typeof(PersonalityData)) ? 46 : 5);
					break;
				case 5:
					return true;
				case 46:
					num = (((object)type != typeof(Scenario)) ? 42 : 60);
					break;
				case 60:
					return true;
				case 42:
					num = (((object)type != typeof(ScenarioTextBase)) ? 83 : 7);
					break;
				case 7:
					return true;
				case 83:
					num = (((object)type != typeof(ScenarioText)) ? 52 : 41);
					break;
				case 41:
					return true;
				case 52:
					num = (((object)type != typeof(ScenarioIconText)) ? 44 : 79);
					break;
				case 79:
					return true;
				case 44:
					num = (((object)type != typeof(ScenarioTextRelation)) ? 3 : 62);
					break;
				case 62:
					return true;
				case 3:
					num = (((object)type != typeof(ScenarioMood)) ? 54 : 20);
					break;
				case 20:
					return true;
				case 54:
					num = (((object)type != typeof(ScenarioAction)) ? 45 : 71);
					break;
				case 71:
					return true;
				case 45:
					num = (((object)type != typeof(ScenarioUserAction)) ? 18 : 66);
					break;
				case 66:
					return true;
				case 18:
					num = (((object)type != typeof(Counter)) ? 31 : 10);
					break;
				case 10:
					return true;
				case 31:
					num = (((object)type != typeof(ActionUsage)) ? 59 : 37);
					break;
				case 37:
					return true;
				case 59:
					num = (((object)type != typeof(ChatmanAction)) ? 64 : 26);
					break;
				case 26:
					return true;
				case 64:
					num = (((object)type != typeof(ActionChangeLog)) ? 50 : 51);
					break;
				case 51:
					return true;
				case 50:
					num = (((object)type != typeof(ActionScope)) ? 8 : 27);
					break;
				case 27:
					return true;
				case 8:
					num = (((object)type != typeof(QnAScenarioMatchActivity)) ? 13 : 21);
					break;
				case 21:
					return true;
				case 13:
					num = (((object)type != typeof(HardwareAction)) ? 67 : 70);
					break;
				case 70:
					return true;
				case 67:
					num = (((object)type != typeof(CodeHardwareAction)) ? 47 : 40);
					break;
				case 40:
					return true;
				case 47:
					num = (((object)type != typeof(PauseHardwareAction)) ? 63 : 30);
					break;
				case 30:
					return true;
				case 63:
					num = (((object)type != typeof(SoundHardwareAction)) ? 34 : 74);
					break;
				case 74:
					return true;
				case 34:
					num = (((object)type != typeof(DataFileLocation)) ? 32 : 61);
					break;
				case 61:
					return true;
				case 32:
					num = (((object)type != typeof(Ⴄ)) ? 69 : 24);
					break;
				case 24:
					return true;
				case 69:
					num = (((object)type != typeof(MoodListContainer)) ? 17 : 53);
					break;
				case 53:
					return true;
				case 17:
					num = (((object)type != typeof(Mood)) ? 16 : 81);
					break;
				case 81:
					return true;
				case 16:
					num = (((object)type != typeof(MoodCounter)) ? 48 : 33);
					break;
				case 33:
					return true;
				case 48:
					num = (((object)type != typeof(MoodLevel)) ? 28 : 6);
					break;
				case 6:
					return true;
				case 28:
					num = (((object)type != typeof(MoodMatrix)) ? 14 : 80);
					break;
				case 80:
					return true;
				case 14:
					num = (((object)type != typeof(Gender)) ? 56 : 29);
					break;
				case 29:
					return true;
				case 56:
					num = (((object)type != typeof(MoodMatrixEntry)) ? 58 : 22);
					break;
				case 22:
					return true;
				case 58:
					num = (((object)type != typeof(Ⴀ)) ? 1 : 4);
					break;
				case 4:
					return true;
				case 1:
					num = (((object)type != typeof(ActionProducerDefinition)) ? 12 : 75);
					break;
				case 75:
					return true;
				case 12:
					return false;
				}
			}
		}

		public override XmlSerializer GetSerializer(Type type)
		{
			//Discarded unreachable code: IL_0002, IL_0039, IL_0063, IL_0088, IL_00ad, IL_00e7, IL_0115, IL_013d, IL_0168, IL_018f, IL_01c5, IL_01ef, IL_021d, IL_0244, IL_026f, IL_02a6, IL_02d1, IL_0309, IL_032e, IL_0371, IL_0399, IL_03c4, IL_03ef, IL_0416, IL_0459, IL_0481, IL_04ab, IL_04d6, IL_0515, IL_053d, IL_0568, IL_0589, IL_05ae, IL_05d9, IL_0607, IL_0638, IL_067a, IL_06a1, IL_06d1, IL_06fc, IL_072c, IL_074c, IL_077a, IL_07ab
			if ((object)type == typeof(ConstraintFilterDefinition))
			{
				if (844 >= 844 - 40)
				{
					return new ConstraintFilterDefinitionSerializer();
				}
				goto IL_00c7;
			}
			if ((object)type != typeof(ႭႥႰ.Ⴈ))
			{
				if ((object)type == typeof(Chatman))
				{
					if (287 <= 287 - 4)
					{
						goto IL_02e4;
					}
					return new ChatmanSerializer();
				}
				if ((object)type != typeof(ChatmanBrainPower))
				{
					goto IL_03f4;
				}
				if (false)
				{
					goto IL_05de;
				}
				return new ChatmanBrainPowerSerializer();
			}
			if (657 >= 657 - 243)
			{
				return new PersonalityListSerializer();
			}
			goto IL_016a;
			IL_003e:
			if ((object)type == typeof(PersonalityDataFile))
			{
				if (false)
				{
					goto IL_0345;
				}
				return new PersonalityDataFileSerializer();
			}
			if ((object)type == typeof(PersonalityData))
			{
				if ((468 + 468 * 468) % 2 == 0)
				{
					return new PersonalityDataSerializer();
				}
				goto IL_05e4;
			}
			if ((object)type != typeof(Scenario))
			{
				if ((object)type != typeof(ScenarioTextBase))
				{
					goto IL_01fd;
				}
				if (615 <= 615 - 436)
				{
					goto IL_0333;
				}
				return new ScenarioTextBaseSerializer();
			}
			if (395 >= 395 - 32)
			{
				goto IL_00bb;
			}
			goto IL_030e;
			IL_00bb:
			return new ScenarioSerializer();
			IL_05e4:
			if ((object)type == typeof(Counter))
			{
				if (812 > 812 - 37)
				{
					return new CounterSerializer();
				}
				goto IL_0548;
			}
			if ((object)type != typeof(ActionUsage))
			{
				goto IL_030e;
			}
			if (797 <= 797 - 772)
			{
				goto IL_0194;
			}
			goto IL_0345;
			IL_0333:
			return new MoodCounterSerializer();
			IL_0194:
			return new ScenarioActionSerializer();
			IL_016a:
			if ((object)type == typeof(Ⴀ))
			{
				if (false)
				{
					goto IL_0274;
				}
				return new MoodListSerializer();
			}
			if ((object)type != typeof(ActionProducerDefinition))
			{
				goto IL_02dc;
			}
			if ((247 + 247 * 247) % 2 == 0)
			{
				return new ActionProducerDefinitionSerializer();
			}
			goto IL_0421;
			IL_02e4:
			if ((object)type != typeof(Gender))
			{
				goto IL_0013;
			}
			if ((881 + 881 * 881) % 2 == 0)
			{
				goto IL_0274;
			}
			goto IL_072e;
			IL_030e:
			if ((object)type == typeof(ChatmanAction))
			{
				if (126 > 126 - 92)
				{
					return new ChatmanActionSerializer();
				}
				goto IL_03f4;
			}
			goto IL_04b0;
			IL_0345:
			return new ActionUsageSerializer();
			IL_039e:
			if ((object)type == typeof(MoodMatrix))
			{
				if (471 >= 471 - 430)
				{
					return new MoodMatrixSerializer();
				}
				goto IL_00bb;
			}
			goto IL_02e4;
			IL_02dc:
			return null;
			IL_03f4:
			if ((object)type != typeof(ChatmanFriendship))
			{
				if ((object)type == typeof(LevelLastChangeDirection))
				{
					if (877 <= 877 - 313)
					{
						goto IL_04db;
					}
					return new LevelLastChangeDirectionSerializer();
				}
				if ((object)type != typeof(ContentFileEntry))
				{
					goto IL_011a;
				}
				if (459 <= 459 - 305)
				{
					goto IL_0013;
				}
				goto IL_0643;
			}
			if (false)
			{
				goto IL_05de;
			}
			return new ChatmanFriendshipSerializer();
			IL_01fd:
			if ((object)type == typeof(ScenarioText))
			{
				if (40 >= 40 - 29)
				{
					return new ScenarioTextSerializer();
				}
				goto IL_04ed;
			}
			if ((object)type == typeof(ScenarioIconText))
			{
				if ((458 + 458 * 458) % 2 == 0)
				{
					goto IL_01f1;
				}
				goto IL_04b0;
			}
			goto IL_072e;
			IL_00c7:
			if ((object)type == typeof(DataFileLocation))
			{
				if (531 >= 531 - 452)
				{
					return new DataFileLocationSerializer();
				}
				goto IL_008d;
			}
			goto IL_03c9;
			IL_04b0:
			if ((object)type == typeof(ActionChangeLog))
			{
				if (774 >= 774 - 471)
				{
					return new ActionChangeLogSerializer();
				}
				goto IL_00b5;
			}
			if ((object)type != typeof(ActionScope))
			{
				if ((object)type != typeof(QnAScenarioMatchActivity))
				{
					goto IL_056a;
				}
				if (930 < 930 - 747)
				{
					goto IL_04db;
				}
				goto IL_07b6;
			}
			if ((675 + 675 * 675) % 2 == 0)
			{
				return new ActionScopeSerializer();
			}
			goto IL_01fd;
			IL_04ed:
			return new PersonalitySerializer();
			IL_0421:
			return new HardwareActionSerializer();
			IL_0274:
			return new GenderSerializer();
			IL_072e:
			if ((object)type != typeof(ScenarioTextRelation))
			{
				if ((object)type != typeof(ScenarioMood))
				{
					goto IL_008d;
				}
				if (623 >= 623 - 153)
				{
					return new ScenarioMoodSerializer();
				}
				goto IL_011a;
			}
			if (false)
			{
				goto IL_0643;
			}
			goto IL_0751;
			IL_011a:
			if ((object)type != typeof(PushButtonAction))
			{
				if ((object)type == typeof(WebConnectionResult))
				{
					if (578 <= 578 - 94)
					{
						goto IL_03f4;
					}
					return new WebConnectionResultSerializer();
				}
				if ((object)type != typeof(Personality))
				{
					if ((object)type == typeof(Personality.Ⴄ))
					{
						if (376 <= 376 - 297)
						{
							goto IL_056a;
						}
						goto IL_05de;
					}
					if ((object)type != typeof(PersonalityStatus))
					{
						goto IL_003e;
					}
					if (568 <= 568 - 61)
					{
						goto IL_016a;
					}
					goto IL_04db;
				}
				if (981 < 981 - 707)
				{
					goto IL_039e;
				}
				goto IL_04ed;
			}
			if (342 <= 342 - 259)
			{
				goto IL_02dc;
			}
			return new PushButtonActionSerializer();
			IL_0013:
			if ((object)type != typeof(MoodMatrixEntry))
			{
				goto IL_016a;
			}
			if (949 >= 949 - 308)
			{
				return new MoodMatrixEntrySerializer();
			}
			goto IL_07b6;
			IL_03c9:
			if ((object)type != typeof(Ⴄ))
			{
				if ((object)type == typeof(MoodListContainer))
				{
					if ((317 + 317 * 317) % 2 == 0)
					{
						return new MoodListContainerSerializer();
					}
				}
				else if ((object)type == typeof(Mood))
				{
					if ((947 + 947 * 947) % 2 == 0)
					{
						return new MoodSerializer();
					}
					goto IL_07b6;
				}
				if ((object)type == typeof(MoodCounter))
				{
					if (471 < 471 - 361)
					{
						goto IL_01f1;
					}
					goto IL_0333;
				}
				if ((object)type != typeof(MoodLevel))
				{
					goto IL_039e;
				}
				if ((200 + 200 * 200) % 2 == 0)
				{
					return new MoodLevelSerializer();
				}
				goto IL_056a;
			}
			if (1003 > 1003 - 875)
			{
				goto IL_00b5;
			}
			goto IL_01fd;
			IL_0643:
			return new ContentFileEntrySerializer();
			IL_01f1:
			return new ScenarioIconTextSerializer();
			IL_008d:
			if ((object)type == typeof(ScenarioAction))
			{
				if (28 >= 28 - 10)
				{
					goto IL_0194;
				}
				goto IL_0751;
			}
			if ((object)type == typeof(ScenarioUserAction))
			{
				if (192 <= 192 - 106)
				{
					goto IL_0421;
				}
				return new ScenarioUserActionSerializer();
			}
			goto IL_05e4;
			IL_07b6:
			return new QnAScenarioMatchActivitySerializer();
			IL_04db:
			return new PersonalityStatusSerializer();
			IL_0751:
			return new ScenarioTextRelationSerializer();
			IL_056a:
			if ((object)type == typeof(HardwareAction))
			{
				if (false)
				{
					goto IL_003e;
				}
				goto IL_0421;
			}
			goto IL_0548;
			IL_05de:
			return new SerialNumberProducerSerializer();
			IL_00b5:
			return new ChitChatListsSerializer();
			IL_0548:
			if ((object)type != typeof(CodeHardwareAction))
			{
				while ((object)type != typeof(PauseHardwareAction))
				{
					if ((object)type == typeof(SoundHardwareAction))
					{
						if (951 <= 951 - 799)
						{
							continue;
						}
						return new SoundHardwareActionSerializer();
					}
					goto IL_00c7;
				}
				if (537 >= 537 - 16)
				{
					return new PauseHardwareActionSerializer();
				}
				goto IL_03c9;
			}
			if (59 >= 59 - 54)
			{
				return new CodeHardwareActionSerializer();
			}
			goto IL_07b6;
		}
	}
}
namespace ႥႷႭ
{
	internal sealed class Ⴍ
	{
		private static readonly char[] Ⴃ;

		private static readonly string[] Ⴃ;

		internal static string ႰႷ(int Ⴓ)
		{
			int num = Ⴓ ^ 0x6C9047A4;
			string result;
			if ((result = Ⴃ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "\u059bջऐ\u05feೡఉ\u0de4त\u05b6ՠसפ\u0cf9ఏ\u0de0\u093f\u059cձघפ\u0cfbఒ\u0df1त\u05b7պ";
				break;
			case 1:
				obj = "";
				break;
			case 2:
				obj = "\u093f\u05ff೧చ\u0dfc\u0902־Մछ\u05ff೦ఔ෫ब\u05b4սऊ״";
				break;
			case 3:
				obj = "\u05ce\u0cfdచ\u0df1ठ\u05b9պ";
				break;
			case 4:
				obj = "\u0cd6ఓ\u0de4ह\u05b5յऐ\u05cf೧చ෬णֈջउר೧";
				break;
			case 5:
				obj = "స෭ब\u05acչटף\u0cd3ఉ෬न\u05b6հऍץ\u0cfcఋ";
				break;
			case 6:
				obj = "\u0dc9न\u05aeձऒ\u05c1\u0cf4ఈ\u0df1ऎ\u05b0յऐת\u0cf0\u0c3f෬\u093f\u05bdշऊפ\u0cfaక";
				break;
			case 7:
				obj = "ऎ\u05b7պऊר\u0cfbఏසत\u05b4ձ\u093bףೡఉ\u0dfc";
				break;
			case 8:
				obj = "ֈաऍץ\u0cd7ఎ\u0df1ह\u05b7պ\u093f\u05eeೡఒ෪ण";
				break;
			case 9:
				obj = "Ճछׯ\u0cd6ఔ෫ण\u05bdշऊפ\u0cfaక\u0dd7न\u05abաऒ\u05f9";
				break;
			case 10:
				obj = "मר೧ఈ෪ण\u05b9ոग\u05f9೬";
				break;
			case 11:
				obj = "מ\u0cf0ఉ෬ब\u05b4՚ऋנ\u0cf7ఞ\u0df7झ\u05aaջच\u05f8\u0cf6ఞ\u0df7";
				break;
			case 12:
				obj = "\u0cc5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfcञ\u05acյऊ\u05f8೦";
				break;
			case 13:
				obj = "ఫ\u0de0\u093f\u05abջऐ\u05ec\u0cf9ఒ\u0df1ऴ\u059cյऊ\u05ec\u0cd3ఒ෩न";
				break;
			case 14:
				obj = "\u0dd5न\u05aaէऑף\u0cf4గ෬ह\u05a1Րट\u05f9\u0cf4";
				break;
			case 15:
				obj = "ञ\u05bbձऐ\u05ec೧ఒ෪";
				break;
			case 16:
				obj = "\u058bշछף\u0cf4ఉ෬ढ\u058cձआ\u05f9\u0cd7చ\u0df6न";
				break;
			case 17:
				obj = "Շझר\u0cfbచ\u0df7त\u05b7Հछ\u05f5ೡ";
				break;
			case 18:
				obj = "भ\u05ee\u0cf0క\u0de4\u093f\u05b1ջष\u05ee\u0cfaక\u0dd1न\u05a0ՠ";
				break;
			case 19:
				obj = "מ\u0cf6ఞ෫ब\u05aaսऑי\u0cf0\u0c03\u0df1ट\u05bdոट\u05f9\u0cfcఔ෫";
				break;
			case 20:
				obj = "\u0cc6ఘ\u0de0ण\u05b9զगע\u0cd8ఔ෪ऩ";
				break;
			case 21:
				obj = "న෦न\u05b6յऌפ\u0cfa\u0c3a෦ह\u05b1ջऐ";
				break;
			case 22:
				obj = "\u0dd6म\u05bdպट\u05ff\u0cfcఔ\u0dd0\u093e\u05bdզ\u093f\u05eeೡఒ෪ण";
				break;
			case 23:
				obj = "ऎ\u05b7աऐ\u05f9\u0cf0ఉ";
				break;
			case 24:
				obj = "\u0599շऊפ\u0cfaక\u0dd0\u093e\u05b9ճछ";
				break;
			case 25:
				obj = "\u0557ख\u05ecೡఖ\u0de4ण\u0599շऊפ\u0cfaక";
				break;
			case 26:
				obj = "\u093f\u05eeೡఒ෪ण\u059bռटףೲఞ\u0dc9ढ\u05bf";
				break;
			case 27:
				obj = "\u05cc\u0cf6ఏ෬ढ\u05b6Շझע\u0ce5ఞ";
				break;
			case 28:
				obj = "\u0cc4కහञ\u05bbձऐ\u05ec೧ఒ෪\u0900\u05b9ՠझץ\u0cd4ఘ\u0df1त\u05aeսऊ״";
				break;
			case 29:
				obj = "ళ\u0de4\u093f\u05bcգट\u05ff\u0cf0\u0c3a෦ह\u05b1ջऐ";
				break;
			case 30:
				obj = "ෆढ\u05bcձश\u05ec೧ట\u0df2ब\u05aaձ\u093f\u05eeೡఒ෪ण";
				break;
			case 31:
				obj = "झ\u05b9աऍר\u0cddచ\u0df7ऩ\u05afյऌר\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 32:
				obj = "\u058bջऋףೱళ\u0de4\u093f\u05bcգट\u05ff\u0cf0\u0c3a෦ह\u05b1ջऐ";
				break;
			case 33:
				obj = "Րट\u05f9\u0cf4ఽ෬ड\u05bd\u0558ऑ\u05ee\u0cf4ఏ෬ढ\u05b6";
				break;
			case 34:
				obj = "ऽץ\u0cfcఏෆथ\u05b9ՠलפ೦ఏ\u0df6";
				break;
			case 35:
				obj = "׀\u0cfaఔ\u0de1\u0901\u05b1էऊ";
				break;
			case 36:
				obj = "\u0cd8ఔ෪ऩ";
				break;
			case 37:
				obj = "శ෪ढ\u05bc\u0557ऑ\u05f8\u0cfbఏ\u0de0\u093f";
				break;
			case 38:
				obj = "\u0dc8ढ\u05b7հलר\u0ce3ఞ෩";
				break;
			case 39:
				obj = "\u0900\u05b7ջच׀\u0cf4ఏ\u0df7त\u05a0";
				break;
			case 40:
				obj = "\u059fձऐש\u0cf0ఉ";
				break;
			case 41:
				obj = "\u0559ऑעೱశ\u0de4ह\u05aaսआ\u05c8\u0cfbఏ\u0df7ऴ";
				break;
			case 42:
				obj = "\u093f\u05ff೧చ\u0dfc\u0902־\u0559ऑעೱ";
				break;
			case 43:
				obj = "\u05cc\u0cf6ఏ෬ढ\u05b6Մऌעೱఎ෦न\u05aaՐछ\u05eb\u0cfcక෬ह\u05b1ջऐ";
				break;
			case 44:
				obj = "\u0cc5చ\u0df7ब\u05b5ձऊר೧ఈ";
				break;
			case 45:
				obj = "లශ";
				break;
			case 46:
				obj = "\u0dcbब\u05b5ձ";
				break;
			case 47:
				obj = "\u0902\u05aaհगף\u0cf4గ";
				break;
			case 48:
				obj = "֊ջऐש೬ఔ";
				break;
			case 49:
				obj = "Ցऐת\u0cfcక\u0de0छ\u05bdզऍפ\u0cfaక";
				break;
			case 50:
				obj = "म\u05ff\u0cfcఔ\u0df7त\u05acխ";
				break;
			case 51:
				obj = "\u05c4\u0cf8చ\u0de2न\u059eսऒר\u0cdbచ෨न";
				break;
			case 52:
				obj = "\u0cdcఈ\u0dd3त\u05abսजס\u0cf0";
				break;
			case 53:
				obj = "వ෪ह\u058bձऒר\u0cf6ఏ\u0de4य\u05b4ձ";
				break;
			case 54:
				obj = "ෂ\u093f\u05b7աऎ";
				break;
			case 55:
				obj = "ङ\u05b7\u0559ऑעೱ";
				break;
			case 56:
				obj = "\u0595յऒר";
				break;
			case 57:
				obj = "Ւछנ\u0cf4గ\u0de0";
				break;
			case 58:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55ෂन\u05b6հछ\u05ff";
				break;
			case 59:
				obj = "׀\u0cf4\u0c03හप\u05bd";
				break;
			case 60:
				obj = "\u0cc0క\u0df6न\u05ac";
				break;
			case 61:
				obj = "\u0c3a\u0dc7त\u05ac";
				break;
			case 62:
				obj = "හ\u0901\u05b1ՠऊס\u0cf0";
				break;
			case 63:
				obj = "झ\u05aaձऊ\u05f9೬";
				break;
			case 64:
				obj = "֎ձऌ״";
				break;
			case 65:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbశ෪ढ\u05bc\u0558छ\u05fb\u0cf0గ";
				break;
			case 66:
				obj = "\u093a\u05ec\u0cfcగ\u0dfcऌ\u05aeձऌ\u05ecೲఞ";
				break;
			case 67:
				obj = "\u05c1\u0cf4ఈ\u0df1घ\u05abձ\u093a\u05ecೡఞ";
				break;
			case 68:
				obj = "\u0cd1ఞ\u0df6म\u05aaսऎ\u05f9\u0cfcఔ෫";
				break;
			case 69:
				obj = "వ෪ऄ\u05b6ՠछף೦ఒ\u0df1ऴ";
				break;
			case 70:
				obj = "\u0dc8ढ\u05b7հलפ೦ఏෆढ\u05b6ՠटפ\u0cfbఞ\u0df7";
				break;
			case 71:
				obj = "\u0900\u05b7ջच\u05fe";
				break;
			case 72:
				obj = "\u0596ջऐר";
				break;
			case 73:
				obj = "Օऒס\u0cd6ఓ෬ह\u059bռट\u05f9೦";
				break;
			case 74:
				obj = "\u093aע\u0ce2క෩ढ\u05b9հछש\u0cd6ఓ෬ह\u059bռट\u05f9೦";
				break;
			case 75:
				obj = "מ\u0cfdచ\u0df7न\u05bc\u0557खפೡస෭ब\u05acէ";
				break;
			case 76:
				obj = "\u0cd8\u0c02ෆथ\u05b1ՠऽץ\u0cf4ఏ\u0df6";
				break;
			case 77:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6\u0557खפೡస෭ब\u05ac\u0558ग\u05feೡఈ";
				break;
			case 78:
				obj = "\u0dc8ब\u05abՠछ\u05ff\u0cd1చ\u0df1ब\u059eսऒר";
				break;
			case 79:
				obj = "घ\u05abձऌ\u05c9\u0cf4ఏ\u0de4ऋ\u05b1ոछ";
				break;
			case 80:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cd1చ\u0df1ब\u059eսऒר\u0cd9ఔ෦ब\u05acսऑף";
				break;
			case 81:
				obj = "Ւगס\u0cf0వ\u0de4ठ\u05bd";
				break;
			case 82:
				obj = "भ\u05f9\u0cf4ఉ\u0df1";
				break;
			case 83:
				obj = "\u05ce\u0cfaట\u0de0";
				break;
			case 84:
				obj = "\u0cc5గ\u0de4ऴ\u059bռग\u05f9\u0cd6ఓ\u0de4ह";
				break;
			case 85:
				obj = "స෪ण־սऌנ\u0cc2ఞ෧ञ\u05bdյऌ\u05ee\u0cfd";
				break;
			case 86:
				obj = "ෆथ\u05bdշक\u05cc\u0cfbట\u0dd5ड\u05b9խऽץ\u0cfcఏෆथ\u05b9ՠ";
				break;
			case 87:
				obj = "ऎ\u05b1պछנ\u0cf4";
				break;
			case 88:
				obj = "\u0596ձउך\u0cfaఉ\u0de1\u093e";
				break;
			case 89:
				obj = "Ճख\u05ecೡఈ\u0dd1थ\u05bdՀगנ\u0cf0";
				break;
			case 90:
				obj = "पר\u0cf4ఘ෭ज\u0597զभר\u0cf4ఉ෦थ֏ձज";
				break;
			case 91:
				obj = "י\u0cf0చ෦थ։աछ\u05feೡఒ෪ण";
				break;
			case 92:
				obj = "\u0cc5ఉ෪ठ\u05a8ՠधר೦వ෪";
				break;
			case 93:
				obj = "న෭ढ\u05afՃछ\u05ecೡఓ\u0de0\u093f";
				break;
			case 94:
				obj = "\u0dd6थ\u05b7գप\u05fb";
				break;
			case 95:
				obj = "ञ\u05b0ջउ\u05cc\u0ce5ఋ\u0df6";
				break;
			case 96:
				obj = "֍էछ\u05ff\u0cc5ఉ෪फ\u05b1ոछ\u05c2೧య\u0de0ब\u05bbռ";
				break;
			case 97:
				obj = "Շखע\u0ce2\u0c29\u0de0ठ\u05b1պचר೧ఈ";
				break;
			case 98:
				obj = "भץ\u0cfaఌෆत\u05b6ձओ\u05ec\u0cd4క\u0de1ऊ\u05b9չछ\u05fe";
				break;
			case 99:
				obj = "\u05ca\u0cfaయ෪ऋ\u05b9շछׯ\u0cfaఔ෮";
				break;
			case 100:
				obj = "\u0cd2ఔ\u0dd1ढ\u059eաऐף೬బ\u0de0य\u05abսऊר";
				break;
			case 101:
				obj = "\u0c3c෪ङ\u05b7Նछת\u0cfcఈ\u0df1\u093f\u05b9ՠगע\u0cfb";
				break;
			case 102:
				obj = "\u0dd5न\u05aaէऑף\u0cf4గ෬ह\u05b1ձऍ";
				break;
			case 103:
				obj = "ञ\u05b0ջउ\u05ce೧ఞ\u0de1त\u05acէ";
				break;
			case 104:
				obj = "\u059cջउף\u0cf9ఔ\u0de4ऩ\u059bռग\u05f9\u0cd6ఓ\u0de4ह";
				break;
			case 105:
				obj = "Շखע\u0ce2\u0c3a෩ड\u058cձट\u05ee\u0cfd";
				break;
			case 106:
				obj = "शע\u0cf8ఞ\u0df2ढ\u05aaտऱ\u05ff\u0cd2చ෨न\u05ab՛ऌ\u05ce\u0cfcక\u0de0ठ\u05b9";
				break;
			case 107:
				obj = "\u05ca\u0cfaయ෪अ\u05b7չछ\u05fa\u0cfaఉ෮";
				break;
			case 108:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05c9\u0cf4ఏ\u0de4\u0963։պ\u093fמ\u0cf6ఞ෫ब\u05aaսऑ׀\u0cf4ఏ෦थ\u0599շऊפ\u0ce3ఒ\u0df1ऴ";
				break;
			case 109:
				obj = "\u0c29\u0de0ब\u05bbՠग\u05fb\u0cf0";
				break;
			case 110:
				obj = "\u0dd5\u093f\u05b7յझ\u05f9\u0cfc\u0c0d\u0de0";
				break;
			case 111:
				obj = "ए\u05b7ՠख";
				break;
			case 112:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cd4ఘ\u0df1त\u05b7պभ\u05ee\u0cfaఋ\u0de0";
				break;
			case 113:
				obj = "Ճऑ\u05ffೱఈ";
				break;
			case 114:
				obj = "\u093f\u05f8ೱఒ෪";
				break;
			case 115:
				obj = "\u05cc\u0cf6ఏ෬ढ\u05b6է";
				break;
			case 116:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05c9\u0cf4ఏ\u0de4\u0963\u0599շऊפ\u0cfaకෆथ\u05b9պङר\u0cd9ఔ\u0de2";
				break;
			case 117:
				obj = "య෪ह\u05b9ոऽעೠక\u0df1न\u05aa";
				break;
			case 118:
				obj = "ශब\u05a1էफ\u05fe\u0cf0ట";
				break;
			case 119:
				obj = "ट\u05bdղछ\u05ff\u0cf0క෦न";
				break;
			case 120:
				obj = "\u0595ջऑש\u0cdc\u0c3f";
				break;
			case 121:
				obj = "՝ऐ\u05f9\u0cf0క\u0df6त\u05acխ";
				break;
			case 122:
				obj = "ऽ\u05ff\u0cf0చ\u0df1त\u05b7պ\u093a\u05ecೡఞ";
				break;
			case 123:
				obj = "\u05c4೦\u0c3e\u0dfdम\u05b4աचרೱ";
				break;
			case 124:
				obj = "\u0cd6ష";
				break;
			case 125:
				obj = "ఫ\u0de4स\u05abձ";
				break;
			case 126:
				obj = "\u0dd6ढ\u05adպच";
				break;
			case 127:
				obj = "ञ\u05a8ձझפ\u0cf4గෆढ\u05bcձ";
				break;
			case 128:
				obj = "\u059cյऊ\u05ec";
				break;
			case 129:
				obj = "Նछ\u05fcೠఞ\u0df6ह\u05bdհ\u093f\u05eeೡఒ\u0df3त\u05acխ";
				break;
			case 130:
				obj = "\u093f\u05eeೡఒ෪ण";
				break;
			case 131:
				obj = "\u05c4\u0cfbఘ෩स\u05bcձ";
				break;
			case 132:
				obj = "\u0cd0\u0c03෦ड\u05adհछ";
				break;
			case 133:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6Շझר\u0cfbచ\u0df7त\u05b7Հछ\u05f5ೡ\u0c29\u0de0ड\u05b9ՠगע\u0cfb";
				break;
			case 134:
				obj = "\u0dd1ढ\u05a8Մख\u05ff\u0cf4ఈ\u0de0ऄ\u059c";
				break;
			case 135:
				obj = "ट\u05bdոट\u05f9\u0cfcఔ෫";
				break;
			case 136:
				obj = "\u0590յऍמೡచ\u0df7";
				break;
			case 137:
				obj = "Նछ\u05fcೠఒ\u0df7न\u0599հचפೡఒ෪ण\u05b9ոमץ೧చ\u0df6न";
				break;
			case 138:
				obj = "ळ\u05ecೡఘ෭च\u05b7զच";
				break;
			case 139:
				obj = "\u05c9\u0cf0గ\u0de0ह\u05bdհ";
				break;
			case 140:
				obj = "\u0cdcఈ\u0dccण\u05acձऌף\u0cf4గ";
				break;
			case 141:
				obj = "ల\u0df6घ\u05abձऌל\u0cfb\u0c3a";
				break;
			case 142:
				obj = "෪\u093f\u05b1ճगף\u0cf4గ\u0dd6म\u05bdպट\u05ff\u0cfcఔ\u0dccउ";
				break;
			case 143:
				obj = "ङ\u05bdլऊ\u05fe";
				break;
			case 144:
				obj = "\u0591\u0559\u093f\u05fd\u0ce5న෭स\u05acհऑ\u05fa\u0cfb";
				break;
			case 145:
				obj = "\u0557ऑףೡచ෦ह\u058bՠट\u05f9ೠఈෆथ\u05b9պङרೱ";
				break;
			case 146:
				obj = "ष׀\u0cc6ఒ\u0de2ण\u05b7աऊ";
				break;
			case 147:
				obj = "\u05c4\u0cd8న\u0de0\u093e\u05abսऑף\u0cd0క\u0de1न\u05bc";
				break;
			case 148:
				obj = "\u0cdcశ\u0dd1न\u05a0ՠषף";
				break;
			case 149:
				obj = "ల\u0dc8\u0903\u05adհङר\u0cc6ఞ෫ह";
				break;
			case 150:
				obj = "\u0dcc\u0900\u059eսऒר\u0cc6ఞ෫ह";
				break;
			case 151:
				obj = "ञ\u05adդऎע೧ఏ\u0de0ऩ\u0590յऌש\u0ce2చ\u0df7न\u0595ջचר\u0cf9";
				break;
			case 152:
				obj = "\u059bջऐ\u05fb\u0cf0ఉ\u0df1न\u05bc";
				break;
			case 153:
				obj = "\u0559ऑעೱశ\u0de4ह\u05aaսआר೦";
				break;
			case 154:
				obj = "ऽע\u0cfbఈ\u0df1\u093f\u05b9սऐ\u05f9\u0cd3ఒ෩ह\u05bdզ";
				break;
			case 155:
				obj = "\u05cc\u0cf6ఏ෬ढ\u05b6Մऌעೱఎ෦न\u05aaէ";
				break;
			case 156:
				obj = "\u0cf0క";
				break;
			case 157:
				obj = "ల෦ढ\u05b6\u0557ऑס\u0cfaఉ\u0dd6म\u05b0ձओר\u0cdcక\u0de1न\u05a0";
				break;
			case 158:
				obj = "\u0dd0ऽ\u05bcյऊר\u0cd1చ\u0df1न";
				break;
			case 159:
				obj = "ऄ\u05abՄऌפ\u0ce3చ\u0df1न";
				break;
			case 160:
				obj = "\u0591ճऐע೧ఞ\u0dccण\u05acձऌף\u0cf4గ\u0dd6म\u05bdպट\u05ff\u0cfcఔ\u0df6";
				break;
			case 161:
				obj = "Օझ\u05f9\u0cfcఔ෫घ\u05abյङר೦";
				break;
			case 162:
				obj = "\u093a\u05ecೡచසत\u05b4ձ";
				break;
			case 163:
				obj = "ט\u0cfbఐ෫ढ\u05afպ";
				break;
			case 164:
				obj = "\u0cd6ఔ෫ण\u05bdշऊרೱ";
				break;
			case 165:
				obj = "ఽ\u0de4त\u05b4ձच";
				break;
			case 166:
				obj = "හम\u05bbձऍ\u05fe\u0cd1ఞ෫त\u05bdհ";
				break;
			case 167:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐך\u0cf0ఙෆढ\u05b6պछ\u05eeೡఒ෪ण֊ձऍ\u05f8\u0cf9ఏ";
				break;
			case 168:
				obj = "\u0594յऍ\u05f9\u0cd9ఞ\u0df3न\u05b4";
				break;
			case 169:
				obj = "\u0558ट\u05feೡన෦ढ\u05aaձ\u093a\u05ecೡఞ";
				break;
			case 170:
				obj = "ऩע೧టෆढ\u05adպऊ";
				break;
			case 171:
				obj = "ט೦ఞ\u0df7\u0903\u05b9չछ";
				break;
			case 172:
				obj = "\u0cc5ఉ෪फ\u05b1ոछ\u05c4\u0cf8చ\u0de2न";
				break;
			case 173:
				obj = "మ\u0df6न\u05aa\u0557ग\u05f9೬";
				break;
			case 174:
				obj = "\u0ddfत\u05a8\u0557ऑש\u0cf0";
				break;
			case 175:
				obj = "ॷ\u059bջऐ\u05feೡఉ\u0de4त\u05b6ՠसפ\u0cf9ఏ\u0de0\u093f\u059cձघפ\u0cfbఒ\u0df1त\u05b7պ";
				break;
			case 176:
				obj = "֍էछ\u05ff\u0cd6ఔ\u0df0ण\u05acզइ";
				break;
			case 177:
				obj = "Ձऍר೧\u0c3c\u0de0ण\u05bcձऌ";
				break;
			case 178:
				obj = "र\u05f8\u0cf8ఙ\u0de0\u093f\u0597ղऽ\u05ff\u0cf0ట෬ह\u05ab";
				break;
			case 179:
				obj = "\u05b7\u0cd6ఓ\u0de4ह\u05b5յऐ";
				break;
			case 180:
				obj = "\u0cd4ఘ\u0df1त\u05aeձमר೧ఈ෪ण\u05b9ոग\u05f9೬ల\u0de1";
				break;
			case 181:
				obj = "\u0c41ෆथ\u05b9ՠओ\u05ec\u0cfbఽ\u0df7त\u05bdպच\u05fe\u0cfdఒ\u0df5";
				break;
			case 182:
				obj = "\u0dc9ब\u05abՠनע\u0cf9ఎ෨न";
				break;
			case 183:
				obj = "ॷ\u059bջऐ\u05f9\u0cf0క\u0df1ऋ\u05b1ոछ\u05c8\u0cfbఏ\u0df7ऴ";
				break;
			case 184:
				obj = "עՃछׯ\u0cd6ఔ෫ण\u05bdշऊפ\u0cfaక\u0dd7न\u05abաऒ\u05f9";
				break;
			case 185:
				obj = "Մऋ\u05fe\u0cfdహ\u0df0ह\u05acջऐ\u05cc\u0cf6ఏ෬ढ\u05b6Մछ\u05ff೦ఔ෫ब\u05b4սऊ״\u0cdc\u0c3f";
				break;
			case 186:
				obj = "\u0944מ\u0cf0ఉ෬ब\u05b4՚ऋנ\u0cf7ఞ\u0df7झ\u05aaջच\u05f8\u0cf6ఞ\u0df7";
				break;
			case 187:
				obj = "\u05c9\u0cfaక\u0df1झ\u05aaջच\u05f8\u0cf6ఞහम\u05acսऑף೦";
				break;
			case 188:
				obj = "ಯఫ\u0de0\u093f\u05abջऐ\u05ec\u0cf9ఒ\u0df1ऴ\u059cյऊ\u05ec\u0cd3ఒ෩न";
				break;
			case 189:
				obj = "\u0c3f෪ण\u05acՄऌעೱఎ෦न\u0599շऊפ\u0cfaక\u0df6ञ\u05acյऌ\u05f9\u0cd8ఒ෫स\u05acձ";
				break;
			case 190:
				obj = "\u0dbfञ\u05bbձऐ\u05ec೧ఒ෪";
				break;
			case 191:
				obj = "उ\u05b7պऊם೧ఔ\u0de1स\u05bbձ\u093f\u05eeೡఒ෪ण\u05abՑऐש\u0cd8ఒ෫स\u05acձ";
				break;
			case 192:
				obj = "עՇझר\u0cfbచ\u0df7त\u05b7Հछ\u05f5ೡ";
				break;
			case 193:
				obj = "Ԯभ\u05ee\u0cf0క\u0de4\u093f\u05b1ջपר೭ఏ\u0dd7न\u05b4յऊפ\u0cfaక";
				break;
			case 194:
				obj = "\u0944מ\u0cf6ఞ෫ब\u05aaսऑ\u05cc\u0cf6ఏ෬ढ\u05b6";
				break;
			case 195:
				obj = "\u05ce೧ఞ\u0de1न\u05b6ՠग\u05ec\u0cf9ఈ";
				break;
			case 196:
				obj = "ಯస෪स\u05b6ՠछ\u05ff";
				break;
			case 197:
				obj = "ష\u0de4\u093e\u05ac\u0559ऑעೱమ\u0df6न\u05bc՝ऐ׃\u0cf0ఌහम\u05acսऑף";
				break;
			case 198:
				obj = "\u0dbfऎ\u05b0յऊנ\u0cf4కහम\u05acսऑף";
				break;
			case 199:
				obj = "\u0901\u05b9էऊ\u05ce\u0cfaక\u0df1न\u05b6ՠफ\u05fdೱచ\u0df1न\u059cյऊר";
				break;
			case 200:
				obj = "עՕझ\u05f9\u0cfcఔ෫ञ\u05bbջऎר";
				break;
			case 201:
				obj = "ձऐ\u05a0\u0cc0న";
				break;
			case 202:
				obj = "\u0944\u05c5\u0cf4ఉ\u0de1\u093a\u05b9զछ\u05cc\u0cf6ఏ෬ढ\u05b6";
				break;
			case 203:
				obj = "\u05b7\u0cc5చ\u0df0\u093e\u05bd՜ट\u05ffೱఌ\u0de4\u093f\u05bdՕझ\u05f9\u0cfcఔ෫";
				break;
			case 204:
				obj = "\u0cc5ఉ෪ठ\u05b7ՠगע\u0cfbచ෩ङ\u05bdլऊ\u05c1\u0cf4ఈ\u0df1घ\u05a8հट\u05f9\u0cf0";
				break;
			case 205:
				obj = "\u0c41ශब\u05acյसפ\u0cf9ఞ\u0dc9ढ\u05bbյऊפ\u0cfaక";
				break;
			case 206:
				obj = "\u0dbf\u0900\u05b7ջच\u05c1\u0cfcఈ\u0df1";
				break;
			case 207:
				obj = "ॷ\u0595ջऑש\u0cd6ఔ\u0df0ण\u05acձऌ";
				break;
			case 208:
				obj = "ע\u0559ऑעೱశ\u0de4ह\u05aaսआ";
				break;
			case 209:
				obj = "Ԯळע\u0cfaట\u0dc8ब\u05acզग\u05f5\u0cd0క\u0df1\u093f\u05a1";
				break;
			case 210:
				obj = "ल\u05ec೦ఏහस\u05acջळ\u05f8ೡఞශब\u05acձ";
				break;
			case 211:
				obj = "\u05b7\u0cd4ఘ\u0df1त\u05b7պम\u05ff\u0cfaట\u0df0म\u05bdզ\u093aר\u0cf3ఒ෫त\u05acսऑף";
				break;
			case 212:
				obj = "\u0cd6ఔ෫ह\u05bdպऊ\u05cb\u0cfcగ\u0de0";
				break;
			case 213:
				obj = "\u0c41ස\u093f\u05b7չळע\u0cfaటඩ७עՀऑ׀\u0cfaఔ\u0de1ॡ\u05f8Ԯऽע೧ఉ\u0de0ड\u05b9ՠगע\u0cfb";
				break;
			case 214:
				obj = "\u0dbf\u0900\u05b7ջच׀\u0cf4ఏ\u0df7त\u05a0Ցऐ\u05f9೧ఒ\u0de0\u093e";
				break;
			case 215:
				obj = "ॷ\u058cջऊ\u05ec\u0cf9స෪स\u05b6ՠछ\u05ffಹ\u0c5b\u0dbfउ\u05b9սऒ״\u0cd4\u0c0d\u0de0\u093f\u05b9ճछ\u05a1ವ\u0c41ශब\u05a1էफ\u05fe\u0cf0టඩ७ע\u0558ट\u05feೡమ\u0df6न\u059cյऊרಹ\u0c5b\u0dbfऄ\u059cԸफ़\u05b7\u0cdbచ෨न״Դ\u0944\u05c9\u0cf0ఈ෦\u093f\u05b1դऊפ\u0cfaకඩ७ע՚ऑ\u05c4\u0cfbఏ\u0de0ण\u05abսऊ״";
				break;
			case 216:
				obj = "ע\u0559ऑעೱ";
				break;
			case 217:
				obj = "Ԯभ\u05f9\u0cf4ఉ\u0df1ॡ\u05f8Ԯसפ\u0cf9ఞ\u0dcbब\u05b5ձ";
				break;
			case 218:
				obj = "\u0944מೡచ\u0df7ह״Դ\u0944\u05c9ೠఉ\u0de4ह\u05b1ջऐ";
				break;
			case 219:
				obj = "ןೠక\u0dd2न\u05baՇछ\u05ec೧ఘ෭";
				break;
			case 220:
				obj = "\u0cd6ఔ෫फ\u05b1զओך\u0cf0ఙ\u0dd6न\u05b9զझץ\u0cc2ఒ\u0df1थ։";
				break;
			case 221:
				obj = "ఫ෩ब\u05a1Փटנ\u0cf0ఈ";
				break;
			case 222:
				obj = "\u0de2ड\u05b7նटסಯ\u0c41\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժ\u093f\u05eeೡఒ෪ण\u059bռटףೲఞ\u0dc9ढ\u05bf";
				break;
			case 223:
				obj = "\u0903\u05bdգऽץ\u0cfcఏෆथ\u05b9ՠ";
				break;
			case 224:
				obj = "עՀऑ\u05f9\u0cf4గෆढ\u05adպऊר೧\u0c57ඥॷ\u059cյगס೬\u0c3a\u0df3न\u05aaյङרಹ\u0c5b\u0dbfउ\u05b9խऍט೦ఞ\u0de1ॡ\u05f8Ԯल\u05ec೦ఏ\u0dd0\u093e\u05bdՐट\u05f9\u0cf0\u0c57ඥॷ\u0591Ր\u0952\u05adಯవ\u0de4ठ\u05bdԸफ़\u05b7\u0cd1ఞ\u0df6म\u05aaսऎ\u05f9\u0cfcఔ෫ॡ\u05f8Ԯ\u093f\u05f8ೡఓ෪\u093f״Դ\u0944ן\u0cf0ఝ\u0de0\u093f\u05bdպझרಹ\u0c5b\u0dbf\u0900\u05b7ջच\u05c4\u0cd1\u0c57ඥॷ\u0591պऊר\u0cfbఈ෬ह\u05a1Ըफ़\u05b7\u0cd6ఉ\u0de0ब\u05acսऑף\u0cd1చ\u0df1न״Դ\u0944\u05c4೦ఫ\u0df7त\u05aeյऊרಹ\u0c5b\u0dbfऄ\u05abՑआ\u05ee\u0cf9ఎ\u0de1न\u05bcԸफ़\u05b7\u0cc6ఘ෪ऽ\u05bdԸफ़\u05b7\u0cc6ఋ\u0de0म\u05b1յऒ\u05cc\u0cf6ఏ෬ढ\u05b6\u0557ऑש\u0cf0\u0c57ඥॷ\u058bձऌפ\u0cf4గ\u0dcbस\u05b5նछ\u05ff\u0cc0ఈ\u0de0ऩ\u059eջऌ\u05c9\u0cfaఌ෫ड\u05b7յच\u05a1ವ\u0c41\u0dcc\u093e\u0595խ\u0952\u05adಯస\u0dc9";
				break;
			case 225:
				obj = "Փऑי\u0cfaశ\u0dfcऎ\u05b0յऊנ\u0cf4క";
				break;
			case 226:
				obj = "\u093fף೦ఌ\u0de0\u093f։աछ\u05feೡఒ෪ण";
				break;
			case 227:
				obj = "י\u0cf0చ෦थ։՛ऌמ\u0cf0చ\u0df7म\u05b0Ճछׯ\u0cc2ఒ\u0df1थ։";
				break;
			case 228:
				obj = "\u0cc0ఈ\u0de0\u093fֈզऑ\u05eb\u0cfcగ\u0de0";
				break;
			case 229:
				obj = "\u0c41හम\u05acսऑף೦";
				break;
			case 230:
				obj = "\u0dd2थ\u05b9ՠऍ׀೬వ\u0de4ठ\u05bd";
				break;
			case 231:
				obj = "ञ\u05b0ջउמ\u0ce5ఔ\u0df7ह\u05ab";
				break;
			case 232:
				obj = "\u058bռऑ\u05fa\u0cddఔ෨न\u05afջऌצ";
				break;
			case 233:
				obj = "Ԯपעೡచ෩ऎ\u05b7աऐ\u05f9\u0cf0ఉඩ७עՐटפ\u0cf9\u0c02හ\u093b\u05bdզटת\u0cf0\u0c57ඥॷ\u059cյइ\u05fe\u0cc0ఈ\u0de0ऩ״Դ\u0944\u05c1\u0cf4ఈ\u0df1घ\u05abձ\u093a\u05ecೡఞ";
				break;
			case 234:
				obj = "\u0944\u05c4\u0cd1\u0c57ඥॷ\u058bդछ\u05ee\u0cfcచ෩ऎ\u05b7հछ\u05a1ವ\u0c41ශब\u05acյ\u0952\u05adಯ\u0c29\u0de0\u093c\u05adձऍ\u05f9\u0cf0టහम\u05acսईפೡ\u0c02ඩ७עՕऐ\u05fe\u0ce2ఞ\u0df7ङ\u05bdլऊ";
				break;
			case 235:
				obj = "\u05b7\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 236:
				obj = "ಯలශॡ\u05f8Ԯ\u093a\u05ecೡచඩ७עՆछס\u0cf4ఏ෬ढ\u05b6Ըफ़\u05b7\u0cddచ\u0df6ञ\u05acյऌ\u05a1ವ\u0c41\u0dd1ढ\u05a8Մख\u05ff\u0cf4ఈ\u0de0ऄ\u059cԸफ़\u05b7\u0cc7ఞ෴स\u05b1զछ\u05ccೱట෬ह\u05b1ջऐ\u05ec\u0cf9ఫ෭\u093f\u05b9էछ\u05a1ವ\u0c41\u0dc8ब\u05acշखך\u0cfaఉ\u0de1ॡ\u05f8Ԯ\u093aר\u0cf9ఞ\u0df1न\u05bc";
				break;
			case 237:
				obj = "\u0c41\u0dccउ״Դ\u0944\u05c9\u0cf0ఈ෦\u093f\u05b1դऊפ\u0cfaకඩ७עՑईר\u0cfbఏ\u0dd1ऴ\u05a8ձ\u0952\u05adಯళ෬प\u05b0Մऌפ\u0cfaఉ෬ह\u05a1Ըफ़\u05b7\u0cdcఈ\u0dccण\u05acձऌף\u0cf4గඩ७ע՝ऍל\u0cfb\u0c3aඩ७ע՝ऍט೦ఞ\u0df7ज\u05b6Օ\u0952\u05adಯ\u0c3f෪ण\u05ac՛ईר೧ఉ෬ऩ\u05bdՐटףೲఞ\u0df7";
				break;
			case 238:
				obj = "\u0dbfघ\u05abձऌ\u05cc\u0cf6ఏ෬ढ\u05b6Ըफ़\u05b7\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 239:
				obj = "ॷ\u05b7զगת\u0cfcక\u0de4ड\u058bշछף\u0cf4ఉ෬ढ\u0591Ր\u0952\u05adಯశ෪ढ\u05bcէ\u0952\u05adಯ\u0c3a෦ह\u05b1ջऐ\u05feಹ\u0c5b\u0dbfङ\u05bdլऊ\u05fe";
				break;
			case 240:
				obj = "\u0591\u0559\u093f\u05f8ೱఒ෪छ\u05b1հछע\u0cdcక\u0df3त\u05acյऊפ\u0cfaక\u0dd7न\u05bbձग\u05fb\u0cf0ట";
				break;
			case 241:
				obj = "՝ळמ\u0cf0ఈ\u0df6त\u05b7պऩפ\u0cfbట෪\u093a\u058bՠट\u05ffೡశ෪\u093b\u05bd";
				break;
			case 242:
				obj = "ष׀\u0cc0ఉ෩ट\u05bdշछפ\u0ce3ఞ\u0de1";
				break;
			case 243:
				obj = "\u05c4\u0cd8న\u0de0\u093e\u05abսऑף\u0cc2ఒ෫ऩ\u05b7գ\u093f\u05eeೡఒ\u0df3ब\u05acձ";
				break;
			case 244:
				obj = "\u0cdcశ\u0dd6ढ־ՠउ\u05ec೧ఞෆढ\u05b6պछ\u05eeೡఒ෪ण\u0597՟";
				break;
			case 245:
				obj = "ల\u0dc8ञ\u05b7ղऊ\u05fa\u0cf4ఉ\u0de0ऎ\u05b7պऐר\u0cf6ఏ෬ढ\u05b6Ւटפ\u0cf9ఞ\u0de1";
				break;
			case 246:
				obj = "\u0dc9ढ\u05b9հछש";
				break;
			case 247:
				obj = "ॷ\u058bշछף\u0cf4ఉ෬ढ\u05abԸफ़\u05b7\u0cd4ఘ\u0df1त\u05b7պऍ\u05a1ವ\u0c41\u0dc8ढ\u05b7հळ\u05ecೡఉ෬व\u05bdէ\u0952\u05adಯస෪ण\u05abՠऌ\u05ec\u0cfcక\u0df1ऋ\u05b1ոऊר೧ఈඩ७עՕझ\u05f9\u0cfcఔ෫झ\u05aaջच\u05f8\u0cf6ఞ\u0df7\u093e";
				break;
			case 248:
				obj = "\u058bաऌ\u05fd೧ఒ\u0df6न\u0595ձ";
				break;
			case 249:
				obj = "Ԯसפ\u0cf9ఞ\u0dcbब\u05b5ձ\u0952\u05adಯమ\u0df5ऩ\u05b9ՠछ\u05c9\u0cf4ఏ\u0de0";
				break;
			case 250:
				obj = "\u0944\u05c9\u0cf0ఘ෪\u093f\u05b9ՠगע\u0cfbల෨ब\u05bfձऍ\u05cc೧ఉ\u0de4ऴ״Դ\u0944מೡచ\u0df1न״Դ\u0944\u05cc\u0cf6ఏ෬ढ\u05b6Ձऍ\u05ecೲఞ\u0df6ॡ\u05f8Ԯ\u093a\u05ecೡచසत\u05b4ձऍ";
				break;
			case 251:
				obj = "\u05c9\u0cf0ఘ\u0df7न\u05b9էगףೲ";
				break;
			case 252:
				obj = "ಯష\u0de4\u093e\u05ac\u0558छ\u05fb\u0cf0గඩ७ע\u0558छ\u05fb\u0cf0గෆथ\u05b9պङר\u0cd1ఒ\u0df7न\u05bbՠगע\u0cfb\u0c57ඥॷ\u058bշऑ\u05ff\u0cf0\u0c57ඥॷ\u0594յऍ\u05f9\u0cc6ఘ෪\u093f\u05bdՐट\u05f9\u0cf0";
				break;
			case 253:
				obj = "\u0c41ෆथ\u05b1ՠऽץ\u0cf4ఏෆढ\u05adպऊ\u05a1ವ\u0c41\u0dd2ढ\u05aaհऽעೠక\u0df1ॡ\u05f8Ԯ\u093a\u05ecೡఞෆथ\u05b9ՠओ\u05ec\u0cfbబ\u0de4\u093e\u0594յऍ\u05f9\u0cc1చ\u0df0प\u05b0ՠ";
				break;
			case 254:
				obj = "\u0dd5स\u05abռ\u093c\u05f8ೡఏ෪ण\u0599շऊפ\u0cfaక\u0dccउ";
				break;
			case 255:
				obj = "ऌ\u05bbՠगע\u0cfbశ෪ढ\u05bc՝\u093a";
				break;
			case 256:
				obj = "עՄऌע\u0cf8ఔ\u0df1त\u05b7պटס\u0cc1ఞ\u0dfdह״Դ\u0944ם೧ఔ෨ढ\u05acսऑף\u0cf4గ\u0dd1न\u05a0ՠल\u05ec೦ఏ\u0dd0ऽ\u05bcյऊרಹ\u0c5b\u0dbfझ\u05b9էऍ\u05c1ಹ\u0c5b\u0dbfघ\u05abձऌ\u05cf\u0cfcఉ\u0df1थ\u059cյऊרಹ\u0c5b\u0dbfए\u05aaյगף\u0cc5ఔ\u0df2न\u05aaԸफ़\u05b7\u0cd3ఉ෬न\u05b6հऍץ\u0cfcఋඩ७ע՝ऍ\u05ccೠఏ෪\u0900\u05adՠछשಹ\u0c5b\u0dbf\u0901\u05b9էऊ\u05ccೠఏ෪\u0900\u05adՠछ\u05c9\u0cf4ఏ\u0de0ॡ\u05f8Ԯम\u05ff\u0cfaఘ\u0de0\u093e\u05abձच\u05ce\u0cfaక\u0df1न\u05b6ՠसפ\u0cf9ఞ\u0df6";
				break;
			case 257:
				obj = "Օऋ\u05f9\u0cfdఔ\u0df7";
				break;
			case 258:
				obj = "गףೡ";
				break;
			case 259:
				obj = "\u05c4೦ప෫ऌ";
				break;
			case 260:
				obj = "\u0cd1ఔ෫ह\u0597բछ\u05ff೧ఒ\u0de1न\u059cյऐת\u0cf0ఉ";
				break;
			case 261:
				obj = "శ෬ण\u0599ճछ";
				break;
			case 262:
				obj = "ෆथ\u05b1ՠऽץ\u0cf4ఏෆढ\u05adպऊ";
				break;
			case 263:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐ\u05ce\u0cfaక\u0df6ह\u05aaյगףೡఽ෬ड\u05acձऌ\u05c9\u0cf0ఝ෬ण\u05b1ՠगע\u0cfb\u0c41\u0dbf";
				break;
			case 264:
				obj = "\u059cյऊר\u0cd6ఓ\u0de4ह\u05b5յऐך\u0cf4ఈ\u0dc9ब\u05abՠप\u05ecೠజ෭ह";
				break;
			case 265:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbఫ\u0de0\u093f\u05abջऐ\u05ec\u0cf9ఒ\u0df1ऴ\u0594սऍ\u05f9ಯ\u0c41";
				break;
			case 266:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c41\u0dbfऎ\u05b0յऊנ\u0cf4క\u0dbfङ\u05aaաछ\u05b7";
				break;
			case 267:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժ\u093a\u05ecೡచණऎ\u05b0յऊנ\u0cf4క\u0dc7\u093f\u05b9սऐם\u0cfaఌ\u0de0\u093fעԮ";
				break;
			case 268:
				obj = "\u0cd4క\u0df6\u093a\u05bdզपר೭ఏ";
				break;
			case 269:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u059eզगר\u0cfbట\u0df6थ\u05b1դ\u0944\u05b7";
				break;
			case 270:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժलר\u0ce3ఞ෩\u0901\u05b9էऊ\u05ce\u0cfdచ෫प\u05bdՐग\u05ff\u0cf0ఘ\u0df1त\u05b7պ\u0944\u05b7";
				break;
			case 271:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐ\u05ce\u0cfaక\u0df1न\u05b6ՠसפ\u0cf9ఞවण\u05acզइ\u05b7ಯ";
				break;
			case 272:
				obj = "֍էछ\u05ff\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 273:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbఫ\u0df0\u093e\u05b0Ֆऋ\u05f9ೡఔ෫ऌ\u05bbՠगע\u0cfb\u0c41\u0dbf";
				break;
			case 274:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55\u0dd2न\u05ba\u0557ऑף\u0cfbఞ෦ह\u05b1ջऐן\u0cf0ఈ\u0df0ड\u05acԮ\u0944";
				break;
			case 275:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժ\u093a\u05ecೡచණझ\u05bdզऍע\u0cfbచ෩त\u05acխ\u0944\u05b7\u0cc5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfcॷ\u058cզऋרಯ";
				break;
			case 276:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05c9\u0cf4ఏ\u0de4\u0963ֈձऌ\u05fe\u0cfaక\u0de4ड\u05b1ՠइ\u05a6\u0cc6ఞ\u0df7त\u05b9ոर\u05f8\u0cf8ఙ\u0de0\u093fֈզऑשೠఘ\u0de0\u093fעԮ";
				break;
			case 277:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6Մछ\u05ff೦ఔ෫ब\u05b4սऊ״\u0cc6ఏ\u0de4ह\u05adէ\u0944\u05b7";
				break;
			case 278:
				obj = "\u0dd6ह\u05b9ՠछ";
				break;
			case 279:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐם\u0cf0ఉ\u0df6ढ\u05b6յऒפೡ\u0c02ශब\u05acյसפ\u0cf9ఞ\u0dbfॷ";
				break;
			case 280:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cc5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfcउ\u05b9ՠट\u05b7ಯఫ\u0de0\u093f\u05abջऐ\u05ec\u0cf9ఒ\u0df1ऴ\u059cյऊ\u05ecಯయ\u0df7स\u05bdԮ";
				break;
			case 281:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbన෦न\u05b6յऌפ\u0cfa\u0c41\u0dbf";
				break;
			case 282:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55\u0dd6म\u05bdպट\u05ff\u0cfcఔ\u0dd1न\u05a0ՠ\u093c\u05ec೦ఞ\u0dbfॷ";
				break;
			case 283:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժ\u093a\u05ecೡచණञ\u05bbձऐ\u05ec೧ఒ෪ङ\u05bdլऊ\u05b7ಯ";
				break;
			case 284:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05c9\u0cf4ఏ\u0de4\u0963\u058bշछף\u0cf4ఉ෬ढ\u0591շऑף\u0cc1ఞ\u0dfdहעԮ";
				break;
			case 285:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6Շझר\u0cfbచ\u0df7त\u05b7Հछ\u05f5ೡ\u0c29\u0de0ड\u05b9ՠगע\u0cfb\u0c41\u0dbf";
				break;
			case 286:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժभ\u05ee\u0cf0క\u0de4\u093f\u05b1ջळע\u0cfaట\u0dbfॷ";
				break;
			case 287:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐמ\u0cf6ఞ෫ब\u05aaսऑ\u05cc\u0cf6ఏ෬ढ\u05b6Ԯ\u0944";
				break;
			case 288:
				obj = "\u058bշऑ\u05fd\u0cf0";
				break;
			case 289:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbన෦न\u05b6յऌפ\u0cfaమ\u0df6न\u05aaՕझ\u05f9\u0cfcఔ෫ॷע";
				break;
			case 290:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55ෆढ\u05adպऊר೧\u0c41\u0dbf";
				break;
			case 291:
				obj = "\u05c4೦\u0c3a\u0df0ह\u05b7\u0559ऋ\u05f9\u0cf0ట";
				break;
			case 292:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05c9\u0cf4ఏ\u0de4\u0963\u0599շऊפ\u0cfaక\u0dd0\u093e\u05b9ճछ\u05b7ಯ";
				break;
			case 293:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u0599շऊפ\u0cfaక\u0dbfॷ";
				break;
			case 294:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժ\u093f\u05eeೡఒ෪ण\u059bռटףೲఞ\u0dc9ढ\u05bfԮ\u0944";
				break;
			case 295:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐ\u05cc\u0cf6ఏ෬ढ\u05b6Շझע\u0ce5ఞ\u0dbfॷ";
				break;
			case 296:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cc4కහञ\u05bbձऐ\u05ec೧ఒ෪\u0900\u05b9ՠझץ\u0cd4ఘ\u0df1त\u05aeսऊ״ಯ\u0c41";
				break;
			case 297:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbళ\u0de4\u093f\u05bcգट\u05ff\u0cf0\u0c3a෦ह\u05b1ջऐ\u05b7ಯ";
				break;
			case 298:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55ෆढ\u05bcձश\u05ec೧ట\u0df2ब\u05aaձ\u093f\u05eeೡఒ෪णעԮ";
				break;
			case 299:
				obj = "מ\u0cf6ఞ෫ब\u05aaսऑ\u05fe";
				break;
			case 300:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05c9\u0cf4ఏ\u0de4\u0963ֈյऋ\u05fe\u0cf0ళ\u0de4\u093f\u05bcգट\u05ff\u0cf0\u0c3a෦ह\u05b1ջऐ\u05b7ಯ";
				break;
			case 301:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6Շऑ\u05f8\u0cfbట\u0dcdब\u05aaհउ\u05ec೧ఞහम\u05acսऑףಯ\u0c41";
				break;
			case 302:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժ\u093a\u05ecೡచසत\u05b4ձलע\u0cf6చ\u0df1त\u05b7պ\u0944\u05b7";
				break;
			case 303:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐ\u05ce\u0cfdఒ\u0df1ऎ\u05b0յऊ\u05c1\u0cfcఈ\u0df1\u093eעԮ";
				break;
			case 304:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cd8ఔ෪ऩ\u0594սऍ\u05f9\u0cd6ఔ෫ह\u05b9սऐר೧\u0c41\u0dbf\u0900\u05b7ջच\u05c1\u0cfcఈ\u0df1ॷ\u058cզऋרಯ";
				break;
			case 305:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbశ෪ढ\u05bcԮ\u0944";
				break;
			case 306:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55\u0dc8ढ\u05b7հऽעೠక\u0df1न\u05aaԮ\u0944";
				break;
			case 307:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժ\u093a\u05ecೡచණ\u0900\u05b7ջच\u05c1\u0cf0\u0c0d\u0de0डעԮ";
				break;
			case 308:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05c9\u0cf4ఏ\u0de4\u0963\u0595ջऑש\u0cd8చ\u0df1\u093f\u05b1լ\u0944\u05b7";
				break;
			case 309:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6Փछףೱఞ\u0df7ॷע";
				break;
			case 310:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժळע\u0cfaట\u0dc8ब\u05acզग\u05f5\u0cd0క\u0df1\u093f\u05a1Ԯ\u0944";
				break;
			case 311:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐ׀\u0cfaఔ\u0de1\u0901\u05b1էऊ\u05b7ಯ";
				break;
			case 312:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cd4ఘ\u0df1त\u05b7պम\u05ff\u0cfaట\u0df0म\u05bdզ\u093aר\u0cf3ఒ෫त\u05acսऑףಯ\u0c41";
				break;
			case 313:
				obj = "՝झע\u0cfb";
				break;
			case 314:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॹ\u05ecՋऽע\u0cfbఈ\u0df1\u093f\u05b9սऐ\u05f9\u0cd3ఒ෩ह\u05bdզ\u093aר\u0cf3ఒ෫त\u05acսऑף";
				break;
			case 315:
				obj = "ך೧ఒ\u0df1न\u05ecԡड\u05cc೧ఉ\u0de4ऴ\u0597ղमר೧ఈ෪ण\u05b9ոग\u05f9೬";
				break;
			case 316:
				obj = "\u0cc2ఉ෬ह\u05bdԠ\u0948ג\u0cd6ఓ\u0de4ह\u05b5յऐ";
				break;
			case 317:
				obj = "బ\u0df7त\u05acձ\u094a\u05ba\u0ccaస෭ब\u05acչटף\u0cd7ఉ\u0de4त\u05b6Մऑ\u05fa\u0cf0ఉ";
				break;
			case 318:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05b9ಭతෆथ\u05b9ՠओ\u05ec\u0cfbఽ\u0df7त\u05bdպच\u05fe\u0cfdఒ\u0df5";
				break;
			case 319:
				obj = "च\u05aaսऊרಡ\u0c42\u0dda\u0901\u05bdբछס\u0cd9చ\u0df6ह\u059bռटףೲఞශत\u05aaձझ\u05f9\u0cfcఔ෫";
				break;
			case 320:
				obj = "֏զग\u05f9\u0cf0\u0c4eඵऒ\u059bջऐ\u05f9\u0cf0క\u0df1ऋ\u05b1ոछ\u05c8\u0cfbఏ\u0df7ऴ";
				break;
			case 321:
				obj = "ՃऌפೡఞධॼևՄऋ\u05fe\u0cfdహ\u0df0ह\u05acջऐ\u05cc\u0cf6ఏ෬ढ\u05b6";
				break;
			case 322:
				obj = "\u093aע\u0cfbఏ\u0dd5\u093f\u05b7հऋ\u05ee\u0cf0\u0c3a෦ह\u05b1ջऐ\u05fe\u0cc6ఏ\u0de4\u093f\u05ac՜ऑ\u05f8೧";
				break;
			case 323:
				obj = "ך೧ఒ\u0df1न\u05edԦडך\u0cf0ఙෆढ\u05b6պछ\u05eeೡఒ෪ण֊ձऍ\u05f8\u0cf9ఏ";
				break;
			case 324:
				obj = "\u0cc2ఉ෬ह\u05bdԡ\u094dג\u0cc5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfc";
				break;
			case 325:
				obj = "బ\u0df7त\u05acձ\u094b\u05b9\u0ccaన\u0de0\u093f\u05b1յऒ׃ೠఖ෧न\u05aaՄऌעೱఎ෦न\u05aa";
				break;
			case 326:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05b8ಠత\u0dd5न\u05aaէऑף\u0cf4గ෬ह\u05a1Շऊ\u05ecೡఎ\u0df6";
				break;
			case 327:
				obj = "च\u05aaսऊרಠ\u0c4d\u0ddaझ\u05bdզऍע\u0cfbచ෩त\u05acխ\u093a\u05ecೡచසत\u05b4ձ";
				break;
			case 328:
				obj = "֏զग\u05f9\u0cf0\u0c4e\u0db2ऒֈձऌ\u05fe\u0cfaక\u0de4ड\u05b1ՠइ\u05c9\u0cf4ఏ\u0de4";
				break;
			case 329:
				obj = "Ճछׯ\u0cdc\u0c3f";
				break;
			case 330:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॸנՋभ\u05ee\u0cf0క\u0de4\u093f\u05b1ջ";
				break;
			case 331:
				obj = "ך೧ఒ\u0df1न\u05edԭडמ\u0cf6ఞ෫ब\u05aaսऑי\u0cf0\u0c03\u0df1ए\u05b9էछ";
				break;
			case 332:
				obj = "\u0cc2ఉ෬ह\u05bdԢ\u094eג\u0cc6ఘ\u0de0ण\u05b9զगע\u0cc1ఞ\u0dfdह";
				break;
			case 333:
				obj = "\u0c3f\u0df0\u093f\u05b9ՠगע\u0cfb";
				break;
			case 334:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bbತత\u0dd6म\u05bdպट\u05ff\u0cfcఔ\u0dccम\u05b7պपר೭ఏ";
				break;
			case 335:
				obj = "च\u05aaսऊרಣ\u0c49\u0ddaञ\u05bbձऐ\u05ec೧ఒ෪ङ\u05bdլऊן\u0cf0గ\u0de4ह\u05b1ջऐ";
				break;
			case 336:
				obj = "֏զग\u05f9\u0cf0\u0c4dබऒ\u058bշछף\u0cf4ఉ෬ढ\u0595ջऑש";
				break;
			case 337:
				obj = "ՃऌפೡఞඳॹևՇझר\u0cfbచ\u0df7त\u05b7Օझ\u05f9\u0cfcఔ෫";
				break;
			case 338:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॻ\u05edՋभ\u05ee\u0cf0క\u0de4\u093f\u05b1ջफ\u05fe\u0cf0ఉහम\u05acսऑף";
				break;
			case 339:
				obj = "ך೧ఒ\u0df1न\u05eeԢड\u05ce\u0cfaఎ෫ह\u05bdզ";
				break;
			case 340:
				obj = "\u0cc2ఉ෬ह\u05bdԢ\u0949ג\u0cd4ఘ\u0df1त\u05b7պफ\u05fe\u0cf4జ\u0de0";
				break;
			case 341:
				obj = "బ\u0df7त\u05acձ\u0948\u05b5\u0ccaస෭ब\u05acչटף\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 342:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05bbಬతහम\u05acսऑף\u0cd6ఓ\u0de4ण\u05bfձलעೲ";
				break;
			case 343:
				obj = "च\u05aaսऊרಢ\u0c4b\u0ddaऌ\u05bbՠगע\u0cfbన෦ढ\u05a8ձ";
				break;
			case 344:
				obj = "֏զग\u05f9\u0cf0\u0c4cපऒ։պ\u093fמ\u0cf6ఞ෫ब\u05aaսऑ׀\u0cf4ఏ෦थ\u0599շऊפ\u0ce3ఒ\u0df1ऴ";
				break;
			case 345:
				obj = "Ճऌפೡఞ\u0db2ॿև՜ट\u05ffೱఌ\u0de4\u093f\u05bdՕझ\u05f9\u0cfcఔ෫";
				break;
			case 346:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॺ\u05ebՋऽעೱఞ\u0dcdब\u05aaհउ\u05ec೧ఞහम\u05acսऑף";
				break;
			case 347:
				obj = "ך೧ఒ\u0df1नׯԠडם\u0cf4ఎ\u0df6न\u0590յऌש\u0ce2చ\u0df7न\u0599շऊפ\u0cfaక";
				break;
			case 348:
				obj = "\u0cd0\u0c0d\u0de0ण\u05acՀइ\u05fd\u0cf0";
				break;
			case 349:
				obj = "బ\u0df7त\u05acձ\u0949\u05b8\u0ccaన෪स\u05b6հश\u05ec೧ట\u0df2ब\u05aaձ\u093f\u05eeೡఒ෪ण";
				break;
			case 350:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05baಣతශब\u05acյसפ\u0cf9ఞ\u0dc9ढ\u05bbյऊפ\u0cfaక";
				break;
			case 351:
				obj = "च\u05aaսऊרಢ\u0c4c\u0ddaऎ\u05b0սऊ\u05ce\u0cfdచ\u0df1\u0901\u05b1էऊ\u05fe";
				break;
			case 352:
				obj = "֏զग\u05f9\u0cf0\u0c4cලऒ\u0595ջऑש\u0cd9ఒ\u0df6ह";
				break;
			case 353:
				obj = "\u0559ऑעೱశ\u0de4ह\u05aaսआ\u05c8\u0cfbఏ\u0df7त\u05bdէ";
				break;
			case 354:
				obj = "ऩ\u05ff\u0cfcఏ\u0de0ॺסՋळע\u0cfaట";
				break;
			case 355:
				obj = "ך೧ఒ\u0df1नנԤड׀\u0cfaఔ\u0de1ऎ\u05b7աऐ\u05f9\u0cf0ఉ";
				break;
			case 356:
				obj = "\u0cc2ఉ෬ह\u05bdԬ\u094fג\u0cd8ఔ෪ऩ\u0594ձईר\u0cf9";
				break;
			case 357:
				obj = "బ\u0df7त\u05acձ\u0946\u05bf\u0ccaశ෪ढ\u05bc\u0559ट\u05f9೧ఒ\u0dfd";
				break;
			case 358:
				obj = "\u0dd2\u093f\u05b1ՠछ\u05b5ದతෂन\u05b6հछ\u05ff";
				break;
			case 359:
				obj = "च\u05aaսऊרಭ\u0c4f\u0dda\u0900\u05b7ջच׀\u0cf4ఏ\u0df7त\u05a0Ցऐ\u05f9೧\u0c02";
				break;
			case 360:
				obj = "֏զग\u05f9\u0cf0\u0c43ධऒ\u0599զऌ\u05ec೬ఴ\u0de3\u0900\u05b7ջच";
				break;
			case 361:
				obj = "ՃऌפೡఞලॻևՕझ\u05f9\u0cfcఔ෫झ\u05aaջच\u05f8\u0cf6ఞ\u0df7उ\u05bdղगף\u0cfcఏ෬ढ\u05b6";
				break;
			case 362:
				obj = "म\u05ff\u0cfaఖ෪ह\u05b1ջऐ\u05ec\u0cf9య\u0de0व\u05ac";
				break;
			case 363:
				obj = "\u05c9\u0cfaక\u0df1झ\u05aaջच\u05f8\u0cf6ఞහम\u05acսऑף೦\u0c3e෫ऩ\u0590ջऋ\u05ff";
				break;
			case 364:
				obj = "\u0cc5చ\u0df6\u093e\u0594";
				break;
			case 365:
				obj = "భ\u0de0\u093f\u05abսऑף";
				break;
			case 366:
				obj = "ෆढ\u05b6էऊ\u05ff\u0cf4ఒ෫ह\u059eսऒ\u05f9\u0cf0ఉ\u0df6";
				break;
			case 367:
				obj = "ञ\u05adնऍ\u05ee೧ఒ\u0df5ह\u05b1ջऐ\u05c1\u0cf0\u0c0d\u0de0ड";
				break;
			case 368:
				obj = "\u058bդछ\u05ee\u0cfcచ෩ऌ\u05bbՠगע\u0cfbస෪ऩ\u05bd";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴃ = (char[])(object)Ⴍ.Ⴃ;
			int num2 = ⴃ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴃ[(num3 + Ⴓ) % num2]);
			}
			result = new string(array);
			Ⴃ[num] = result;
			return result;
		}

		static Ⴍ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴍ.Ⴃ = (string[])(object)array;
			Ⴃ = new string[369];
		}
	}
	internal sealed class Ⴓ
	{
		private static readonly char[] Ⴀ;

		private static readonly string[] Ⴅ;

		internal static string ႰႷ(int Ⴓ)
		{
			int num = Ⴓ ^ 0x6C9047A4;
			string result;
			if ((result = Ⴅ[num]) != null)
			{
				return result;
			}
			object obj;
			switch (num)
			{
			default:
				obj = null;
				break;
			case 0:
				obj = "";
				break;
			case 1:
				obj = "\u0557ऑף೦ఏ\u0df7ब\u05b1պऊ\u05cb\u0cfcగ\u0df1न\u05aaՐछ\u05eb\u0cfcక෬ह\u05b1ջऐ";
				break;
			case 2:
				obj = "\u093f\u05ff೧చ\u0dfc\u0902־Մछ\u05ff೦ఔ෫ब\u05b4սऊ״";
				break;
			case 3:
				obj = "ם\u0cf0ఉ\u0df6ढ\u05b6յऒפೡ\u0c02";
				break;
			case 4:
				obj = "\u0cd6ఓ\u0de4ह\u05b5յऐ";
				break;
			case 5:
				obj = "స෭ब\u05acչटף\u0cd7ఉ\u0de4त\u05b6Մऑ\u05fa\u0cf0ఉ";
				break;
			case 6:
				obj = "ෆथ\u05b9ՠओ\u05ec\u0cfbఽ\u0df7त\u05bdպच\u05fe\u0cfdఒ\u0df5";
				break;
			case 7:
				obj = "\u0901\u05bdբछס\u0cd9చ\u0df6ह\u059bռटףೲఞශत\u05aaձझ\u05f9\u0cfcఔ෫";
				break;
			case 8:
				obj = "\u059bջऐ\u05f9\u0cf0క\u0df1ऋ\u05b1ոछ\u05c8\u0cfbఏ\u0df7ऴ";
				break;
			case 9:
				obj = "Մऋ\u05fe\u0cfdహ\u0df0ह\u05acջऐ\u05cc\u0cf6ఏ෬ढ\u05b6";
				break;
			case 10:
				obj = "ऩר\u0cf7స෪ण\u05b6ձझ\u05f9\u0cfcఔ෫ट\u05bdէऋסೡ";
				break;
			case 11:
				obj = "מ\u0cf0ఉ෬ब\u05b4՚ऋנ\u0cf7ఞ\u0df7झ\u05aaջच\u05f8\u0cf6ఞ\u0df7";
				break;
			case 12:
				obj = "\u0cc5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfcञ\u05acյऊ\u05f8೦";
				break;
			case 13:
				obj = "ఫ\u0de0\u093f\u05abջऐ\u05ec\u0cf9ఒ\u0df1ऴ\u059cյऊ\u05ec\u0cd3ఒ෩न";
				break;
			case 14:
				obj = "\u0dd5न\u05aaէऑף\u0cf4గ෬ह\u05a1Րट\u05f9\u0cf4";
				break;
			case 15:
				obj = "ञ\u05bbձऐ\u05ec೧ఒ෪";
				break;
			case 16:
				obj = "\u058bշछף\u0cf4ఉ෬ढ\u058cձआ\u05f9\u0cd7చ\u0df6न";
				break;
			case 17:
				obj = "Շझר\u0cfbచ\u0df7त\u05b7Հछ\u05f5ೡ";
				break;
			case 18:
				obj = "भ\u05ee\u0cf0క\u0de4\u093f\u05b1ջष\u05ee\u0cfaక\u0dd1न\u05a0ՠ";
				break;
			case 19:
				obj = "מ\u0cf6ఞ෫ब\u05aaսऑי\u0cf0\u0c03\u0df1ट\u05bdոट\u05f9\u0cfcఔ෫";
				break;
			case 20:
				obj = "\u0cc6ఘ\u0de0ण\u05b9զगע\u0cd8ఔ෪ऩ";
				break;
			case 21:
				obj = "న෦न\u05b6յऌפ\u0cfa\u0c3a෦ह\u05b1ջऐ";
				break;
			case 22:
				obj = "\u0dd6म\u05bdպट\u05ff\u0cfcఔ\u0dd0\u093e\u05bdզ\u093f\u05eeೡఒ෪ण";
				break;
			case 23:
				obj = "ऎ\u05b7աऐ\u05f9\u0cf0ఉ";
				break;
			case 24:
				obj = "\u0599շऊפ\u0cfaక\u0dd0\u093e\u05b9ճछ";
				break;
			case 25:
				obj = "\u0557ख\u05ecೡఖ\u0de4ण\u0599շऊפ\u0cfaక";
				break;
			case 26:
				obj = "\u093f\u05eeೡఒ෪ण\u059bռटףೲఞ\u0dc9ढ\u05bf";
				break;
			case 27:
				obj = "\u05cc\u0cf6ఏ෬ढ\u05b6Շझע\u0ce5ఞ";
				break;
			case 28:
				obj = "\u0cc4కහञ\u05bbձऐ\u05ec೧ఒ෪\u0900\u05b9ՠझץ\u0cd4ఘ\u0df1त\u05aeսऊ״";
				break;
			case 29:
				obj = "ళ\u0de4\u093f\u05bcգट\u05ff\u0cf0\u0c3a෦ह\u05b1ջऐ";
				break;
			case 30:
				obj = "ෆढ\u05bcձश\u05ec೧ట\u0df2ब\u05aaձ\u093f\u05eeೡఒ෪ण";
				break;
			case 31:
				obj = "झ\u05b9աऍר\u0cddచ\u0df7ऩ\u05afյऌר\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 32:
				obj = "\u058bջऋףೱళ\u0de4\u093f\u05bcգट\u05ff\u0cf0\u0c3a෦ह\u05b1ջऐ";
				break;
			case 33:
				obj = "Րट\u05f9\u0cf4ఽ෬ड\u05bd\u0558ऑ\u05ee\u0cf4ఏ෬ढ\u05b6";
				break;
			case 34:
				obj = "ऽץ\u0cfcఏෆथ\u05b9ՠलפ೦ఏ\u0df6";
				break;
			case 35:
				obj = "׀\u0cfaఔ\u0de1\u0901\u05b1էऊ";
				break;
			case 36:
				obj = "\u0cd8ఔ෪ऩ";
				break;
			case 37:
				obj = "శ෪ढ\u05bc\u0557ऑ\u05f8\u0cfbఏ\u0de0\u093f";
				break;
			case 38:
				obj = "\u0dc8ढ\u05b7հलר\u0ce3ఞ෩";
				break;
			case 39:
				obj = "\u0900\u05b7ջच׀\u0cf4ఏ\u0df7त\u05a0";
				break;
			case 40:
				obj = "\u059fձऐש\u0cf0ఉ";
				break;
			case 41:
				obj = "\u0559ऑעೱశ\u0de4ह\u05aaսआ\u05c8\u0cfbఏ\u0df7ऴ";
				break;
			case 42:
				obj = "\u093f\u05ff೧చ\u0dfc\u0902־\u0559ऑעೱ";
				break;
			case 43:
				obj = "\u05cc\u0cf6ఏ෬ढ\u05b6Մऌעೱఎ෦न\u05aaՐछ\u05eb\u0cfcక෬ह\u05b1ջऐ";
				break;
			case 44:
				obj = "\u0cdc\u0c3f";
				break;
			case 45:
				obj = "\u0c3f\u0de0\u093e\u05bbզग\u05fdೡఒ෪ण";
				break;
			case 46:
				obj = "\u0dd2न\u05ba՝\u093a";
				break;
			case 47:
				obj = "ऌ\u05adՠखע೧";
				break;
			case 48:
				obj = "֍դच\u05ecೡఞශब\u05acձ";
				break;
			case 49:
				obj = "ԥॐ\u05bd";
				break;
			case 50:
				obj = "रע\u0cdcక\u0df1न\u05b6էग\u05f9೬";
				break;
			case 51:
				obj = "\u05c4೦\u0c29\u0de0ब\u05bc՛ऐס೬";
				break;
			case 52:
				obj = "\u0cd3ఉ෪ठ\u0595ջऑש";
				break;
			case 53:
				obj = "స෪\u093f\u05aaձऒ\u05ecೡఒ෪ण";
				break;
			case 54:
				obj = "\u0dc8त\u05b6Օङר";
				break;
			case 55:
				obj = "\u0900\u05b7ջच׀\u0cf4ఏ\u0df7त\u05a0Ցऐ\u05f9೧ఒ\u0de0\u093e";
				break;
			case 56:
				obj = "\u058cջऊ\u05ec\u0cf9స෪स\u05b6ՠछ\u05ff";
				break;
			case 57:
				obj = "Րट״೦మ\u0df6न\u05bc";
				break;
			case 58:
				obj = "र\u05ec\u0cf8ఞ";
				break;
			case 59:
				obj = "׃\u0cfaక\u0de0";
				break;
			case 60:
				obj = "\u0cd4గ෩ऎ\u05b0սऊ\u05ce\u0cfdచ\u0df1\u093e";
				break;
			case 61:
				obj = "\u0c3f෪\u093a\u05b6ոऑ\u05ecೱఞ\u0de1ऎ\u05b0սऊ\u05ce\u0cfdచ\u0df1\u093e";
				break;
			case 62:
				obj = "\u0dd6थ\u05b9զछש\u0cd6ఓ෬ह\u059bռट\u05f9೦";
				break;
			case 63:
				obj = "\u0900\u05a1\u0557खפೡస෭ब\u05acէ";
				break;
			case 64:
				obj = "\u058bՠट\u05ffೡ";
				break;
			case 65:
				obj = "Րऋ\u05ff\u0cf4ఏ෬ढ\u05b6";
				break;
			case 66:
				obj = "म\u05ec೧చ෨न\u05acձऌ";
				break;
			case 67:
				obj = "ןೠక\u0dd2न\u05baՇछ\u05ec೧ఘ෭";
				break;
			case 68:
				obj = "\u0cd6ఔ෫फ\u05b1զओך\u0cf0ఙ\u0dd6न\u05b9զझץ\u0cc2ఒ\u0df1थ։";
				break;
			case 69:
				obj = "ఫ෩ब\u05a1Փटנ\u0cf0ఈ";
				break;
			case 70:
				obj = "\u0dcbन\u05af\u0557खפೡస෭ब\u05ac";
				break;
			case 71:
				obj = "ऊ\u05b7Հऑ׀೬స෭ब\u05acչटף";
				break;
			case 72:
				obj = "\u0599պऍ\u05fa\u0cf0ఉ\u0dd4स\u05bdէऊפ\u0cfaక";
				break;
			case 73:
				obj = "Հछ\u05ec\u0cf6ఓ\u0dd4\u0902\u05aaՇछ\u05ec೧ఘ෭च\u05bdնऩפೡఓ\u0dd4";
				break;
			case 74:
				obj = "फ\u05fe\u0cf0ఉ\u0dd5\u093f\u05b7ղगס\u0cf0";
				break;
			case 75:
				obj = "ך\u0cfdచ\u0df1\u093e\u0595խर\u05ec\u0cf8ఞ";
				break;
			case 76:
				obj = "\u0cc6ఓ෪\u093a\u058bդऑ\u05ffೡఈ";
				break;
			case 77:
				obj = "న෭ढ\u05af՜ऑנ\u0cf0ఌ෪\u093f\u05b3";
				break;
			case 78:
				obj = "හस\u05bcսऑ";
				break;
			case 79:
				obj = "ऌ\u05bbՠगע\u0cfbఈ";
				break;
			case 80:
				obj = "\u059cյगס೬\u0c3a\u0df3न\u05aaյङר";
				break;
			case 81:
				obj = "\u0558ट\u05feೡమ\u0df6न\u059cյऊר";
				break;
			case 82:
				obj = "ष\u05fe\u0cc5ఉ෬\u093b\u05b9ՠछ";
				break;
			case 83:
				obj = "מ\u0cf6ఔ\u0df5न";
				break;
			case 84:
				obj = "\u0cc6ఋ\u0de0म\u05b1յऒ\u05cc\u0cf6ఏ෬ढ\u05b6\u0557ऑש\u0cf0";
				break;
			case 85:
				obj = "న\u0de0\u093f\u05b1յऒ׃ೠఖ෧न\u05aaՁऍרೱఽ෪\u093f\u059cջउף\u0cf9ఔ\u0de4ऩ";
				break;
			case 86:
				obj = "\u0dcc\u093e\u0595խ";
				break;
			case 87:
				obj = "ऌ\u05b6էउר೧య\u0de0व\u05ac";
				break;
			case 88:
				obj = "\u0599շऊפ\u0cfaక";
				break;
			case 89:
				obj = "Օझ\u05f9\u0cfcఔ෫\u0900\u05b7ջच\u05c4\u0cd1";
				break;
			case 90:
				obj = "\u093a\u05ecೡచ";
				break;
			case 91:
				obj = "ן\u0cf0గ\u0de4ह\u05b1ջऐ";
				break;
			case 92:
				obj = "\u0cddచ\u0df6ञ\u05acյऌ";
				break;
			case 93:
				obj = "\u0c29\u0de0\u093c\u05adսऌר\u0cd4ట\u0de1त\u05acսऑף\u0cf4గ\u0dd5थ\u05aaյऍר";
				break;
			case 94:
				obj = "\u0dc8ब\u05acշखך\u0cfaఉ\u0de1";
				break;
			case 95:
				obj = "उ\u05bdոछ\u05f9\u0cf0ట";
				break;
			case 96:
				obj = "\u058cջऎם\u0cfdఉ\u0de4\u093e\u05bd՝\u093a";
				break;
			case 97:
				obj = "Ցईר\u0cfbఏ\u0dd1ऴ\u05a8ձ";
				break;
			case 98:
				obj = "शפೲఓ\u0dd5\u093f\u05b1ջऌפೡ\u0c02";
				break;
			case 99:
				obj = "\u05c4೦ప෫ऌ";
				break;
			case 100:
				obj = "\u0cd1ఔ෫ह\u0597բछ\u05ff೧ఒ\u0de1न\u059cյऐת\u0cf0ఉ";
				break;
			case 101:
				obj = "మ\u0df6न\u05aaՕझ\u05f9\u0cfcఔ෫";
				break;
			case 102:
				obj = "\u0dcc\u0900\u0595խभ\u05f9\u0cf4ఏ\u0df0\u093e\u059bռटףೲఞ";
				break;
			case 103:
				obj = "ऄ\u05bbջऐ";
				break;
			case 104:
				obj = "\u0591\u0559लעೲఒ෫";
				break;
			case 105:
				obj = "՝ळמ\u0cf0ఈ\u0df6त\u05b7պभ\u05f9\u0cf4ఉ\u0df1न\u05bc";
				break;
			case 106:
				obj = "पר೭ఏ";
				break;
			case 107:
				obj = "\u05c4\u0cd8య\u0de0व\u05acՀइ\u05fd\u0cf0ట";
				break;
			case 108:
				obj = "\u0cdcశ\u0dd1न\u05a0ՠऱ\u05f8ೡ";
				break;
			case 109:
				obj = "ల\u0dc8\u0903\u05adհङר\u0cc7ఞ෦न\u05b1բछש";
				break;
			case 110:
				obj = "\u0dcc\u0900\u059eսऒר\u0cc7ఞ෦न\u05b1բछש";
				break;
			case 111:
				obj = "ऄ\u0595Օऋש\u0cfcఔ\u0dd3त\u05bcձऑ\u05c4\u0cfb\u0c0d෬ह\u05b9ՠगע\u0cfb\u0c29\u0de0म\u05bdսईרೱ";
				break;
			case 112:
				obj = "\u0591\u0559नפೱఞ෪ऄ\u05b6բग\u05f9\u0cf4ఏ෬ढ\u05b6Նछ\u05ee\u0cf0ఒ\u0df3न\u05bc";
				break;
			case 113:
				obj = "՝ळמ\u0cf0ఈ\u0df6त\u05b7պऩפ\u0cfbట෪\u093a\u058bՠट\u05ffೡశ෪\u093b\u05bd";
				break;
			case 114:
				obj = "ष׀\u0cc6ఞ\u0df6\u093e\u05b1ջऐך\u0cfcక\u0de1ढ\u05afՑऐש\u0cd8ఔ\u0df3न";
				break;
			case 115:
				obj = "\u05c4\u0cd8మ\u0df7ड֊ձझר\u0cfc\u0c0d\u0de0ऩ";
				break;
			case 116:
				obj = "\u0cdcశ\u0dd0\u093f\u05b4Շछףೡ";
				break;
			case 117:
				obj = "ల\u0dc8ञ\u05bdէऍפ\u0cfaక\u0dd2त\u05b6հऑ\u05fa\u0cd4ఘ\u0df1त\u05aeյऊר";
				break;
			case 118:
				obj = "\u0dcc\u0900\u058bձऍ\u05fe\u0cfcఔ෫च\u05b1պचע\u0ce2\u0c3f\u0de0ब\u05bbՠग\u05fb\u0cf4ఏ\u0de0";
				break;
			case 119:
				obj = "ऄ\u0595Շऑ\u05ebೡఌ\u0de4\u093f\u05bd\u0557ऑף\u0cfbఞ෦ह\u05b1ջऐ\u05c2ೞ";
				break;
			case 120:
				obj = "֎ձऌ\u05fe\u0cfcఔ෫";
				break;
			case 121:
				obj = "՝ळמ\u0cfaఝ\u0df1\u093a\u05b9զछ\u05ce\u0cfaక෫न\u05bbՠगע\u0cfbఫ\u0de0ण\u05bcսऐת";
				break;
			case 122:
				obj = "\u093bףೲఒ෫न֎ձऌ\u05fe\u0cfcఔ෫";
				break;
			case 123:
				obj = "\u05c4\u0cd8న෪फ\u05acգट\u05ff\u0cf0స෪ण\u05b6ձझ\u05f9\u0cfcఔ෫ऋ\u05b9սऒרೱ";
				break;
			case 124:
				obj = "\u0cc6ఘ\u0de0ण\u05b9զगע೦";
				break;
			case 125:
				obj = "ల\u0dc8ञ\u05b7ղऊ\u05fa\u0cf4ఉ\u0de0ऎ\u05b7պऐר\u0cf6ఏ෬ढ\u05b6Նछ\u05ebೠఈ\u0de0ऩ";
				break;
			case 126:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժ\u093b\u05fb\u0cf0క\u0df1\u093e\u05f6Ցईר\u0cfbఏ\u0dd1ऴ\u05a8ձ";
				break;
			case 127:
				obj = "ऎ\u05b7պऍ\u05f9೧చ෬ण\u05acՒगסೡఞ\u0df7\u093e";
				break;
			case 128:
				obj = "\u059eսऒר\u0cdbచ෨न";
				break;
			case 129:
				obj = "Ւगס\u0cf0\u0c29\u0de0ड\u05bdբटף\u0cf6ఞ";
				break;
			case 130:
				obj = "\u093f\u05eeೡఒ෪णֈզऑשೠఘ\u0de0\u093f";
				break;
			case 131:
				obj = "ט\u0cfbగ෪ब\u05bcձच";
				break;
			case 132:
				obj = "\u0cd9ఔ\u0de4ऩ\u05bdհ";
				break;
			case 133:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6Մछ\u05ff೦ఔ෫ब\u05b4սऊ״\u0cc6ఏ\u0de4ह\u05adէ";
				break;
			case 134:
				obj = "\u0dc9ब\u05b6ճऋ\u05ecೲఞ";
				break;
			case 135:
				obj = "ऎ\u05aaձट\u05f9\u0cfcఔ෫उ\u05b9ՠछ";
				break;
			case 136:
				obj = "\u0591էशפೱట\u0de0ण";
				break;
			case 137:
				obj = "Րछ\u05ee\u0cfaఉ\u0de4ह\u05b1ջऐ\u05c4\u0cf8చ\u0de2न\u05abՕऌ\u05ff\u0cf4\u0c02";
				break;
			case 138:
				obj = "गףೡ";
				break;
			case 139:
				obj = "מೡచ\u0df1न";
				break;
			case 140:
				obj = "\u0cd1చ\u0df1ब\u059eսऒר೦";
				break;
			case 141:
				obj = "శ\u0df0ह\u05bd";
				break;
			case 142:
				obj = "\u0dd6स\u05aaդऌפ೦ఞ\u0dc8न";
				break;
			case 143:
				obj = "ऎ\u05b0ջऑ\u05fe\u0cf0\u0c3a෦ह\u05b1ջऐ";
				break;
			case 144:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cc5ఎ\u0df6थ\u059aաऊ\u05f9\u0cfaకහम\u05acսऑף";
				break;
			case 145:
				obj = "՝ऐ\u05ee೧ఞ\u0de4\u093e\u05b1պङ";
				break;
			case 146:
				obj = "\u093aר\u0cf6ఉ\u0de0ब\u05abսऐת";
				break;
			case 147:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժ\u093a\u05ecೡచණ\u0901\u05bdբछס\u0cd9చ\u0df6ह\u059bռटףೲఞශत\u05aaձझ\u05f9\u0cfcఔ෫";
				break;
			case 148:
				obj = "\u0cd9ఞ\u0df3न\u05b4\u0557ख\u05ec\u0cfbజ\u0de0उ\u05b1զछ\u05eeೡఒ෪ण";
				break;
			case 149:
				obj = "న෦ढ\u05aaձ";
				break;
			case 150:
				obj = "ෆथ\u05b1ՠऽץ\u0cf4ఏෆढ\u05adպऊ";
				break;
			case 151:
				obj = "उ\u05b9ՠछ\u05ce\u0cfdచ\u0df1ठ\u05b9պऩ\u05ec೦ష\u0de4\u093e\u05acՀट\u05f8ೲఓ\u0df1";
				break;
			case 152:
				obj = "עՄछ\u05ff೦ఔ෫ब\u05b4սऊ״";
				break;
			case 153:
				obj = "Ԯ\u093f\u05ff೧చ\u0dfc\u0902־Մछ\u05ff೦ఔ෫ब\u05b4սऊ״";
				break;
			case 154:
				obj = "ऽץ\u0cf4ఏ෨ब\u05b6՚टנ\u0cf0";
				break;
			case 155:
				obj = "\u05ce\u0cfdచ\u0df1ठ\u05b9պ\u093cפ೧ఏ෭उ\u05b9ՠछ";
				break;
			case 156:
				obj = "ಯస෭ब\u05acչटף\u0cd7ఉ\u0de4त\u05b6Մऑ\u05fa\u0cf0ఉ";
				break;
			case 157:
				obj = "\u0c41\u0dc9न\u05aeձऒ\u05c1\u0cf4ఈ\u0df1ऎ\u05b0յऐת\u0cf0\u0c3f෬\u093f\u05bdշऊפ\u0cfaక";
				break;
			case 158:
				obj = "\u0dbfझ\u05adէख\u05cfೠఏ\u0df1ढ\u05b6Օझ\u05f9\u0cfcఔ෫";
				break;
			case 159:
				obj = "झ\u05adէख\u05cfೠఏ\u0df1ढ\u05b6Օझ\u05f9\u0cfcఔ෫ऄ\u059c";
				break;
			case 160:
				obj = "עՄछ\u05ff೦ఔ෫ब\u05b4սऊ״\u0cc6ఏ\u0de4ह\u05adէ";
				break;
			case 161:
				obj = "Րऑףೡఫ\u0df7ढ\u05bcաझר\u0cd4ఘ\u0df1त\u05b7պऍמೡచ\u0df7ह\u0590ջऋ\u05ff";
				break;
			case 162:
				obj = "\u0944ם\u0cf0ఉ\u0df6ढ\u05b6յऒפೡ\u0c02ශब\u05acյ";
				break;
			case 163:
				obj = "\u05c9\u0cfaక\u0df1झ\u05aaջच\u05f8\u0cf6ఞහम\u05acսऑף೦\u0c3e෫ऩ\u0590ջऋ\u05ff";
				break;
			case 164:
				obj = "ಯన෦न\u05b6յऌפ\u0cfaయ\u0de0व\u05acՖट\u05fe\u0cf0";
				break;
			case 165:
				obj = "బ\u0de0य֍էछ\u05ff\u0cdbచ෨न";
				break;
			case 166:
				obj = "\u0dbfञ\u05bbձऐ\u05ec೧ఒ෪ऄ\u05bbջऐי\u0cf0\u0c03\u0df1";
				break;
			case 167:
				obj = "झ\u05aaջच\u05f8\u0cf6ఏ\u0dcbस\u05b5նछ\u05ff";
				break;
			case 168:
				obj = "עՇझר\u0cfbచ\u0df7त\u05b7\u0559ऑעೱ";
				break;
			case 169:
				obj = "Շऋׯ೦ఘ\u0df7त\u05a8ՠगע\u0cfbష\u0de0\u093b\u05bdո";
				break;
			case 170:
				obj = "\u0944מ\u0cf6ఞ෫ब\u05aaսऑט೦ఞ\u0df7ऌ\u05bbՠगע\u0cfb";
				break;
			case 171:
				obj = "\u05b7\u0cd4ఘ\u0df1त\u05b7պफ\u05fe\u0cf4జ\u0de0";
				break;
			case 172:
				obj = "\u0cd9చ\u0df6ह\u0595ջऑש\u0cc0ఈ\u0de0ऩ\u0591պरר\u0ce2బ෪\u093f\u05bcէ";
				break;
			case 173:
				obj = "\u0c41හम\u05acսऑף\u0cd6ఓ\u0de4ण\u05bfձलעೲ";
				break;
			case 174:
				obj = "\u0dbfज\u05b6Օभ\u05ee\u0cf0క\u0de4\u093f\u05b1ջळ\u05ecೡఘ෭ऌ\u05bbՠग\u05fb\u0cfcఏ\u0dfc";
				break;
			case 175:
				obj = "घ\u05abձऌ\u05c1\u0cf4క\u0de2स\u05b9ճछ";
				break;
			case 176:
				obj = "ֈզऑנ\u0cfaఏ෬ढ\u05b6յऒי\u0cf0\u0c03\u0df1";
				break;
			case 177:
				obj = "Ԯऽעೱఞ\u0dcdब\u05aaհउ\u05ec೧ఞහम\u05acսऑף";
				break;
			case 178:
				obj = "\u0944מ\u0cfaఎ෫ऩ\u0590յऌש\u0ce2చ\u0df7न\u0599շऊפ\u0cfaక";
				break;
			case 179:
				obj = "ם\u0cf4ఈ\u0df6\u0901";
				break;
			case 180:
				obj = "ಯస෭त\u05ac\u0557ख\u05ecೡష෬\u093e\u05acէ";
				break;
			case 181:
				obj = "మ\u0df6न\u05aaՖग\u05ffೡఓශब\u05acձ";
				break;
			case 182:
				obj = "\u0dbf\u0900\u05b7ջच";
				break;
			case 183:
				obj = "ए\u05aaյगף\u0cc5ఔ\u0df2न\u05aa";
				break;
			case 184:
				obj = "ע\u0559ऑעೱష\u0de0\u093b\u05bdո";
				break;
			case 185:
				obj = "Ւऌפ\u0cf0క\u0de1\u093e\u05b0սऎ";
				break;
			case 186:
				obj = "\u0944\u05ca\u0cf0క\u0de1न\u05aa";
				break;
			case 187:
				obj = "\u05c4೦\u0c3a\u0df0ह\u05b7\u0559ऋ\u05f9\u0cf0ట";
				break;
			case 188:
				obj = "ಯ\u0c3a\u0df7\u093f\u05b9խऱ\u05eb\u0cd8ఔ෪ऩ";
				break;
			case 189:
				obj = "ఫ\u0df7ढ\u05bbձऍ\u05fe\u0cf0టෆढ\u05b6ՠछףೡఽ෬ड\u05bdէ";
				break;
			case 190:
				obj = "\u0dbfऄ\u059cԸफ़\u05b7\u0cc5చ\u0df7ब\u05b5ձऊר೧ఈ";
				break;
			case 191:
				obj = "ॷ\u0591Ր\u0952\u05adಯవ\u0de4ठ\u05bdԸफ़\u05b7\u0cd1ఞ\u0df6म\u05aaսऎ\u05f9\u0cfcఔ෫ॡ\u05f8Ԯऩר\u0cf7లශॡ\u05f8Ԯऱ\u05ffೱఒ෫ब\u05b4Ըफ़\u05b7\u0cd4ఎ\u0df1थ\u05b7զ\u0952\u05adಯమ\u0df5ऩ\u05b9ՠछ\u05c9\u0cf4ఏ\u0de0ॡ\u05f8Ԯ\u093bףೲఒ෫न֎ձऌ\u05fe\u0cfcఔ෫ॡ\u05f8Ԯम\u05ff\u0cfcఔ\u0df7त\u05acխ\u0952\u05adಯల෨ब\u05bfձसפ\u0cf9ఞ\u0dcbब\u05b5ձ\u0952\u05adಯల\u0df6छ\u05b1էगׯ\u0cf9ఞඩ७ע՚ऑ\u05c4\u0cfbఏ\u0de0ण\u05abսऊ״ಹ\u0c5b\u0dbf\u0903\u05b7ՠभר\u0cf9ఞ෦ह\u05b9նऒרಹ\u0c5b\u0dbfऄ\u05abՆछ\u05ecೱఴ෫ड\u05a1Ըफ़\u05b7\u0cd2ఉ෪स\u05a8";
				break;
			case 192:
				obj = "\u059eձओ\u05ec\u0cf9ఞ";
				break;
			case 193:
				obj = "Ԯहר\u0cfbట\u0de0\u093f״Դ\u0944׀\u0cfcకහप\u05bdԸफ़\u05b7\u0cd8చ\u0dfdऌ\u05bfձ";
				break;
			case 194:
				obj = "\u093f\u05cf\u0cfcఏ";
				break;
			case 195:
				obj = "\u05b7\u0cd8ఔ෪ऩ\u0595յऊ\u05ff\u0cfc\u0c03වण\u05acզइ";
				break;
			case 196:
				obj = "\u0cc5ఉ\u0de0ह\u05acխ";
				break;
			case 197:
				obj = "\u0c41\u0dc8ढ\u05b7հऍ";
				break;
			case 198:
				obj = "\u0de2ड\u05b7նटסಯ\u0c41\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժऽץ\u0cfcఏෆथ\u05b9ՠलפ೦ఏ\u0df6";
				break;
			case 199:
				obj = "घ\u05abձऌ\u05c9\u0cf4ఏ\u0de4ऋ\u05b1ոछ";
				break;
			case 200:
				obj = "עՇऊ\u05ec೧ఏඩ७ע\u0557ऑש\u0cf0\u0c57ඥॷֈյऌ\u05ec\u0cf8ఞ\u0df1न\u05aa";
				break;
			case 201:
				obj = "Ԯभ\u05f9\u0cf4ఉ\u0df1";
				break;
			case 202:
				obj = "बר\u0cf4ఘ\u0df1त\u05aeձ";
				break;
			case 203:
				obj = "\u05cf\u0cfaఏ෭";
				break;
			case 204:
				obj = "\u0cc2ఓ\u0de4ह\u05abՀखר\u0cc1ఒ෨न";
				break;
			case 205:
				obj = "\u0c41ෆढ\u05bcձ\u0952\u05adಯన෪स\u05b6հ\u0952\u05adಯఫ\u0de4स\u05abձ";
				break;
			case 206:
				obj = "\u0dd1न\u05b9շखל\u0cdaఉ\u0dd6न\u05b9զझץ\u0cc2ఞ෧";
				break;
			case 207:
				obj = "ङ\u05bdյझץ\u0cc4ఎ\u0de0\u093e\u05acսऑף";
				break;
			case 208:
				obj = "ֈզऑנ\u0ce5ఏ\u0ddcन\u05ab՚ऑ";
				break;
			case 209:
				obj = "Շखע\u0ce2బ\u0de0ब\u05acռछ\u05ff";
				break;
			case 210:
				obj = "भץ\u0cfaఌ\u0dd1\u093b";
				break;
			case 211:
				obj = "מ\u0cfdఔ\u0df2ऌ\u05a8դऍ";
				break;
			case 212:
				obj = "\u0cc6ఓ෪\u093a֊ձओפ\u0cfbట\u0de0\u093f\u05ab";
				break;
			case 213:
				obj = "\u0c3c෪ङ\u05b7Ւट\u05ee\u0cf0ఙ෪ढ\u05b3";
				break;
			case 214:
				obj = "ෂढ\u058cջबרೲఒ\u0df6ह\u05aaյऊפ\u0cfaక";
				break;
			case 215:
				obj = "ञ\u05b0ջउ\u05ce೧ఞ\u0de1त\u05acէ";
				break;
			case 216:
				obj = "עՀऑ\u05f9\u0cf4గෆढ\u05adպऊר೧\u0c57ඥॷ\u059cյगס೬\u0c3a\u0df3न\u05aaյङרಹ\u0c5b\u0dbfउ\u05b9խऍט೦ఞ\u0de1ॡ\u05f8Ԯल\u05ec೦ఏ\u0dd0\u093e\u05bdՐट\u05f9\u0cf0\u0c57ඥॷ\u0591Ր";
				break;
			case 217:
				obj = "Շखע\u0ce2\u0c3a෩ड\u058cձट\u05ee\u0cfd";
				break;
			case 218:
				obj = "हע\u0cc1ఔ\u0dcdढ\u05b5ձउע೧ఐ";
				break;
			case 219:
				obj = "\u05b7\u0cd4ఘ\u0df1त\u05b7պ";
				break;
			case 220:
				obj = "ಯలශॡ\u05f8Ԯभ\u05fd\u0cf0ఘ෬ब\u05b4\u0557ऑש\u0cf0\u0c57ඥॷ\u059cյऊ\u05ecಹ\u0c5b\u0dbfट\u05bdեऋר೦ఏ\u0de0ऩ\u0599շऊפ\u0ce3ఒ\u0df1ऴ";
				break;
			case 221:
				obj = "\u0c41\u0dccउ״Դ\u0944\u05cc\u0cf6ఏ෬ढ\u05b6\u0559ऑעೱలශ";
				break;
			case 222:
				obj = "වव\u05bbոऋש\u0cf0";
				break;
			case 223:
				obj = "ॷ\u0591Ր\u0952\u05adಯ\u0c3f\u0de4ह\u05b9Ըफ़\u05b7\u0cc7ఞ෩ब\u05acսऑףಹ\u0c5b\u0dbfअ\u05b9էभ\u05f9\u0cf4ఉඩ७עՀऑ\u05fd\u0cc5ఓ\u0df7ब\u05abձष\u05c9ಹ\u0c5b\u0dbfट\u05bdեऋפ೧ఞහऩ\u05bcսऊפ\u0cfaక\u0de4डֈռऌ\u05ec೦ఞඩ७ע\u0559ट\u05f9\u0cf6ఓ\u0dd2ढ\u05aaհ\u0952\u05adಯ\u0c3f\u0de0ड\u05bdՠछש";
				break;
			case 224:
				obj = "עՕझ\u05f9\u0cfcఔ෫\u093e";
				break;
			case 225:
				obj = "Ԯपר೭ఏඩ७ע՝झע\u0cfb";
				break;
			case 226:
				obj = "ष׀\u0cd4ఋ\u0df5ञ\u05b0աऊש\u0cfaఌ෫";
				break;
			case 227:
				obj = "\u05ce\u0cfaక\u0df1ब\u05bbՠभ\u05f9\u0cf4ఏ\u0df0\u093e\u059bռटףೲఞ\u0de1";
				break;
			case 228:
				obj = "\u0cdcశ\u0dd6त\u05bfպऑ\u05f8ೡ";
				break;
			case 229:
				obj = "ల\u0dc8ञ\u05bdէऍפ\u0cfaకවण\u05bcձच";
				break;
			case 230:
				obj = "\u0dcc\u0900\u058cձआ\u05f9\u0cdcక";
				break;
			case 231:
				obj = "ॷ\u058bաऎ\u05fd\u0cfaఉ\u0df1न\u05bc՜ट\u05ffೱఌ\u0de4\u093f\u05bd\u0559ऑש\u0cf0గඩ७ע\u0557ऑף\u0ce3ఞ\u0df7ह\u05bdհ\u0952\u05adಯభ\u0de0\u093f\u05abսऑףಹ\u0c5b\u0dbfई\u05b6ճगף\u0cf0భ\u0de0\u093f\u05abսऑף";
				break;
			case 232:
				obj = "עՇझר\u0cfbచ\u0df7त\u05b7";
				break;
			case 233:
				obj = "Ԯळע\u0cfaట\u0dc8ब\u05acզग\u05f5";
				break;
			case 234:
				obj = "\u0944\u05cb\u0cfcగ\u0de0\u0903\u05b9չछ\u05a1ವ\u0c41සत\u05b4ձबר\u0cf9ఞ\u0df3ब\u05b6շछ";
				break;
			case 235:
				obj = "\u05b7\u0cd6ఔ෫\u093e\u05acզटפ\u0cfbఏසत\u05b4ՠछ\u05ff";
				break;
			case 236:
				obj = "ಯ\u0c3a෦ह\u05b1ջऐם೧ఔ\u0de1स\u05bbձऌ";
				break;
			case 237:
				obj = "\u0c41\u0dccउ״Դ\u0944׃\u0cf4ఖ\u0de0ॡ\u05f8Ԯ\u093aר೦ఘ\u0df7त\u05a8ՠगע\u0cfb\u0c57ඥॷ\u0599աऊץ\u0cfaఉඩ७ע\u0558टףೲఎ\u0de4प\u05bdԸफ़\u05b7\u0cdcఘ෪ण\u059bջऒע೧న෦थ\u05bdչछ\u05c4\u0cfbట\u0de0व״Դ\u0944\u05ce೧ఞ\u0de4ह\u05b1ջऐ\u05c9\u0cf4ఏ\u0de0ॡ\u05f8Ԯफ\u05fdೱచ\u0df1न\u059cյऊרಹ\u0c5b\u0dbfऄ\u05ab՜गשೱఞ෫ॡ\u05f8Ԯष\u05fe\u0cc5ఉ෬\u093b\u05b9ՠछ\u05a1ವ\u0c41\u0dcc\u093e֊ձटש\u0cdaక෩ऴ״Դ\u0944\u05c4ೲక෪\u093f\u05bd՝ऐ\u05f9\u0cf0ఉ෫ब\u05b4Շझר\u0cfbచ\u0df7त\u05b7է";
				break;
			case 238:
				obj = "\u0dbfत\u05b6ՠ";
				break;
			case 239:
				obj = "ॷ\u0595ջऑש\u0cd6ఔ\u0df0ण\u05acձऌ";
				break;
			case 240:
				obj = "\u059bջऐף\u0cf0ఘ\u0df1न\u05bc";
				break;
			case 241:
				obj = "Օझ\u05ee\u0cf0ఈ\u0df6उ\u05bdպगרೱ";
				break;
			case 242:
				obj = "\u0944\u05c9\u0cf4ఏ\u0de4ऋ\u05b1ոछ";
				break;
			case 243:
				obj = "\u05b7\u0cc0ఈ\u0de0\u093f\u0596յओרಹ\u0c5b\u0dbfझ\u05aaջघפ\u0cf9ఞ\u0dccठ\u05b9ճछ\u05a1ವ\u0c41\u0dd0\u093e\u05bdզऽפೡ\u0c02ඩ७עՎग\u05fd\u0cd6ఔ\u0de1न״Դ\u0944ט೦ఞ\u0df7ऎ\u05b7աऐ\u05f9೧\u0c02ඩ७עՁऍר೧\u0c3c\u0de0ण\u05bcձऌ\u05a1ವ\u0c41\u0dcbस\u05b5նछ\u05ff\u0cdaఝෆ\u093f\u05bdհग\u05f9೦\u0c57ඥॷ\u059bռट\u05f9\u0cf8చ෫\u0903\u05b9չछ\u05a1ವ\u0c41ෆथ\u05b9ՠओ\u05ec\u0cfbహ෬\u093f\u05acռ\u093a\u05ecೡఞඩ७עՕझ\u05f9\u0cfc\u0c0d\u0de0झ\u05bdզऍע\u0cfbచ෩त\u05acխषשಹ\u0c5b\u0dbf\u0901\u05b9էऊט೦ఞශब\u05acձ\u0952\u05adಯ\u0c3e෫प\u05b1պछכ\u0cf0ఉ\u0df6त\u05b7պ\u0952\u05adಯష\u0de4\u093e\u05acՂऑסೠఖ\u0de0ॡ\u05f8Ԯळ\u05f8ೡఞඩ७עՄऋ\u05fe\u0cfdహ\u0df0ह\u05acջऐ\u05cc\u0cf6ఏ෬ढ\u05b6Ըफ़\u05b7\u0cc5ఎ\u0df6थ\u059aաऊ\u05f9\u0cfaకහम\u05acսऑף\u0cc5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfcऄ\u059cԸफ़\u05b7\u0cc5ఎ\u0df6थ\u059aաऊ\u05f9\u0cfaకහम\u05acսऑף\u0cdc\u0c3fඩ७עՐऑףೡఫ\u0df7ढ\u05bcաझר\u0cd4ఘ\u0df1त\u05b7պऍ\u05a1ವ\u0c41ශढ\u05b6ՠम\u05ff\u0cfaట\u0df0म\u05bdՕझ\u05f9\u0cfcఔ෫\u093e\u058bՠट\u05ffೡళ෪स\u05aaԸफ़\u05b7\u0cd1ఔ෫हֈզऑשೠఘ\u0de0ऌ\u05bbՠगע\u0cfbఈ\u0dd6ह\u05b9զऊ׀\u0cfcక\u0df0ह\u05bdԸफ़\u05b7\u0cd1ఔ෫हֈզऑשೠఘ\u0de0ऌ\u05bbՠगע\u0cfbఈවण\u05bc՜ऑ\u05f8೧\u0c57ඥॷ\u059cջऐ\u05f9\u0cc5ఉ෪ऩ\u05adշछ\u05cc\u0cf6ఏ෬ढ\u05b6է\u093bףೱశ෬ण\u05adՠछ\u05a1ವ\u0c41\u0dd2न\u05baՁऍר೧వ\u0de4ठ\u05bdԸफ़\u05b7\u0cc5ఉ෪ऩ\u05adշऊ׃ೠఖ෧न\u05aaԸफ़\u05b7\u0cc6ఎ෧\u093e\u05bbզग\u05fdೡఒ෪ण\u0594ձईר\u0cf9\u0c57ඥॷ\u059bզछש\u0cf0క\u0df1त\u05b9ոऍ\u05a1ವ\u0c41\u0dc9ब\u05abՠळע\u0cfaట\u0dd0\u093e\u05bdհषף\u0cdbఞ\u0df2ऌ\u05bbՠगע\u0cfb\u0c57ඥॷ\u0594յऍ\u05f9\u0cd8ఔ෪ऩ֍էछש\u0cdcక\u0dcbन\u05afՃऑ\u05ffೱఈඩ७ע\u0558ट\u05feೡస෪ण\u05acձऐ\u05f9\u0cc0ఋ\u0de1ब\u05acձ\u093a\u05ecೡఞඩ७עՁऍר೧ష\u0de4ण\u05bfաटת\u0cf0";
				break;
			case 244:
				obj = "\u0cc5చ\u0df7ब\u05b5ձऊר೧ఈ";
				break;
			case 245:
				obj = "\u0c41ෆढ\u05b6ՠछףೡఽ෬ड\u05bd";
				break;
			case 246:
				obj = "\u0dc9ब\u05abՠभ\u05ee\u0cfaఉ\u0de0उ\u05b9ՠछ";
				break;
			case 247:
				obj = "ङ\u05b7\u0559ऑעೱ";
				break;
			case 248:
				obj = "\u059bզछש\u0cf0క\u0df1त\u05b9ոऍ";
				break;
			case 249:
				obj = "Րऑףೡఫ\u0df7ढ\u05bcաझר\u0cd4ఘ\u0df1त\u05b7պऍ\u05c8\u0cfbట\u0dc8त\u05b6աऊר";
				break;
			case 250:
				obj = "ल\u05ec೦ఏහस\u05acջळ\u05f8ೡఞශब\u05acձ";
				break;
			case 251:
				obj = "י\u0cf0\u0c03\u0df1\u093e";
				break;
			case 252:
				obj = "\u0cd9చ\u0df6ह\u0594ձईר\u0cf9";
				break;
			case 253:
				obj = "న\u0df5न\u05bbսटס\u0cd6ఔ\u0de1न";
				break;
			case 254:
				obj = "\u0dd2ढ\u05aaհऽעೠక\u0df1";
				break;
			case 255:
				obj = "उ\u05b7պऊם೧ఔ\u0de1स\u05bbձ\u093f\u05eeೡఒ෪ण\u05ab";
				break;
			case 256:
				obj = "֊ձटשಡ\u0c4e\u0ddaऎ\u05b7պऍ\u05f9೧చ෬ण\u05acՒगסೡఞ\u0df7उ\u05bdղगף\u0cfcఏ෬ढ\u05b6";
				break;
			case 257:
				obj = "Նछ\u05ecೱ\u0c4fඳऒ\u0599զऌ\u05ec೬ఴ\u0de3झ\u05bdզऍע\u0cfbచ෩त\u05acխ";
				break;
			case 258:
				obj = "बר\u0cf4టනॺև\u0557ख\u05ecೡఖ\u0de4ण";
				break;
			case 259:
				obj = "ן\u0cf0చ\u0de1ॹנՋऽץ\u0cf4ఏ෨ब\u05b6Ֆऌ\u05ec\u0cfcక\u0dd5ढ\u05afձऌ";
				break;
			case 260:
				obj = "\u0cc7ఞ\u0de4ऩ\u05ecԭड\u05ce\u0cfdచ\u0df1ठ\u05b9պस\u05ff\u0cfcఞ෫ऩ\u05abռग\u05fd";
				break;
			case 261:
				obj = "\u0c29\u0de0ब\u05bcԡ\u094eג\u0cd9ఞ\u0df3न\u05b4\u0558ट\u05feೡస෭ब\u05b6ճछ\u05c9\u0cfcఉ\u0de0म\u05acսऑף";
				break;
			case 262:
				obj = "\u0dd7न\u05b9հ\u094b\u05bc\u0ccaస෪ण\u05acձऐ\u05f9\u0cd3ఒ෩न\u059dպऊ\u05ff೬";
				break;
			case 263:
				obj = "ट\u05bdյच\u05b8ಧత\u0dd5स\u05abռ\u093c\u05f8ೡఏ෪ण\u0599շऊפ\u0cfaక";
				break;
			case 264:
				obj = "\u059bջऐ\u05f9\u0cf0క\u0df1ऋ\u05b1ոछ";
				break;
			case 265:
				obj = "Նछ\u05ecೱ\u0c4eබऒ֏ձज\u05ce\u0cfaక෫न\u05bbՠगע\u0cfb\u0c29\u0de0\u093e\u05adոऊ";
				break;
			case 266:
				obj = "बר\u0cf4టධॹևՄछ\u05ff೦ఔ෫ब\u05b4սऊ״";
				break;
			case 267:
				obj = "ן\u0cf0చ\u0de1ॸ\u05edՋभר೧ఒ\u0de4ड\u0596աओׯ\u0cf0ఉ\u0dd5\u093f\u05b7հऋ\u05ee\u0cf0ఉ";
				break;
			case 268:
				obj = "\u0cc7ఞ\u0de4ऩ\u05edԢडם\u0cf0ఉ\u0df6ढ\u05b6յऒפೡ\u0c02\u0dd6ह\u05b9ՠऋ\u05fe";
				break;
			case 269:
				obj = "\u0c29\u0de0ब\u05bcԡ\u0949ג\u0cc5ఞ\u0df7\u093e\u05b7պटס\u0cfcఏ\u0dfcउ\u05b9ՠट\u05cb\u0cfcగ\u0de0";
				break;
			case 270:
				obj = "\u0dd7न\u05b9հ\u094b\u05b5\u0ccaఫ\u0de0\u093f\u05abջऐ\u05ec\u0cf9ఒ\u0df1ऴ\u059cյऊ\u05ec";
				break;
			case 271:
				obj = "ट\u05bdյच\u05b8ಬత\u0dd6म\u05bdպट\u05ff\u0cfcఔ";
				break;
			case 272:
				obj = "֊ձटשಣ\u0c4b\u0ddaञ\u05bbձऐ\u05ec೧ఒ෪ङ\u05bdլऊ\u05cf\u0cf4ఈ\u0de0";
				break;
			case 273:
				obj = "Նछ\u05ecೱ\u0c4dපऒ\u058bշछף\u0cf4ఉ෬ढ\u058cձआ\u05f9";
				break;
			case 274:
				obj = "ष\u05fe\u0cd0\u0c03෦ड\u05adհछש";
				break;
			case 275:
				obj = "ן\u0cf0చ\u0de1ॻתՋभ\u05ee\u0cf0క\u0de4\u093f\u05b1ջष\u05ee\u0cfaక\u0dd1न\u05a0ՠ";
				break;
			case 276:
				obj = "\u0cc7ఞ\u0de4ऩ\u05eeԧडמ\u0cf6ఞ෫ब\u05aaսऑי\u0cf0\u0c03\u0df1ट\u05bdոट\u05f9\u0cfcఔ෫";
				break;
			case 277:
				obj = "స෪ण\u05aeձऌ\u05f9\u0cf0ట";
				break;
			case 278:
				obj = "\u0dd7न\u05b9հ\u0948\u05b9\u0ccaన෦न\u05b6յऌפ\u0cfaశ෪ढ\u05bc";
				break;
			case 279:
				obj = "ट\u05bdյच\u05bbಠత\u0dd6म\u05bdպट\u05ff\u0cfcఔහम\u05acսऑף";
				break;
			case 280:
				obj = "֊ձटשಣ\u0c4d\u0ddaञ\u05bbձऐ\u05ec೧ఒ෪घ\u05abձऌ\u05cc\u0cf6ఏ෬ढ\u05b6";
				break;
			case 281:
				obj = "\u0557ल";
				break;
			case 282:
				obj = "बר\u0cf4టඳॺև\u0557ऑ\u05f8\u0cfbఏ\u0de0\u093f";
				break;
			case 283:
				obj = "ן\u0cf0చ\u0de1ॻנՋ\u093f\u05eeೡఒ෪ण֍էटת\u0cf0";
				break;
			case 284:
				obj = "\u0cc7ఞ\u0de4ऩ\u05eeԭड\u05ce\u0cfdచ\u0df1ठ\u05b9պ\u093f\u05eeೡఒ෪ण";
				break;
			case 285:
				obj = "\u0c29\u0de0ब\u05bcԣ\u094eג\u0cd4ఘ\u0df1त\u05b7պऽץ\u0cf4క\u0de2न\u0594ջङ";
				break;
			case 286:
				obj = "\u0dc8ब\u05a0Օङר";
				break;
			case 287:
				obj = "ट\u05bdյच\u05baತతහम\u05acսऑף\u0cc6ఘ෪ऽ\u05bd";
				break;
			case 288:
				obj = "֊ձटשಢ\u0c49\u0ddaज\u05b6Օभ\u05ee\u0cf0క\u0de4\u093f\u05b1ջळ\u05ecೡఘ෭ऌ\u05bbՠग\u05fb\u0cfcఏ\u0dfc";
				break;
			case 289:
				obj = "\u0559ऑעೱశ\u0de4ह\u05aaսआר೦";
				break;
			case 290:
				obj = "बר\u0cf4ట\u0db2ॾև՜ट\u05ffೱఌ\u0de4\u093f\u05bdՕझ\u05f9\u0cfcఔ෫";
				break;
			case 291:
				obj = "ן\u0cf0చ\u0de1ॺ\u05ecՋऽעೱఞ\u0dcdब\u05aaհउ\u05ec೧ఞහम\u05acսऑף";
				break;
			case 292:
				obj = "\u0cc7ఞ\u0de4ऩׯԡडם\u0cf4ఎ\u0df6न\u0590յऌש\u0ce2చ\u0df7न\u0599շऊפ\u0cfaక";
				break;
			case 293:
				obj = "\u0c29\u0de0ब\u05bcԣ\u0948ג\u0cc6ఔ\u0df0ण\u05bc՜ट\u05ffೱఌ\u0de4\u093f\u05bdՕझ\u05f9\u0cfcఔ෫";
				break;
			case 294:
				obj = "\u0dd7न\u05b9հ\u0949\u05ba\u0cca\u0c3f\u0de4ह\u05b9Ւगס\u0cf0ష෪म\u05b9ՠगע\u0cfb";
				break;
			case 295:
				obj = "ट\u05bdյच\u05baಭతෆथ\u05b1ՠऽץ\u0cf4ఏ\u0dc9त\u05abՠऍ";
				break;
			case 296:
				obj = "֊ձटשಢ\u0c42\u0dda\u0900\u05b7ջच\u05c1\u0cfcఈ\u0df1";
				break;
			case 297:
				obj = "Նछ\u05ecೱ\u0c43ඵऒ\u0595ջऑש";
				break;
			case 298:
				obj = "म\u05f8೦ఓ\u0dc7स\u05acՠऑף\u0cd4ఘ\u0df1त\u05b7պमר೧ఈ෪ण\u05b9ոग\u05f9೬లශ";
				break;
			case 299:
				obj = "ן\u0cf0చ\u0de1ॵשՋळע\u0cfaటෆढ\u05adպऊר೧";
				break;
			case 300:
				obj = "\u0cc7ఞ\u0de4ऩנԦड׀\u0cfaఔ\u0de1\u0901\u05bdբछס";
				break;
			case 301:
				obj = "\u0c29\u0de0ब\u05bcԬ\u094dג\u0cd8ఔ෪ऩ\u0595յऊ\u05ff\u0cfc\u0c03";
				break;
			case 302:
				obj = "\u0dd7न\u05b9հ\u0946\u05b9\u0cca\u0c3c\u0de0ण\u05bcձऌ";
				break;
			case 303:
				obj = "ट\u05bdյच\u05b5ಠత\u0dc8ढ\u05b7հळ\u05ecೡఉ෬व\u059dպऊ\u05ff೬";
				break;
			case 304:
				obj = "֊ձटשಭ\u0c4d\u0ddaऌ\u05aaզट״\u0cdaఝ\u0dc8ढ\u05b7հ";
				break;
			case 305:
				obj = "Ձऍר೧స෪स\u05b6ՠऌ״";
				break;
			case 306:
				obj = "बר\u0cf4టලॺևՕझ\u05f9\u0cfcఔ෫झ\u05aaջच\u05f8\u0cf6ఞ\u0df7उ\u05bdղगף\u0cfcఏ෬ढ\u05b6";
				break;
			case 307:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժ\u093a\u05ecೡచණऎ\u05b7պऍ\u05f9೧చ෬ण\u05acՒगסೡఞ\u0df7उ\u05bdղगף\u0cfcఏ෬ढ\u05b6Ԯ\u0944";
				break;
			case 308:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05c9\u0cf4ఏ\u0de4\u0963ֈձऌ\u05fe\u0cfaక\u0de4ड\u05b1ՠइ\u05c1\u0cfcఈ\u0df1ॷע";
				break;
			case 309:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6\u0557ख\u05ecೡఖ\u0de4णעԮऽץ\u0cf4ఏ෨ब\u05b6Ԯप\u05ffೠఞ\u0dbf";
				break;
			case 310:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժऽץ\u0cf4ఏ෨ब\u05b6Ֆऌ\u05ec\u0cfcక\u0dd5ढ\u05afձऌ\u05b7ಯ";
				break;
			case 311:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պस\u05ff\u0cfcఞ෫ऩ\u05abռग\u05fdಯ\u0c41";
				break;
			case 312:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cd9ఞ\u0df3न\u05b4\u0558ट\u05feೡస෭ब\u05b6ճछ\u05c9\u0cfcఉ\u0de0म\u05acսऑףಯ\u0c41";
				break;
			case 313:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbస෪ण\u05acձऐ\u05f9\u0cd3ఒ෩न\u059dպऊ\u05ff೬\u0c41\u0dbf";
				break;
			case 314:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55\u0dd5स\u05abռ\u093c\u05f8ೡఏ෪ण\u0599շऊפ\u0cfaక\u0dbfॷ";
				break;
			case 315:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժ\u093a\u05ecೡచණच\u05bdնऽע\u0cfbక\u0de0म\u05acսऑף\u0cc7ఞ\u0df6स\u05b4ՠ\u0944\u05b7";
				break;
			case 316:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05c9\u0cf4ఏ\u0de4\u0963ֈձऌ\u05fe\u0cfaక\u0de4ड\u05b1ՠइ\u05b7ಯఫ\u0de0\u093f\u05abջऐ\u05ec\u0cf9ఒ\u0df1ऴעՀऌ\u05f8\u0cf0\u0c41";
				break;
			case 317:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6Մछ\u05ff೦ఔ෫ब\u05b4սऊ״\u0cbeన\u0de0\u093f\u05b1յऒ׃ೠఖ෧न\u05aaՄऌעೱఎ෦न\u05aaԮ\u0944";
				break;
			case 318:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժमר೧ఈ෪ण\u05b9ոग\u05f9೬న\u0df1ब\u05acաऍ\u05b7ಯ";
				break;
			case 319:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐם\u0cf0ఉ\u0df6ढ\u05b6յऒפೡ\u0c02ශब\u05acյसפ\u0cf9ఞ\u0dbfॷ";
				break;
			case 320:
				obj = "\u059bջचר";
				break;
			case 321:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbఫ\u0de0\u093f\u05abջऐ\u05ec\u0cf9ఒ\u0df1ऴ\u059cյऊ\u05ecಯ\u0c41\u0dd5न\u05aaէऑף\u0cf4గ෬ह\u05a1Րट\u05f9\u0cf4\u0c41\u0dd1\u093f\u05adձ\u0944";
				break;
			case 322:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55\u0dd6म\u05bdպट\u05ff\u0cfcఔ\u0dbfॷ";
				break;
			case 323:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժ\u093a\u05ecೡచණञ\u05bbձऐ\u05ec೧ఒ෪ङ\u05bdլऊ\u05cf\u0cf4ఈ\u0de0ॷע";
				break;
			case 324:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05c9\u0cf4ఏ\u0de4\u0963\u058bշछף\u0cf4ఉ෬ढ\u058cձआ\u05f9ಯ\u0c41";
				break;
			case 325:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6Շझר\u0cfbచ\u0df7त\u05b7՝झע\u0cfbయ\u0de0व\u05acԮ\u0944";
				break;
			case 326:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժभ\u05ee\u0cf0క\u0de4\u093f\u05b1ջपר೭ఏ\u0dd7न\u05b4յऊפ\u0cfaక\u0dbfॷ";
				break;
			case 327:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐמ\u0cf6ఞ෫ब\u05aaսऑ׀\u0cfaఔ\u0de1ॷע";
				break;
			case 328:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cc6ఘ\u0de0ण\u05b9զगע\u0cd4ఘ\u0df1त\u05b7պ\u0944\u05b7";
				break;
			case 329:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbన෦न\u05b6յऌפ\u0cfaమ\u0df6न\u05aaՕझ\u05f9\u0cfcఔ෫ॷע";
				break;
			case 330:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55ෆढ\u05adպऊר೧\u0c41\u0dbf";
				break;
			case 331:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժ\u093a\u05ecೡచණऌ\u05bbՠगע\u0cfbమ\u0df6ब\u05bfձ\u0944\u05b7";
				break;
			case 332:
				obj = "\u0cdcఈ\u0dd0\u093e\u05bdզयף\u0cd4";
				break;
			case 333:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u0599շऊפ\u0cfaక\u0dbfॷ";
				break;
			case 334:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժ\u093f\u05eeೡఒ෪ण\u059bռटףೲఞ\u0dc9ढ\u05bfԮ\u0944";
				break;
			case 335:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐ\u05cc\u0cf6ఏ෬ढ\u05b6Շझע\u0ce5ఞ\u0dbfॷ";
				break;
			case 336:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cc4కහञ\u05bbձऐ\u05ec೧ఒ෪\u0900\u05b9ՠझץ\u0cd4ఘ\u0df1त\u05aeսऊ״ಯ\u0c41";
				break;
			case 337:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbళ\u0de4\u093f\u05bcգट\u05ff\u0cf0\u0c3a෦ह\u05b1ջऐ\u05b7ಯ";
				break;
			case 338:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55ෆढ\u05bcձश\u05ec೧ట\u0df2ब\u05aaձ\u093f\u05eeೡఒ෪णעԮ";
				break;
			case 339:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժ\u093a\u05ecೡచණझ\u05b9աऍר\u0cddచ\u0df7ऩ\u05afյऌר\u0cd4ఘ\u0df1त\u05b7պ\u0944\u05b7";
				break;
			case 340:
				obj = "\u0cc7ఔ෫ऩ\u05a1ջॐ\u05ce\u0cfdచ\u0df1ठ\u05b9պॐ\u05c9\u0cf4ఏ\u0de4\u0963\u058bջऋףೱళ\u0de4\u093f\u05bcգट\u05ff\u0cf0\u0c3a෦ह\u05b1ջऐ\u05b7ಯ";
				break;
			case 341:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6Րट\u05f9\u0cf4ఽ෬ड\u05bd\u0558ऑ\u05ee\u0cf4ఏ෬ढ\u05b6Ԯ\u0944";
				break;
			case 342:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժऽץ\u0cfcఏෆथ\u05b9ՠलפ೦ఏ\u0df6ॷע";
				break;
			case 343:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐ׀\u0cfaఔ\u0de1\u0901\u05b1էऊ\u05ce\u0cfaక\u0df1ब\u05b1պछ\u05ffಯ\u0c41\u0dc8ढ\u05b7հलפ೦ఏ\u0dbfङ\u05aaաछ\u05b7";
				break;
			case 344:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cd8ఔ෪ऩעԮ";
				break;
			case 345:
				obj = "Նऑףೱ\u0c02෪\u0963\u059bռट\u05f9\u0cf8చ෫\u0963\u059cյऊ\u05ec\u0cbbశ෪ढ\u05bc\u0557ऑ\u05f8\u0cfbఏ\u0de0\u093fעԮ";
				break;
			case 346:
				obj = "बע\u0cfbట\u0dfcढ\u05f6\u0557ख\u05ecೡఖ\u0de4ण\u05f6Րट\u05f9\u0cf4\u0c55\u0dc8ढ\u05b7հलר\u0ce3ఞ෩ॷע";
				break;
			case 347:
				obj = "ן\u0cfaక\u0de1ऴ\u05b7Ժऽץ\u0cf4ఏ෨ब\u05b6Ժ\u093a\u05ecೡచණ\u0900\u05b7ջच׀\u0cf4ఏ\u0df7त\u05a0Ԯ\u0944";
				break;
			case 348:
				obj = "\u0cd8ఔ෪ऩ\u0594սऍ\u05f9\u0cd6ఔ෫ह\u05b9սऐר೧";
				break;
			case 349:
				obj = "\u0c29෪ण\u05bcխऑ\u05a3\u0cd6ఓ\u0de4ह\u05b5յऐ\u05a3\u0cd1చ\u0df1ब\u05f6Փछףೱఞ\u0df7ॷע";
				break;
			case 350:
				obj = "\u0dd7ढ\u05b6հइע\u0cbbస෭ब\u05acչटף\u0cbb\u0c3f\u0de4ह\u05b9Ժळע\u0cfaట\u0dc8ब\u05acզग\u05f5\u0cd0క\u0df1\u093f\u05a1Ԯ\u0944";
				break;
			case 351:
				obj = "ट\u05b7պच״\u0cfa\u0c55ෆथ\u05b9ՠओ\u05ec\u0cfb\u0c55ශब\u05acյॐ׀\u0cfaఔ\u0de1\u0901\u05b1էऊ\u05b7ಯ";
				break;
			case 352:
				obj = "֊ջऐש೬ఔණऎ\u05b0յऊנ\u0cf4కණउ\u05b9ՠट\u05a3\u0cd4ఘ\u0df1त\u05b7պम\u05ff\u0cfaట\u0df0म\u05bdզ\u093aר\u0cf3ఒ෫त\u05acսऑףಯ\u0c41";
				break;
			case 353:
				obj = "՚ऋנ\u0cf7ఞ\u0df7\u0902־\u0557ऌרೱఒ\u0df1\u093e";
				break;
			case 354:
				obj = "ष\u05fe\u0cc3ఒ\u0df6त\u05baոछ";
				break;
			case 355:
				obj = "\u05c1\u0cf4ఈ\u0df1ऎ\u05b7պऊר\u0cfbఏ\u0dd0ऽ\u05bcյऊר\u0cd1చ\u0df1न";
				break;
			case 356:
				obj = "\u0cc7ఞ෴स\u05bdէऊרೱ\u0c3a෦ह\u05b1բग\u05f9೬";
				break;
			}
			string text = (string)obj;
			int length;
			char[] array = new char[length = text.Length];
			char[] ⴀ = Ⴀ;
			int num2 = ⴀ.Length;
			for (int num3 = 0; num3 < length; num3 = 1 + num3)
			{
				array[num3] = (char)(ushort)(text[num3] ^ ⴀ[(num3 + Ⴓ) % num2]);
			}
			result = new string(array);
			Ⴅ[num] = result;
			return result;
		}

		static Ⴓ()
		{
			byte[] publicKeyToken;
			int num = (publicKeyToken = Assembly.GetExecutingAssembly().GetName().GetPublicKeyToken()).Length;
			char[] array = new char[num];
			for (int i = 0; i < num; i++)
			{
				int num2 = i;
				int num3 = publicKeyToken[i] & 0xFF;
				array[num2] = (char)(num3 ^ (num3 << 4));
			}
			Ⴀ = array;
			Ⴅ = new string[357];
		}
	}
}
